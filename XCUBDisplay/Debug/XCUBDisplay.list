
XCUBDisplay.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000120ac  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002b2c  08012250  08012250  00022250  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000001a6  08014d7c  08014d7c  00024d7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  08014f24  08014f24  00024f24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  08014f3c  08014f3c  000302e0  2**0
                  CONTENTS
  6 .ARM          00000008  08014f3c  08014f3c  00024f3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .preinit_array 00000000  08014f44  08014f44  000302e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000010  08014f44  08014f44  00024f44  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000004  08014f54  08014f54  00024f54  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         000002e0  20000000  08014f58  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .bss          00002124  200002e0  08015238  000302e0  2**2
                  ALLOC
 12 ._user_heap_stack 00001004  20002404  08015238  00032404  2**0
                  ALLOC
 13 .ARM.attributes 00000030  00000000  00000000  000302e0  2**0
                  CONTENTS, READONLY
 14 .debug_info   000297da  00000000  00000000  00030310  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00006cee  00000000  00000000  00059aea  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00001ab0  00000000  00000000  000607d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_ranges 000017d8  00000000  00000000  00062288  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  0001cdfc  00000000  00000000  00063a60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00021973  00000000  00000000  0008085c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    000a7a42  00000000  00000000  000a21cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .comment      000000cf  00000000  00000000  00149c11  2**0
                  CONTENTS, READONLY
 22 .debug_frame  00008598  00000000  00000000  00149ce0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .stab         000000cc  00000000  00000000  00152278  2**2
                  CONTENTS, READONLY, DEBUGGING
 24 .stabstr      000001b9  00000000  00000000  00152344  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200002e0 	.word	0x200002e0
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08012234 	.word	0x08012234

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200002e4 	.word	0x200002e4
 80001dc:	08012234 	.word	0x08012234

080001e0 <strlen>:
 80001e0:	4603      	mov	r3, r0
 80001e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001e6:	2a00      	cmp	r2, #0
 80001e8:	d1fb      	bne.n	80001e2 <strlen+0x2>
 80001ea:	1a18      	subs	r0, r3, r0
 80001ec:	3801      	subs	r0, #1
 80001ee:	4770      	bx	lr

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__aeabi_d2uiz>:
 8000bb8:	004a      	lsls	r2, r1, #1
 8000bba:	d211      	bcs.n	8000be0 <__aeabi_d2uiz+0x28>
 8000bbc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bc0:	d211      	bcs.n	8000be6 <__aeabi_d2uiz+0x2e>
 8000bc2:	d50d      	bpl.n	8000be0 <__aeabi_d2uiz+0x28>
 8000bc4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bc8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bcc:	d40e      	bmi.n	8000bec <__aeabi_d2uiz+0x34>
 8000bce:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bd2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bd6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bda:	fa23 f002 	lsr.w	r0, r3, r2
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bea:	d102      	bne.n	8000bf2 <__aeabi_d2uiz+0x3a>
 8000bec:	f04f 30ff 	mov.w	r0, #4294967295
 8000bf0:	4770      	bx	lr
 8000bf2:	f04f 0000 	mov.w	r0, #0
 8000bf6:	4770      	bx	lr

08000bf8 <__aeabi_d2f>:
 8000bf8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bfc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c00:	bf24      	itt	cs
 8000c02:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c06:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c0a:	d90d      	bls.n	8000c28 <__aeabi_d2f+0x30>
 8000c0c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c10:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c14:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c18:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c1c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c20:	bf08      	it	eq
 8000c22:	f020 0001 	biceq.w	r0, r0, #1
 8000c26:	4770      	bx	lr
 8000c28:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c2c:	d121      	bne.n	8000c72 <__aeabi_d2f+0x7a>
 8000c2e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c32:	bfbc      	itt	lt
 8000c34:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c38:	4770      	bxlt	lr
 8000c3a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c3e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c42:	f1c2 0218 	rsb	r2, r2, #24
 8000c46:	f1c2 0c20 	rsb	ip, r2, #32
 8000c4a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c4e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c52:	bf18      	it	ne
 8000c54:	f040 0001 	orrne.w	r0, r0, #1
 8000c58:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c5c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c60:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c64:	ea40 000c 	orr.w	r0, r0, ip
 8000c68:	fa23 f302 	lsr.w	r3, r3, r2
 8000c6c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c70:	e7cc      	b.n	8000c0c <__aeabi_d2f+0x14>
 8000c72:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c76:	d107      	bne.n	8000c88 <__aeabi_d2f+0x90>
 8000c78:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c7c:	bf1e      	ittt	ne
 8000c7e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c82:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c86:	4770      	bxne	lr
 8000c88:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c8c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c90:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c94:	4770      	bx	lr
 8000c96:	bf00      	nop

08000c98 <__aeabi_uldivmod>:
 8000c98:	b953      	cbnz	r3, 8000cb0 <__aeabi_uldivmod+0x18>
 8000c9a:	b94a      	cbnz	r2, 8000cb0 <__aeabi_uldivmod+0x18>
 8000c9c:	2900      	cmp	r1, #0
 8000c9e:	bf08      	it	eq
 8000ca0:	2800      	cmpeq	r0, #0
 8000ca2:	bf1c      	itt	ne
 8000ca4:	f04f 31ff 	movne.w	r1, #4294967295
 8000ca8:	f04f 30ff 	movne.w	r0, #4294967295
 8000cac:	f000 b9aa 	b.w	8001004 <__aeabi_idiv0>
 8000cb0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000cb4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000cb8:	f000 f83c 	bl	8000d34 <__udivmoddi4>
 8000cbc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cc0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cc4:	b004      	add	sp, #16
 8000cc6:	4770      	bx	lr

08000cc8 <__aeabi_d2lz>:
 8000cc8:	b538      	push	{r3, r4, r5, lr}
 8000cca:	2200      	movs	r2, #0
 8000ccc:	2300      	movs	r3, #0
 8000cce:	4604      	mov	r4, r0
 8000cd0:	460d      	mov	r5, r1
 8000cd2:	f7ff ff0b 	bl	8000aec <__aeabi_dcmplt>
 8000cd6:	b928      	cbnz	r0, 8000ce4 <__aeabi_d2lz+0x1c>
 8000cd8:	4620      	mov	r0, r4
 8000cda:	4629      	mov	r1, r5
 8000cdc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000ce0:	f000 b80a 	b.w	8000cf8 <__aeabi_d2ulz>
 8000ce4:	4620      	mov	r0, r4
 8000ce6:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000cea:	f000 f805 	bl	8000cf8 <__aeabi_d2ulz>
 8000cee:	4240      	negs	r0, r0
 8000cf0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cf4:	bd38      	pop	{r3, r4, r5, pc}
 8000cf6:	bf00      	nop

08000cf8 <__aeabi_d2ulz>:
 8000cf8:	b5d0      	push	{r4, r6, r7, lr}
 8000cfa:	4b0c      	ldr	r3, [pc, #48]	; (8000d2c <__aeabi_d2ulz+0x34>)
 8000cfc:	2200      	movs	r2, #0
 8000cfe:	4606      	mov	r6, r0
 8000d00:	460f      	mov	r7, r1
 8000d02:	f7ff fc81 	bl	8000608 <__aeabi_dmul>
 8000d06:	f7ff ff57 	bl	8000bb8 <__aeabi_d2uiz>
 8000d0a:	4604      	mov	r4, r0
 8000d0c:	f7ff fc02 	bl	8000514 <__aeabi_ui2d>
 8000d10:	4b07      	ldr	r3, [pc, #28]	; (8000d30 <__aeabi_d2ulz+0x38>)
 8000d12:	2200      	movs	r2, #0
 8000d14:	f7ff fc78 	bl	8000608 <__aeabi_dmul>
 8000d18:	4602      	mov	r2, r0
 8000d1a:	460b      	mov	r3, r1
 8000d1c:	4630      	mov	r0, r6
 8000d1e:	4639      	mov	r1, r7
 8000d20:	f7ff faba 	bl	8000298 <__aeabi_dsub>
 8000d24:	f7ff ff48 	bl	8000bb8 <__aeabi_d2uiz>
 8000d28:	4621      	mov	r1, r4
 8000d2a:	bdd0      	pop	{r4, r6, r7, pc}
 8000d2c:	3df00000 	.word	0x3df00000
 8000d30:	41f00000 	.word	0x41f00000

08000d34 <__udivmoddi4>:
 8000d34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d38:	9d08      	ldr	r5, [sp, #32]
 8000d3a:	4604      	mov	r4, r0
 8000d3c:	468e      	mov	lr, r1
 8000d3e:	2b00      	cmp	r3, #0
 8000d40:	d14d      	bne.n	8000dde <__udivmoddi4+0xaa>
 8000d42:	428a      	cmp	r2, r1
 8000d44:	4694      	mov	ip, r2
 8000d46:	d969      	bls.n	8000e1c <__udivmoddi4+0xe8>
 8000d48:	fab2 f282 	clz	r2, r2
 8000d4c:	b152      	cbz	r2, 8000d64 <__udivmoddi4+0x30>
 8000d4e:	fa01 f302 	lsl.w	r3, r1, r2
 8000d52:	f1c2 0120 	rsb	r1, r2, #32
 8000d56:	fa20 f101 	lsr.w	r1, r0, r1
 8000d5a:	fa0c fc02 	lsl.w	ip, ip, r2
 8000d5e:	ea41 0e03 	orr.w	lr, r1, r3
 8000d62:	4094      	lsls	r4, r2
 8000d64:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000d68:	0c21      	lsrs	r1, r4, #16
 8000d6a:	fbbe f6f8 	udiv	r6, lr, r8
 8000d6e:	fa1f f78c 	uxth.w	r7, ip
 8000d72:	fb08 e316 	mls	r3, r8, r6, lr
 8000d76:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000d7a:	fb06 f107 	mul.w	r1, r6, r7
 8000d7e:	4299      	cmp	r1, r3
 8000d80:	d90a      	bls.n	8000d98 <__udivmoddi4+0x64>
 8000d82:	eb1c 0303 	adds.w	r3, ip, r3
 8000d86:	f106 30ff 	add.w	r0, r6, #4294967295
 8000d8a:	f080 811f 	bcs.w	8000fcc <__udivmoddi4+0x298>
 8000d8e:	4299      	cmp	r1, r3
 8000d90:	f240 811c 	bls.w	8000fcc <__udivmoddi4+0x298>
 8000d94:	3e02      	subs	r6, #2
 8000d96:	4463      	add	r3, ip
 8000d98:	1a5b      	subs	r3, r3, r1
 8000d9a:	b2a4      	uxth	r4, r4
 8000d9c:	fbb3 f0f8 	udiv	r0, r3, r8
 8000da0:	fb08 3310 	mls	r3, r8, r0, r3
 8000da4:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000da8:	fb00 f707 	mul.w	r7, r0, r7
 8000dac:	42a7      	cmp	r7, r4
 8000dae:	d90a      	bls.n	8000dc6 <__udivmoddi4+0x92>
 8000db0:	eb1c 0404 	adds.w	r4, ip, r4
 8000db4:	f100 33ff 	add.w	r3, r0, #4294967295
 8000db8:	f080 810a 	bcs.w	8000fd0 <__udivmoddi4+0x29c>
 8000dbc:	42a7      	cmp	r7, r4
 8000dbe:	f240 8107 	bls.w	8000fd0 <__udivmoddi4+0x29c>
 8000dc2:	4464      	add	r4, ip
 8000dc4:	3802      	subs	r0, #2
 8000dc6:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000dca:	1be4      	subs	r4, r4, r7
 8000dcc:	2600      	movs	r6, #0
 8000dce:	b11d      	cbz	r5, 8000dd8 <__udivmoddi4+0xa4>
 8000dd0:	40d4      	lsrs	r4, r2
 8000dd2:	2300      	movs	r3, #0
 8000dd4:	e9c5 4300 	strd	r4, r3, [r5]
 8000dd8:	4631      	mov	r1, r6
 8000dda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dde:	428b      	cmp	r3, r1
 8000de0:	d909      	bls.n	8000df6 <__udivmoddi4+0xc2>
 8000de2:	2d00      	cmp	r5, #0
 8000de4:	f000 80ef 	beq.w	8000fc6 <__udivmoddi4+0x292>
 8000de8:	2600      	movs	r6, #0
 8000dea:	e9c5 0100 	strd	r0, r1, [r5]
 8000dee:	4630      	mov	r0, r6
 8000df0:	4631      	mov	r1, r6
 8000df2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000df6:	fab3 f683 	clz	r6, r3
 8000dfa:	2e00      	cmp	r6, #0
 8000dfc:	d14a      	bne.n	8000e94 <__udivmoddi4+0x160>
 8000dfe:	428b      	cmp	r3, r1
 8000e00:	d302      	bcc.n	8000e08 <__udivmoddi4+0xd4>
 8000e02:	4282      	cmp	r2, r0
 8000e04:	f200 80f9 	bhi.w	8000ffa <__udivmoddi4+0x2c6>
 8000e08:	1a84      	subs	r4, r0, r2
 8000e0a:	eb61 0303 	sbc.w	r3, r1, r3
 8000e0e:	2001      	movs	r0, #1
 8000e10:	469e      	mov	lr, r3
 8000e12:	2d00      	cmp	r5, #0
 8000e14:	d0e0      	beq.n	8000dd8 <__udivmoddi4+0xa4>
 8000e16:	e9c5 4e00 	strd	r4, lr, [r5]
 8000e1a:	e7dd      	b.n	8000dd8 <__udivmoddi4+0xa4>
 8000e1c:	b902      	cbnz	r2, 8000e20 <__udivmoddi4+0xec>
 8000e1e:	deff      	udf	#255	; 0xff
 8000e20:	fab2 f282 	clz	r2, r2
 8000e24:	2a00      	cmp	r2, #0
 8000e26:	f040 8092 	bne.w	8000f4e <__udivmoddi4+0x21a>
 8000e2a:	eba1 010c 	sub.w	r1, r1, ip
 8000e2e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000e32:	fa1f fe8c 	uxth.w	lr, ip
 8000e36:	2601      	movs	r6, #1
 8000e38:	0c20      	lsrs	r0, r4, #16
 8000e3a:	fbb1 f3f7 	udiv	r3, r1, r7
 8000e3e:	fb07 1113 	mls	r1, r7, r3, r1
 8000e42:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000e46:	fb0e f003 	mul.w	r0, lr, r3
 8000e4a:	4288      	cmp	r0, r1
 8000e4c:	d908      	bls.n	8000e60 <__udivmoddi4+0x12c>
 8000e4e:	eb1c 0101 	adds.w	r1, ip, r1
 8000e52:	f103 38ff 	add.w	r8, r3, #4294967295
 8000e56:	d202      	bcs.n	8000e5e <__udivmoddi4+0x12a>
 8000e58:	4288      	cmp	r0, r1
 8000e5a:	f200 80cb 	bhi.w	8000ff4 <__udivmoddi4+0x2c0>
 8000e5e:	4643      	mov	r3, r8
 8000e60:	1a09      	subs	r1, r1, r0
 8000e62:	b2a4      	uxth	r4, r4
 8000e64:	fbb1 f0f7 	udiv	r0, r1, r7
 8000e68:	fb07 1110 	mls	r1, r7, r0, r1
 8000e6c:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000e70:	fb0e fe00 	mul.w	lr, lr, r0
 8000e74:	45a6      	cmp	lr, r4
 8000e76:	d908      	bls.n	8000e8a <__udivmoddi4+0x156>
 8000e78:	eb1c 0404 	adds.w	r4, ip, r4
 8000e7c:	f100 31ff 	add.w	r1, r0, #4294967295
 8000e80:	d202      	bcs.n	8000e88 <__udivmoddi4+0x154>
 8000e82:	45a6      	cmp	lr, r4
 8000e84:	f200 80bb 	bhi.w	8000ffe <__udivmoddi4+0x2ca>
 8000e88:	4608      	mov	r0, r1
 8000e8a:	eba4 040e 	sub.w	r4, r4, lr
 8000e8e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000e92:	e79c      	b.n	8000dce <__udivmoddi4+0x9a>
 8000e94:	f1c6 0720 	rsb	r7, r6, #32
 8000e98:	40b3      	lsls	r3, r6
 8000e9a:	fa22 fc07 	lsr.w	ip, r2, r7
 8000e9e:	ea4c 0c03 	orr.w	ip, ip, r3
 8000ea2:	fa20 f407 	lsr.w	r4, r0, r7
 8000ea6:	fa01 f306 	lsl.w	r3, r1, r6
 8000eaa:	431c      	orrs	r4, r3
 8000eac:	40f9      	lsrs	r1, r7
 8000eae:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000eb2:	fa00 f306 	lsl.w	r3, r0, r6
 8000eb6:	fbb1 f8f9 	udiv	r8, r1, r9
 8000eba:	0c20      	lsrs	r0, r4, #16
 8000ebc:	fa1f fe8c 	uxth.w	lr, ip
 8000ec0:	fb09 1118 	mls	r1, r9, r8, r1
 8000ec4:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000ec8:	fb08 f00e 	mul.w	r0, r8, lr
 8000ecc:	4288      	cmp	r0, r1
 8000ece:	fa02 f206 	lsl.w	r2, r2, r6
 8000ed2:	d90b      	bls.n	8000eec <__udivmoddi4+0x1b8>
 8000ed4:	eb1c 0101 	adds.w	r1, ip, r1
 8000ed8:	f108 3aff 	add.w	sl, r8, #4294967295
 8000edc:	f080 8088 	bcs.w	8000ff0 <__udivmoddi4+0x2bc>
 8000ee0:	4288      	cmp	r0, r1
 8000ee2:	f240 8085 	bls.w	8000ff0 <__udivmoddi4+0x2bc>
 8000ee6:	f1a8 0802 	sub.w	r8, r8, #2
 8000eea:	4461      	add	r1, ip
 8000eec:	1a09      	subs	r1, r1, r0
 8000eee:	b2a4      	uxth	r4, r4
 8000ef0:	fbb1 f0f9 	udiv	r0, r1, r9
 8000ef4:	fb09 1110 	mls	r1, r9, r0, r1
 8000ef8:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000efc:	fb00 fe0e 	mul.w	lr, r0, lr
 8000f00:	458e      	cmp	lr, r1
 8000f02:	d908      	bls.n	8000f16 <__udivmoddi4+0x1e2>
 8000f04:	eb1c 0101 	adds.w	r1, ip, r1
 8000f08:	f100 34ff 	add.w	r4, r0, #4294967295
 8000f0c:	d26c      	bcs.n	8000fe8 <__udivmoddi4+0x2b4>
 8000f0e:	458e      	cmp	lr, r1
 8000f10:	d96a      	bls.n	8000fe8 <__udivmoddi4+0x2b4>
 8000f12:	3802      	subs	r0, #2
 8000f14:	4461      	add	r1, ip
 8000f16:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000f1a:	fba0 9402 	umull	r9, r4, r0, r2
 8000f1e:	eba1 010e 	sub.w	r1, r1, lr
 8000f22:	42a1      	cmp	r1, r4
 8000f24:	46c8      	mov	r8, r9
 8000f26:	46a6      	mov	lr, r4
 8000f28:	d356      	bcc.n	8000fd8 <__udivmoddi4+0x2a4>
 8000f2a:	d053      	beq.n	8000fd4 <__udivmoddi4+0x2a0>
 8000f2c:	b15d      	cbz	r5, 8000f46 <__udivmoddi4+0x212>
 8000f2e:	ebb3 0208 	subs.w	r2, r3, r8
 8000f32:	eb61 010e 	sbc.w	r1, r1, lr
 8000f36:	fa01 f707 	lsl.w	r7, r1, r7
 8000f3a:	fa22 f306 	lsr.w	r3, r2, r6
 8000f3e:	40f1      	lsrs	r1, r6
 8000f40:	431f      	orrs	r7, r3
 8000f42:	e9c5 7100 	strd	r7, r1, [r5]
 8000f46:	2600      	movs	r6, #0
 8000f48:	4631      	mov	r1, r6
 8000f4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f4e:	f1c2 0320 	rsb	r3, r2, #32
 8000f52:	40d8      	lsrs	r0, r3
 8000f54:	fa0c fc02 	lsl.w	ip, ip, r2
 8000f58:	fa21 f303 	lsr.w	r3, r1, r3
 8000f5c:	4091      	lsls	r1, r2
 8000f5e:	4301      	orrs	r1, r0
 8000f60:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000f64:	fa1f fe8c 	uxth.w	lr, ip
 8000f68:	fbb3 f0f7 	udiv	r0, r3, r7
 8000f6c:	fb07 3610 	mls	r6, r7, r0, r3
 8000f70:	0c0b      	lsrs	r3, r1, #16
 8000f72:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000f76:	fb00 f60e 	mul.w	r6, r0, lr
 8000f7a:	429e      	cmp	r6, r3
 8000f7c:	fa04 f402 	lsl.w	r4, r4, r2
 8000f80:	d908      	bls.n	8000f94 <__udivmoddi4+0x260>
 8000f82:	eb1c 0303 	adds.w	r3, ip, r3
 8000f86:	f100 38ff 	add.w	r8, r0, #4294967295
 8000f8a:	d22f      	bcs.n	8000fec <__udivmoddi4+0x2b8>
 8000f8c:	429e      	cmp	r6, r3
 8000f8e:	d92d      	bls.n	8000fec <__udivmoddi4+0x2b8>
 8000f90:	3802      	subs	r0, #2
 8000f92:	4463      	add	r3, ip
 8000f94:	1b9b      	subs	r3, r3, r6
 8000f96:	b289      	uxth	r1, r1
 8000f98:	fbb3 f6f7 	udiv	r6, r3, r7
 8000f9c:	fb07 3316 	mls	r3, r7, r6, r3
 8000fa0:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000fa4:	fb06 f30e 	mul.w	r3, r6, lr
 8000fa8:	428b      	cmp	r3, r1
 8000faa:	d908      	bls.n	8000fbe <__udivmoddi4+0x28a>
 8000fac:	eb1c 0101 	adds.w	r1, ip, r1
 8000fb0:	f106 38ff 	add.w	r8, r6, #4294967295
 8000fb4:	d216      	bcs.n	8000fe4 <__udivmoddi4+0x2b0>
 8000fb6:	428b      	cmp	r3, r1
 8000fb8:	d914      	bls.n	8000fe4 <__udivmoddi4+0x2b0>
 8000fba:	3e02      	subs	r6, #2
 8000fbc:	4461      	add	r1, ip
 8000fbe:	1ac9      	subs	r1, r1, r3
 8000fc0:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000fc4:	e738      	b.n	8000e38 <__udivmoddi4+0x104>
 8000fc6:	462e      	mov	r6, r5
 8000fc8:	4628      	mov	r0, r5
 8000fca:	e705      	b.n	8000dd8 <__udivmoddi4+0xa4>
 8000fcc:	4606      	mov	r6, r0
 8000fce:	e6e3      	b.n	8000d98 <__udivmoddi4+0x64>
 8000fd0:	4618      	mov	r0, r3
 8000fd2:	e6f8      	b.n	8000dc6 <__udivmoddi4+0x92>
 8000fd4:	454b      	cmp	r3, r9
 8000fd6:	d2a9      	bcs.n	8000f2c <__udivmoddi4+0x1f8>
 8000fd8:	ebb9 0802 	subs.w	r8, r9, r2
 8000fdc:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000fe0:	3801      	subs	r0, #1
 8000fe2:	e7a3      	b.n	8000f2c <__udivmoddi4+0x1f8>
 8000fe4:	4646      	mov	r6, r8
 8000fe6:	e7ea      	b.n	8000fbe <__udivmoddi4+0x28a>
 8000fe8:	4620      	mov	r0, r4
 8000fea:	e794      	b.n	8000f16 <__udivmoddi4+0x1e2>
 8000fec:	4640      	mov	r0, r8
 8000fee:	e7d1      	b.n	8000f94 <__udivmoddi4+0x260>
 8000ff0:	46d0      	mov	r8, sl
 8000ff2:	e77b      	b.n	8000eec <__udivmoddi4+0x1b8>
 8000ff4:	3b02      	subs	r3, #2
 8000ff6:	4461      	add	r1, ip
 8000ff8:	e732      	b.n	8000e60 <__udivmoddi4+0x12c>
 8000ffa:	4630      	mov	r0, r6
 8000ffc:	e709      	b.n	8000e12 <__udivmoddi4+0xde>
 8000ffe:	4464      	add	r4, ip
 8001000:	3802      	subs	r0, #2
 8001002:	e742      	b.n	8000e8a <__udivmoddi4+0x156>

08001004 <__aeabi_idiv0>:
 8001004:	4770      	bx	lr
 8001006:	bf00      	nop

08001008 <ConvertToTemperature>:
static void MX_ADC1_Init(void);
static void MX_TIM3_Init(void);
static void MX_TIM4_Init(void);
/* USER CODE BEGIN PFP */

float ConvertToTemperature(uint16_t raw) {
 8001008:	b5b0      	push	{r4, r5, r7, lr}
 800100a:	b082      	sub	sp, #8
 800100c:	af00      	add	r7, sp, #0
 800100e:	4603      	mov	r3, r0
 8001010:	80fb      	strh	r3, [r7, #6]
	Vout = (raw) * (Vsupply / 4095); //4095 �' 12 bit resolution of the blue pill
 8001012:	88fb      	ldrh	r3, [r7, #6]
 8001014:	4618      	mov	r0, r3
 8001016:	f7ff fa8d 	bl	8000534 <__aeabi_i2d>
 800101a:	a350      	add	r3, pc, #320	; (adr r3, 800115c <ConvertToTemperature+0x154>)
 800101c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001020:	f7ff faf2 	bl	8000608 <__aeabi_dmul>
 8001024:	4602      	mov	r2, r0
 8001026:	460b      	mov	r3, r1
 8001028:	4610      	mov	r0, r2
 800102a:	4619      	mov	r1, r3
 800102c:	f7ff fde4 	bl	8000bf8 <__aeabi_d2f>
 8001030:	4603      	mov	r3, r0
 8001032:	4a45      	ldr	r2, [pc, #276]	; (8001148 <ConvertToTemperature+0x140>)
 8001034:	6013      	str	r3, [r2, #0]

	R_NTC = (Vout * R_10k) / (Vsupply - Vout); //calculating the resistance of the thermistor
 8001036:	4b44      	ldr	r3, [pc, #272]	; (8001148 <ConvertToTemperature+0x140>)
 8001038:	edd3 7a00 	vldr	s15, [r3]
 800103c:	ed9f 7a43 	vldr	s14, [pc, #268]	; 800114c <ConvertToTemperature+0x144>
 8001040:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001044:	ee17 0a90 	vmov	r0, s15
 8001048:	f7ff fa86 	bl	8000558 <__aeabi_f2d>
 800104c:	4604      	mov	r4, r0
 800104e:	460d      	mov	r5, r1
 8001050:	4b3d      	ldr	r3, [pc, #244]	; (8001148 <ConvertToTemperature+0x140>)
 8001052:	681b      	ldr	r3, [r3, #0]
 8001054:	4618      	mov	r0, r3
 8001056:	f7ff fa7f 	bl	8000558 <__aeabi_f2d>
 800105a:	4602      	mov	r2, r0
 800105c:	460b      	mov	r3, r1
 800105e:	a130      	add	r1, pc, #192	; (adr r1, 8001120 <ConvertToTemperature+0x118>)
 8001060:	e9d1 0100 	ldrd	r0, r1, [r1]
 8001064:	f7ff f918 	bl	8000298 <__aeabi_dsub>
 8001068:	4602      	mov	r2, r0
 800106a:	460b      	mov	r3, r1
 800106c:	4620      	mov	r0, r4
 800106e:	4629      	mov	r1, r5
 8001070:	f7ff fbf4 	bl	800085c <__aeabi_ddiv>
 8001074:	4602      	mov	r2, r0
 8001076:	460b      	mov	r3, r1
 8001078:	4610      	mov	r0, r2
 800107a:	4619      	mov	r1, r3
 800107c:	f7ff fdbc 	bl	8000bf8 <__aeabi_d2f>
 8001080:	4603      	mov	r3, r0
 8001082:	4a33      	ldr	r2, [pc, #204]	; (8001150 <ConvertToTemperature+0x148>)
 8001084:	6013      	str	r3, [r2, #0]

	Temp_K = (T0 * B_param) / (T0 * log(R_NTC / R_10k) + B_param); //Temperature in Kelvin
 8001086:	4b32      	ldr	r3, [pc, #200]	; (8001150 <ConvertToTemperature+0x148>)
 8001088:	edd3 7a00 	vldr	s15, [r3]
 800108c:	ed9f 7a2f 	vldr	s14, [pc, #188]	; 800114c <ConvertToTemperature+0x144>
 8001090:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8001094:	ee16 0a90 	vmov	r0, s13
 8001098:	f7ff fa5e 	bl	8000558 <__aeabi_f2d>
 800109c:	4602      	mov	r2, r0
 800109e:	460b      	mov	r3, r1
 80010a0:	ec43 2b10 	vmov	d0, r2, r3
 80010a4:	f00c f978 	bl	800d398 <log>
 80010a8:	ec51 0b10 	vmov	r0, r1, d0
 80010ac:	a31e      	add	r3, pc, #120	; (adr r3, 8001128 <ConvertToTemperature+0x120>)
 80010ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80010b2:	f7ff faa9 	bl	8000608 <__aeabi_dmul>
 80010b6:	4602      	mov	r2, r0
 80010b8:	460b      	mov	r3, r1
 80010ba:	4610      	mov	r0, r2
 80010bc:	4619      	mov	r1, r3
 80010be:	a31c      	add	r3, pc, #112	; (adr r3, 8001130 <ConvertToTemperature+0x128>)
 80010c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80010c4:	f7ff f8ea 	bl	800029c <__adddf3>
 80010c8:	4602      	mov	r2, r0
 80010ca:	460b      	mov	r3, r1
 80010cc:	a11a      	add	r1, pc, #104	; (adr r1, 8001138 <ConvertToTemperature+0x130>)
 80010ce:	e9d1 0100 	ldrd	r0, r1, [r1]
 80010d2:	f7ff fbc3 	bl	800085c <__aeabi_ddiv>
 80010d6:	4602      	mov	r2, r0
 80010d8:	460b      	mov	r3, r1
 80010da:	4610      	mov	r0, r2
 80010dc:	4619      	mov	r1, r3
 80010de:	f7ff fd8b 	bl	8000bf8 <__aeabi_d2f>
 80010e2:	4603      	mov	r3, r0
 80010e4:	4a1b      	ldr	r2, [pc, #108]	; (8001154 <ConvertToTemperature+0x14c>)
 80010e6:	6013      	str	r3, [r2, #0]
	Temp_C = Temp_K - 273.15; //converting into Celsius
 80010e8:	4b1a      	ldr	r3, [pc, #104]	; (8001154 <ConvertToTemperature+0x14c>)
 80010ea:	681b      	ldr	r3, [r3, #0]
 80010ec:	4618      	mov	r0, r3
 80010ee:	f7ff fa33 	bl	8000558 <__aeabi_f2d>
 80010f2:	a313      	add	r3, pc, #76	; (adr r3, 8001140 <ConvertToTemperature+0x138>)
 80010f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80010f8:	f7ff f8ce 	bl	8000298 <__aeabi_dsub>
 80010fc:	4602      	mov	r2, r0
 80010fe:	460b      	mov	r3, r1
 8001100:	4610      	mov	r0, r2
 8001102:	4619      	mov	r1, r3
 8001104:	f7ff fd78 	bl	8000bf8 <__aeabi_d2f>
 8001108:	4603      	mov	r3, r0
 800110a:	4a13      	ldr	r2, [pc, #76]	; (8001158 <ConvertToTemperature+0x150>)
 800110c:	6013      	str	r3, [r2, #0]
	return Temp_C;
 800110e:	4b12      	ldr	r3, [pc, #72]	; (8001158 <ConvertToTemperature+0x150>)
 8001110:	681b      	ldr	r3, [r3, #0]
 8001112:	ee07 3a90 	vmov	s15, r3
}
 8001116:	eeb0 0a67 	vmov.f32	s0, s15
 800111a:	3708      	adds	r7, #8
 800111c:	46bd      	mov	sp, r7
 800111e:	bdb0      	pop	{r4, r5, r7, pc}
 8001120:	66666666 	.word	0x66666666
 8001124:	400a6666 	.word	0x400a6666
 8001128:	66666666 	.word	0x66666666
 800112c:	4072a266 	.word	0x4072a266
 8001130:	00000000 	.word	0x00000000
 8001134:	40ace800 	.word	0x40ace800
 8001138:	00000000 	.word	0x00000000
 800113c:	4130d533 	.word	0x4130d533
 8001140:	66666666 	.word	0x66666666
 8001144:	40711266 	.word	0x40711266
 8001148:	20000540 	.word	0x20000540
 800114c:	4619c000 	.word	0x4619c000
 8001150:	20000544 	.word	0x20000544
 8001154:	20000548 	.word	0x20000548
 8001158:	2000054c 	.word	0x2000054c
 800115c:	e734d9b4 	.word	0xe734d9b4
 8001160:	3f4a680c 	.word	0x3f4a680c

08001164 <main>:

/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void) {
 8001164:	b580      	push	{r7, lr}
 8001166:	b09c      	sub	sp, #112	; 0x70
 8001168:	af04      	add	r7, sp, #16
	/* USER CODE END 1 */

	/* MCU Configuration--------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 800116a:	f001 fe3d 	bl	8002de8 <HAL_Init>
	/* USER CODE BEGIN Init */

	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 800116e:	f000 f8f3 	bl	8001358 <SystemClock_Config>

	/* USER CODE BEGIN SysInit */
	T = HAL_GetTick();
 8001172:	f001 fe6f 	bl	8002e54 <HAL_GetTick>
 8001176:	4603      	mov	r3, r0
 8001178:	4a6c      	ldr	r2, [pc, #432]	; (800132c <main+0x1c8>)
 800117a:	6013      	str	r3, [r2, #0]
	/* USER CODE END SysInit */

	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 800117c:	f000 fb3e 	bl	80017fc <MX_GPIO_Init>
	MX_DMA_Init();
 8001180:	f000 fb14 	bl	80017ac <MX_DMA_Init>
	MX_CRC_Init();
 8001184:	f000 f9b2 	bl	80014ec <MX_CRC_Init>
	MX_SPI1_Init();
 8001188:	f000 f9c4 	bl	8001514 <MX_SPI1_Init>
	MX_USB_DEVICE_Init();
 800118c:	f00a fd1e 	bl	800bbcc <MX_USB_DEVICE_Init>
	MX_TIM2_Init();
 8001190:	f000 f9f6 	bl	8001580 <MX_TIM2_Init>
	MX_ADC1_Init();
 8001194:	f000 f948 	bl	8001428 <MX_ADC1_Init>
	MX_TIM3_Init();
 8001198:	f000 fa3e 	bl	8001618 <MX_TIM3_Init>
	MX_TIM4_Init();
 800119c:	f000 fab2 	bl	8001704 <MX_TIM4_Init>
	/* USER CODE BEGIN 2 */
	HAL_TIM_Base_Start_IT(&htim2);
 80011a0:	4863      	ldr	r0, [pc, #396]	; (8001330 <main+0x1cc>)
 80011a2:	f005 fbb5 	bl	8006910 <HAL_TIM_Base_Start_IT>
	HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 80011a6:	2100      	movs	r1, #0
 80011a8:	4862      	ldr	r0, [pc, #392]	; (8001334 <main+0x1d0>)
 80011aa:	f005 fc6d 	bl	8006a88 <HAL_TIM_PWM_Start>
	ST7789_Init();
 80011ae:	f000 ff31 	bl	8002014 <ST7789_Init>
	ST7789_rotation(2);
 80011b2:	2002      	movs	r0, #2
 80011b4:	f001 fd9e 	bl	8002cf4 <ST7789_rotation>

	/* Infinite loop */
	/* USER CODE BEGIN WHILE */
	while (1) {

		HAL_ADC_Start_DMA(&hadc1, raw, 2); // start adc in DMA mode
 80011b8:	f107 0354 	add.w	r3, r7, #84	; 0x54
 80011bc:	2202      	movs	r2, #2
 80011be:	4619      	mov	r1, r3
 80011c0:	485d      	ldr	r0, [pc, #372]	; (8001338 <main+0x1d4>)
 80011c2:	f001 febb 	bl	8002f3c <HAL_ADC_Start_DMA>
		if (HAL_GetTick() > T + OFFSET) {
 80011c6:	f001 fe45 	bl	8002e54 <HAL_GetTick>
 80011ca:	4602      	mov	r2, r0
 80011cc:	4b57      	ldr	r3, [pc, #348]	; (800132c <main+0x1c8>)
 80011ce:	681b      	ldr	r3, [r3, #0]
 80011d0:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 80011d4:	429a      	cmp	r2, r3
 80011d6:	f240 80a4 	bls.w	8001322 <main+0x1be>

			ST7789_DrawCircleFilled(75, 120, 70, ST7789_BLUE);
 80011da:	231f      	movs	r3, #31
 80011dc:	2246      	movs	r2, #70	; 0x46
 80011de:	2178      	movs	r1, #120	; 0x78
 80011e0:	204b      	movs	r0, #75	; 0x4b
 80011e2:	f001 faa1 	bl	8002728 <ST7789_DrawCircleFilled>
			ST7789_DrawCircleFilled(245, 120, 70, ST7789_BLUE);
 80011e6:	231f      	movs	r3, #31
 80011e8:	2246      	movs	r2, #70	; 0x46
 80011ea:	2178      	movs	r1, #120	; 0x78
 80011ec:	20f5      	movs	r0, #245	; 0xf5
 80011ee:	f001 fa9b 	bl	8002728 <ST7789_DrawCircleFilled>

			cels = ConvertToTemperature((uint16_t) raw[0]);
 80011f2:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80011f4:	b29b      	uxth	r3, r3
 80011f6:	4618      	mov	r0, r3
 80011f8:	f7ff ff06 	bl	8001008 <ConvertToTemperature>
 80011fc:	ed87 0a17 	vstr	s0, [r7, #92]	; 0x5c

			sprintf(msg, "%.2f", cels);
 8001200:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 8001202:	f7ff f9a9 	bl	8000558 <__aeabi_f2d>
 8001206:	4602      	mov	r2, r0
 8001208:	460b      	mov	r3, r1
 800120a:	f107 002c 	add.w	r0, r7, #44	; 0x2c
 800120e:	494b      	ldr	r1, [pc, #300]	; (800133c <main+0x1d8>)
 8001210:	f00d fc62 	bl	800ead8 <siprintf>
			ST7789_print(45, 110, ST7789_WHITE, ST7789_BLACK, 0, &Font_16x26, 1,
 8001214:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001218:	9303      	str	r3, [sp, #12]
 800121a:	2301      	movs	r3, #1
 800121c:	9302      	str	r3, [sp, #8]
 800121e:	4b48      	ldr	r3, [pc, #288]	; (8001340 <main+0x1dc>)
 8001220:	9301      	str	r3, [sp, #4]
 8001222:	2300      	movs	r3, #0
 8001224:	9300      	str	r3, [sp, #0]
 8001226:	2300      	movs	r3, #0
 8001228:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800122c:	216e      	movs	r1, #110	; 0x6e
 800122e:	202d      	movs	r0, #45	; 0x2d
 8001230:	f001 fc9c 	bl	8002b6c <ST7789_print>
					msg);

			sprintf(msg1, "%li",
					(uint32_t) ((float) (raw[1] * 100 / MAXBITPER4V)));
 8001234:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8001236:	2264      	movs	r2, #100	; 0x64
 8001238:	fb02 f303 	mul.w	r3, r2, r3
 800123c:	089b      	lsrs	r3, r3, #2
 800123e:	4a41      	ldr	r2, [pc, #260]	; (8001344 <main+0x1e0>)
 8001240:	fba2 2303 	umull	r2, r3, r2, r3
 8001244:	0a1b      	lsrs	r3, r3, #8
 8001246:	ee07 3a90 	vmov	s15, r3
 800124a:	eef8 7a67 	vcvt.f32.u32	s15, s15
			sprintf(msg1, "%li",
 800124e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001252:	1d3b      	adds	r3, r7, #4
 8001254:	ee17 2a90 	vmov	r2, s15
 8001258:	493b      	ldr	r1, [pc, #236]	; (8001348 <main+0x1e4>)
 800125a:	4618      	mov	r0, r3
 800125c:	f00d fc3c 	bl	800ead8 <siprintf>
			ST7789_print(225, 110, ST7789_WHITE, ST7789_BLACK, 0, &Font_16x26,
 8001260:	1d3b      	adds	r3, r7, #4
 8001262:	9303      	str	r3, [sp, #12]
 8001264:	2301      	movs	r3, #1
 8001266:	9302      	str	r3, [sp, #8]
 8001268:	4b35      	ldr	r3, [pc, #212]	; (8001340 <main+0x1dc>)
 800126a:	9301      	str	r3, [sp, #4]
 800126c:	2300      	movs	r3, #0
 800126e:	9300      	str	r3, [sp, #0]
 8001270:	2300      	movs	r3, #0
 8001272:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001276:	216e      	movs	r1, #110	; 0x6e
 8001278:	20e1      	movs	r0, #225	; 0xe1
 800127a:	f001 fc77 	bl	8002b6c <ST7789_print>
					1, msg1);

			sprintf(msg, "%.2f - %li\r\n ", cels,
 800127e:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 8001280:	f7ff f96a 	bl	8000558 <__aeabi_f2d>
 8001284:	4602      	mov	r2, r0
 8001286:	460b      	mov	r3, r1
					(uint32_t) ((float) (raw[1] * 100 / MAXBITPER4V)));
 8001288:	6db9      	ldr	r1, [r7, #88]	; 0x58
 800128a:	2064      	movs	r0, #100	; 0x64
 800128c:	fb00 f101 	mul.w	r1, r0, r1
 8001290:	0889      	lsrs	r1, r1, #2
 8001292:	482c      	ldr	r0, [pc, #176]	; (8001344 <main+0x1e0>)
 8001294:	fba0 0101 	umull	r0, r1, r0, r1
 8001298:	0a09      	lsrs	r1, r1, #8
 800129a:	ee07 1a90 	vmov	s15, r1
 800129e:	eef8 7a67 	vcvt.f32.u32	s15, s15
			sprintf(msg, "%.2f - %li\r\n ", cels,
 80012a2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80012a6:	ee17 1a90 	vmov	r1, s15
 80012aa:	f107 002c 	add.w	r0, r7, #44	; 0x2c
 80012ae:	9100      	str	r1, [sp, #0]
 80012b0:	4926      	ldr	r1, [pc, #152]	; (800134c <main+0x1e8>)
 80012b2:	f00d fc11 	bl	800ead8 <siprintf>
			CDC_Transmit_FS((uint8_t*) msg, strlen((char*) msg));
 80012b6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80012ba:	4618      	mov	r0, r3
 80012bc:	f7fe ff90 	bl	80001e0 <strlen>
 80012c0:	4603      	mov	r3, r0
 80012c2:	b29a      	uxth	r2, r3
 80012c4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80012c8:	4611      	mov	r1, r2
 80012ca:	4618      	mov	r0, r3
 80012cc:	f00a fd3c 	bl	800bd48 <CDC_Transmit_FS>

			if (cels > 24.00f) {
 80012d0:	edd7 7a17 	vldr	s15, [r7, #92]	; 0x5c
 80012d4:	eeb3 7a08 	vmov.f32	s14, #56	; 0x41c00000  24.0
 80012d8:	eef4 7ac7 	vcmpe.f32	s15, s14
 80012dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80012e0:	dd0d      	ble.n	80012fe <main+0x19a>
//				Start Motor
				TIM3->CCR1 = 100; // enable pin
 80012e2:	4b1b      	ldr	r3, [pc, #108]	; (8001350 <main+0x1ec>)
 80012e4:	2264      	movs	r2, #100	; 0x64
 80012e6:	635a      	str	r2, [r3, #52]	; 0x34
				HAL_GPIO_WritePin(M_IN1_GPIO_Port, M_IN1_Pin, GPIO_PIN_SET);
 80012e8:	2201      	movs	r2, #1
 80012ea:	2108      	movs	r1, #8
 80012ec:	4819      	ldr	r0, [pc, #100]	; (8001354 <main+0x1f0>)
 80012ee:	f002 fff7 	bl	80042e0 <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(M_IN2_GPIO_Port, M_IN2_Pin, GPIO_PIN_RESET);
 80012f2:	2200      	movs	r2, #0
 80012f4:	2120      	movs	r1, #32
 80012f6:	4817      	ldr	r0, [pc, #92]	; (8001354 <main+0x1f0>)
 80012f8:	f002 fff2 	bl	80042e0 <HAL_GPIO_WritePin>
 80012fc:	e00c      	b.n	8001318 <main+0x1b4>
			} else {
				TIM3->CCR1 = 0; // enable pin
 80012fe:	4b14      	ldr	r3, [pc, #80]	; (8001350 <main+0x1ec>)
 8001300:	2200      	movs	r2, #0
 8001302:	635a      	str	r2, [r3, #52]	; 0x34
				HAL_GPIO_WritePin(M_IN1_GPIO_Port, M_IN1_Pin, GPIO_PIN_SET);
 8001304:	2201      	movs	r2, #1
 8001306:	2108      	movs	r1, #8
 8001308:	4812      	ldr	r0, [pc, #72]	; (8001354 <main+0x1f0>)
 800130a:	f002 ffe9 	bl	80042e0 <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(M_IN2_GPIO_Port, M_IN2_Pin, GPIO_PIN_RESET);
 800130e:	2200      	movs	r2, #0
 8001310:	2120      	movs	r1, #32
 8001312:	4810      	ldr	r0, [pc, #64]	; (8001354 <main+0x1f0>)
 8001314:	f002 ffe4 	bl	80042e0 <HAL_GPIO_WritePin>
			}
			T = HAL_GetTick();
 8001318:	f001 fd9c 	bl	8002e54 <HAL_GetTick>
 800131c:	4603      	mov	r3, r0
 800131e:	4a03      	ldr	r2, [pc, #12]	; (800132c <main+0x1c8>)
 8001320:	6013      	str	r3, [r2, #0]
		}

		HAL_Delay(100);
 8001322:	2064      	movs	r0, #100	; 0x64
 8001324:	f001 fda2 	bl	8002e6c <HAL_Delay>
		HAL_ADC_Start_DMA(&hadc1, raw, 2); // start adc in DMA mode
 8001328:	e746      	b.n	80011b8 <main+0x54>
 800132a:	bf00      	nop
 800132c:	2000053c 	.word	0x2000053c
 8001330:	20000464 	.word	0x20000464
 8001334:	200004ac 	.word	0x200004ac
 8001338:	200002fc 	.word	0x200002fc
 800133c:	08012250 	.word	0x08012250
 8001340:	20000000 	.word	0x20000000
 8001344:	50050051 	.word	0x50050051
 8001348:	08012258 	.word	0x08012258
 800134c:	0801225c 	.word	0x0801225c
 8001350:	40000400 	.word	0x40000400
 8001354:	40020400 	.word	0x40020400

08001358 <SystemClock_Config>:

/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void) {
 8001358:	b580      	push	{r7, lr}
 800135a:	b094      	sub	sp, #80	; 0x50
 800135c:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 800135e:	f107 0320 	add.w	r3, r7, #32
 8001362:	2230      	movs	r2, #48	; 0x30
 8001364:	2100      	movs	r1, #0
 8001366:	4618      	mov	r0, r3
 8001368:	f00c faa0 	bl	800d8ac <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
 800136c:	f107 030c 	add.w	r3, r7, #12
 8001370:	2200      	movs	r2, #0
 8001372:	601a      	str	r2, [r3, #0]
 8001374:	605a      	str	r2, [r3, #4]
 8001376:	609a      	str	r2, [r3, #8]
 8001378:	60da      	str	r2, [r3, #12]
 800137a:	611a      	str	r2, [r3, #16]

	/** Configure the main internal regulator output voltage
	 */
	__HAL_RCC_PWR_CLK_ENABLE();
 800137c:	2300      	movs	r3, #0
 800137e:	60bb      	str	r3, [r7, #8]
 8001380:	4b27      	ldr	r3, [pc, #156]	; (8001420 <SystemClock_Config+0xc8>)
 8001382:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001384:	4a26      	ldr	r2, [pc, #152]	; (8001420 <SystemClock_Config+0xc8>)
 8001386:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800138a:	6413      	str	r3, [r2, #64]	; 0x40
 800138c:	4b24      	ldr	r3, [pc, #144]	; (8001420 <SystemClock_Config+0xc8>)
 800138e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001390:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001394:	60bb      	str	r3, [r7, #8]
 8001396:	68bb      	ldr	r3, [r7, #8]
	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001398:	2300      	movs	r3, #0
 800139a:	607b      	str	r3, [r7, #4]
 800139c:	4b21      	ldr	r3, [pc, #132]	; (8001424 <SystemClock_Config+0xcc>)
 800139e:	681b      	ldr	r3, [r3, #0]
 80013a0:	4a20      	ldr	r2, [pc, #128]	; (8001424 <SystemClock_Config+0xcc>)
 80013a2:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80013a6:	6013      	str	r3, [r2, #0]
 80013a8:	4b1e      	ldr	r3, [pc, #120]	; (8001424 <SystemClock_Config+0xcc>)
 80013aa:	681b      	ldr	r3, [r3, #0]
 80013ac:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80013b0:	607b      	str	r3, [r7, #4]
 80013b2:	687b      	ldr	r3, [r7, #4]

	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80013b4:	2301      	movs	r3, #1
 80013b6:	623b      	str	r3, [r7, #32]
	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80013b8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80013bc:	627b      	str	r3, [r7, #36]	; 0x24
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80013be:	2302      	movs	r3, #2
 80013c0:	63bb      	str	r3, [r7, #56]	; 0x38
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80013c2:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80013c6:	63fb      	str	r3, [r7, #60]	; 0x3c
	RCC_OscInitStruct.PLL.PLLM = 15;
 80013c8:	230f      	movs	r3, #15
 80013ca:	643b      	str	r3, [r7, #64]	; 0x40
	RCC_OscInitStruct.PLL.PLLN = 144;
 80013cc:	2390      	movs	r3, #144	; 0x90
 80013ce:	647b      	str	r3, [r7, #68]	; 0x44
	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 80013d0:	2304      	movs	r3, #4
 80013d2:	64bb      	str	r3, [r7, #72]	; 0x48
	RCC_OscInitStruct.PLL.PLLQ = 5;
 80013d4:	2305      	movs	r3, #5
 80013d6:	64fb      	str	r3, [r7, #76]	; 0x4c
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 80013d8:	f107 0320 	add.w	r3, r7, #32
 80013dc:	4618      	mov	r0, r3
 80013de:	f004 fa15 	bl	800580c <HAL_RCC_OscConfig>
 80013e2:	4603      	mov	r3, r0
 80013e4:	2b00      	cmp	r3, #0
 80013e6:	d001      	beq.n	80013ec <SystemClock_Config+0x94>
		Error_Handler();
 80013e8:	f000 fa9e 	bl	8001928 <Error_Handler>
	}

	/** Initializes the CPU, AHB and APB buses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
 80013ec:	230f      	movs	r3, #15
 80013ee:	60fb      	str	r3, [r7, #12]
			| RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80013f0:	2302      	movs	r3, #2
 80013f2:	613b      	str	r3, [r7, #16]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80013f4:	2300      	movs	r3, #0
 80013f6:	617b      	str	r3, [r7, #20]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80013f8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80013fc:	61bb      	str	r3, [r7, #24]
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80013fe:	2300      	movs	r3, #0
 8001400:	61fb      	str	r3, [r7, #28]

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK) {
 8001402:	f107 030c 	add.w	r3, r7, #12
 8001406:	2101      	movs	r1, #1
 8001408:	4618      	mov	r0, r3
 800140a:	f004 fc77 	bl	8005cfc <HAL_RCC_ClockConfig>
 800140e:	4603      	mov	r3, r0
 8001410:	2b00      	cmp	r3, #0
 8001412:	d001      	beq.n	8001418 <SystemClock_Config+0xc0>
		Error_Handler();
 8001414:	f000 fa88 	bl	8001928 <Error_Handler>
	}
}
 8001418:	bf00      	nop
 800141a:	3750      	adds	r7, #80	; 0x50
 800141c:	46bd      	mov	sp, r7
 800141e:	bd80      	pop	{r7, pc}
 8001420:	40023800 	.word	0x40023800
 8001424:	40007000 	.word	0x40007000

08001428 <MX_ADC1_Init>:
/**
 * @brief ADC1 Initialization Function
 * @param None
 * @retval None
 */
static void MX_ADC1_Init(void) {
 8001428:	b580      	push	{r7, lr}
 800142a:	b084      	sub	sp, #16
 800142c:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN ADC1_Init 0 */

	/* USER CODE END ADC1_Init 0 */

	ADC_ChannelConfTypeDef sConfig = { 0 };
 800142e:	463b      	mov	r3, r7
 8001430:	2200      	movs	r2, #0
 8001432:	601a      	str	r2, [r3, #0]
 8001434:	605a      	str	r2, [r3, #4]
 8001436:	609a      	str	r2, [r3, #8]
 8001438:	60da      	str	r2, [r3, #12]

	/* USER CODE END ADC1_Init 1 */

	/** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
	 */
	hadc1.Instance = ADC1;
 800143a:	4b29      	ldr	r3, [pc, #164]	; (80014e0 <MX_ADC1_Init+0xb8>)
 800143c:	4a29      	ldr	r2, [pc, #164]	; (80014e4 <MX_ADC1_Init+0xbc>)
 800143e:	601a      	str	r2, [r3, #0]
	hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 8001440:	4b27      	ldr	r3, [pc, #156]	; (80014e0 <MX_ADC1_Init+0xb8>)
 8001442:	2200      	movs	r2, #0
 8001444:	605a      	str	r2, [r3, #4]
	hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8001446:	4b26      	ldr	r3, [pc, #152]	; (80014e0 <MX_ADC1_Init+0xb8>)
 8001448:	2200      	movs	r2, #0
 800144a:	609a      	str	r2, [r3, #8]
	hadc1.Init.ScanConvMode = ENABLE;
 800144c:	4b24      	ldr	r3, [pc, #144]	; (80014e0 <MX_ADC1_Init+0xb8>)
 800144e:	2201      	movs	r2, #1
 8001450:	611a      	str	r2, [r3, #16]
	hadc1.Init.ContinuousConvMode = ENABLE;
 8001452:	4b23      	ldr	r3, [pc, #140]	; (80014e0 <MX_ADC1_Init+0xb8>)
 8001454:	2201      	movs	r2, #1
 8001456:	761a      	strb	r2, [r3, #24]
	hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001458:	4b21      	ldr	r3, [pc, #132]	; (80014e0 <MX_ADC1_Init+0xb8>)
 800145a:	2200      	movs	r2, #0
 800145c:	f883 2020 	strb.w	r2, [r3, #32]
	hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001460:	4b1f      	ldr	r3, [pc, #124]	; (80014e0 <MX_ADC1_Init+0xb8>)
 8001462:	2200      	movs	r2, #0
 8001464:	62da      	str	r2, [r3, #44]	; 0x2c
	hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001466:	4b1e      	ldr	r3, [pc, #120]	; (80014e0 <MX_ADC1_Init+0xb8>)
 8001468:	4a1f      	ldr	r2, [pc, #124]	; (80014e8 <MX_ADC1_Init+0xc0>)
 800146a:	629a      	str	r2, [r3, #40]	; 0x28
	hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800146c:	4b1c      	ldr	r3, [pc, #112]	; (80014e0 <MX_ADC1_Init+0xb8>)
 800146e:	2200      	movs	r2, #0
 8001470:	60da      	str	r2, [r3, #12]
	hadc1.Init.NbrOfConversion = 2;
 8001472:	4b1b      	ldr	r3, [pc, #108]	; (80014e0 <MX_ADC1_Init+0xb8>)
 8001474:	2202      	movs	r2, #2
 8001476:	61da      	str	r2, [r3, #28]
	hadc1.Init.DMAContinuousRequests = ENABLE;
 8001478:	4b19      	ldr	r3, [pc, #100]	; (80014e0 <MX_ADC1_Init+0xb8>)
 800147a:	2201      	movs	r2, #1
 800147c:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
	hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001480:	4b17      	ldr	r3, [pc, #92]	; (80014e0 <MX_ADC1_Init+0xb8>)
 8001482:	2201      	movs	r2, #1
 8001484:	615a      	str	r2, [r3, #20]
	if (HAL_ADC_Init(&hadc1) != HAL_OK) {
 8001486:	4816      	ldr	r0, [pc, #88]	; (80014e0 <MX_ADC1_Init+0xb8>)
 8001488:	f001 fd14 	bl	8002eb4 <HAL_ADC_Init>
 800148c:	4603      	mov	r3, r0
 800148e:	2b00      	cmp	r3, #0
 8001490:	d001      	beq.n	8001496 <MX_ADC1_Init+0x6e>
		Error_Handler();
 8001492:	f000 fa49 	bl	8001928 <Error_Handler>
	}

	/** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
	 */
	sConfig.Channel = ADC_CHANNEL_1;
 8001496:	2301      	movs	r3, #1
 8001498:	603b      	str	r3, [r7, #0]
	sConfig.Rank = 1;
 800149a:	2301      	movs	r3, #1
 800149c:	607b      	str	r3, [r7, #4]
	sConfig.SamplingTime = ADC_SAMPLETIME_15CYCLES;
 800149e:	2301      	movs	r3, #1
 80014a0:	60bb      	str	r3, [r7, #8]
	if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK) {
 80014a2:	463b      	mov	r3, r7
 80014a4:	4619      	mov	r1, r3
 80014a6:	480e      	ldr	r0, [pc, #56]	; (80014e0 <MX_ADC1_Init+0xb8>)
 80014a8:	f001 fe56 	bl	8003158 <HAL_ADC_ConfigChannel>
 80014ac:	4603      	mov	r3, r0
 80014ae:	2b00      	cmp	r3, #0
 80014b0:	d001      	beq.n	80014b6 <MX_ADC1_Init+0x8e>
		Error_Handler();
 80014b2:	f000 fa39 	bl	8001928 <Error_Handler>
	}

	/** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
	 */
	sConfig.Channel = ADC_CHANNEL_6;
 80014b6:	2306      	movs	r3, #6
 80014b8:	603b      	str	r3, [r7, #0]
	sConfig.Rank = 2;
 80014ba:	2302      	movs	r3, #2
 80014bc:	607b      	str	r3, [r7, #4]
	sConfig.SamplingTime = ADC_SAMPLETIME_28CYCLES;
 80014be:	2302      	movs	r3, #2
 80014c0:	60bb      	str	r3, [r7, #8]
	if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK) {
 80014c2:	463b      	mov	r3, r7
 80014c4:	4619      	mov	r1, r3
 80014c6:	4806      	ldr	r0, [pc, #24]	; (80014e0 <MX_ADC1_Init+0xb8>)
 80014c8:	f001 fe46 	bl	8003158 <HAL_ADC_ConfigChannel>
 80014cc:	4603      	mov	r3, r0
 80014ce:	2b00      	cmp	r3, #0
 80014d0:	d001      	beq.n	80014d6 <MX_ADC1_Init+0xae>
		Error_Handler();
 80014d2:	f000 fa29 	bl	8001928 <Error_Handler>
	}
	/* USER CODE BEGIN ADC1_Init 2 */

	/* USER CODE END ADC1_Init 2 */

}
 80014d6:	bf00      	nop
 80014d8:	3710      	adds	r7, #16
 80014da:	46bd      	mov	sp, r7
 80014dc:	bd80      	pop	{r7, pc}
 80014de:	bf00      	nop
 80014e0:	200002fc 	.word	0x200002fc
 80014e4:	40012000 	.word	0x40012000
 80014e8:	0f000001 	.word	0x0f000001

080014ec <MX_CRC_Init>:
/**
 * @brief CRC Initialization Function
 * @param None
 * @retval None
 */
static void MX_CRC_Init(void) {
 80014ec:	b580      	push	{r7, lr}
 80014ee:	af00      	add	r7, sp, #0
	/* USER CODE END CRC_Init 0 */

	/* USER CODE BEGIN CRC_Init 1 */

	/* USER CODE END CRC_Init 1 */
	hcrc.Instance = CRC;
 80014f0:	4b06      	ldr	r3, [pc, #24]	; (800150c <MX_CRC_Init+0x20>)
 80014f2:	4a07      	ldr	r2, [pc, #28]	; (8001510 <MX_CRC_Init+0x24>)
 80014f4:	601a      	str	r2, [r3, #0]
	if (HAL_CRC_Init(&hcrc) != HAL_OK) {
 80014f6:	4805      	ldr	r0, [pc, #20]	; (800150c <MX_CRC_Init+0x20>)
 80014f8:	f002 f9c0 	bl	800387c <HAL_CRC_Init>
 80014fc:	4603      	mov	r3, r0
 80014fe:	2b00      	cmp	r3, #0
 8001500:	d001      	beq.n	8001506 <MX_CRC_Init+0x1a>
		Error_Handler();
 8001502:	f000 fa11 	bl	8001928 <Error_Handler>
	}
	/* USER CODE BEGIN CRC_Init 2 */

	/* USER CODE END CRC_Init 2 */

}
 8001506:	bf00      	nop
 8001508:	bd80      	pop	{r7, pc}
 800150a:	bf00      	nop
 800150c:	200003a4 	.word	0x200003a4
 8001510:	40023000 	.word	0x40023000

08001514 <MX_SPI1_Init>:
/**
 * @brief SPI1 Initialization Function
 * @param None
 * @retval None
 */
static void MX_SPI1_Init(void) {
 8001514:	b580      	push	{r7, lr}
 8001516:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN SPI1_Init 1 */

	/* USER CODE END SPI1_Init 1 */
	/* SPI1 parameter configuration*/
	hspi1.Instance = SPI1;
 8001518:	4b17      	ldr	r3, [pc, #92]	; (8001578 <MX_SPI1_Init+0x64>)
 800151a:	4a18      	ldr	r2, [pc, #96]	; (800157c <MX_SPI1_Init+0x68>)
 800151c:	601a      	str	r2, [r3, #0]
	hspi1.Init.Mode = SPI_MODE_MASTER;
 800151e:	4b16      	ldr	r3, [pc, #88]	; (8001578 <MX_SPI1_Init+0x64>)
 8001520:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001524:	605a      	str	r2, [r3, #4]
	hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8001526:	4b14      	ldr	r3, [pc, #80]	; (8001578 <MX_SPI1_Init+0x64>)
 8001528:	2200      	movs	r2, #0
 800152a:	609a      	str	r2, [r3, #8]
	hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 800152c:	4b12      	ldr	r3, [pc, #72]	; (8001578 <MX_SPI1_Init+0x64>)
 800152e:	2200      	movs	r2, #0
 8001530:	60da      	str	r2, [r3, #12]
	hspi1.Init.CLKPolarity = SPI_POLARITY_HIGH;
 8001532:	4b11      	ldr	r3, [pc, #68]	; (8001578 <MX_SPI1_Init+0x64>)
 8001534:	2202      	movs	r2, #2
 8001536:	611a      	str	r2, [r3, #16]
	hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001538:	4b0f      	ldr	r3, [pc, #60]	; (8001578 <MX_SPI1_Init+0x64>)
 800153a:	2200      	movs	r2, #0
 800153c:	615a      	str	r2, [r3, #20]
	hspi1.Init.NSS = SPI_NSS_SOFT;
 800153e:	4b0e      	ldr	r3, [pc, #56]	; (8001578 <MX_SPI1_Init+0x64>)
 8001540:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001544:	619a      	str	r2, [r3, #24]
	hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8001546:	4b0c      	ldr	r3, [pc, #48]	; (8001578 <MX_SPI1_Init+0x64>)
 8001548:	2200      	movs	r2, #0
 800154a:	61da      	str	r2, [r3, #28]
	hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800154c:	4b0a      	ldr	r3, [pc, #40]	; (8001578 <MX_SPI1_Init+0x64>)
 800154e:	2200      	movs	r2, #0
 8001550:	621a      	str	r2, [r3, #32]
	hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8001552:	4b09      	ldr	r3, [pc, #36]	; (8001578 <MX_SPI1_Init+0x64>)
 8001554:	2200      	movs	r2, #0
 8001556:	625a      	str	r2, [r3, #36]	; 0x24
	hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001558:	4b07      	ldr	r3, [pc, #28]	; (8001578 <MX_SPI1_Init+0x64>)
 800155a:	2200      	movs	r2, #0
 800155c:	629a      	str	r2, [r3, #40]	; 0x28
	hspi1.Init.CRCPolynomial = 10;
 800155e:	4b06      	ldr	r3, [pc, #24]	; (8001578 <MX_SPI1_Init+0x64>)
 8001560:	220a      	movs	r2, #10
 8001562:	62da      	str	r2, [r3, #44]	; 0x2c
	if (HAL_SPI_Init(&hspi1) != HAL_OK) {
 8001564:	4804      	ldr	r0, [pc, #16]	; (8001578 <MX_SPI1_Init+0x64>)
 8001566:	f004 fdc7 	bl	80060f8 <HAL_SPI_Init>
 800156a:	4603      	mov	r3, r0
 800156c:	2b00      	cmp	r3, #0
 800156e:	d001      	beq.n	8001574 <MX_SPI1_Init+0x60>
		Error_Handler();
 8001570:	f000 f9da 	bl	8001928 <Error_Handler>
	}
	/* USER CODE BEGIN SPI1_Init 2 */

	/* USER CODE END SPI1_Init 2 */

}
 8001574:	bf00      	nop
 8001576:	bd80      	pop	{r7, pc}
 8001578:	200003ac 	.word	0x200003ac
 800157c:	40013000 	.word	0x40013000

08001580 <MX_TIM2_Init>:
/**
 * @brief TIM2 Initialization Function
 * @param None
 * @retval None
 */
static void MX_TIM2_Init(void) {
 8001580:	b580      	push	{r7, lr}
 8001582:	b086      	sub	sp, #24
 8001584:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM2_Init 0 */

	/* USER CODE END TIM2_Init 0 */

	TIM_ClockConfigTypeDef sClockSourceConfig = { 0 };
 8001586:	f107 0308 	add.w	r3, r7, #8
 800158a:	2200      	movs	r2, #0
 800158c:	601a      	str	r2, [r3, #0]
 800158e:	605a      	str	r2, [r3, #4]
 8001590:	609a      	str	r2, [r3, #8]
 8001592:	60da      	str	r2, [r3, #12]
	TIM_MasterConfigTypeDef sMasterConfig = { 0 };
 8001594:	463b      	mov	r3, r7
 8001596:	2200      	movs	r2, #0
 8001598:	601a      	str	r2, [r3, #0]
 800159a:	605a      	str	r2, [r3, #4]

	/* USER CODE BEGIN TIM2_Init 1 */

	/* USER CODE END TIM2_Init 1 */
	htim2.Instance = TIM2;
 800159c:	4b1d      	ldr	r3, [pc, #116]	; (8001614 <MX_TIM2_Init+0x94>)
 800159e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80015a2:	601a      	str	r2, [r3, #0]
	htim2.Init.Prescaler = 44999;
 80015a4:	4b1b      	ldr	r3, [pc, #108]	; (8001614 <MX_TIM2_Init+0x94>)
 80015a6:	f64a 72c7 	movw	r2, #44999	; 0xafc7
 80015aa:	605a      	str	r2, [r3, #4]
	htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80015ac:	4b19      	ldr	r3, [pc, #100]	; (8001614 <MX_TIM2_Init+0x94>)
 80015ae:	2200      	movs	r2, #0
 80015b0:	609a      	str	r2, [r3, #8]
	htim2.Init.Period = 15;
 80015b2:	4b18      	ldr	r3, [pc, #96]	; (8001614 <MX_TIM2_Init+0x94>)
 80015b4:	220f      	movs	r2, #15
 80015b6:	60da      	str	r2, [r3, #12]
	htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80015b8:	4b16      	ldr	r3, [pc, #88]	; (8001614 <MX_TIM2_Init+0x94>)
 80015ba:	2200      	movs	r2, #0
 80015bc:	611a      	str	r2, [r3, #16]
	htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80015be:	4b15      	ldr	r3, [pc, #84]	; (8001614 <MX_TIM2_Init+0x94>)
 80015c0:	2200      	movs	r2, #0
 80015c2:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim2) != HAL_OK) {
 80015c4:	4813      	ldr	r0, [pc, #76]	; (8001614 <MX_TIM2_Init+0x94>)
 80015c6:	f005 f953 	bl	8006870 <HAL_TIM_Base_Init>
 80015ca:	4603      	mov	r3, r0
 80015cc:	2b00      	cmp	r3, #0
 80015ce:	d001      	beq.n	80015d4 <MX_TIM2_Init+0x54>
		Error_Handler();
 80015d0:	f000 f9aa 	bl	8001928 <Error_Handler>
	}
	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80015d4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80015d8:	60bb      	str	r3, [r7, #8]
	if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK) {
 80015da:	f107 0308 	add.w	r3, r7, #8
 80015de:	4619      	mov	r1, r3
 80015e0:	480c      	ldr	r0, [pc, #48]	; (8001614 <MX_TIM2_Init+0x94>)
 80015e2:	f005 fdb7 	bl	8007154 <HAL_TIM_ConfigClockSource>
 80015e6:	4603      	mov	r3, r0
 80015e8:	2b00      	cmp	r3, #0
 80015ea:	d001      	beq.n	80015f0 <MX_TIM2_Init+0x70>
		Error_Handler();
 80015ec:	f000 f99c 	bl	8001928 <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80015f0:	2300      	movs	r3, #0
 80015f2:	603b      	str	r3, [r7, #0]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80015f4:	2300      	movs	r3, #0
 80015f6:	607b      	str	r3, [r7, #4]
	if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig)
 80015f8:	463b      	mov	r3, r7
 80015fa:	4619      	mov	r1, r3
 80015fc:	4805      	ldr	r0, [pc, #20]	; (8001614 <MX_TIM2_Init+0x94>)
 80015fe:	f006 fa83 	bl	8007b08 <HAL_TIMEx_MasterConfigSynchronization>
 8001602:	4603      	mov	r3, r0
 8001604:	2b00      	cmp	r3, #0
 8001606:	d001      	beq.n	800160c <MX_TIM2_Init+0x8c>
			!= HAL_OK) {
		Error_Handler();
 8001608:	f000 f98e 	bl	8001928 <Error_Handler>
	}
	/* USER CODE BEGIN TIM2_Init 2 */

	/* USER CODE END TIM2_Init 2 */

}
 800160c:	bf00      	nop
 800160e:	3718      	adds	r7, #24
 8001610:	46bd      	mov	sp, r7
 8001612:	bd80      	pop	{r7, pc}
 8001614:	20000464 	.word	0x20000464

08001618 <MX_TIM3_Init>:
/**
 * @brief TIM3 Initialization Function
 * @param None
 * @retval None
 */
static void MX_TIM3_Init(void) {
 8001618:	b580      	push	{r7, lr}
 800161a:	b08e      	sub	sp, #56	; 0x38
 800161c:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM3_Init 0 */

	/* USER CODE END TIM3_Init 0 */

	TIM_ClockConfigTypeDef sClockSourceConfig = { 0 };
 800161e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001622:	2200      	movs	r2, #0
 8001624:	601a      	str	r2, [r3, #0]
 8001626:	605a      	str	r2, [r3, #4]
 8001628:	609a      	str	r2, [r3, #8]
 800162a:	60da      	str	r2, [r3, #12]
	TIM_MasterConfigTypeDef sMasterConfig = { 0 };
 800162c:	f107 0320 	add.w	r3, r7, #32
 8001630:	2200      	movs	r2, #0
 8001632:	601a      	str	r2, [r3, #0]
 8001634:	605a      	str	r2, [r3, #4]
	TIM_OC_InitTypeDef sConfigOC = { 0 };
 8001636:	1d3b      	adds	r3, r7, #4
 8001638:	2200      	movs	r2, #0
 800163a:	601a      	str	r2, [r3, #0]
 800163c:	605a      	str	r2, [r3, #4]
 800163e:	609a      	str	r2, [r3, #8]
 8001640:	60da      	str	r2, [r3, #12]
 8001642:	611a      	str	r2, [r3, #16]
 8001644:	615a      	str	r2, [r3, #20]
 8001646:	619a      	str	r2, [r3, #24]

	/* USER CODE BEGIN TIM3_Init 1 */

	/* USER CODE END TIM3_Init 1 */
	htim3.Instance = TIM3;
 8001648:	4b2c      	ldr	r3, [pc, #176]	; (80016fc <MX_TIM3_Init+0xe4>)
 800164a:	4a2d      	ldr	r2, [pc, #180]	; (8001700 <MX_TIM3_Init+0xe8>)
 800164c:	601a      	str	r2, [r3, #0]
	htim3.Init.Prescaler = 0;
 800164e:	4b2b      	ldr	r3, [pc, #172]	; (80016fc <MX_TIM3_Init+0xe4>)
 8001650:	2200      	movs	r2, #0
 8001652:	605a      	str	r2, [r3, #4]
	htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001654:	4b29      	ldr	r3, [pc, #164]	; (80016fc <MX_TIM3_Init+0xe4>)
 8001656:	2200      	movs	r2, #0
 8001658:	609a      	str	r2, [r3, #8]
	htim3.Init.Period = 100;
 800165a:	4b28      	ldr	r3, [pc, #160]	; (80016fc <MX_TIM3_Init+0xe4>)
 800165c:	2264      	movs	r2, #100	; 0x64
 800165e:	60da      	str	r2, [r3, #12]
	htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001660:	4b26      	ldr	r3, [pc, #152]	; (80016fc <MX_TIM3_Init+0xe4>)
 8001662:	2200      	movs	r2, #0
 8001664:	611a      	str	r2, [r3, #16]
	htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001666:	4b25      	ldr	r3, [pc, #148]	; (80016fc <MX_TIM3_Init+0xe4>)
 8001668:	2280      	movs	r2, #128	; 0x80
 800166a:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim3) != HAL_OK) {
 800166c:	4823      	ldr	r0, [pc, #140]	; (80016fc <MX_TIM3_Init+0xe4>)
 800166e:	f005 f8ff 	bl	8006870 <HAL_TIM_Base_Init>
 8001672:	4603      	mov	r3, r0
 8001674:	2b00      	cmp	r3, #0
 8001676:	d001      	beq.n	800167c <MX_TIM3_Init+0x64>
		Error_Handler();
 8001678:	f000 f956 	bl	8001928 <Error_Handler>
	}
	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800167c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001680:	62bb      	str	r3, [r7, #40]	; 0x28
	if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK) {
 8001682:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001686:	4619      	mov	r1, r3
 8001688:	481c      	ldr	r0, [pc, #112]	; (80016fc <MX_TIM3_Init+0xe4>)
 800168a:	f005 fd63 	bl	8007154 <HAL_TIM_ConfigClockSource>
 800168e:	4603      	mov	r3, r0
 8001690:	2b00      	cmp	r3, #0
 8001692:	d001      	beq.n	8001698 <MX_TIM3_Init+0x80>
		Error_Handler();
 8001694:	f000 f948 	bl	8001928 <Error_Handler>
	}
	if (HAL_TIM_PWM_Init(&htim3) != HAL_OK) {
 8001698:	4818      	ldr	r0, [pc, #96]	; (80016fc <MX_TIM3_Init+0xe4>)
 800169a:	f005 f99b 	bl	80069d4 <HAL_TIM_PWM_Init>
 800169e:	4603      	mov	r3, r0
 80016a0:	2b00      	cmp	r3, #0
 80016a2:	d001      	beq.n	80016a8 <MX_TIM3_Init+0x90>
		Error_Handler();
 80016a4:	f000 f940 	bl	8001928 <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80016a8:	2300      	movs	r3, #0
 80016aa:	623b      	str	r3, [r7, #32]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80016ac:	2300      	movs	r3, #0
 80016ae:	627b      	str	r3, [r7, #36]	; 0x24
	if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig)
 80016b0:	f107 0320 	add.w	r3, r7, #32
 80016b4:	4619      	mov	r1, r3
 80016b6:	4811      	ldr	r0, [pc, #68]	; (80016fc <MX_TIM3_Init+0xe4>)
 80016b8:	f006 fa26 	bl	8007b08 <HAL_TIMEx_MasterConfigSynchronization>
 80016bc:	4603      	mov	r3, r0
 80016be:	2b00      	cmp	r3, #0
 80016c0:	d001      	beq.n	80016c6 <MX_TIM3_Init+0xae>
			!= HAL_OK) {
		Error_Handler();
 80016c2:	f000 f931 	bl	8001928 <Error_Handler>
	}
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80016c6:	2360      	movs	r3, #96	; 0x60
 80016c8:	607b      	str	r3, [r7, #4]
	sConfigOC.Pulse = 0;
 80016ca:	2300      	movs	r3, #0
 80016cc:	60bb      	str	r3, [r7, #8]
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80016ce:	2300      	movs	r3, #0
 80016d0:	60fb      	str	r3, [r7, #12]
	sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80016d2:	2300      	movs	r3, #0
 80016d4:	617b      	str	r3, [r7, #20]
	if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1)
 80016d6:	1d3b      	adds	r3, r7, #4
 80016d8:	2200      	movs	r2, #0
 80016da:	4619      	mov	r1, r3
 80016dc:	4807      	ldr	r0, [pc, #28]	; (80016fc <MX_TIM3_Init+0xe4>)
 80016de:	f005 fc77 	bl	8006fd0 <HAL_TIM_PWM_ConfigChannel>
 80016e2:	4603      	mov	r3, r0
 80016e4:	2b00      	cmp	r3, #0
 80016e6:	d001      	beq.n	80016ec <MX_TIM3_Init+0xd4>
			!= HAL_OK) {
		Error_Handler();
 80016e8:	f000 f91e 	bl	8001928 <Error_Handler>
	}
	/* USER CODE BEGIN TIM3_Init 2 */

	/* USER CODE END TIM3_Init 2 */
	HAL_TIM_MspPostInit(&htim3);
 80016ec:	4803      	ldr	r0, [pc, #12]	; (80016fc <MX_TIM3_Init+0xe4>)
 80016ee:	f000 fb01 	bl	8001cf4 <HAL_TIM_MspPostInit>

}
 80016f2:	bf00      	nop
 80016f4:	3738      	adds	r7, #56	; 0x38
 80016f6:	46bd      	mov	sp, r7
 80016f8:	bd80      	pop	{r7, pc}
 80016fa:	bf00      	nop
 80016fc:	200004ac 	.word	0x200004ac
 8001700:	40000400 	.word	0x40000400

08001704 <MX_TIM4_Init>:
/**
 * @brief TIM4 Initialization Function
 * @param None
 * @retval None
 */
static void MX_TIM4_Init(void) {
 8001704:	b580      	push	{r7, lr}
 8001706:	b086      	sub	sp, #24
 8001708:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM4_Init 0 */

	/* USER CODE END TIM4_Init 0 */

	TIM_MasterConfigTypeDef sMasterConfig = { 0 };
 800170a:	f107 0310 	add.w	r3, r7, #16
 800170e:	2200      	movs	r2, #0
 8001710:	601a      	str	r2, [r3, #0]
 8001712:	605a      	str	r2, [r3, #4]
	TIM_IC_InitTypeDef sConfigIC = { 0 };
 8001714:	463b      	mov	r3, r7
 8001716:	2200      	movs	r2, #0
 8001718:	601a      	str	r2, [r3, #0]
 800171a:	605a      	str	r2, [r3, #4]
 800171c:	609a      	str	r2, [r3, #8]
 800171e:	60da      	str	r2, [r3, #12]

	/* USER CODE BEGIN TIM4_Init 1 */

	/* USER CODE END TIM4_Init 1 */
	htim4.Instance = TIM4;
 8001720:	4b20      	ldr	r3, [pc, #128]	; (80017a4 <MX_TIM4_Init+0xa0>)
 8001722:	4a21      	ldr	r2, [pc, #132]	; (80017a8 <MX_TIM4_Init+0xa4>)
 8001724:	601a      	str	r2, [r3, #0]
	htim4.Init.Prescaler = 0;
 8001726:	4b1f      	ldr	r3, [pc, #124]	; (80017a4 <MX_TIM4_Init+0xa0>)
 8001728:	2200      	movs	r2, #0
 800172a:	605a      	str	r2, [r3, #4]
	htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 800172c:	4b1d      	ldr	r3, [pc, #116]	; (80017a4 <MX_TIM4_Init+0xa0>)
 800172e:	2200      	movs	r2, #0
 8001730:	609a      	str	r2, [r3, #8]
	htim4.Init.Period = 65535;
 8001732:	4b1c      	ldr	r3, [pc, #112]	; (80017a4 <MX_TIM4_Init+0xa0>)
 8001734:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001738:	60da      	str	r2, [r3, #12]
	htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800173a:	4b1a      	ldr	r3, [pc, #104]	; (80017a4 <MX_TIM4_Init+0xa0>)
 800173c:	2200      	movs	r2, #0
 800173e:	611a      	str	r2, [r3, #16]
	htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001740:	4b18      	ldr	r3, [pc, #96]	; (80017a4 <MX_TIM4_Init+0xa0>)
 8001742:	2200      	movs	r2, #0
 8001744:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_IC_Init(&htim4) != HAL_OK) {
 8001746:	4817      	ldr	r0, [pc, #92]	; (80017a4 <MX_TIM4_Init+0xa0>)
 8001748:	f005 fa4e 	bl	8006be8 <HAL_TIM_IC_Init>
 800174c:	4603      	mov	r3, r0
 800174e:	2b00      	cmp	r3, #0
 8001750:	d001      	beq.n	8001756 <MX_TIM4_Init+0x52>
		Error_Handler();
 8001752:	f000 f8e9 	bl	8001928 <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001756:	2300      	movs	r3, #0
 8001758:	613b      	str	r3, [r7, #16]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800175a:	2300      	movs	r3, #0
 800175c:	617b      	str	r3, [r7, #20]
	if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig)
 800175e:	f107 0310 	add.w	r3, r7, #16
 8001762:	4619      	mov	r1, r3
 8001764:	480f      	ldr	r0, [pc, #60]	; (80017a4 <MX_TIM4_Init+0xa0>)
 8001766:	f006 f9cf 	bl	8007b08 <HAL_TIMEx_MasterConfigSynchronization>
 800176a:	4603      	mov	r3, r0
 800176c:	2b00      	cmp	r3, #0
 800176e:	d001      	beq.n	8001774 <MX_TIM4_Init+0x70>
			!= HAL_OK) {
		Error_Handler();
 8001770:	f000 f8da 	bl	8001928 <Error_Handler>
	}
	sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 8001774:	2300      	movs	r3, #0
 8001776:	603b      	str	r3, [r7, #0]
	sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 8001778:	2301      	movs	r3, #1
 800177a:	607b      	str	r3, [r7, #4]
	sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 800177c:	2300      	movs	r3, #0
 800177e:	60bb      	str	r3, [r7, #8]
	sConfigIC.ICFilter = 0;
 8001780:	2300      	movs	r3, #0
 8001782:	60fb      	str	r3, [r7, #12]
	if (HAL_TIM_IC_ConfigChannel(&htim4, &sConfigIC, TIM_CHANNEL_1) != HAL_OK) {
 8001784:	463b      	mov	r3, r7
 8001786:	2200      	movs	r2, #0
 8001788:	4619      	mov	r1, r3
 800178a:	4806      	ldr	r0, [pc, #24]	; (80017a4 <MX_TIM4_Init+0xa0>)
 800178c:	f005 fb83 	bl	8006e96 <HAL_TIM_IC_ConfigChannel>
 8001790:	4603      	mov	r3, r0
 8001792:	2b00      	cmp	r3, #0
 8001794:	d001      	beq.n	800179a <MX_TIM4_Init+0x96>
		Error_Handler();
 8001796:	f000 f8c7 	bl	8001928 <Error_Handler>
	}
	/* USER CODE BEGIN TIM4_Init 2 */

	/* USER CODE END TIM4_Init 2 */

}
 800179a:	bf00      	nop
 800179c:	3718      	adds	r7, #24
 800179e:	46bd      	mov	sp, r7
 80017a0:	bd80      	pop	{r7, pc}
 80017a2:	bf00      	nop
 80017a4:	200004f4 	.word	0x200004f4
 80017a8:	40000800 	.word	0x40000800

080017ac <MX_DMA_Init>:

/**
 * Enable DMA controller clock
 */
static void MX_DMA_Init(void) {
 80017ac:	b580      	push	{r7, lr}
 80017ae:	b082      	sub	sp, #8
 80017b0:	af00      	add	r7, sp, #0

	/* DMA controller clock enable */
	__HAL_RCC_DMA2_CLK_ENABLE();
 80017b2:	2300      	movs	r3, #0
 80017b4:	607b      	str	r3, [r7, #4]
 80017b6:	4b10      	ldr	r3, [pc, #64]	; (80017f8 <MX_DMA_Init+0x4c>)
 80017b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80017ba:	4a0f      	ldr	r2, [pc, #60]	; (80017f8 <MX_DMA_Init+0x4c>)
 80017bc:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80017c0:	6313      	str	r3, [r2, #48]	; 0x30
 80017c2:	4b0d      	ldr	r3, [pc, #52]	; (80017f8 <MX_DMA_Init+0x4c>)
 80017c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80017c6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80017ca:	607b      	str	r3, [r7, #4]
 80017cc:	687b      	ldr	r3, [r7, #4]

	/* DMA interrupt init */
	/* DMA2_Stream0_IRQn interrupt configuration */
	HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 80017ce:	2200      	movs	r2, #0
 80017d0:	2100      	movs	r1, #0
 80017d2:	2038      	movs	r0, #56	; 0x38
 80017d4:	f002 f828 	bl	8003828 <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 80017d8:	2038      	movs	r0, #56	; 0x38
 80017da:	f002 f841 	bl	8003860 <HAL_NVIC_EnableIRQ>
	/* DMA2_Stream2_IRQn interrupt configuration */
	HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 0, 0);
 80017de:	2200      	movs	r2, #0
 80017e0:	2100      	movs	r1, #0
 80017e2:	203a      	movs	r0, #58	; 0x3a
 80017e4:	f002 f820 	bl	8003828 <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 80017e8:	203a      	movs	r0, #58	; 0x3a
 80017ea:	f002 f839 	bl	8003860 <HAL_NVIC_EnableIRQ>

}
 80017ee:	bf00      	nop
 80017f0:	3708      	adds	r7, #8
 80017f2:	46bd      	mov	sp, r7
 80017f4:	bd80      	pop	{r7, pc}
 80017f6:	bf00      	nop
 80017f8:	40023800 	.word	0x40023800

080017fc <MX_GPIO_Init>:
/**
 * @brief GPIO Initialization Function
 * @param None
 * @retval None
 */
static void MX_GPIO_Init(void) {
 80017fc:	b580      	push	{r7, lr}
 80017fe:	b08a      	sub	sp, #40	; 0x28
 8001800:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = { 0 };
 8001802:	f107 0314 	add.w	r3, r7, #20
 8001806:	2200      	movs	r2, #0
 8001808:	601a      	str	r2, [r3, #0]
 800180a:	605a      	str	r2, [r3, #4]
 800180c:	609a      	str	r2, [r3, #8]
 800180e:	60da      	str	r2, [r3, #12]
 8001810:	611a      	str	r2, [r3, #16]
	/* USER CODE BEGIN MX_GPIO_Init_1 */
	/* USER CODE END MX_GPIO_Init_1 */

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOC_CLK_ENABLE();
 8001812:	2300      	movs	r3, #0
 8001814:	613b      	str	r3, [r7, #16]
 8001816:	4b38      	ldr	r3, [pc, #224]	; (80018f8 <MX_GPIO_Init+0xfc>)
 8001818:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800181a:	4a37      	ldr	r2, [pc, #220]	; (80018f8 <MX_GPIO_Init+0xfc>)
 800181c:	f043 0304 	orr.w	r3, r3, #4
 8001820:	6313      	str	r3, [r2, #48]	; 0x30
 8001822:	4b35      	ldr	r3, [pc, #212]	; (80018f8 <MX_GPIO_Init+0xfc>)
 8001824:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001826:	f003 0304 	and.w	r3, r3, #4
 800182a:	613b      	str	r3, [r7, #16]
 800182c:	693b      	ldr	r3, [r7, #16]
	__HAL_RCC_GPIOH_CLK_ENABLE();
 800182e:	2300      	movs	r3, #0
 8001830:	60fb      	str	r3, [r7, #12]
 8001832:	4b31      	ldr	r3, [pc, #196]	; (80018f8 <MX_GPIO_Init+0xfc>)
 8001834:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001836:	4a30      	ldr	r2, [pc, #192]	; (80018f8 <MX_GPIO_Init+0xfc>)
 8001838:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800183c:	6313      	str	r3, [r2, #48]	; 0x30
 800183e:	4b2e      	ldr	r3, [pc, #184]	; (80018f8 <MX_GPIO_Init+0xfc>)
 8001840:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001842:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001846:	60fb      	str	r3, [r7, #12]
 8001848:	68fb      	ldr	r3, [r7, #12]
	__HAL_RCC_GPIOA_CLK_ENABLE();
 800184a:	2300      	movs	r3, #0
 800184c:	60bb      	str	r3, [r7, #8]
 800184e:	4b2a      	ldr	r3, [pc, #168]	; (80018f8 <MX_GPIO_Init+0xfc>)
 8001850:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001852:	4a29      	ldr	r2, [pc, #164]	; (80018f8 <MX_GPIO_Init+0xfc>)
 8001854:	f043 0301 	orr.w	r3, r3, #1
 8001858:	6313      	str	r3, [r2, #48]	; 0x30
 800185a:	4b27      	ldr	r3, [pc, #156]	; (80018f8 <MX_GPIO_Init+0xfc>)
 800185c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800185e:	f003 0301 	and.w	r3, r3, #1
 8001862:	60bb      	str	r3, [r7, #8]
 8001864:	68bb      	ldr	r3, [r7, #8]
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8001866:	2300      	movs	r3, #0
 8001868:	607b      	str	r3, [r7, #4]
 800186a:	4b23      	ldr	r3, [pc, #140]	; (80018f8 <MX_GPIO_Init+0xfc>)
 800186c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800186e:	4a22      	ldr	r2, [pc, #136]	; (80018f8 <MX_GPIO_Init+0xfc>)
 8001870:	f043 0302 	orr.w	r3, r3, #2
 8001874:	6313      	str	r3, [r2, #48]	; 0x30
 8001876:	4b20      	ldr	r3, [pc, #128]	; (80018f8 <MX_GPIO_Init+0xfc>)
 8001878:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800187a:	f003 0302 	and.w	r3, r3, #2
 800187e:	607b      	str	r3, [r7, #4]
 8001880:	687b      	ldr	r3, [r7, #4]

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 8001882:	2200      	movs	r2, #0
 8001884:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001888:	481c      	ldr	r0, [pc, #112]	; (80018fc <MX_GPIO_Init+0x100>)
 800188a:	f002 fd29 	bl	80042e0 <HAL_GPIO_WritePin>

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOB, RST_Pin | DC_Pin | CS_Pin | M_IN1_Pin | M_IN2_Pin,
 800188e:	2200      	movs	r2, #0
 8001890:	212f      	movs	r1, #47	; 0x2f
 8001892:	481b      	ldr	r0, [pc, #108]	; (8001900 <MX_GPIO_Init+0x104>)
 8001894:	f002 fd24 	bl	80042e0 <HAL_GPIO_WritePin>
			GPIO_PIN_RESET);

	/*Configure GPIO pin : LED_Pin */
	GPIO_InitStruct.Pin = LED_Pin;
 8001898:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800189c:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800189e:	2301      	movs	r3, #1
 80018a0:	61bb      	str	r3, [r7, #24]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 80018a2:	2300      	movs	r3, #0
 80018a4:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80018a6:	2300      	movs	r3, #0
 80018a8:	623b      	str	r3, [r7, #32]
	HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 80018aa:	f107 0314 	add.w	r3, r7, #20
 80018ae:	4619      	mov	r1, r3
 80018b0:	4812      	ldr	r0, [pc, #72]	; (80018fc <MX_GPIO_Init+0x100>)
 80018b2:	f002 fb91 	bl	8003fd8 <HAL_GPIO_Init>

	/*Configure GPIO pins : RST_Pin DC_Pin CS_Pin */
	GPIO_InitStruct.Pin = RST_Pin | DC_Pin | CS_Pin;
 80018b6:	2307      	movs	r3, #7
 80018b8:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80018ba:	2301      	movs	r3, #1
 80018bc:	61bb      	str	r3, [r7, #24]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 80018be:	2300      	movs	r3, #0
 80018c0:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80018c2:	2302      	movs	r3, #2
 80018c4:	623b      	str	r3, [r7, #32]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80018c6:	f107 0314 	add.w	r3, r7, #20
 80018ca:	4619      	mov	r1, r3
 80018cc:	480c      	ldr	r0, [pc, #48]	; (8001900 <MX_GPIO_Init+0x104>)
 80018ce:	f002 fb83 	bl	8003fd8 <HAL_GPIO_Init>

	/*Configure GPIO pins : M_IN1_Pin M_IN2_Pin */
	GPIO_InitStruct.Pin = M_IN1_Pin | M_IN2_Pin;
 80018d2:	2328      	movs	r3, #40	; 0x28
 80018d4:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80018d6:	2301      	movs	r3, #1
 80018d8:	61bb      	str	r3, [r7, #24]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 80018da:	2300      	movs	r3, #0
 80018dc:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80018de:	2300      	movs	r3, #0
 80018e0:	623b      	str	r3, [r7, #32]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80018e2:	f107 0314 	add.w	r3, r7, #20
 80018e6:	4619      	mov	r1, r3
 80018e8:	4805      	ldr	r0, [pc, #20]	; (8001900 <MX_GPIO_Init+0x104>)
 80018ea:	f002 fb75 	bl	8003fd8 <HAL_GPIO_Init>

	/* USER CODE BEGIN MX_GPIO_Init_2 */
	/* USER CODE END MX_GPIO_Init_2 */
}
 80018ee:	bf00      	nop
 80018f0:	3728      	adds	r7, #40	; 0x28
 80018f2:	46bd      	mov	sp, r7
 80018f4:	bd80      	pop	{r7, pc}
 80018f6:	bf00      	nop
 80018f8:	40023800 	.word	0x40023800
 80018fc:	40020800 	.word	0x40020800
 8001900:	40020400 	.word	0x40020400

08001904 <HAL_TIM_PeriodElapsedCallback>:
 * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 * a global variable "uwTick" used as application time base.
 * @param  htim : TIM handle
 * @retval None
 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 8001904:	b580      	push	{r7, lr}
 8001906:	b082      	sub	sp, #8
 8001908:	af00      	add	r7, sp, #0
 800190a:	6078      	str	r0, [r7, #4]
	/* USER CODE BEGIN Callback 0 */

	/* USER CODE END Callback 0 */
	if (htim->Instance == TIM1) {
 800190c:	687b      	ldr	r3, [r7, #4]
 800190e:	681b      	ldr	r3, [r3, #0]
 8001910:	4a04      	ldr	r2, [pc, #16]	; (8001924 <HAL_TIM_PeriodElapsedCallback+0x20>)
 8001912:	4293      	cmp	r3, r2
 8001914:	d101      	bne.n	800191a <HAL_TIM_PeriodElapsedCallback+0x16>
		HAL_IncTick();
 8001916:	f001 fa89 	bl	8002e2c <HAL_IncTick>
	/* USER CODE BEGIN Callback 1 */
	if (htim->Instance == TIM2) {
//		touchgfxSignalVSync();
	}
	/* USER CODE END Callback 1 */
}
 800191a:	bf00      	nop
 800191c:	3708      	adds	r7, #8
 800191e:	46bd      	mov	sp, r7
 8001920:	bd80      	pop	{r7, pc}
 8001922:	bf00      	nop
 8001924:	40010000 	.word	0x40010000

08001928 <Error_Handler>:

/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void) {
 8001928:	b480      	push	{r7}
 800192a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800192c:	b672      	cpsid	i
}
 800192e:	bf00      	nop
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8001930:	e7fe      	b.n	8001930 <Error_Handler+0x8>
	...

08001934 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001934:	b480      	push	{r7}
 8001936:	b083      	sub	sp, #12
 8001938:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800193a:	2300      	movs	r3, #0
 800193c:	607b      	str	r3, [r7, #4]
 800193e:	4b10      	ldr	r3, [pc, #64]	; (8001980 <HAL_MspInit+0x4c>)
 8001940:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001942:	4a0f      	ldr	r2, [pc, #60]	; (8001980 <HAL_MspInit+0x4c>)
 8001944:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001948:	6453      	str	r3, [r2, #68]	; 0x44
 800194a:	4b0d      	ldr	r3, [pc, #52]	; (8001980 <HAL_MspInit+0x4c>)
 800194c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800194e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001952:	607b      	str	r3, [r7, #4]
 8001954:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001956:	2300      	movs	r3, #0
 8001958:	603b      	str	r3, [r7, #0]
 800195a:	4b09      	ldr	r3, [pc, #36]	; (8001980 <HAL_MspInit+0x4c>)
 800195c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800195e:	4a08      	ldr	r2, [pc, #32]	; (8001980 <HAL_MspInit+0x4c>)
 8001960:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001964:	6413      	str	r3, [r2, #64]	; 0x40
 8001966:	4b06      	ldr	r3, [pc, #24]	; (8001980 <HAL_MspInit+0x4c>)
 8001968:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800196a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800196e:	603b      	str	r3, [r7, #0]
 8001970:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001972:	bf00      	nop
 8001974:	370c      	adds	r7, #12
 8001976:	46bd      	mov	sp, r7
 8001978:	f85d 7b04 	ldr.w	r7, [sp], #4
 800197c:	4770      	bx	lr
 800197e:	bf00      	nop
 8001980:	40023800 	.word	0x40023800

08001984 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001984:	b580      	push	{r7, lr}
 8001986:	b08a      	sub	sp, #40	; 0x28
 8001988:	af00      	add	r7, sp, #0
 800198a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800198c:	f107 0314 	add.w	r3, r7, #20
 8001990:	2200      	movs	r2, #0
 8001992:	601a      	str	r2, [r3, #0]
 8001994:	605a      	str	r2, [r3, #4]
 8001996:	609a      	str	r2, [r3, #8]
 8001998:	60da      	str	r2, [r3, #12]
 800199a:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 800199c:	687b      	ldr	r3, [r7, #4]
 800199e:	681b      	ldr	r3, [r3, #0]
 80019a0:	4a33      	ldr	r2, [pc, #204]	; (8001a70 <HAL_ADC_MspInit+0xec>)
 80019a2:	4293      	cmp	r3, r2
 80019a4:	d15f      	bne.n	8001a66 <HAL_ADC_MspInit+0xe2>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 80019a6:	2300      	movs	r3, #0
 80019a8:	613b      	str	r3, [r7, #16]
 80019aa:	4b32      	ldr	r3, [pc, #200]	; (8001a74 <HAL_ADC_MspInit+0xf0>)
 80019ac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80019ae:	4a31      	ldr	r2, [pc, #196]	; (8001a74 <HAL_ADC_MspInit+0xf0>)
 80019b0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80019b4:	6453      	str	r3, [r2, #68]	; 0x44
 80019b6:	4b2f      	ldr	r3, [pc, #188]	; (8001a74 <HAL_ADC_MspInit+0xf0>)
 80019b8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80019ba:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80019be:	613b      	str	r3, [r7, #16]
 80019c0:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80019c2:	2300      	movs	r3, #0
 80019c4:	60fb      	str	r3, [r7, #12]
 80019c6:	4b2b      	ldr	r3, [pc, #172]	; (8001a74 <HAL_ADC_MspInit+0xf0>)
 80019c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019ca:	4a2a      	ldr	r2, [pc, #168]	; (8001a74 <HAL_ADC_MspInit+0xf0>)
 80019cc:	f043 0301 	orr.w	r3, r3, #1
 80019d0:	6313      	str	r3, [r2, #48]	; 0x30
 80019d2:	4b28      	ldr	r3, [pc, #160]	; (8001a74 <HAL_ADC_MspInit+0xf0>)
 80019d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019d6:	f003 0301 	and.w	r3, r3, #1
 80019da:	60fb      	str	r3, [r7, #12]
 80019dc:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PA1     ------> ADC1_IN1
    PA6     ------> ADC1_IN6
    */
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_6;
 80019de:	2342      	movs	r3, #66	; 0x42
 80019e0:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80019e2:	2303      	movs	r3, #3
 80019e4:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019e6:	2300      	movs	r3, #0
 80019e8:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80019ea:	f107 0314 	add.w	r3, r7, #20
 80019ee:	4619      	mov	r1, r3
 80019f0:	4821      	ldr	r0, [pc, #132]	; (8001a78 <HAL_ADC_MspInit+0xf4>)
 80019f2:	f002 faf1 	bl	8003fd8 <HAL_GPIO_Init>

    /* ADC1 DMA Init */
    /* ADC1 Init */
    hdma_adc1.Instance = DMA2_Stream0;
 80019f6:	4b21      	ldr	r3, [pc, #132]	; (8001a7c <HAL_ADC_MspInit+0xf8>)
 80019f8:	4a21      	ldr	r2, [pc, #132]	; (8001a80 <HAL_ADC_MspInit+0xfc>)
 80019fa:	601a      	str	r2, [r3, #0]
    hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 80019fc:	4b1f      	ldr	r3, [pc, #124]	; (8001a7c <HAL_ADC_MspInit+0xf8>)
 80019fe:	2200      	movs	r2, #0
 8001a00:	605a      	str	r2, [r3, #4]
    hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8001a02:	4b1e      	ldr	r3, [pc, #120]	; (8001a7c <HAL_ADC_MspInit+0xf8>)
 8001a04:	2200      	movs	r2, #0
 8001a06:	609a      	str	r2, [r3, #8]
    hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 8001a08:	4b1c      	ldr	r3, [pc, #112]	; (8001a7c <HAL_ADC_MspInit+0xf8>)
 8001a0a:	2200      	movs	r2, #0
 8001a0c:	60da      	str	r2, [r3, #12]
    hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 8001a0e:	4b1b      	ldr	r3, [pc, #108]	; (8001a7c <HAL_ADC_MspInit+0xf8>)
 8001a10:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001a14:	611a      	str	r2, [r3, #16]
    hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8001a16:	4b19      	ldr	r3, [pc, #100]	; (8001a7c <HAL_ADC_MspInit+0xf8>)
 8001a18:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8001a1c:	615a      	str	r2, [r3, #20]
    hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 8001a1e:	4b17      	ldr	r3, [pc, #92]	; (8001a7c <HAL_ADC_MspInit+0xf8>)
 8001a20:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8001a24:	619a      	str	r2, [r3, #24]
    hdma_adc1.Init.Mode = DMA_NORMAL;
 8001a26:	4b15      	ldr	r3, [pc, #84]	; (8001a7c <HAL_ADC_MspInit+0xf8>)
 8001a28:	2200      	movs	r2, #0
 8001a2a:	61da      	str	r2, [r3, #28]
    hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 8001a2c:	4b13      	ldr	r3, [pc, #76]	; (8001a7c <HAL_ADC_MspInit+0xf8>)
 8001a2e:	2200      	movs	r2, #0
 8001a30:	621a      	str	r2, [r3, #32]
    hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
 8001a32:	4b12      	ldr	r3, [pc, #72]	; (8001a7c <HAL_ADC_MspInit+0xf8>)
 8001a34:	2204      	movs	r2, #4
 8001a36:	625a      	str	r2, [r3, #36]	; 0x24
    hdma_adc1.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
 8001a38:	4b10      	ldr	r3, [pc, #64]	; (8001a7c <HAL_ADC_MspInit+0xf8>)
 8001a3a:	2203      	movs	r2, #3
 8001a3c:	629a      	str	r2, [r3, #40]	; 0x28
    hdma_adc1.Init.MemBurst = DMA_MBURST_SINGLE;
 8001a3e:	4b0f      	ldr	r3, [pc, #60]	; (8001a7c <HAL_ADC_MspInit+0xf8>)
 8001a40:	2200      	movs	r2, #0
 8001a42:	62da      	str	r2, [r3, #44]	; 0x2c
    hdma_adc1.Init.PeriphBurst = DMA_PBURST_SINGLE;
 8001a44:	4b0d      	ldr	r3, [pc, #52]	; (8001a7c <HAL_ADC_MspInit+0xf8>)
 8001a46:	2200      	movs	r2, #0
 8001a48:	631a      	str	r2, [r3, #48]	; 0x30
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 8001a4a:	480c      	ldr	r0, [pc, #48]	; (8001a7c <HAL_ADC_MspInit+0xf8>)
 8001a4c:	f001 ff32 	bl	80038b4 <HAL_DMA_Init>
 8001a50:	4603      	mov	r3, r0
 8001a52:	2b00      	cmp	r3, #0
 8001a54:	d001      	beq.n	8001a5a <HAL_ADC_MspInit+0xd6>
    {
      Error_Handler();
 8001a56:	f7ff ff67 	bl	8001928 <Error_Handler>
    }

    __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc1);
 8001a5a:	687b      	ldr	r3, [r7, #4]
 8001a5c:	4a07      	ldr	r2, [pc, #28]	; (8001a7c <HAL_ADC_MspInit+0xf8>)
 8001a5e:	639a      	str	r2, [r3, #56]	; 0x38
 8001a60:	4a06      	ldr	r2, [pc, #24]	; (8001a7c <HAL_ADC_MspInit+0xf8>)
 8001a62:	687b      	ldr	r3, [r7, #4]
 8001a64:	6393      	str	r3, [r2, #56]	; 0x38
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8001a66:	bf00      	nop
 8001a68:	3728      	adds	r7, #40	; 0x28
 8001a6a:	46bd      	mov	sp, r7
 8001a6c:	bd80      	pop	{r7, pc}
 8001a6e:	bf00      	nop
 8001a70:	40012000 	.word	0x40012000
 8001a74:	40023800 	.word	0x40023800
 8001a78:	40020000 	.word	0x40020000
 8001a7c:	20000344 	.word	0x20000344
 8001a80:	40026410 	.word	0x40026410

08001a84 <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8001a84:	b480      	push	{r7}
 8001a86:	b085      	sub	sp, #20
 8001a88:	af00      	add	r7, sp, #0
 8001a8a:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8001a8c:	687b      	ldr	r3, [r7, #4]
 8001a8e:	681b      	ldr	r3, [r3, #0]
 8001a90:	4a0b      	ldr	r2, [pc, #44]	; (8001ac0 <HAL_CRC_MspInit+0x3c>)
 8001a92:	4293      	cmp	r3, r2
 8001a94:	d10d      	bne.n	8001ab2 <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001a96:	2300      	movs	r3, #0
 8001a98:	60fb      	str	r3, [r7, #12]
 8001a9a:	4b0a      	ldr	r3, [pc, #40]	; (8001ac4 <HAL_CRC_MspInit+0x40>)
 8001a9c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a9e:	4a09      	ldr	r2, [pc, #36]	; (8001ac4 <HAL_CRC_MspInit+0x40>)
 8001aa0:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001aa4:	6313      	str	r3, [r2, #48]	; 0x30
 8001aa6:	4b07      	ldr	r3, [pc, #28]	; (8001ac4 <HAL_CRC_MspInit+0x40>)
 8001aa8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001aaa:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001aae:	60fb      	str	r3, [r7, #12]
 8001ab0:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001ab2:	bf00      	nop
 8001ab4:	3714      	adds	r7, #20
 8001ab6:	46bd      	mov	sp, r7
 8001ab8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001abc:	4770      	bx	lr
 8001abe:	bf00      	nop
 8001ac0:	40023000 	.word	0x40023000
 8001ac4:	40023800 	.word	0x40023800

08001ac8 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001ac8:	b580      	push	{r7, lr}
 8001aca:	b08a      	sub	sp, #40	; 0x28
 8001acc:	af00      	add	r7, sp, #0
 8001ace:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ad0:	f107 0314 	add.w	r3, r7, #20
 8001ad4:	2200      	movs	r2, #0
 8001ad6:	601a      	str	r2, [r3, #0]
 8001ad8:	605a      	str	r2, [r3, #4]
 8001ada:	609a      	str	r2, [r3, #8]
 8001adc:	60da      	str	r2, [r3, #12]
 8001ade:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI1)
 8001ae0:	687b      	ldr	r3, [r7, #4]
 8001ae2:	681b      	ldr	r3, [r3, #0]
 8001ae4:	4a38      	ldr	r2, [pc, #224]	; (8001bc8 <HAL_SPI_MspInit+0x100>)
 8001ae6:	4293      	cmp	r3, r2
 8001ae8:	d16a      	bne.n	8001bc0 <HAL_SPI_MspInit+0xf8>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8001aea:	2300      	movs	r3, #0
 8001aec:	613b      	str	r3, [r7, #16]
 8001aee:	4b37      	ldr	r3, [pc, #220]	; (8001bcc <HAL_SPI_MspInit+0x104>)
 8001af0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001af2:	4a36      	ldr	r2, [pc, #216]	; (8001bcc <HAL_SPI_MspInit+0x104>)
 8001af4:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001af8:	6453      	str	r3, [r2, #68]	; 0x44
 8001afa:	4b34      	ldr	r3, [pc, #208]	; (8001bcc <HAL_SPI_MspInit+0x104>)
 8001afc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001afe:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001b02:	613b      	str	r3, [r7, #16]
 8001b04:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b06:	2300      	movs	r3, #0
 8001b08:	60fb      	str	r3, [r7, #12]
 8001b0a:	4b30      	ldr	r3, [pc, #192]	; (8001bcc <HAL_SPI_MspInit+0x104>)
 8001b0c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b0e:	4a2f      	ldr	r2, [pc, #188]	; (8001bcc <HAL_SPI_MspInit+0x104>)
 8001b10:	f043 0301 	orr.w	r3, r3, #1
 8001b14:	6313      	str	r3, [r2, #48]	; 0x30
 8001b16:	4b2d      	ldr	r3, [pc, #180]	; (8001bcc <HAL_SPI_MspInit+0x104>)
 8001b18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b1a:	f003 0301 	and.w	r3, r3, #1
 8001b1e:	60fb      	str	r3, [r7, #12]
 8001b20:	68fb      	ldr	r3, [r7, #12]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_7;
 8001b22:	23a0      	movs	r3, #160	; 0xa0
 8001b24:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b26:	2302      	movs	r3, #2
 8001b28:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b2a:	2300      	movs	r3, #0
 8001b2c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b2e:	2303      	movs	r3, #3
 8001b30:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8001b32:	2305      	movs	r3, #5
 8001b34:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b36:	f107 0314 	add.w	r3, r7, #20
 8001b3a:	4619      	mov	r1, r3
 8001b3c:	4824      	ldr	r0, [pc, #144]	; (8001bd0 <HAL_SPI_MspInit+0x108>)
 8001b3e:	f002 fa4b 	bl	8003fd8 <HAL_GPIO_Init>

    /* SPI1 DMA Init */
    /* SPI1_TX Init */
    hdma_spi1_tx.Instance = DMA2_Stream2;
 8001b42:	4b24      	ldr	r3, [pc, #144]	; (8001bd4 <HAL_SPI_MspInit+0x10c>)
 8001b44:	4a24      	ldr	r2, [pc, #144]	; (8001bd8 <HAL_SPI_MspInit+0x110>)
 8001b46:	601a      	str	r2, [r3, #0]
    hdma_spi1_tx.Init.Channel = DMA_CHANNEL_2;
 8001b48:	4b22      	ldr	r3, [pc, #136]	; (8001bd4 <HAL_SPI_MspInit+0x10c>)
 8001b4a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001b4e:	605a      	str	r2, [r3, #4]
    hdma_spi1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8001b50:	4b20      	ldr	r3, [pc, #128]	; (8001bd4 <HAL_SPI_MspInit+0x10c>)
 8001b52:	2240      	movs	r2, #64	; 0x40
 8001b54:	609a      	str	r2, [r3, #8]
    hdma_spi1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8001b56:	4b1f      	ldr	r3, [pc, #124]	; (8001bd4 <HAL_SPI_MspInit+0x10c>)
 8001b58:	2200      	movs	r2, #0
 8001b5a:	60da      	str	r2, [r3, #12]
    hdma_spi1_tx.Init.MemInc = DMA_MINC_ENABLE;
 8001b5c:	4b1d      	ldr	r3, [pc, #116]	; (8001bd4 <HAL_SPI_MspInit+0x10c>)
 8001b5e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001b62:	611a      	str	r2, [r3, #16]
    hdma_spi1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8001b64:	4b1b      	ldr	r3, [pc, #108]	; (8001bd4 <HAL_SPI_MspInit+0x10c>)
 8001b66:	2200      	movs	r2, #0
 8001b68:	615a      	str	r2, [r3, #20]
    hdma_spi1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8001b6a:	4b1a      	ldr	r3, [pc, #104]	; (8001bd4 <HAL_SPI_MspInit+0x10c>)
 8001b6c:	2200      	movs	r2, #0
 8001b6e:	619a      	str	r2, [r3, #24]
    hdma_spi1_tx.Init.Mode = DMA_NORMAL;
 8001b70:	4b18      	ldr	r3, [pc, #96]	; (8001bd4 <HAL_SPI_MspInit+0x10c>)
 8001b72:	2200      	movs	r2, #0
 8001b74:	61da      	str	r2, [r3, #28]
    hdma_spi1_tx.Init.Priority = DMA_PRIORITY_LOW;
 8001b76:	4b17      	ldr	r3, [pc, #92]	; (8001bd4 <HAL_SPI_MspInit+0x10c>)
 8001b78:	2200      	movs	r2, #0
 8001b7a:	621a      	str	r2, [r3, #32]
    hdma_spi1_tx.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
 8001b7c:	4b15      	ldr	r3, [pc, #84]	; (8001bd4 <HAL_SPI_MspInit+0x10c>)
 8001b7e:	2204      	movs	r2, #4
 8001b80:	625a      	str	r2, [r3, #36]	; 0x24
    hdma_spi1_tx.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
 8001b82:	4b14      	ldr	r3, [pc, #80]	; (8001bd4 <HAL_SPI_MspInit+0x10c>)
 8001b84:	2203      	movs	r2, #3
 8001b86:	629a      	str	r2, [r3, #40]	; 0x28
    hdma_spi1_tx.Init.MemBurst = DMA_MBURST_SINGLE;
 8001b88:	4b12      	ldr	r3, [pc, #72]	; (8001bd4 <HAL_SPI_MspInit+0x10c>)
 8001b8a:	2200      	movs	r2, #0
 8001b8c:	62da      	str	r2, [r3, #44]	; 0x2c
    hdma_spi1_tx.Init.PeriphBurst = DMA_PBURST_SINGLE;
 8001b8e:	4b11      	ldr	r3, [pc, #68]	; (8001bd4 <HAL_SPI_MspInit+0x10c>)
 8001b90:	2200      	movs	r2, #0
 8001b92:	631a      	str	r2, [r3, #48]	; 0x30
    if (HAL_DMA_Init(&hdma_spi1_tx) != HAL_OK)
 8001b94:	480f      	ldr	r0, [pc, #60]	; (8001bd4 <HAL_SPI_MspInit+0x10c>)
 8001b96:	f001 fe8d 	bl	80038b4 <HAL_DMA_Init>
 8001b9a:	4603      	mov	r3, r0
 8001b9c:	2b00      	cmp	r3, #0
 8001b9e:	d001      	beq.n	8001ba4 <HAL_SPI_MspInit+0xdc>
    {
      Error_Handler();
 8001ba0:	f7ff fec2 	bl	8001928 <Error_Handler>
    }

    __HAL_LINKDMA(hspi,hdmatx,hdma_spi1_tx);
 8001ba4:	687b      	ldr	r3, [r7, #4]
 8001ba6:	4a0b      	ldr	r2, [pc, #44]	; (8001bd4 <HAL_SPI_MspInit+0x10c>)
 8001ba8:	649a      	str	r2, [r3, #72]	; 0x48
 8001baa:	4a0a      	ldr	r2, [pc, #40]	; (8001bd4 <HAL_SPI_MspInit+0x10c>)
 8001bac:	687b      	ldr	r3, [r7, #4]
 8001bae:	6393      	str	r3, [r2, #56]	; 0x38

    /* SPI1 interrupt Init */
    HAL_NVIC_SetPriority(SPI1_IRQn, 0, 0);
 8001bb0:	2200      	movs	r2, #0
 8001bb2:	2100      	movs	r1, #0
 8001bb4:	2023      	movs	r0, #35	; 0x23
 8001bb6:	f001 fe37 	bl	8003828 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
 8001bba:	2023      	movs	r0, #35	; 0x23
 8001bbc:	f001 fe50 	bl	8003860 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }

}
 8001bc0:	bf00      	nop
 8001bc2:	3728      	adds	r7, #40	; 0x28
 8001bc4:	46bd      	mov	sp, r7
 8001bc6:	bd80      	pop	{r7, pc}
 8001bc8:	40013000 	.word	0x40013000
 8001bcc:	40023800 	.word	0x40023800
 8001bd0:	40020000 	.word	0x40020000
 8001bd4:	20000404 	.word	0x20000404
 8001bd8:	40026440 	.word	0x40026440

08001bdc <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001bdc:	b580      	push	{r7, lr}
 8001bde:	b084      	sub	sp, #16
 8001be0:	af00      	add	r7, sp, #0
 8001be2:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8001be4:	687b      	ldr	r3, [r7, #4]
 8001be6:	681b      	ldr	r3, [r3, #0]
 8001be8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001bec:	d116      	bne.n	8001c1c <HAL_TIM_Base_MspInit+0x40>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001bee:	2300      	movs	r3, #0
 8001bf0:	60fb      	str	r3, [r7, #12]
 8001bf2:	4b16      	ldr	r3, [pc, #88]	; (8001c4c <HAL_TIM_Base_MspInit+0x70>)
 8001bf4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001bf6:	4a15      	ldr	r2, [pc, #84]	; (8001c4c <HAL_TIM_Base_MspInit+0x70>)
 8001bf8:	f043 0301 	orr.w	r3, r3, #1
 8001bfc:	6413      	str	r3, [r2, #64]	; 0x40
 8001bfe:	4b13      	ldr	r3, [pc, #76]	; (8001c4c <HAL_TIM_Base_MspInit+0x70>)
 8001c00:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c02:	f003 0301 	and.w	r3, r3, #1
 8001c06:	60fb      	str	r3, [r7, #12]
 8001c08:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8001c0a:	2200      	movs	r2, #0
 8001c0c:	2100      	movs	r1, #0
 8001c0e:	201c      	movs	r0, #28
 8001c10:	f001 fe0a 	bl	8003828 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001c14:	201c      	movs	r0, #28
 8001c16:	f001 fe23 	bl	8003860 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8001c1a:	e012      	b.n	8001c42 <HAL_TIM_Base_MspInit+0x66>
  else if(htim_base->Instance==TIM3)
 8001c1c:	687b      	ldr	r3, [r7, #4]
 8001c1e:	681b      	ldr	r3, [r3, #0]
 8001c20:	4a0b      	ldr	r2, [pc, #44]	; (8001c50 <HAL_TIM_Base_MspInit+0x74>)
 8001c22:	4293      	cmp	r3, r2
 8001c24:	d10d      	bne.n	8001c42 <HAL_TIM_Base_MspInit+0x66>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001c26:	2300      	movs	r3, #0
 8001c28:	60bb      	str	r3, [r7, #8]
 8001c2a:	4b08      	ldr	r3, [pc, #32]	; (8001c4c <HAL_TIM_Base_MspInit+0x70>)
 8001c2c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c2e:	4a07      	ldr	r2, [pc, #28]	; (8001c4c <HAL_TIM_Base_MspInit+0x70>)
 8001c30:	f043 0302 	orr.w	r3, r3, #2
 8001c34:	6413      	str	r3, [r2, #64]	; 0x40
 8001c36:	4b05      	ldr	r3, [pc, #20]	; (8001c4c <HAL_TIM_Base_MspInit+0x70>)
 8001c38:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c3a:	f003 0302 	and.w	r3, r3, #2
 8001c3e:	60bb      	str	r3, [r7, #8]
 8001c40:	68bb      	ldr	r3, [r7, #8]
}
 8001c42:	bf00      	nop
 8001c44:	3710      	adds	r7, #16
 8001c46:	46bd      	mov	sp, r7
 8001c48:	bd80      	pop	{r7, pc}
 8001c4a:	bf00      	nop
 8001c4c:	40023800 	.word	0x40023800
 8001c50:	40000400 	.word	0x40000400

08001c54 <HAL_TIM_IC_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_ic: TIM_IC handle pointer
* @retval None
*/
void HAL_TIM_IC_MspInit(TIM_HandleTypeDef* htim_ic)
{
 8001c54:	b580      	push	{r7, lr}
 8001c56:	b08a      	sub	sp, #40	; 0x28
 8001c58:	af00      	add	r7, sp, #0
 8001c5a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c5c:	f107 0314 	add.w	r3, r7, #20
 8001c60:	2200      	movs	r2, #0
 8001c62:	601a      	str	r2, [r3, #0]
 8001c64:	605a      	str	r2, [r3, #4]
 8001c66:	609a      	str	r2, [r3, #8]
 8001c68:	60da      	str	r2, [r3, #12]
 8001c6a:	611a      	str	r2, [r3, #16]
  if(htim_ic->Instance==TIM4)
 8001c6c:	687b      	ldr	r3, [r7, #4]
 8001c6e:	681b      	ldr	r3, [r3, #0]
 8001c70:	4a1d      	ldr	r2, [pc, #116]	; (8001ce8 <HAL_TIM_IC_MspInit+0x94>)
 8001c72:	4293      	cmp	r3, r2
 8001c74:	d133      	bne.n	8001cde <HAL_TIM_IC_MspInit+0x8a>
  {
  /* USER CODE BEGIN TIM4_MspInit 0 */

  /* USER CODE END TIM4_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM4_CLK_ENABLE();
 8001c76:	2300      	movs	r3, #0
 8001c78:	613b      	str	r3, [r7, #16]
 8001c7a:	4b1c      	ldr	r3, [pc, #112]	; (8001cec <HAL_TIM_IC_MspInit+0x98>)
 8001c7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c7e:	4a1b      	ldr	r2, [pc, #108]	; (8001cec <HAL_TIM_IC_MspInit+0x98>)
 8001c80:	f043 0304 	orr.w	r3, r3, #4
 8001c84:	6413      	str	r3, [r2, #64]	; 0x40
 8001c86:	4b19      	ldr	r3, [pc, #100]	; (8001cec <HAL_TIM_IC_MspInit+0x98>)
 8001c88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c8a:	f003 0304 	and.w	r3, r3, #4
 8001c8e:	613b      	str	r3, [r7, #16]
 8001c90:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c92:	2300      	movs	r3, #0
 8001c94:	60fb      	str	r3, [r7, #12]
 8001c96:	4b15      	ldr	r3, [pc, #84]	; (8001cec <HAL_TIM_IC_MspInit+0x98>)
 8001c98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c9a:	4a14      	ldr	r2, [pc, #80]	; (8001cec <HAL_TIM_IC_MspInit+0x98>)
 8001c9c:	f043 0302 	orr.w	r3, r3, #2
 8001ca0:	6313      	str	r3, [r2, #48]	; 0x30
 8001ca2:	4b12      	ldr	r3, [pc, #72]	; (8001cec <HAL_TIM_IC_MspInit+0x98>)
 8001ca4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ca6:	f003 0302 	and.w	r3, r3, #2
 8001caa:	60fb      	str	r3, [r7, #12]
 8001cac:	68fb      	ldr	r3, [r7, #12]
    /**TIM4 GPIO Configuration
    PB6     ------> TIM4_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8001cae:	2340      	movs	r3, #64	; 0x40
 8001cb0:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cb2:	2302      	movs	r3, #2
 8001cb4:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001cb6:	2300      	movs	r3, #0
 8001cb8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001cba:	2300      	movs	r3, #0
 8001cbc:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8001cbe:	2302      	movs	r3, #2
 8001cc0:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cc2:	f107 0314 	add.w	r3, r7, #20
 8001cc6:	4619      	mov	r1, r3
 8001cc8:	4809      	ldr	r0, [pc, #36]	; (8001cf0 <HAL_TIM_IC_MspInit+0x9c>)
 8001cca:	f002 f985 	bl	8003fd8 <HAL_GPIO_Init>

    /* TIM4 interrupt Init */
    HAL_NVIC_SetPriority(TIM4_IRQn, 0, 0);
 8001cce:	2200      	movs	r2, #0
 8001cd0:	2100      	movs	r1, #0
 8001cd2:	201e      	movs	r0, #30
 8001cd4:	f001 fda8 	bl	8003828 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM4_IRQn);
 8001cd8:	201e      	movs	r0, #30
 8001cda:	f001 fdc1 	bl	8003860 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }

}
 8001cde:	bf00      	nop
 8001ce0:	3728      	adds	r7, #40	; 0x28
 8001ce2:	46bd      	mov	sp, r7
 8001ce4:	bd80      	pop	{r7, pc}
 8001ce6:	bf00      	nop
 8001ce8:	40000800 	.word	0x40000800
 8001cec:	40023800 	.word	0x40023800
 8001cf0:	40020400 	.word	0x40020400

08001cf4 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001cf4:	b580      	push	{r7, lr}
 8001cf6:	b088      	sub	sp, #32
 8001cf8:	af00      	add	r7, sp, #0
 8001cfa:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cfc:	f107 030c 	add.w	r3, r7, #12
 8001d00:	2200      	movs	r2, #0
 8001d02:	601a      	str	r2, [r3, #0]
 8001d04:	605a      	str	r2, [r3, #4]
 8001d06:	609a      	str	r2, [r3, #8]
 8001d08:	60da      	str	r2, [r3, #12]
 8001d0a:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM3)
 8001d0c:	687b      	ldr	r3, [r7, #4]
 8001d0e:	681b      	ldr	r3, [r3, #0]
 8001d10:	4a12      	ldr	r2, [pc, #72]	; (8001d5c <HAL_TIM_MspPostInit+0x68>)
 8001d12:	4293      	cmp	r3, r2
 8001d14:	d11d      	bne.n	8001d52 <HAL_TIM_MspPostInit+0x5e>
  {
  /* USER CODE BEGIN TIM3_MspPostInit 0 */

  /* USER CODE END TIM3_MspPostInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d16:	2300      	movs	r3, #0
 8001d18:	60bb      	str	r3, [r7, #8]
 8001d1a:	4b11      	ldr	r3, [pc, #68]	; (8001d60 <HAL_TIM_MspPostInit+0x6c>)
 8001d1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d1e:	4a10      	ldr	r2, [pc, #64]	; (8001d60 <HAL_TIM_MspPostInit+0x6c>)
 8001d20:	f043 0302 	orr.w	r3, r3, #2
 8001d24:	6313      	str	r3, [r2, #48]	; 0x30
 8001d26:	4b0e      	ldr	r3, [pc, #56]	; (8001d60 <HAL_TIM_MspPostInit+0x6c>)
 8001d28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d2a:	f003 0302 	and.w	r3, r3, #2
 8001d2e:	60bb      	str	r3, [r7, #8]
 8001d30:	68bb      	ldr	r3, [r7, #8]
    /**TIM3 GPIO Configuration
    PB4     ------> TIM3_CH1
    */
    GPIO_InitStruct.Pin = M_EN_Pin;
 8001d32:	2310      	movs	r3, #16
 8001d34:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d36:	2302      	movs	r3, #2
 8001d38:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d3a:	2300      	movs	r3, #0
 8001d3c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d3e:	2300      	movs	r3, #0
 8001d40:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8001d42:	2302      	movs	r3, #2
 8001d44:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(M_EN_GPIO_Port, &GPIO_InitStruct);
 8001d46:	f107 030c 	add.w	r3, r7, #12
 8001d4a:	4619      	mov	r1, r3
 8001d4c:	4805      	ldr	r0, [pc, #20]	; (8001d64 <HAL_TIM_MspPostInit+0x70>)
 8001d4e:	f002 f943 	bl	8003fd8 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM3_MspPostInit 1 */

  /* USER CODE END TIM3_MspPostInit 1 */
  }

}
 8001d52:	bf00      	nop
 8001d54:	3720      	adds	r7, #32
 8001d56:	46bd      	mov	sp, r7
 8001d58:	bd80      	pop	{r7, pc}
 8001d5a:	bf00      	nop
 8001d5c:	40000400 	.word	0x40000400
 8001d60:	40023800 	.word	0x40023800
 8001d64:	40020400 	.word	0x40020400

08001d68 <HAL_InitTick>:
 8001d68:	b580      	push	{r7, lr}
 8001d6a:	b08c      	sub	sp, #48	; 0x30
 8001d6c:	af00      	add	r7, sp, #0
 8001d6e:	6078      	str	r0, [r7, #4]
 8001d70:	2300      	movs	r3, #0
 8001d72:	62bb      	str	r3, [r7, #40]	; 0x28
 8001d74:	2300      	movs	r3, #0
 8001d76:	627b      	str	r3, [r7, #36]	; 0x24
 8001d78:	2300      	movs	r3, #0
 8001d7a:	60bb      	str	r3, [r7, #8]
 8001d7c:	4b2e      	ldr	r3, [pc, #184]	; (8001e38 <HAL_InitTick+0xd0>)
 8001d7e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001d80:	4a2d      	ldr	r2, [pc, #180]	; (8001e38 <HAL_InitTick+0xd0>)
 8001d82:	f043 0301 	orr.w	r3, r3, #1
 8001d86:	6453      	str	r3, [r2, #68]	; 0x44
 8001d88:	4b2b      	ldr	r3, [pc, #172]	; (8001e38 <HAL_InitTick+0xd0>)
 8001d8a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001d8c:	f003 0301 	and.w	r3, r3, #1
 8001d90:	60bb      	str	r3, [r7, #8]
 8001d92:	68bb      	ldr	r3, [r7, #8]
 8001d94:	f107 020c 	add.w	r2, r7, #12
 8001d98:	f107 0310 	add.w	r3, r7, #16
 8001d9c:	4611      	mov	r1, r2
 8001d9e:	4618      	mov	r0, r3
 8001da0:	f004 f978 	bl	8006094 <HAL_RCC_GetClockConfig>
 8001da4:	f004 f962 	bl	800606c <HAL_RCC_GetPCLK2Freq>
 8001da8:	62b8      	str	r0, [r7, #40]	; 0x28
 8001daa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001dac:	4a23      	ldr	r2, [pc, #140]	; (8001e3c <HAL_InitTick+0xd4>)
 8001dae:	fba2 2303 	umull	r2, r3, r2, r3
 8001db2:	0c9b      	lsrs	r3, r3, #18
 8001db4:	3b01      	subs	r3, #1
 8001db6:	627b      	str	r3, [r7, #36]	; 0x24
 8001db8:	4b21      	ldr	r3, [pc, #132]	; (8001e40 <HAL_InitTick+0xd8>)
 8001dba:	4a22      	ldr	r2, [pc, #136]	; (8001e44 <HAL_InitTick+0xdc>)
 8001dbc:	601a      	str	r2, [r3, #0]
 8001dbe:	4b20      	ldr	r3, [pc, #128]	; (8001e40 <HAL_InitTick+0xd8>)
 8001dc0:	f240 32e7 	movw	r2, #999	; 0x3e7
 8001dc4:	60da      	str	r2, [r3, #12]
 8001dc6:	4a1e      	ldr	r2, [pc, #120]	; (8001e40 <HAL_InitTick+0xd8>)
 8001dc8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001dca:	6053      	str	r3, [r2, #4]
 8001dcc:	4b1c      	ldr	r3, [pc, #112]	; (8001e40 <HAL_InitTick+0xd8>)
 8001dce:	2200      	movs	r2, #0
 8001dd0:	611a      	str	r2, [r3, #16]
 8001dd2:	4b1b      	ldr	r3, [pc, #108]	; (8001e40 <HAL_InitTick+0xd8>)
 8001dd4:	2200      	movs	r2, #0
 8001dd6:	609a      	str	r2, [r3, #8]
 8001dd8:	4b19      	ldr	r3, [pc, #100]	; (8001e40 <HAL_InitTick+0xd8>)
 8001dda:	2200      	movs	r2, #0
 8001ddc:	619a      	str	r2, [r3, #24]
 8001dde:	4818      	ldr	r0, [pc, #96]	; (8001e40 <HAL_InitTick+0xd8>)
 8001de0:	f004 fd46 	bl	8006870 <HAL_TIM_Base_Init>
 8001de4:	4603      	mov	r3, r0
 8001de6:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8001dea:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8001dee:	2b00      	cmp	r3, #0
 8001df0:	d11b      	bne.n	8001e2a <HAL_InitTick+0xc2>
 8001df2:	4813      	ldr	r0, [pc, #76]	; (8001e40 <HAL_InitTick+0xd8>)
 8001df4:	f004 fd8c 	bl	8006910 <HAL_TIM_Base_Start_IT>
 8001df8:	4603      	mov	r3, r0
 8001dfa:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8001dfe:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8001e02:	2b00      	cmp	r3, #0
 8001e04:	d111      	bne.n	8001e2a <HAL_InitTick+0xc2>
 8001e06:	2019      	movs	r0, #25
 8001e08:	f001 fd2a 	bl	8003860 <HAL_NVIC_EnableIRQ>
 8001e0c:	687b      	ldr	r3, [r7, #4]
 8001e0e:	2b0f      	cmp	r3, #15
 8001e10:	d808      	bhi.n	8001e24 <HAL_InitTick+0xbc>
 8001e12:	2200      	movs	r2, #0
 8001e14:	6879      	ldr	r1, [r7, #4]
 8001e16:	2019      	movs	r0, #25
 8001e18:	f001 fd06 	bl	8003828 <HAL_NVIC_SetPriority>
 8001e1c:	4a0a      	ldr	r2, [pc, #40]	; (8001e48 <HAL_InitTick+0xe0>)
 8001e1e:	687b      	ldr	r3, [r7, #4]
 8001e20:	6013      	str	r3, [r2, #0]
 8001e22:	e002      	b.n	8001e2a <HAL_InitTick+0xc2>
 8001e24:	2301      	movs	r3, #1
 8001e26:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8001e2a:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8001e2e:	4618      	mov	r0, r3
 8001e30:	3730      	adds	r7, #48	; 0x30
 8001e32:	46bd      	mov	sp, r7
 8001e34:	bd80      	pop	{r7, pc}
 8001e36:	bf00      	nop
 8001e38:	40023800 	.word	0x40023800
 8001e3c:	431bde83 	.word	0x431bde83
 8001e40:	20000550 	.word	0x20000550
 8001e44:	40010000 	.word	0x40010000
 8001e48:	2000000c 	.word	0x2000000c

08001e4c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001e4c:	b480      	push	{r7}
 8001e4e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001e50:	e7fe      	b.n	8001e50 <NMI_Handler+0x4>

08001e52 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001e52:	b480      	push	{r7}
 8001e54:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001e56:	e7fe      	b.n	8001e56 <HardFault_Handler+0x4>

08001e58 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001e58:	b480      	push	{r7}
 8001e5a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001e5c:	e7fe      	b.n	8001e5c <MemManage_Handler+0x4>

08001e5e <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001e5e:	b480      	push	{r7}
 8001e60:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001e62:	e7fe      	b.n	8001e62 <BusFault_Handler+0x4>

08001e64 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001e64:	b480      	push	{r7}
 8001e66:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001e68:	e7fe      	b.n	8001e68 <UsageFault_Handler+0x4>

08001e6a <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001e6a:	b480      	push	{r7}
 8001e6c:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001e6e:	bf00      	nop
 8001e70:	46bd      	mov	sp, r7
 8001e72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e76:	4770      	bx	lr

08001e78 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001e78:	b480      	push	{r7}
 8001e7a:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001e7c:	bf00      	nop
 8001e7e:	46bd      	mov	sp, r7
 8001e80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e84:	4770      	bx	lr

08001e86 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001e86:	b480      	push	{r7}
 8001e88:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001e8a:	bf00      	nop
 8001e8c:	46bd      	mov	sp, r7
 8001e8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e92:	4770      	bx	lr

08001e94 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001e94:	b480      	push	{r7}
 8001e96:	af00      	add	r7, sp, #0
  /* USER CODE END SysTick_IRQn 0 */

  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001e98:	bf00      	nop
 8001e9a:	46bd      	mov	sp, r7
 8001e9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ea0:	4770      	bx	lr
	...

08001ea4 <TIM1_UP_TIM10_IRQHandler>:

/**
  * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
  */
void TIM1_UP_TIM10_IRQHandler(void)
{
 8001ea4:	b580      	push	{r7, lr}
 8001ea6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 8001ea8:	4802      	ldr	r0, [pc, #8]	; (8001eb4 <TIM1_UP_TIM10_IRQHandler+0x10>)
 8001eaa:	f004 feec 	bl	8006c86 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
}
 8001eae:	bf00      	nop
 8001eb0:	bd80      	pop	{r7, pc}
 8001eb2:	bf00      	nop
 8001eb4:	20000550 	.word	0x20000550

08001eb8 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8001eb8:	b580      	push	{r7, lr}
 8001eba:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8001ebc:	4802      	ldr	r0, [pc, #8]	; (8001ec8 <TIM2_IRQHandler+0x10>)
 8001ebe:	f004 fee2 	bl	8006c86 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8001ec2:	bf00      	nop
 8001ec4:	bd80      	pop	{r7, pc}
 8001ec6:	bf00      	nop
 8001ec8:	20000464 	.word	0x20000464

08001ecc <TIM4_IRQHandler>:

/**
  * @brief This function handles TIM4 global interrupt.
  */
void TIM4_IRQHandler(void)
{
 8001ecc:	b580      	push	{r7, lr}
 8001ece:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM4_IRQn 0 */

  /* USER CODE END TIM4_IRQn 0 */
  HAL_TIM_IRQHandler(&htim4);
 8001ed0:	4802      	ldr	r0, [pc, #8]	; (8001edc <TIM4_IRQHandler+0x10>)
 8001ed2:	f004 fed8 	bl	8006c86 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM4_IRQn 1 */

  /* USER CODE END TIM4_IRQn 1 */
}
 8001ed6:	bf00      	nop
 8001ed8:	bd80      	pop	{r7, pc}
 8001eda:	bf00      	nop
 8001edc:	200004f4 	.word	0x200004f4

08001ee0 <SPI1_IRQHandler>:

/**
  * @brief This function handles SPI1 global interrupt.
  */
void SPI1_IRQHandler(void)
{
 8001ee0:	b580      	push	{r7, lr}
 8001ee2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI1_IRQn 0 */

  /* USER CODE END SPI1_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi1);
 8001ee4:	4802      	ldr	r0, [pc, #8]	; (8001ef0 <SPI1_IRQHandler+0x10>)
 8001ee6:	f004 facd 	bl	8006484 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI1_IRQn 1 */

  /* USER CODE END SPI1_IRQn 1 */
}
 8001eea:	bf00      	nop
 8001eec:	bd80      	pop	{r7, pc}
 8001eee:	bf00      	nop
 8001ef0:	200003ac 	.word	0x200003ac

08001ef4 <DMA2_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA2 stream0 global interrupt.
  */
void DMA2_Stream0_IRQHandler(void)
{
 8001ef4:	b580      	push	{r7, lr}
 8001ef6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */

  /* USER CODE END DMA2_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc1);
 8001ef8:	4802      	ldr	r0, [pc, #8]	; (8001f04 <DMA2_Stream0_IRQHandler+0x10>)
 8001efa:	f001 fe03 	bl	8003b04 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */

  /* USER CODE END DMA2_Stream0_IRQn 1 */
}
 8001efe:	bf00      	nop
 8001f00:	bd80      	pop	{r7, pc}
 8001f02:	bf00      	nop
 8001f04:	20000344 	.word	0x20000344

08001f08 <DMA2_Stream2_IRQHandler>:

/**
  * @brief This function handles DMA2 stream2 global interrupt.
  */
void DMA2_Stream2_IRQHandler(void)
{
 8001f08:	b580      	push	{r7, lr}
 8001f0a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */

  /* USER CODE END DMA2_Stream2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi1_tx);
 8001f0c:	4802      	ldr	r0, [pc, #8]	; (8001f18 <DMA2_Stream2_IRQHandler+0x10>)
 8001f0e:	f001 fdf9 	bl	8003b04 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */

  /* USER CODE END DMA2_Stream2_IRQn 1 */
}
 8001f12:	bf00      	nop
 8001f14:	bd80      	pop	{r7, pc}
 8001f16:	bf00      	nop
 8001f18:	20000404 	.word	0x20000404

08001f1c <OTG_FS_IRQHandler>:

/**
  * @brief This function handles USB On The Go FS global interrupt.
  */
void OTG_FS_IRQHandler(void)
{
 8001f1c:	b580      	push	{r7, lr}
 8001f1e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN OTG_FS_IRQn 0 */

  /* USER CODE END OTG_FS_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_OTG_FS);
 8001f20:	4802      	ldr	r0, [pc, #8]	; (8001f2c <OTG_FS_IRQHandler+0x10>)
 8001f22:	f002 fb46 	bl	80045b2 <HAL_PCD_IRQHandler>
  /* USER CODE BEGIN OTG_FS_IRQn 1 */

  /* USER CODE END OTG_FS_IRQn 1 */
}
 8001f26:	bf00      	nop
 8001f28:	bd80      	pop	{r7, pc}
 8001f2a:	bf00      	nop
 8001f2c:	20001b24 	.word	0x20001b24

08001f30 <_sbrk>:
 8001f30:	b580      	push	{r7, lr}
 8001f32:	b086      	sub	sp, #24
 8001f34:	af00      	add	r7, sp, #0
 8001f36:	6078      	str	r0, [r7, #4]
 8001f38:	4a14      	ldr	r2, [pc, #80]	; (8001f8c <_sbrk+0x5c>)
 8001f3a:	4b15      	ldr	r3, [pc, #84]	; (8001f90 <_sbrk+0x60>)
 8001f3c:	1ad3      	subs	r3, r2, r3
 8001f3e:	617b      	str	r3, [r7, #20]
 8001f40:	697b      	ldr	r3, [r7, #20]
 8001f42:	613b      	str	r3, [r7, #16]
 8001f44:	4b13      	ldr	r3, [pc, #76]	; (8001f94 <_sbrk+0x64>)
 8001f46:	681b      	ldr	r3, [r3, #0]
 8001f48:	2b00      	cmp	r3, #0
 8001f4a:	d102      	bne.n	8001f52 <_sbrk+0x22>
 8001f4c:	4b11      	ldr	r3, [pc, #68]	; (8001f94 <_sbrk+0x64>)
 8001f4e:	4a12      	ldr	r2, [pc, #72]	; (8001f98 <_sbrk+0x68>)
 8001f50:	601a      	str	r2, [r3, #0]
 8001f52:	4b10      	ldr	r3, [pc, #64]	; (8001f94 <_sbrk+0x64>)
 8001f54:	681a      	ldr	r2, [r3, #0]
 8001f56:	687b      	ldr	r3, [r7, #4]
 8001f58:	4413      	add	r3, r2
 8001f5a:	693a      	ldr	r2, [r7, #16]
 8001f5c:	429a      	cmp	r2, r3
 8001f5e:	d207      	bcs.n	8001f70 <_sbrk+0x40>
 8001f60:	f00b fc4a 	bl	800d7f8 <__errno>
 8001f64:	4603      	mov	r3, r0
 8001f66:	220c      	movs	r2, #12
 8001f68:	601a      	str	r2, [r3, #0]
 8001f6a:	f04f 33ff 	mov.w	r3, #4294967295
 8001f6e:	e009      	b.n	8001f84 <_sbrk+0x54>
 8001f70:	4b08      	ldr	r3, [pc, #32]	; (8001f94 <_sbrk+0x64>)
 8001f72:	681b      	ldr	r3, [r3, #0]
 8001f74:	60fb      	str	r3, [r7, #12]
 8001f76:	4b07      	ldr	r3, [pc, #28]	; (8001f94 <_sbrk+0x64>)
 8001f78:	681a      	ldr	r2, [r3, #0]
 8001f7a:	687b      	ldr	r3, [r7, #4]
 8001f7c:	4413      	add	r3, r2
 8001f7e:	4a05      	ldr	r2, [pc, #20]	; (8001f94 <_sbrk+0x64>)
 8001f80:	6013      	str	r3, [r2, #0]
 8001f82:	68fb      	ldr	r3, [r7, #12]
 8001f84:	4618      	mov	r0, r3
 8001f86:	3718      	adds	r7, #24
 8001f88:	46bd      	mov	sp, r7
 8001f8a:	bd80      	pop	{r7, pc}
 8001f8c:	20020000 	.word	0x20020000
 8001f90:	00000800 	.word	0x00000800
 8001f94:	20000598 	.word	0x20000598
 8001f98:	20002408 	.word	0x20002408

08001f9c <SystemInit>:
 8001f9c:	b480      	push	{r7}
 8001f9e:	af00      	add	r7, sp, #0
 8001fa0:	4b06      	ldr	r3, [pc, #24]	; (8001fbc <SystemInit+0x20>)
 8001fa2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001fa6:	4a05      	ldr	r2, [pc, #20]	; (8001fbc <SystemInit+0x20>)
 8001fa8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001fac:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8001fb0:	bf00      	nop
 8001fb2:	46bd      	mov	sp, r7
 8001fb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fb8:	4770      	bx	lr
 8001fba:	bf00      	nop
 8001fbc:	e000ed00 	.word	0xe000ed00

08001fc0 <Reset_Handler>:
 8001fc0:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001ff8 <LoopFillZerobss+0x12>
 8001fc4:	480d      	ldr	r0, [pc, #52]	; (8001ffc <LoopFillZerobss+0x16>)
 8001fc6:	490e      	ldr	r1, [pc, #56]	; (8002000 <LoopFillZerobss+0x1a>)
 8001fc8:	4a0e      	ldr	r2, [pc, #56]	; (8002004 <LoopFillZerobss+0x1e>)
 8001fca:	2300      	movs	r3, #0
 8001fcc:	e002      	b.n	8001fd4 <LoopCopyDataInit>

08001fce <CopyDataInit>:
 8001fce:	58d4      	ldr	r4, [r2, r3]
 8001fd0:	50c4      	str	r4, [r0, r3]
 8001fd2:	3304      	adds	r3, #4

08001fd4 <LoopCopyDataInit>:
 8001fd4:	18c4      	adds	r4, r0, r3
 8001fd6:	428c      	cmp	r4, r1
 8001fd8:	d3f9      	bcc.n	8001fce <CopyDataInit>
 8001fda:	4a0b      	ldr	r2, [pc, #44]	; (8002008 <LoopFillZerobss+0x22>)
 8001fdc:	4c0b      	ldr	r4, [pc, #44]	; (800200c <LoopFillZerobss+0x26>)
 8001fde:	2300      	movs	r3, #0
 8001fe0:	e001      	b.n	8001fe6 <LoopFillZerobss>

08001fe2 <FillZerobss>:
 8001fe2:	6013      	str	r3, [r2, #0]
 8001fe4:	3204      	adds	r2, #4

08001fe6 <LoopFillZerobss>:
 8001fe6:	42a2      	cmp	r2, r4
 8001fe8:	d3fb      	bcc.n	8001fe2 <FillZerobss>
 8001fea:	f7ff ffd7 	bl	8001f9c <SystemInit>
 8001fee:	f00b fc1b 	bl	800d828 <__libc_init_array>
 8001ff2:	f7ff f8b7 	bl	8001164 <main>
 8001ff6:	4770      	bx	lr
 8001ff8:	20020000 	.word	0x20020000
 8001ffc:	20000000 	.word	0x20000000
 8002000:	200002e0 	.word	0x200002e0
 8002004:	08014f58 	.word	0x08014f58
 8002008:	200002e0 	.word	0x200002e0
 800200c:	20002404 	.word	0x20002404

08002010 <ADC_IRQHandler>:
 8002010:	e7fe      	b.n	8002010 <ADC_IRQHandler>
	...

08002014 <ST7789_Init>:
	  
	  
//==============================================================================
// Процедура инициализации дисплея
//==============================================================================
void ST7789_Init(void){
 8002014:	b580      	push	{r7, lr}
 8002016:	af00      	add	r7, sp, #0
	
	// Задержка после подачи питания
	// если при старте не всегда запускаеться дисплей увеличиваем время задержки
	HAL_Delay(200);	
 8002018:	20c8      	movs	r0, #200	; 0xc8
 800201a:	f000 ff27 	bl	8002e6c <HAL_Delay>

	ST7789_Width = ST7789_WIDTH;
 800201e:	4b09      	ldr	r3, [pc, #36]	; (8002044 <ST7789_Init+0x30>)
 8002020:	22f0      	movs	r2, #240	; 0xf0
 8002022:	801a      	strh	r2, [r3, #0]
	ST7789_Height = ST7789_HEIGHT;
 8002024:	4b08      	ldr	r3, [pc, #32]	; (8002048 <ST7789_Init+0x34>)
 8002026:	f44f 72a0 	mov.w	r2, #320	; 0x140
 800202a:	801a      	strh	r2, [r3, #0]


    ST7789_Select();
 800202c:	f000 f810 	bl	8002050 <ST7789_Select>
	
    ST7789_HardReset(); 
 8002030:	f000 f870 	bl	8002114 <ST7789_HardReset>
    ST7789_ExecuteCommandList(init_cmds);
 8002034:	4805      	ldr	r0, [pc, #20]	; (800204c <ST7789_Init+0x38>)
 8002036:	f000 f823 	bl	8002080 <ST7789_ExecuteCommandList>
	
    ST7789_Unselect();
 800203a:	f000 f815 	bl	8002068 <ST7789_Unselect>

}
 800203e:	bf00      	nop
 8002040:	bd80      	pop	{r7, pc}
 8002042:	bf00      	nop
 8002044:	200005a0 	.word	0x200005a0
 8002048:	200005a2 	.word	0x200005a2
 800204c:	08014784 	.word	0x08014784

08002050 <ST7789_Select>:


//==============================================================================
// Процедура управления SPI
//==============================================================================
void ST7789_Select(void) {
 8002050:	b580      	push	{r7, lr}
 8002052:	af00      	add	r7, sp, #0
	
    #ifdef CS_PORT
	
			//-- если захотим переделать под HAL ------------------	
			#ifdef ST7789_SPI_HAL
				HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, GPIO_PIN_RESET);
 8002054:	2200      	movs	r2, #0
 8002056:	2104      	movs	r1, #4
 8002058:	4802      	ldr	r0, [pc, #8]	; (8002064 <ST7789_Select+0x14>)
 800205a:	f002 f941 	bl	80042e0 <HAL_GPIO_WritePin>
				CS_GPIO_Port->BSRR = ( CS_Pin << 16 );
			#endif
			//-----------------------------------------------------
	#endif
	
}
 800205e:	bf00      	nop
 8002060:	bd80      	pop	{r7, pc}
 8002062:	bf00      	nop
 8002064:	40020400 	.word	0x40020400

08002068 <ST7789_Unselect>:


//==============================================================================
// Процедура управления SPI
//==============================================================================
void ST7789_Unselect(void) {
 8002068:	b580      	push	{r7, lr}
 800206a:	af00      	add	r7, sp, #0
	
    #ifdef CS_PORT
	
			//-- если захотим переделать под HAL ------------------	
			#ifdef ST7789_SPI_HAL
				HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, GPIO_PIN_SET);
 800206c:	2201      	movs	r2, #1
 800206e:	2104      	movs	r1, #4
 8002070:	4802      	ldr	r0, [pc, #8]	; (800207c <ST7789_Unselect+0x14>)
 8002072:	f002 f935 	bl	80042e0 <HAL_GPIO_WritePin>
			#endif
			//-----------------------------------------------------
	
	#endif
	
}
 8002076:	bf00      	nop
 8002078:	bd80      	pop	{r7, pc}
 800207a:	bf00      	nop
 800207c:	40020400 	.word	0x40020400

08002080 <ST7789_ExecuteCommandList>:


//==============================================================================
// Процедура отправки данных для инициализации дисплея
//==============================================================================
 void ST7789_ExecuteCommandList(const uint8_t *addr) {
 8002080:	b580      	push	{r7, lr}
 8002082:	b084      	sub	sp, #16
 8002084:	af00      	add	r7, sp, #0
 8002086:	6078      	str	r0, [r7, #4]
	
    uint8_t numCommands, numArgs;
    uint16_t ms;

    numCommands = *addr++;
 8002088:	687b      	ldr	r3, [r7, #4]
 800208a:	1c5a      	adds	r2, r3, #1
 800208c:	607a      	str	r2, [r7, #4]
 800208e:	781b      	ldrb	r3, [r3, #0]
 8002090:	73fb      	strb	r3, [r7, #15]
    while(numCommands--) {
 8002092:	e034      	b.n	80020fe <ST7789_ExecuteCommandList+0x7e>
        uint8_t cmd = *addr++;
 8002094:	687b      	ldr	r3, [r7, #4]
 8002096:	1c5a      	adds	r2, r3, #1
 8002098:	607a      	str	r2, [r7, #4]
 800209a:	781b      	ldrb	r3, [r3, #0]
 800209c:	72fb      	strb	r3, [r7, #11]
        ST7789_SendCmd(cmd);
 800209e:	7afb      	ldrb	r3, [r7, #11]
 80020a0:	4618      	mov	r0, r3
 80020a2:	f000 f84b 	bl	800213c <ST7789_SendCmd>

        numArgs = *addr++;
 80020a6:	687b      	ldr	r3, [r7, #4]
 80020a8:	1c5a      	adds	r2, r3, #1
 80020aa:	607a      	str	r2, [r7, #4]
 80020ac:	781b      	ldrb	r3, [r3, #0]
 80020ae:	72bb      	strb	r3, [r7, #10]
        // If high bit set, delay follows args
        ms = numArgs & DELAY;
 80020b0:	7abb      	ldrb	r3, [r7, #10]
 80020b2:	b29b      	uxth	r3, r3
 80020b4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80020b8:	81bb      	strh	r3, [r7, #12]
        numArgs &= ~DELAY;
 80020ba:	7abb      	ldrb	r3, [r7, #10]
 80020bc:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80020c0:	72bb      	strb	r3, [r7, #10]
        if(numArgs) {
 80020c2:	7abb      	ldrb	r3, [r7, #10]
 80020c4:	2b00      	cmp	r3, #0
 80020c6:	d008      	beq.n	80020da <ST7789_ExecuteCommandList+0x5a>
            ST7789_SendDataMASS((uint8_t*)addr, numArgs);
 80020c8:	7abb      	ldrb	r3, [r7, #10]
 80020ca:	4619      	mov	r1, r3
 80020cc:	6878      	ldr	r0, [r7, #4]
 80020ce:	f000 f875 	bl	80021bc <ST7789_SendDataMASS>
            addr += numArgs;
 80020d2:	7abb      	ldrb	r3, [r7, #10]
 80020d4:	687a      	ldr	r2, [r7, #4]
 80020d6:	4413      	add	r3, r2
 80020d8:	607b      	str	r3, [r7, #4]
        }

        if(ms) {
 80020da:	89bb      	ldrh	r3, [r7, #12]
 80020dc:	2b00      	cmp	r3, #0
 80020de:	d00e      	beq.n	80020fe <ST7789_ExecuteCommandList+0x7e>
            ms = *addr++;
 80020e0:	687b      	ldr	r3, [r7, #4]
 80020e2:	1c5a      	adds	r2, r3, #1
 80020e4:	607a      	str	r2, [r7, #4]
 80020e6:	781b      	ldrb	r3, [r3, #0]
 80020e8:	81bb      	strh	r3, [r7, #12]
            if(ms == 255) ms = 500;
 80020ea:	89bb      	ldrh	r3, [r7, #12]
 80020ec:	2bff      	cmp	r3, #255	; 0xff
 80020ee:	d102      	bne.n	80020f6 <ST7789_ExecuteCommandList+0x76>
 80020f0:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 80020f4:	81bb      	strh	r3, [r7, #12]
            HAL_Delay(ms);
 80020f6:	89bb      	ldrh	r3, [r7, #12]
 80020f8:	4618      	mov	r0, r3
 80020fa:	f000 feb7 	bl	8002e6c <HAL_Delay>
    while(numCommands--) {
 80020fe:	7bfb      	ldrb	r3, [r7, #15]
 8002100:	1e5a      	subs	r2, r3, #1
 8002102:	73fa      	strb	r2, [r7, #15]
 8002104:	2b00      	cmp	r3, #0
 8002106:	d1c5      	bne.n	8002094 <ST7789_ExecuteCommandList+0x14>
        }
    }
}
 8002108:	bf00      	nop
 800210a:	bf00      	nop
 800210c:	3710      	adds	r7, #16
 800210e:	46bd      	mov	sp, r7
 8002110:	bd80      	pop	{r7, pc}
	...

08002114 <ST7789_HardReset>:


//==============================================================================
// Процедура аппаратного сброса дисплея (ножкой RESET)
//==============================================================================
void ST7789_HardReset(void){
 8002114:	b580      	push	{r7, lr}
 8002116:	af00      	add	r7, sp, #0

	HAL_GPIO_WritePin(RST_GPIO_Port, RST_Pin, GPIO_PIN_RESET);
 8002118:	2200      	movs	r2, #0
 800211a:	2101      	movs	r1, #1
 800211c:	4806      	ldr	r0, [pc, #24]	; (8002138 <ST7789_HardReset+0x24>)
 800211e:	f002 f8df 	bl	80042e0 <HAL_GPIO_WritePin>
	HAL_Delay(20);	
 8002122:	2014      	movs	r0, #20
 8002124:	f000 fea2 	bl	8002e6c <HAL_Delay>
	HAL_GPIO_WritePin(RST_GPIO_Port, RST_Pin, GPIO_PIN_SET);
 8002128:	2201      	movs	r2, #1
 800212a:	2101      	movs	r1, #1
 800212c:	4802      	ldr	r0, [pc, #8]	; (8002138 <ST7789_HardReset+0x24>)
 800212e:	f002 f8d7 	bl	80042e0 <HAL_GPIO_WritePin>
	
}
 8002132:	bf00      	nop
 8002134:	bd80      	pop	{r7, pc}
 8002136:	bf00      	nop
 8002138:	40020400 	.word	0x40020400

0800213c <ST7789_SendCmd>:


//==============================================================================
// Процедура отправки команды в дисплей
//==============================================================================
__inline void ST7789_SendCmd(uint8_t Cmd){	
 800213c:	b580      	push	{r7, lr}
 800213e:	b082      	sub	sp, #8
 8002140:	af00      	add	r7, sp, #0
 8002142:	4603      	mov	r3, r0
 8002144:	71fb      	strb	r3, [r7, #7]
		
	//-- если захотим переделать под HAL ------------------	
	#ifdef ST7789_SPI_HAL
	
		 // pin DC LOW
		 HAL_GPIO_WritePin(DC_GPIO_Port, DC_Pin, GPIO_PIN_RESET);
 8002146:	2200      	movs	r2, #0
 8002148:	2102      	movs	r1, #2
 800214a:	480d      	ldr	r0, [pc, #52]	; (8002180 <ST7789_SendCmd+0x44>)
 800214c:	f002 f8c8 	bl	80042e0 <HAL_GPIO_WritePin>
					 
		 HAL_SPI_Transmit(&ST7789_SPI_HAL, &Cmd, 1, HAL_MAX_DELAY);
 8002150:	1df9      	adds	r1, r7, #7
 8002152:	f04f 33ff 	mov.w	r3, #4294967295
 8002156:	2201      	movs	r2, #1
 8002158:	480a      	ldr	r0, [pc, #40]	; (8002184 <ST7789_SendCmd+0x48>)
 800215a:	f004 f856 	bl	800620a <HAL_SPI_Transmit>
		 while(HAL_SPI_GetState(&ST7789_SPI_HAL) != HAL_SPI_STATE_READY){};
 800215e:	bf00      	nop
 8002160:	4808      	ldr	r0, [pc, #32]	; (8002184 <ST7789_SendCmd+0x48>)
 8002162:	f004 fa99 	bl	8006698 <HAL_SPI_GetState>
 8002166:	4603      	mov	r3, r0
 8002168:	2b01      	cmp	r3, #1
 800216a:	d1f9      	bne.n	8002160 <ST7789_SendCmd+0x24>
				
		 // pin DC HIGH
		 HAL_GPIO_WritePin(DC_GPIO_Port, DC_Pin, GPIO_PIN_SET);
 800216c:	2201      	movs	r2, #1
 800216e:	2102      	movs	r1, #2
 8002170:	4803      	ldr	r0, [pc, #12]	; (8002180 <ST7789_SendCmd+0x44>)
 8002172:	f002 f8b5 	bl	80042e0 <HAL_GPIO_WritePin>
		DC_GPIO_Port->BSRR = DC_Pin;
	
	#endif
	//-----------------------------------------------------------------------------------

}
 8002176:	bf00      	nop
 8002178:	3708      	adds	r7, #8
 800217a:	46bd      	mov	sp, r7
 800217c:	bd80      	pop	{r7, pc}
 800217e:	bf00      	nop
 8002180:	40020400 	.word	0x40020400
 8002184:	200003ac 	.word	0x200003ac

08002188 <ST7789_SendData>:


//==============================================================================
// Процедура отправки данных (параметров) в дисплей 1 BYTE
//==============================================================================
__inline void ST7789_SendData(uint8_t Data ){
 8002188:	b580      	push	{r7, lr}
 800218a:	b082      	sub	sp, #8
 800218c:	af00      	add	r7, sp, #0
 800218e:	4603      	mov	r3, r0
 8002190:	71fb      	strb	r3, [r7, #7]
	
	//-- если захотим переделать под HAL ------------------
	#ifdef ST7789_SPI_HAL
	
		HAL_SPI_Transmit(&ST7789_SPI_HAL, &Data, 1, HAL_MAX_DELAY);
 8002192:	1df9      	adds	r1, r7, #7
 8002194:	f04f 33ff 	mov.w	r3, #4294967295
 8002198:	2201      	movs	r2, #1
 800219a:	4807      	ldr	r0, [pc, #28]	; (80021b8 <ST7789_SendData+0x30>)
 800219c:	f004 f835 	bl	800620a <HAL_SPI_Transmit>
		while(HAL_SPI_GetState(&ST7789_SPI_HAL) != HAL_SPI_STATE_READY){};
 80021a0:	bf00      	nop
 80021a2:	4805      	ldr	r0, [pc, #20]	; (80021b8 <ST7789_SendData+0x30>)
 80021a4:	f004 fa78 	bl	8006698 <HAL_SPI_GetState>
 80021a8:	4603      	mov	r3, r0
 80021aa:	2b01      	cmp	r3, #1
 80021ac:	d1f9      	bne.n	80021a2 <ST7789_SendData+0x1a>
*/		//================================================================================
		
	#endif
	//-----------------------------------------------------------------------------------

}
 80021ae:	bf00      	nop
 80021b0:	bf00      	nop
 80021b2:	3708      	adds	r7, #8
 80021b4:	46bd      	mov	sp, r7
 80021b6:	bd80      	pop	{r7, pc}
 80021b8:	200003ac 	.word	0x200003ac

080021bc <ST7789_SendDataMASS>:


//==============================================================================
// Процедура отправки данных (параметров) в дисплей MASS
//==============================================================================
__inline void ST7789_SendDataMASS(uint8_t* buff, size_t buff_size){
 80021bc:	b580      	push	{r7, lr}
 80021be:	b082      	sub	sp, #8
 80021c0:	af00      	add	r7, sp, #0
 80021c2:	6078      	str	r0, [r7, #4]
 80021c4:	6039      	str	r1, [r7, #0]
	
	//-- если захотим переделать под HAL ------------------
	#ifdef ST7789_SPI_HAL
		
		if( buff_size <= 0xFFFF ){
 80021c6:	683b      	ldr	r3, [r7, #0]
 80021c8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80021cc:	d21a      	bcs.n	8002204 <ST7789_SendDataMASS+0x48>
			HAL_SPI_Transmit(&ST7789_SPI_HAL, buff, buff_size, HAL_MAX_DELAY);
 80021ce:	683b      	ldr	r3, [r7, #0]
 80021d0:	b29a      	uxth	r2, r3
 80021d2:	f04f 33ff 	mov.w	r3, #4294967295
 80021d6:	6879      	ldr	r1, [r7, #4]
 80021d8:	4816      	ldr	r0, [pc, #88]	; (8002234 <ST7789_SendDataMASS+0x78>)
 80021da:	f004 f816 	bl	800620a <HAL_SPI_Transmit>
 80021de:	e01d      	b.n	800221c <ST7789_SendDataMASS+0x60>
		}
		else{
			while( buff_size > 0xFFFF ){
				HAL_SPI_Transmit(&ST7789_SPI_HAL, buff, 0xFFFF, HAL_MAX_DELAY);
 80021e0:	f04f 33ff 	mov.w	r3, #4294967295
 80021e4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80021e8:	6879      	ldr	r1, [r7, #4]
 80021ea:	4812      	ldr	r0, [pc, #72]	; (8002234 <ST7789_SendDataMASS+0x78>)
 80021ec:	f004 f80d 	bl	800620a <HAL_SPI_Transmit>
				buff_size-=0xFFFF;
 80021f0:	683b      	ldr	r3, [r7, #0]
 80021f2:	f5a3 437f 	sub.w	r3, r3, #65280	; 0xff00
 80021f6:	3bff      	subs	r3, #255	; 0xff
 80021f8:	603b      	str	r3, [r7, #0]
				buff+=0xFFFF;
 80021fa:	687b      	ldr	r3, [r7, #4]
 80021fc:	f503 437f 	add.w	r3, r3, #65280	; 0xff00
 8002200:	33ff      	adds	r3, #255	; 0xff
 8002202:	607b      	str	r3, [r7, #4]
			while( buff_size > 0xFFFF ){
 8002204:	683b      	ldr	r3, [r7, #0]
 8002206:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800220a:	d2e9      	bcs.n	80021e0 <ST7789_SendDataMASS+0x24>
			}
			HAL_SPI_Transmit(&ST7789_SPI_HAL, buff, buff_size, HAL_MAX_DELAY);
 800220c:	683b      	ldr	r3, [r7, #0]
 800220e:	b29a      	uxth	r2, r3
 8002210:	f04f 33ff 	mov.w	r3, #4294967295
 8002214:	6879      	ldr	r1, [r7, #4]
 8002216:	4807      	ldr	r0, [pc, #28]	; (8002234 <ST7789_SendDataMASS+0x78>)
 8002218:	f003 fff7 	bl	800620a <HAL_SPI_Transmit>
		}
		
		while(HAL_SPI_GetState(&ST7789_SPI_HAL) != HAL_SPI_STATE_READY){};
 800221c:	bf00      	nop
 800221e:	4805      	ldr	r0, [pc, #20]	; (8002234 <ST7789_SendDataMASS+0x78>)
 8002220:	f004 fa3a 	bl	8006698 <HAL_SPI_GetState>
 8002224:	4603      	mov	r3, r0
 8002226:	2b01      	cmp	r3, #1
 8002228:	d1f9      	bne.n	800221e <ST7789_SendDataMASS+0x62>
*/		//================================================================================
		
	#endif
	//-----------------------------------------------------------------------------------

}
 800222a:	bf00      	nop
 800222c:	bf00      	nop
 800222e:	3708      	adds	r7, #8
 8002230:	46bd      	mov	sp, r7
 8002232:	bd80      	pop	{r7, pc}
 8002234:	200003ac 	.word	0x200003ac

08002238 <ST7789_FillScreen>:


//==============================================================================
// Процедура закрашивает экран цветом color
//==============================================================================
void ST7789_FillScreen(uint16_t color){
 8002238:	b580      	push	{r7, lr}
 800223a:	b084      	sub	sp, #16
 800223c:	af02      	add	r7, sp, #8
 800223e:	4603      	mov	r3, r0
 8002240:	80fb      	strh	r3, [r7, #6]
	
  ST7789_FillRect(0, 0,  ST7789_Width, ST7789_Height, color);
 8002242:	4b08      	ldr	r3, [pc, #32]	; (8002264 <ST7789_FillScreen+0x2c>)
 8002244:	881b      	ldrh	r3, [r3, #0]
 8002246:	b21a      	sxth	r2, r3
 8002248:	4b07      	ldr	r3, [pc, #28]	; (8002268 <ST7789_FillScreen+0x30>)
 800224a:	881b      	ldrh	r3, [r3, #0]
 800224c:	b219      	sxth	r1, r3
 800224e:	88fb      	ldrh	r3, [r7, #6]
 8002250:	9300      	str	r3, [sp, #0]
 8002252:	460b      	mov	r3, r1
 8002254:	2100      	movs	r1, #0
 8002256:	2000      	movs	r0, #0
 8002258:	f000 f808 	bl	800226c <ST7789_FillRect>
}
 800225c:	bf00      	nop
 800225e:	3708      	adds	r7, #8
 8002260:	46bd      	mov	sp, r7
 8002262:	bd80      	pop	{r7, pc}
 8002264:	200005a0 	.word	0x200005a0
 8002268:	200005a2 	.word	0x200005a2

0800226c <ST7789_FillRect>:


//==============================================================================
// Процедура заполнения прямоугольника цветом color
//==============================================================================
void ST7789_FillRect(int16_t x, int16_t y, int16_t w, int16_t h, uint16_t color){
 800226c:	b590      	push	{r4, r7, lr}
 800226e:	b083      	sub	sp, #12
 8002270:	af00      	add	r7, sp, #0
 8002272:	4604      	mov	r4, r0
 8002274:	4608      	mov	r0, r1
 8002276:	4611      	mov	r1, r2
 8002278:	461a      	mov	r2, r3
 800227a:	4623      	mov	r3, r4
 800227c:	80fb      	strh	r3, [r7, #6]
 800227e:	4603      	mov	r3, r0
 8002280:	80bb      	strh	r3, [r7, #4]
 8002282:	460b      	mov	r3, r1
 8002284:	807b      	strh	r3, [r7, #2]
 8002286:	4613      	mov	r3, r2
 8002288:	803b      	strh	r3, [r7, #0]
	
  if ((x >= ST7789_Width) || (y >= ST7789_Height)){
 800228a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800228e:	4a24      	ldr	r2, [pc, #144]	; (8002320 <ST7789_FillRect+0xb4>)
 8002290:	8812      	ldrh	r2, [r2, #0]
 8002292:	4293      	cmp	r3, r2
 8002294:	da40      	bge.n	8002318 <ST7789_FillRect+0xac>
 8002296:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 800229a:	4a22      	ldr	r2, [pc, #136]	; (8002324 <ST7789_FillRect+0xb8>)
 800229c:	8812      	ldrh	r2, [r2, #0]
 800229e:	4293      	cmp	r3, r2
 80022a0:	da3a      	bge.n	8002318 <ST7789_FillRect+0xac>
	  return;
  }
  
  if ((x + w) > ST7789_Width){	  
 80022a2:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 80022a6:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80022aa:	4413      	add	r3, r2
 80022ac:	4a1c      	ldr	r2, [pc, #112]	; (8002320 <ST7789_FillRect+0xb4>)
 80022ae:	8812      	ldrh	r2, [r2, #0]
 80022b0:	4293      	cmp	r3, r2
 80022b2:	dd05      	ble.n	80022c0 <ST7789_FillRect+0x54>
	  w = ST7789_Width - x;
 80022b4:	4b1a      	ldr	r3, [pc, #104]	; (8002320 <ST7789_FillRect+0xb4>)
 80022b6:	881a      	ldrh	r2, [r3, #0]
 80022b8:	88fb      	ldrh	r3, [r7, #6]
 80022ba:	1ad3      	subs	r3, r2, r3
 80022bc:	b29b      	uxth	r3, r3
 80022be:	807b      	strh	r3, [r7, #2]
  }
  
  if ((y + h) > ST7789_Height){
 80022c0:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 80022c4:	f9b7 3000 	ldrsh.w	r3, [r7]
 80022c8:	4413      	add	r3, r2
 80022ca:	4a16      	ldr	r2, [pc, #88]	; (8002324 <ST7789_FillRect+0xb8>)
 80022cc:	8812      	ldrh	r2, [r2, #0]
 80022ce:	4293      	cmp	r3, r2
 80022d0:	dd05      	ble.n	80022de <ST7789_FillRect+0x72>
	  h = ST7789_Height - y;
 80022d2:	4b14      	ldr	r3, [pc, #80]	; (8002324 <ST7789_FillRect+0xb8>)
 80022d4:	881a      	ldrh	r2, [r3, #0]
 80022d6:	88bb      	ldrh	r3, [r7, #4]
 80022d8:	1ad3      	subs	r3, r2, r3
 80022da:	b29b      	uxth	r3, r3
 80022dc:	803b      	strh	r3, [r7, #0]
  }
  
  ST7789_SetWindow(x, y, x + w - 1, y + h - 1);
 80022de:	88f8      	ldrh	r0, [r7, #6]
 80022e0:	88b9      	ldrh	r1, [r7, #4]
 80022e2:	88fa      	ldrh	r2, [r7, #6]
 80022e4:	887b      	ldrh	r3, [r7, #2]
 80022e6:	4413      	add	r3, r2
 80022e8:	b29b      	uxth	r3, r3
 80022ea:	3b01      	subs	r3, #1
 80022ec:	b29c      	uxth	r4, r3
 80022ee:	88ba      	ldrh	r2, [r7, #4]
 80022f0:	883b      	ldrh	r3, [r7, #0]
 80022f2:	4413      	add	r3, r2
 80022f4:	b29b      	uxth	r3, r3
 80022f6:	3b01      	subs	r3, #1
 80022f8:	b29b      	uxth	r3, r3
 80022fa:	4622      	mov	r2, r4
 80022fc:	f000 f814 	bl	8002328 <ST7789_SetWindow>
  
//  for (uint32_t i = 0; i < (h * w); i++){
//	  ST7789_RamWrite(&color, 1);
//  }
		
  ST7789_RamWrite(&color, (h * w)); 
 8002300:	f9b7 3000 	ldrsh.w	r3, [r7]
 8002304:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8002308:	fb02 f303 	mul.w	r3, r2, r3
 800230c:	4619      	mov	r1, r3
 800230e:	f107 0018 	add.w	r0, r7, #24
 8002312:	f000 f82f 	bl	8002374 <ST7789_RamWrite>
 8002316:	e000      	b.n	800231a <ST7789_FillRect+0xae>
	  return;
 8002318:	bf00      	nop
}
 800231a:	370c      	adds	r7, #12
 800231c:	46bd      	mov	sp, r7
 800231e:	bd90      	pop	{r4, r7, pc}
 8002320:	200005a0 	.word	0x200005a0
 8002324:	200005a2 	.word	0x200005a2

08002328 <ST7789_SetWindow>:


//==============================================================================
// Процедура установка границ экрана для заполнения
//==============================================================================
void ST7789_SetWindow(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1){
 8002328:	b590      	push	{r4, r7, lr}
 800232a:	b083      	sub	sp, #12
 800232c:	af00      	add	r7, sp, #0
 800232e:	4604      	mov	r4, r0
 8002330:	4608      	mov	r0, r1
 8002332:	4611      	mov	r1, r2
 8002334:	461a      	mov	r2, r3
 8002336:	4623      	mov	r3, r4
 8002338:	80fb      	strh	r3, [r7, #6]
 800233a:	4603      	mov	r3, r0
 800233c:	80bb      	strh	r3, [r7, #4]
 800233e:	460b      	mov	r3, r1
 8002340:	807b      	strh	r3, [r7, #2]
 8002342:	4613      	mov	r3, r2
 8002344:	803b      	strh	r3, [r7, #0]
	
	ST7789_Select();
 8002346:	f7ff fe83 	bl	8002050 <ST7789_Select>
	
	ST7789_ColumnSet(x0, x1);
 800234a:	887a      	ldrh	r2, [r7, #2]
 800234c:	88fb      	ldrh	r3, [r7, #6]
 800234e:	4611      	mov	r1, r2
 8002350:	4618      	mov	r0, r3
 8002352:	f000 f833 	bl	80023bc <ST7789_ColumnSet>
	ST7789_RowSet(y0, y1);
 8002356:	883a      	ldrh	r2, [r7, #0]
 8002358:	88bb      	ldrh	r3, [r7, #4]
 800235a:	4611      	mov	r1, r2
 800235c:	4618      	mov	r0, r3
 800235e:	f000 f86f 	bl	8002440 <ST7789_RowSet>
	
	// write to RAM
	ST7789_SendCmd(ST7789_RAMWR);
 8002362:	202c      	movs	r0, #44	; 0x2c
 8002364:	f7ff feea 	bl	800213c <ST7789_SendCmd>
	
	ST7789_Unselect();
 8002368:	f7ff fe7e 	bl	8002068 <ST7789_Unselect>
	
}
 800236c:	bf00      	nop
 800236e:	370c      	adds	r7, #12
 8002370:	46bd      	mov	sp, r7
 8002372:	bd90      	pop	{r4, r7, pc}

08002374 <ST7789_RamWrite>:


//==============================================================================
// Процедура записи данных в дисплей
//==============================================================================
void ST7789_RamWrite(uint16_t *pBuff, uint32_t Len){
 8002374:	b580      	push	{r7, lr}
 8002376:	b084      	sub	sp, #16
 8002378:	af00      	add	r7, sp, #0
 800237a:	6078      	str	r0, [r7, #4]
 800237c:	6039      	str	r1, [r7, #0]
	
  ST7789_Select();
 800237e:	f7ff fe67 	bl	8002050 <ST7789_Select>
	
  uint8_t buff[2];
  buff[0] = *pBuff >> 8;
 8002382:	687b      	ldr	r3, [r7, #4]
 8002384:	881b      	ldrh	r3, [r3, #0]
 8002386:	0a1b      	lsrs	r3, r3, #8
 8002388:	b29b      	uxth	r3, r3
 800238a:	b2db      	uxtb	r3, r3
 800238c:	733b      	strb	r3, [r7, #12]
  buff[1] = *pBuff & 0xFF;
 800238e:	687b      	ldr	r3, [r7, #4]
 8002390:	881b      	ldrh	r3, [r3, #0]
 8002392:	b2db      	uxtb	r3, r3
 8002394:	737b      	strb	r3, [r7, #13]
	
  while (Len--){
 8002396:	e005      	b.n	80023a4 <ST7789_RamWrite+0x30>
//    ST7789_SendData( buff[0] );  
//    ST7789_SendData( buff[1] );
	  ST7789_SendDataMASS( buff, 2);
 8002398:	f107 030c 	add.w	r3, r7, #12
 800239c:	2102      	movs	r1, #2
 800239e:	4618      	mov	r0, r3
 80023a0:	f7ff ff0c 	bl	80021bc <ST7789_SendDataMASS>
  while (Len--){
 80023a4:	683b      	ldr	r3, [r7, #0]
 80023a6:	1e5a      	subs	r2, r3, #1
 80023a8:	603a      	str	r2, [r7, #0]
 80023aa:	2b00      	cmp	r3, #0
 80023ac:	d1f4      	bne.n	8002398 <ST7789_RamWrite+0x24>
  } 
	
  ST7789_Unselect();
 80023ae:	f7ff fe5b 	bl	8002068 <ST7789_Unselect>
}
 80023b2:	bf00      	nop
 80023b4:	3710      	adds	r7, #16
 80023b6:	46bd      	mov	sp, r7
 80023b8:	bd80      	pop	{r7, pc}
	...

080023bc <ST7789_ColumnSet>:


//==============================================================================
// Процедура установки начального и конечного адресов колонок
//==============================================================================
 void ST7789_ColumnSet(uint16_t ColumnStart, uint16_t ColumnEnd){
 80023bc:	b580      	push	{r7, lr}
 80023be:	b082      	sub	sp, #8
 80023c0:	af00      	add	r7, sp, #0
 80023c2:	4603      	mov	r3, r0
 80023c4:	460a      	mov	r2, r1
 80023c6:	80fb      	strh	r3, [r7, #6]
 80023c8:	4613      	mov	r3, r2
 80023ca:	80bb      	strh	r3, [r7, #4]
	
  if (ColumnStart > ColumnEnd){
 80023cc:	88fa      	ldrh	r2, [r7, #6]
 80023ce:	88bb      	ldrh	r3, [r7, #4]
 80023d0:	429a      	cmp	r2, r3
 80023d2:	d82a      	bhi.n	800242a <ST7789_ColumnSet+0x6e>
    return;
  }
  
  if (ColumnEnd > ST7789_Width){
 80023d4:	4b18      	ldr	r3, [pc, #96]	; (8002438 <ST7789_ColumnSet+0x7c>)
 80023d6:	881b      	ldrh	r3, [r3, #0]
 80023d8:	88ba      	ldrh	r2, [r7, #4]
 80023da:	429a      	cmp	r2, r3
 80023dc:	d827      	bhi.n	800242e <ST7789_ColumnSet+0x72>
    return;
  }
  
  ColumnStart += ST7789_X_Start;
 80023de:	4b17      	ldr	r3, [pc, #92]	; (800243c <ST7789_ColumnSet+0x80>)
 80023e0:	881a      	ldrh	r2, [r3, #0]
 80023e2:	88fb      	ldrh	r3, [r7, #6]
 80023e4:	4413      	add	r3, r2
 80023e6:	80fb      	strh	r3, [r7, #6]
  ColumnEnd += ST7789_X_Start;
 80023e8:	4b14      	ldr	r3, [pc, #80]	; (800243c <ST7789_ColumnSet+0x80>)
 80023ea:	881a      	ldrh	r2, [r3, #0]
 80023ec:	88bb      	ldrh	r3, [r7, #4]
 80023ee:	4413      	add	r3, r2
 80023f0:	80bb      	strh	r3, [r7, #4]
  
  ST7789_SendCmd(ST7789_CASET);
 80023f2:	202a      	movs	r0, #42	; 0x2a
 80023f4:	f7ff fea2 	bl	800213c <ST7789_SendCmd>
  ST7789_SendData(ColumnStart >> 8);  
 80023f8:	88fb      	ldrh	r3, [r7, #6]
 80023fa:	0a1b      	lsrs	r3, r3, #8
 80023fc:	b29b      	uxth	r3, r3
 80023fe:	b2db      	uxtb	r3, r3
 8002400:	4618      	mov	r0, r3
 8002402:	f7ff fec1 	bl	8002188 <ST7789_SendData>
  ST7789_SendData(ColumnStart & 0xFF);  
 8002406:	88fb      	ldrh	r3, [r7, #6]
 8002408:	b2db      	uxtb	r3, r3
 800240a:	4618      	mov	r0, r3
 800240c:	f7ff febc 	bl	8002188 <ST7789_SendData>
  ST7789_SendData(ColumnEnd >> 8);  
 8002410:	88bb      	ldrh	r3, [r7, #4]
 8002412:	0a1b      	lsrs	r3, r3, #8
 8002414:	b29b      	uxth	r3, r3
 8002416:	b2db      	uxtb	r3, r3
 8002418:	4618      	mov	r0, r3
 800241a:	f7ff feb5 	bl	8002188 <ST7789_SendData>
  ST7789_SendData(ColumnEnd & 0xFF);  
 800241e:	88bb      	ldrh	r3, [r7, #4]
 8002420:	b2db      	uxtb	r3, r3
 8002422:	4618      	mov	r0, r3
 8002424:	f7ff feb0 	bl	8002188 <ST7789_SendData>
 8002428:	e002      	b.n	8002430 <ST7789_ColumnSet+0x74>
    return;
 800242a:	bf00      	nop
 800242c:	e000      	b.n	8002430 <ST7789_ColumnSet+0x74>
    return;
 800242e:	bf00      	nop
  
}
 8002430:	3708      	adds	r7, #8
 8002432:	46bd      	mov	sp, r7
 8002434:	bd80      	pop	{r7, pc}
 8002436:	bf00      	nop
 8002438:	200005a0 	.word	0x200005a0
 800243c:	2000059c 	.word	0x2000059c

08002440 <ST7789_RowSet>:


//==============================================================================
// Процедура установки начального и конечного адресов строк
//==============================================================================
 void ST7789_RowSet(uint16_t RowStart, uint16_t RowEnd){
 8002440:	b580      	push	{r7, lr}
 8002442:	b082      	sub	sp, #8
 8002444:	af00      	add	r7, sp, #0
 8002446:	4603      	mov	r3, r0
 8002448:	460a      	mov	r2, r1
 800244a:	80fb      	strh	r3, [r7, #6]
 800244c:	4613      	mov	r3, r2
 800244e:	80bb      	strh	r3, [r7, #4]
	
  if (RowStart > RowEnd){
 8002450:	88fa      	ldrh	r2, [r7, #6]
 8002452:	88bb      	ldrh	r3, [r7, #4]
 8002454:	429a      	cmp	r2, r3
 8002456:	d82a      	bhi.n	80024ae <ST7789_RowSet+0x6e>
    return;
  }
  
  if (RowEnd > ST7789_Height){
 8002458:	4b18      	ldr	r3, [pc, #96]	; (80024bc <ST7789_RowSet+0x7c>)
 800245a:	881b      	ldrh	r3, [r3, #0]
 800245c:	88ba      	ldrh	r2, [r7, #4]
 800245e:	429a      	cmp	r2, r3
 8002460:	d827      	bhi.n	80024b2 <ST7789_RowSet+0x72>
    return;
  }
  
  RowStart += ST7789_Y_Start;
 8002462:	4b17      	ldr	r3, [pc, #92]	; (80024c0 <ST7789_RowSet+0x80>)
 8002464:	881a      	ldrh	r2, [r3, #0]
 8002466:	88fb      	ldrh	r3, [r7, #6]
 8002468:	4413      	add	r3, r2
 800246a:	80fb      	strh	r3, [r7, #6]
  RowEnd += ST7789_Y_Start;
 800246c:	4b14      	ldr	r3, [pc, #80]	; (80024c0 <ST7789_RowSet+0x80>)
 800246e:	881a      	ldrh	r2, [r3, #0]
 8002470:	88bb      	ldrh	r3, [r7, #4]
 8002472:	4413      	add	r3, r2
 8002474:	80bb      	strh	r3, [r7, #4]
 
  ST7789_SendCmd(ST7789_RASET);
 8002476:	202b      	movs	r0, #43	; 0x2b
 8002478:	f7ff fe60 	bl	800213c <ST7789_SendCmd>
  ST7789_SendData(RowStart >> 8);  
 800247c:	88fb      	ldrh	r3, [r7, #6]
 800247e:	0a1b      	lsrs	r3, r3, #8
 8002480:	b29b      	uxth	r3, r3
 8002482:	b2db      	uxtb	r3, r3
 8002484:	4618      	mov	r0, r3
 8002486:	f7ff fe7f 	bl	8002188 <ST7789_SendData>
  ST7789_SendData(RowStart & 0xFF);  
 800248a:	88fb      	ldrh	r3, [r7, #6]
 800248c:	b2db      	uxtb	r3, r3
 800248e:	4618      	mov	r0, r3
 8002490:	f7ff fe7a 	bl	8002188 <ST7789_SendData>
  ST7789_SendData(RowEnd >> 8);  
 8002494:	88bb      	ldrh	r3, [r7, #4]
 8002496:	0a1b      	lsrs	r3, r3, #8
 8002498:	b29b      	uxth	r3, r3
 800249a:	b2db      	uxtb	r3, r3
 800249c:	4618      	mov	r0, r3
 800249e:	f7ff fe73 	bl	8002188 <ST7789_SendData>
  ST7789_SendData(RowEnd & 0xFF);  
 80024a2:	88bb      	ldrh	r3, [r7, #4]
 80024a4:	b2db      	uxtb	r3, r3
 80024a6:	4618      	mov	r0, r3
 80024a8:	f7ff fe6e 	bl	8002188 <ST7789_SendData>
 80024ac:	e002      	b.n	80024b4 <ST7789_RowSet+0x74>
    return;
 80024ae:	bf00      	nop
 80024b0:	e000      	b.n	80024b4 <ST7789_RowSet+0x74>
    return;
 80024b2:	bf00      	nop

}
 80024b4:	3708      	adds	r7, #8
 80024b6:	46bd      	mov	sp, r7
 80024b8:	bd80      	pop	{r7, pc}
 80024ba:	bf00      	nop
 80024bc:	200005a2 	.word	0x200005a2
 80024c0:	2000059e 	.word	0x2000059e

080024c4 <ST7789_DrawLine_Slow>:


//==============================================================================
// Процедура вспомогательная для --- Процедура рисования линии
//==============================================================================
 void ST7789_DrawLine_Slow(int16_t x1, int16_t y1, int16_t x2, int16_t y2, uint16_t color) {
 80024c4:	b590      	push	{r4, r7, lr}
 80024c6:	b087      	sub	sp, #28
 80024c8:	af00      	add	r7, sp, #0
 80024ca:	4604      	mov	r4, r0
 80024cc:	4608      	mov	r0, r1
 80024ce:	4611      	mov	r1, r2
 80024d0:	461a      	mov	r2, r3
 80024d2:	4623      	mov	r3, r4
 80024d4:	80fb      	strh	r3, [r7, #6]
 80024d6:	4603      	mov	r3, r0
 80024d8:	80bb      	strh	r3, [r7, #4]
 80024da:	460b      	mov	r3, r1
 80024dc:	807b      	strh	r3, [r7, #2]
 80024de:	4613      	mov	r3, r2
 80024e0:	803b      	strh	r3, [r7, #0]
	
  const int16_t deltaX = abs(x2 - x1);
 80024e2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80024e6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80024ea:	1ad3      	subs	r3, r2, r3
 80024ec:	2b00      	cmp	r3, #0
 80024ee:	bfb8      	it	lt
 80024f0:	425b      	neglt	r3, r3
 80024f2:	82bb      	strh	r3, [r7, #20]
  const int16_t deltaY = abs(y2 - y1);
 80024f4:	f9b7 2000 	ldrsh.w	r2, [r7]
 80024f8:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80024fc:	1ad3      	subs	r3, r2, r3
 80024fe:	2b00      	cmp	r3, #0
 8002500:	bfb8      	it	lt
 8002502:	425b      	neglt	r3, r3
 8002504:	827b      	strh	r3, [r7, #18]
  const int16_t signX = x1 < x2 ? 1 : -1;
 8002506:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 800250a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800250e:	429a      	cmp	r2, r3
 8002510:	da01      	bge.n	8002516 <ST7789_DrawLine_Slow+0x52>
 8002512:	2301      	movs	r3, #1
 8002514:	e001      	b.n	800251a <ST7789_DrawLine_Slow+0x56>
 8002516:	f04f 33ff 	mov.w	r3, #4294967295
 800251a:	823b      	strh	r3, [r7, #16]
  const int16_t signY = y1 < y2 ? 1 : -1;
 800251c:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 8002520:	f9b7 3000 	ldrsh.w	r3, [r7]
 8002524:	429a      	cmp	r2, r3
 8002526:	da01      	bge.n	800252c <ST7789_DrawLine_Slow+0x68>
 8002528:	2301      	movs	r3, #1
 800252a:	e001      	b.n	8002530 <ST7789_DrawLine_Slow+0x6c>
 800252c:	f04f 33ff 	mov.w	r3, #4294967295
 8002530:	81fb      	strh	r3, [r7, #14]

  int16_t error = deltaX - deltaY;
 8002532:	8aba      	ldrh	r2, [r7, #20]
 8002534:	8a7b      	ldrh	r3, [r7, #18]
 8002536:	1ad3      	subs	r3, r2, r3
 8002538:	b29b      	uxth	r3, r3
 800253a:	82fb      	strh	r3, [r7, #22]

  ST7789_DrawPixel(x2, y2, color);
 800253c:	8d3a      	ldrh	r2, [r7, #40]	; 0x28
 800253e:	f9b7 1000 	ldrsh.w	r1, [r7]
 8002542:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8002546:	4618      	mov	r0, r3
 8002548:	f000 f8bc 	bl	80026c4 <ST7789_DrawPixel>

  while (x1 != x2 || y1 != y2) {
 800254c:	e02c      	b.n	80025a8 <ST7789_DrawLine_Slow+0xe4>
	  
    ST7789_DrawPixel(x1, y1, color);
 800254e:	8d3a      	ldrh	r2, [r7, #40]	; 0x28
 8002550:	f9b7 1004 	ldrsh.w	r1, [r7, #4]
 8002554:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002558:	4618      	mov	r0, r3
 800255a:	f000 f8b3 	bl	80026c4 <ST7789_DrawPixel>
    const int16_t error2 = error * 2;
 800255e:	8afb      	ldrh	r3, [r7, #22]
 8002560:	005b      	lsls	r3, r3, #1
 8002562:	b29b      	uxth	r3, r3
 8002564:	81bb      	strh	r3, [r7, #12]
 
    if (error2 > -deltaY) {
 8002566:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 800256a:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 800256e:	425b      	negs	r3, r3
 8002570:	429a      	cmp	r2, r3
 8002572:	dd09      	ble.n	8002588 <ST7789_DrawLine_Slow+0xc4>
		
      error -= deltaY;
 8002574:	8afa      	ldrh	r2, [r7, #22]
 8002576:	8a7b      	ldrh	r3, [r7, #18]
 8002578:	1ad3      	subs	r3, r2, r3
 800257a:	b29b      	uxth	r3, r3
 800257c:	82fb      	strh	r3, [r7, #22]
      x1 += signX;
 800257e:	88fa      	ldrh	r2, [r7, #6]
 8002580:	8a3b      	ldrh	r3, [r7, #16]
 8002582:	4413      	add	r3, r2
 8002584:	b29b      	uxth	r3, r3
 8002586:	80fb      	strh	r3, [r7, #6]
    }
    if (error2 < deltaX){
 8002588:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 800258c:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 8002590:	429a      	cmp	r2, r3
 8002592:	da09      	bge.n	80025a8 <ST7789_DrawLine_Slow+0xe4>
		
      error += deltaX;
 8002594:	8afa      	ldrh	r2, [r7, #22]
 8002596:	8abb      	ldrh	r3, [r7, #20]
 8002598:	4413      	add	r3, r2
 800259a:	b29b      	uxth	r3, r3
 800259c:	82fb      	strh	r3, [r7, #22]
      y1 += signY;
 800259e:	88ba      	ldrh	r2, [r7, #4]
 80025a0:	89fb      	ldrh	r3, [r7, #14]
 80025a2:	4413      	add	r3, r2
 80025a4:	b29b      	uxth	r3, r3
 80025a6:	80bb      	strh	r3, [r7, #4]
  while (x1 != x2 || y1 != y2) {
 80025a8:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 80025ac:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80025b0:	429a      	cmp	r2, r3
 80025b2:	d1cc      	bne.n	800254e <ST7789_DrawLine_Slow+0x8a>
 80025b4:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 80025b8:	f9b7 3000 	ldrsh.w	r3, [r7]
 80025bc:	429a      	cmp	r2, r3
 80025be:	d1c6      	bne.n	800254e <ST7789_DrawLine_Slow+0x8a>
    }
  }
}
 80025c0:	bf00      	nop
 80025c2:	bf00      	nop
 80025c4:	371c      	adds	r7, #28
 80025c6:	46bd      	mov	sp, r7
 80025c8:	bd90      	pop	{r4, r7, pc}

080025ca <ST7789_DrawLine>:


//==============================================================================
// Процедура рисования линии
//==============================================================================
void ST7789_DrawLine(int16_t x1, int16_t y1, int16_t x2, int16_t y2, uint16_t color) {
 80025ca:	b590      	push	{r4, r7, lr}
 80025cc:	b085      	sub	sp, #20
 80025ce:	af02      	add	r7, sp, #8
 80025d0:	4604      	mov	r4, r0
 80025d2:	4608      	mov	r0, r1
 80025d4:	4611      	mov	r1, r2
 80025d6:	461a      	mov	r2, r3
 80025d8:	4623      	mov	r3, r4
 80025da:	80fb      	strh	r3, [r7, #6]
 80025dc:	4603      	mov	r3, r0
 80025de:	80bb      	strh	r3, [r7, #4]
 80025e0:	460b      	mov	r3, r1
 80025e2:	807b      	strh	r3, [r7, #2]
 80025e4:	4613      	mov	r3, r2
 80025e6:	803b      	strh	r3, [r7, #0]

  if (x1 == x2){
 80025e8:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 80025ec:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80025f0:	429a      	cmp	r2, r3
 80025f2:	d129      	bne.n	8002648 <ST7789_DrawLine+0x7e>

    if (y1 > y2){
 80025f4:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 80025f8:	f9b7 3000 	ldrsh.w	r3, [r7]
 80025fc:	429a      	cmp	r2, r3
 80025fe:	dd11      	ble.n	8002624 <ST7789_DrawLine+0x5a>
      ST7789_FillRect(x1, y2, 1, y1 - y2 + 1, color);
 8002600:	88ba      	ldrh	r2, [r7, #4]
 8002602:	883b      	ldrh	r3, [r7, #0]
 8002604:	1ad3      	subs	r3, r2, r3
 8002606:	b29b      	uxth	r3, r3
 8002608:	3301      	adds	r3, #1
 800260a:	b29b      	uxth	r3, r3
 800260c:	b21a      	sxth	r2, r3
 800260e:	f9b7 1000 	ldrsh.w	r1, [r7]
 8002612:	f9b7 0006 	ldrsh.w	r0, [r7, #6]
 8002616:	8b3b      	ldrh	r3, [r7, #24]
 8002618:	9300      	str	r3, [sp, #0]
 800261a:	4613      	mov	r3, r2
 800261c:	2201      	movs	r2, #1
 800261e:	f7ff fe25 	bl	800226c <ST7789_FillRect>
	}
    else{
      ST7789_FillRect(x1, y1, 1, y2 - y1 + 1, color);
	}
	
    return;
 8002622:	e04c      	b.n	80026be <ST7789_DrawLine+0xf4>
      ST7789_FillRect(x1, y1, 1, y2 - y1 + 1, color);
 8002624:	883a      	ldrh	r2, [r7, #0]
 8002626:	88bb      	ldrh	r3, [r7, #4]
 8002628:	1ad3      	subs	r3, r2, r3
 800262a:	b29b      	uxth	r3, r3
 800262c:	3301      	adds	r3, #1
 800262e:	b29b      	uxth	r3, r3
 8002630:	b21a      	sxth	r2, r3
 8002632:	f9b7 1004 	ldrsh.w	r1, [r7, #4]
 8002636:	f9b7 0006 	ldrsh.w	r0, [r7, #6]
 800263a:	8b3b      	ldrh	r3, [r7, #24]
 800263c:	9300      	str	r3, [sp, #0]
 800263e:	4613      	mov	r3, r2
 8002640:	2201      	movs	r2, #1
 8002642:	f7ff fe13 	bl	800226c <ST7789_FillRect>
    return;
 8002646:	e03a      	b.n	80026be <ST7789_DrawLine+0xf4>
  }
  
  if (y1 == y2){
 8002648:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 800264c:	f9b7 3000 	ldrsh.w	r3, [r7]
 8002650:	429a      	cmp	r2, r3
 8002652:	d127      	bne.n	80026a4 <ST7789_DrawLine+0xda>
    
    if (x1 > x2){
 8002654:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8002658:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800265c:	429a      	cmp	r2, r3
 800265e:	dd10      	ble.n	8002682 <ST7789_DrawLine+0xb8>
      ST7789_FillRect(x2, y1, x1 - x2 + 1, 1, color);
 8002660:	88fa      	ldrh	r2, [r7, #6]
 8002662:	887b      	ldrh	r3, [r7, #2]
 8002664:	1ad3      	subs	r3, r2, r3
 8002666:	b29b      	uxth	r3, r3
 8002668:	3301      	adds	r3, #1
 800266a:	b29b      	uxth	r3, r3
 800266c:	b21a      	sxth	r2, r3
 800266e:	f9b7 1004 	ldrsh.w	r1, [r7, #4]
 8002672:	f9b7 0002 	ldrsh.w	r0, [r7, #2]
 8002676:	8b3b      	ldrh	r3, [r7, #24]
 8002678:	9300      	str	r3, [sp, #0]
 800267a:	2301      	movs	r3, #1
 800267c:	f7ff fdf6 	bl	800226c <ST7789_FillRect>
	}
    else{
      ST7789_FillRect(x1, y1, x2 - x1 + 1, 1, color);
	}
	
    return;
 8002680:	e01d      	b.n	80026be <ST7789_DrawLine+0xf4>
      ST7789_FillRect(x1, y1, x2 - x1 + 1, 1, color);
 8002682:	887a      	ldrh	r2, [r7, #2]
 8002684:	88fb      	ldrh	r3, [r7, #6]
 8002686:	1ad3      	subs	r3, r2, r3
 8002688:	b29b      	uxth	r3, r3
 800268a:	3301      	adds	r3, #1
 800268c:	b29b      	uxth	r3, r3
 800268e:	b21a      	sxth	r2, r3
 8002690:	f9b7 1004 	ldrsh.w	r1, [r7, #4]
 8002694:	f9b7 0006 	ldrsh.w	r0, [r7, #6]
 8002698:	8b3b      	ldrh	r3, [r7, #24]
 800269a:	9300      	str	r3, [sp, #0]
 800269c:	2301      	movs	r3, #1
 800269e:	f7ff fde5 	bl	800226c <ST7789_FillRect>
    return;
 80026a2:	e00c      	b.n	80026be <ST7789_DrawLine+0xf4>
  }
  
  ST7789_DrawLine_Slow(x1, y1, x2, y2, color);
 80026a4:	f9b7 4000 	ldrsh.w	r4, [r7]
 80026a8:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80026ac:	f9b7 1004 	ldrsh.w	r1, [r7, #4]
 80026b0:	f9b7 0006 	ldrsh.w	r0, [r7, #6]
 80026b4:	8b3b      	ldrh	r3, [r7, #24]
 80026b6:	9300      	str	r3, [sp, #0]
 80026b8:	4623      	mov	r3, r4
 80026ba:	f7ff ff03 	bl	80024c4 <ST7789_DrawLine_Slow>
}
 80026be:	370c      	adds	r7, #12
 80026c0:	46bd      	mov	sp, r7
 80026c2:	bd90      	pop	{r4, r7, pc}

080026c4 <ST7789_DrawPixel>:


//==============================================================================
// Процедура окрашивает 1 пиксель дисплея
//==============================================================================
void ST7789_DrawPixel(int16_t x, int16_t y, uint16_t color){
 80026c4:	b580      	push	{r7, lr}
 80026c6:	b082      	sub	sp, #8
 80026c8:	af00      	add	r7, sp, #0
 80026ca:	4603      	mov	r3, r0
 80026cc:	80fb      	strh	r3, [r7, #6]
 80026ce:	460b      	mov	r3, r1
 80026d0:	80bb      	strh	r3, [r7, #4]
 80026d2:	4613      	mov	r3, r2
 80026d4:	807b      	strh	r3, [r7, #2]
	
  if ((x < 0) ||(x >= ST7789_Width) || (y < 0) || (y >= ST7789_Height)){
 80026d6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80026da:	2b00      	cmp	r3, #0
 80026dc:	db1b      	blt.n	8002716 <ST7789_DrawPixel+0x52>
 80026de:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80026e2:	4a0f      	ldr	r2, [pc, #60]	; (8002720 <ST7789_DrawPixel+0x5c>)
 80026e4:	8812      	ldrh	r2, [r2, #0]
 80026e6:	4293      	cmp	r3, r2
 80026e8:	da15      	bge.n	8002716 <ST7789_DrawPixel+0x52>
 80026ea:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80026ee:	2b00      	cmp	r3, #0
 80026f0:	db11      	blt.n	8002716 <ST7789_DrawPixel+0x52>
 80026f2:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80026f6:	4a0b      	ldr	r2, [pc, #44]	; (8002724 <ST7789_DrawPixel+0x60>)
 80026f8:	8812      	ldrh	r2, [r2, #0]
 80026fa:	4293      	cmp	r3, r2
 80026fc:	da0b      	bge.n	8002716 <ST7789_DrawPixel+0x52>
    return;
  }

  ST7789_SetWindow(x, y, x, y);
 80026fe:	88f8      	ldrh	r0, [r7, #6]
 8002700:	88b9      	ldrh	r1, [r7, #4]
 8002702:	88fa      	ldrh	r2, [r7, #6]
 8002704:	88bb      	ldrh	r3, [r7, #4]
 8002706:	f7ff fe0f 	bl	8002328 <ST7789_SetWindow>
  ST7789_RamWrite(&color, 1);
 800270a:	1cbb      	adds	r3, r7, #2
 800270c:	2101      	movs	r1, #1
 800270e:	4618      	mov	r0, r3
 8002710:	f7ff fe30 	bl	8002374 <ST7789_RamWrite>
 8002714:	e000      	b.n	8002718 <ST7789_DrawPixel+0x54>
    return;
 8002716:	bf00      	nop
}
 8002718:	3708      	adds	r7, #8
 800271a:	46bd      	mov	sp, r7
 800271c:	bd80      	pop	{r7, pc}
 800271e:	bf00      	nop
 8002720:	200005a0 	.word	0x200005a0
 8002724:	200005a2 	.word	0x200005a2

08002728 <ST7789_DrawCircleFilled>:


//==============================================================================
// Процедура рисования круг ( заполненый )
//==============================================================================
void ST7789_DrawCircleFilled(int16_t x0, int16_t y0, int16_t radius, uint16_t fillcolor) {
 8002728:	b590      	push	{r4, r7, lr}
 800272a:	b089      	sub	sp, #36	; 0x24
 800272c:	af02      	add	r7, sp, #8
 800272e:	4604      	mov	r4, r0
 8002730:	4608      	mov	r0, r1
 8002732:	4611      	mov	r1, r2
 8002734:	461a      	mov	r2, r3
 8002736:	4623      	mov	r3, r4
 8002738:	80fb      	strh	r3, [r7, #6]
 800273a:	4603      	mov	r3, r0
 800273c:	80bb      	strh	r3, [r7, #4]
 800273e:	460b      	mov	r3, r1
 8002740:	807b      	strh	r3, [r7, #2]
 8002742:	4613      	mov	r3, r2
 8002744:	803b      	strh	r3, [r7, #0]
	
  int x = 0;
 8002746:	2300      	movs	r3, #0
 8002748:	617b      	str	r3, [r7, #20]
  int y = radius;
 800274a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800274e:	613b      	str	r3, [r7, #16]
  int delta = 1 - 2 * radius;
 8002750:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8002754:	005b      	lsls	r3, r3, #1
 8002756:	f1c3 0301 	rsb	r3, r3, #1
 800275a:	60fb      	str	r3, [r7, #12]
  int error = 0;
 800275c:	2300      	movs	r3, #0
 800275e:	60bb      	str	r3, [r7, #8]

  while (y >= 0){
 8002760:	e075      	b.n	800284e <ST7789_DrawCircleFilled+0x126>
	  
    ST7789_DrawLine(x0 + x, y0 - y, x0 + x, y0 + y, fillcolor);
 8002762:	697b      	ldr	r3, [r7, #20]
 8002764:	b29a      	uxth	r2, r3
 8002766:	88fb      	ldrh	r3, [r7, #6]
 8002768:	4413      	add	r3, r2
 800276a:	b29b      	uxth	r3, r3
 800276c:	b218      	sxth	r0, r3
 800276e:	88ba      	ldrh	r2, [r7, #4]
 8002770:	693b      	ldr	r3, [r7, #16]
 8002772:	b29b      	uxth	r3, r3
 8002774:	1ad3      	subs	r3, r2, r3
 8002776:	b29b      	uxth	r3, r3
 8002778:	b219      	sxth	r1, r3
 800277a:	697b      	ldr	r3, [r7, #20]
 800277c:	b29a      	uxth	r2, r3
 800277e:	88fb      	ldrh	r3, [r7, #6]
 8002780:	4413      	add	r3, r2
 8002782:	b29b      	uxth	r3, r3
 8002784:	b21c      	sxth	r4, r3
 8002786:	693b      	ldr	r3, [r7, #16]
 8002788:	b29a      	uxth	r2, r3
 800278a:	88bb      	ldrh	r3, [r7, #4]
 800278c:	4413      	add	r3, r2
 800278e:	b29b      	uxth	r3, r3
 8002790:	b21a      	sxth	r2, r3
 8002792:	883b      	ldrh	r3, [r7, #0]
 8002794:	9300      	str	r3, [sp, #0]
 8002796:	4613      	mov	r3, r2
 8002798:	4622      	mov	r2, r4
 800279a:	f7ff ff16 	bl	80025ca <ST7789_DrawLine>
    ST7789_DrawLine(x0 - x, y0 - y, x0 - x, y0 + y, fillcolor);
 800279e:	88fa      	ldrh	r2, [r7, #6]
 80027a0:	697b      	ldr	r3, [r7, #20]
 80027a2:	b29b      	uxth	r3, r3
 80027a4:	1ad3      	subs	r3, r2, r3
 80027a6:	b29b      	uxth	r3, r3
 80027a8:	b218      	sxth	r0, r3
 80027aa:	88ba      	ldrh	r2, [r7, #4]
 80027ac:	693b      	ldr	r3, [r7, #16]
 80027ae:	b29b      	uxth	r3, r3
 80027b0:	1ad3      	subs	r3, r2, r3
 80027b2:	b29b      	uxth	r3, r3
 80027b4:	b219      	sxth	r1, r3
 80027b6:	88fa      	ldrh	r2, [r7, #6]
 80027b8:	697b      	ldr	r3, [r7, #20]
 80027ba:	b29b      	uxth	r3, r3
 80027bc:	1ad3      	subs	r3, r2, r3
 80027be:	b29b      	uxth	r3, r3
 80027c0:	b21c      	sxth	r4, r3
 80027c2:	693b      	ldr	r3, [r7, #16]
 80027c4:	b29a      	uxth	r2, r3
 80027c6:	88bb      	ldrh	r3, [r7, #4]
 80027c8:	4413      	add	r3, r2
 80027ca:	b29b      	uxth	r3, r3
 80027cc:	b21a      	sxth	r2, r3
 80027ce:	883b      	ldrh	r3, [r7, #0]
 80027d0:	9300      	str	r3, [sp, #0]
 80027d2:	4613      	mov	r3, r2
 80027d4:	4622      	mov	r2, r4
 80027d6:	f7ff fef8 	bl	80025ca <ST7789_DrawLine>
    error = 2 * (delta + y) - 1;
 80027da:	68fa      	ldr	r2, [r7, #12]
 80027dc:	693b      	ldr	r3, [r7, #16]
 80027de:	4413      	add	r3, r2
 80027e0:	005b      	lsls	r3, r3, #1
 80027e2:	3b01      	subs	r3, #1
 80027e4:	60bb      	str	r3, [r7, #8]

    if (delta < 0 && error <= 0) {
 80027e6:	68fb      	ldr	r3, [r7, #12]
 80027e8:	2b00      	cmp	r3, #0
 80027ea:	da0c      	bge.n	8002806 <ST7789_DrawCircleFilled+0xde>
 80027ec:	68bb      	ldr	r3, [r7, #8]
 80027ee:	2b00      	cmp	r3, #0
 80027f0:	dc09      	bgt.n	8002806 <ST7789_DrawCircleFilled+0xde>
		
      ++x;
 80027f2:	697b      	ldr	r3, [r7, #20]
 80027f4:	3301      	adds	r3, #1
 80027f6:	617b      	str	r3, [r7, #20]
      delta += 2 * x + 1;
 80027f8:	697b      	ldr	r3, [r7, #20]
 80027fa:	005b      	lsls	r3, r3, #1
 80027fc:	3301      	adds	r3, #1
 80027fe:	68fa      	ldr	r2, [r7, #12]
 8002800:	4413      	add	r3, r2
 8002802:	60fb      	str	r3, [r7, #12]
      continue;
 8002804:	e023      	b.n	800284e <ST7789_DrawCircleFilled+0x126>
    }
	
    error = 2 * (delta - x) - 1;
 8002806:	68fa      	ldr	r2, [r7, #12]
 8002808:	697b      	ldr	r3, [r7, #20]
 800280a:	1ad3      	subs	r3, r2, r3
 800280c:	005b      	lsls	r3, r3, #1
 800280e:	3b01      	subs	r3, #1
 8002810:	60bb      	str	r3, [r7, #8]
		
    if (delta > 0 && error > 0) {
 8002812:	68fb      	ldr	r3, [r7, #12]
 8002814:	2b00      	cmp	r3, #0
 8002816:	dd0d      	ble.n	8002834 <ST7789_DrawCircleFilled+0x10c>
 8002818:	68bb      	ldr	r3, [r7, #8]
 800281a:	2b00      	cmp	r3, #0
 800281c:	dd0a      	ble.n	8002834 <ST7789_DrawCircleFilled+0x10c>
		
      --y;
 800281e:	693b      	ldr	r3, [r7, #16]
 8002820:	3b01      	subs	r3, #1
 8002822:	613b      	str	r3, [r7, #16]
      delta += 1 - 2 * y;
 8002824:	693b      	ldr	r3, [r7, #16]
 8002826:	005b      	lsls	r3, r3, #1
 8002828:	f1c3 0301 	rsb	r3, r3, #1
 800282c:	68fa      	ldr	r2, [r7, #12]
 800282e:	4413      	add	r3, r2
 8002830:	60fb      	str	r3, [r7, #12]
      continue;
 8002832:	e00c      	b.n	800284e <ST7789_DrawCircleFilled+0x126>
    }
	
    ++x;
 8002834:	697b      	ldr	r3, [r7, #20]
 8002836:	3301      	adds	r3, #1
 8002838:	617b      	str	r3, [r7, #20]
    delta += 2 * (x - y);
 800283a:	697a      	ldr	r2, [r7, #20]
 800283c:	693b      	ldr	r3, [r7, #16]
 800283e:	1ad3      	subs	r3, r2, r3
 8002840:	005b      	lsls	r3, r3, #1
 8002842:	68fa      	ldr	r2, [r7, #12]
 8002844:	4413      	add	r3, r2
 8002846:	60fb      	str	r3, [r7, #12]
    --y;
 8002848:	693b      	ldr	r3, [r7, #16]
 800284a:	3b01      	subs	r3, #1
 800284c:	613b      	str	r3, [r7, #16]
  while (y >= 0){
 800284e:	693b      	ldr	r3, [r7, #16]
 8002850:	2b00      	cmp	r3, #0
 8002852:	da86      	bge.n	8002762 <ST7789_DrawCircleFilled+0x3a>
  }
}
 8002854:	bf00      	nop
 8002856:	bf00      	nop
 8002858:	371c      	adds	r7, #28
 800285a:	46bd      	mov	sp, r7
 800285c:	bd90      	pop	{r4, r7, pc}
	...

08002860 <ST7789_DrawChar>:


//==============================================================================
// Процедура рисования символа ( 1 буква или знак )
//==============================================================================
void ST7789_DrawChar(uint16_t x, uint16_t y, uint16_t TextColor, uint16_t BgColor, uint8_t TransparentBg, FontDef_t* Font, uint8_t multiplier, unsigned char ch){
 8002860:	b590      	push	{r4, r7, lr}
 8002862:	b089      	sub	sp, #36	; 0x24
 8002864:	af00      	add	r7, sp, #0
 8002866:	4604      	mov	r4, r0
 8002868:	4608      	mov	r0, r1
 800286a:	4611      	mov	r1, r2
 800286c:	461a      	mov	r2, r3
 800286e:	4623      	mov	r3, r4
 8002870:	80fb      	strh	r3, [r7, #6]
 8002872:	4603      	mov	r3, r0
 8002874:	80bb      	strh	r3, [r7, #4]
 8002876:	460b      	mov	r3, r1
 8002878:	807b      	strh	r3, [r7, #2]
 800287a:	4613      	mov	r3, r2
 800287c:	803b      	strh	r3, [r7, #0]
	
	uint32_t i, b, j;
	
	uint32_t X = x, Y = y;
 800287e:	88fb      	ldrh	r3, [r7, #6]
 8002880:	613b      	str	r3, [r7, #16]
 8002882:	88bb      	ldrh	r3, [r7, #4]
 8002884:	60fb      	str	r3, [r7, #12]
	
	uint8_t xx, yy;
	
	if( multiplier < 1 ){
 8002886:	f897 3038 	ldrb.w	r3, [r7, #56]	; 0x38
 800288a:	2b00      	cmp	r3, #0
 800288c:	d102      	bne.n	8002894 <ST7789_DrawChar+0x34>
		multiplier = 1;
 800288e:	2301      	movs	r3, #1
 8002890:	f887 3038 	strb.w	r3, [r7, #56]	; 0x38
	}

	/* Check available space in LCD */
	if (ST7789_Width >= ( x + Font->FontWidth) || ST7789_Height >= ( y + Font->FontHeight)){
 8002894:	4b90      	ldr	r3, [pc, #576]	; (8002ad8 <ST7789_DrawChar+0x278>)
 8002896:	881b      	ldrh	r3, [r3, #0]
 8002898:	4619      	mov	r1, r3
 800289a:	88fb      	ldrh	r3, [r7, #6]
 800289c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800289e:	7812      	ldrb	r2, [r2, #0]
 80028a0:	4413      	add	r3, r2
 80028a2:	4299      	cmp	r1, r3
 80028a4:	da09      	bge.n	80028ba <ST7789_DrawChar+0x5a>
 80028a6:	4b8d      	ldr	r3, [pc, #564]	; (8002adc <ST7789_DrawChar+0x27c>)
 80028a8:	881b      	ldrh	r3, [r3, #0]
 80028aa:	4619      	mov	r1, r3
 80028ac:	88bb      	ldrh	r3, [r7, #4]
 80028ae:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80028b0:	7852      	ldrb	r2, [r2, #1]
 80028b2:	4413      	add	r3, r2
 80028b4:	4299      	cmp	r1, r3
 80028b6:	f2c0 8154 	blt.w	8002b62 <ST7789_DrawChar+0x302>

	
			/* Go through font */
			for (i = 0; i < Font->FontHeight; i++) {		
 80028ba:	2300      	movs	r3, #0
 80028bc:	61fb      	str	r3, [r7, #28]
 80028be:	e149      	b.n	8002b54 <ST7789_DrawChar+0x2f4>
				
				if( ch < 127 ){			
 80028c0:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 80028c4:	2b7e      	cmp	r3, #126	; 0x7e
 80028c6:	d810      	bhi.n	80028ea <ST7789_DrawChar+0x8a>
					b = Font->data[(ch - 32) * Font->FontHeight + i];
 80028c8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80028ca:	685a      	ldr	r2, [r3, #4]
 80028cc:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 80028d0:	3b20      	subs	r3, #32
 80028d2:	6b79      	ldr	r1, [r7, #52]	; 0x34
 80028d4:	7849      	ldrb	r1, [r1, #1]
 80028d6:	fb01 f303 	mul.w	r3, r1, r3
 80028da:	4619      	mov	r1, r3
 80028dc:	69fb      	ldr	r3, [r7, #28]
 80028de:	440b      	add	r3, r1
 80028e0:	005b      	lsls	r3, r3, #1
 80028e2:	4413      	add	r3, r2
 80028e4:	881b      	ldrh	r3, [r3, #0]
 80028e6:	61bb      	str	r3, [r7, #24]
 80028e8:	e0b8      	b.n	8002a5c <ST7789_DrawChar+0x1fc>
				}
				
				else if( (uint8_t) ch > 191 ){
 80028ea:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 80028ee:	2bbf      	cmp	r3, #191	; 0xbf
 80028f0:	d910      	bls.n	8002914 <ST7789_DrawChar+0xb4>
					// +96 это так как латинские символы и знаки в шрифтах занимают 96 позиций
					// и если в шрифте который содержит сперва латиницу и спец символы и потом 
					// только кирилицу то нужно добавлять 95 если шрифт 
					// содержит только кирилицу то +96 не нужно
					b = Font->data[((ch - 192) + 96) * Font->FontHeight + i];
 80028f2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80028f4:	685a      	ldr	r2, [r3, #4]
 80028f6:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 80028fa:	3b60      	subs	r3, #96	; 0x60
 80028fc:	6b79      	ldr	r1, [r7, #52]	; 0x34
 80028fe:	7849      	ldrb	r1, [r1, #1]
 8002900:	fb01 f303 	mul.w	r3, r1, r3
 8002904:	4619      	mov	r1, r3
 8002906:	69fb      	ldr	r3, [r7, #28]
 8002908:	440b      	add	r3, r1
 800290a:	005b      	lsls	r3, r3, #1
 800290c:	4413      	add	r3, r2
 800290e:	881b      	ldrh	r3, [r3, #0]
 8002910:	61bb      	str	r3, [r7, #24]
 8002912:	e0a3      	b.n	8002a5c <ST7789_DrawChar+0x1fc>
				}
				
				else if( (uint8_t) ch == 168 ){	// 168 символ по ASCII - Ё
 8002914:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 8002918:	2ba8      	cmp	r3, #168	; 0xa8
 800291a:	d110      	bne.n	800293e <ST7789_DrawChar+0xde>
					// 160 эллемент ( символ Ё ) 
					b = Font->data[( 160 ) * Font->FontHeight + i];
 800291c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800291e:	685a      	ldr	r2, [r3, #4]
 8002920:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002922:	785b      	ldrb	r3, [r3, #1]
 8002924:	4619      	mov	r1, r3
 8002926:	460b      	mov	r3, r1
 8002928:	009b      	lsls	r3, r3, #2
 800292a:	440b      	add	r3, r1
 800292c:	015b      	lsls	r3, r3, #5
 800292e:	4619      	mov	r1, r3
 8002930:	69fb      	ldr	r3, [r7, #28]
 8002932:	440b      	add	r3, r1
 8002934:	005b      	lsls	r3, r3, #1
 8002936:	4413      	add	r3, r2
 8002938:	881b      	ldrh	r3, [r3, #0]
 800293a:	61bb      	str	r3, [r7, #24]
 800293c:	e08e      	b.n	8002a5c <ST7789_DrawChar+0x1fc>
				}
				
				else if( (uint8_t) ch == 184 ){	// 184 символ по ASCII - ё
 800293e:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 8002942:	2bb8      	cmp	r3, #184	; 0xb8
 8002944:	d111      	bne.n	800296a <ST7789_DrawChar+0x10a>
					// 161 эллемент  ( символ ё ) 
					b = Font->data[( 161 ) * Font->FontHeight + i];
 8002946:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002948:	6859      	ldr	r1, [r3, #4]
 800294a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800294c:	785b      	ldrb	r3, [r3, #1]
 800294e:	461a      	mov	r2, r3
 8002950:	4613      	mov	r3, r2
 8002952:	009b      	lsls	r3, r3, #2
 8002954:	4413      	add	r3, r2
 8002956:	015b      	lsls	r3, r3, #5
 8002958:	4413      	add	r3, r2
 800295a:	461a      	mov	r2, r3
 800295c:	69fb      	ldr	r3, [r7, #28]
 800295e:	4413      	add	r3, r2
 8002960:	005b      	lsls	r3, r3, #1
 8002962:	440b      	add	r3, r1
 8002964:	881b      	ldrh	r3, [r3, #0]
 8002966:	61bb      	str	r3, [r7, #24]
 8002968:	e078      	b.n	8002a5c <ST7789_DrawChar+0x1fc>
				}
				//-------------------------------------------------------------------
				
				//----  Украинская раскладка ----------------------------------------------------
				else if( (uint8_t) ch == 170 ){	// 168 символ по ASCII - Є
 800296a:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 800296e:	2baa      	cmp	r3, #170	; 0xaa
 8002970:	d10f      	bne.n	8002992 <ST7789_DrawChar+0x132>
					// 162 эллемент ( символ Є )
					b = Font->data[( 162 ) * Font->FontHeight + i];
 8002972:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002974:	685a      	ldr	r2, [r3, #4]
 8002976:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002978:	785b      	ldrb	r3, [r3, #1]
 800297a:	4619      	mov	r1, r3
 800297c:	23a2      	movs	r3, #162	; 0xa2
 800297e:	fb01 f303 	mul.w	r3, r1, r3
 8002982:	4619      	mov	r1, r3
 8002984:	69fb      	ldr	r3, [r7, #28]
 8002986:	440b      	add	r3, r1
 8002988:	005b      	lsls	r3, r3, #1
 800298a:	4413      	add	r3, r2
 800298c:	881b      	ldrh	r3, [r3, #0]
 800298e:	61bb      	str	r3, [r7, #24]
 8002990:	e064      	b.n	8002a5c <ST7789_DrawChar+0x1fc>
				}
				else if( (uint8_t) ch == 175 ){	// 184 символ по ASCII - Ї
 8002992:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 8002996:	2baf      	cmp	r3, #175	; 0xaf
 8002998:	d10f      	bne.n	80029ba <ST7789_DrawChar+0x15a>
					// 163 эллемент  ( символ Ї )
					b = Font->data[( 163 ) * Font->FontHeight + i];
 800299a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800299c:	685a      	ldr	r2, [r3, #4]
 800299e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80029a0:	785b      	ldrb	r3, [r3, #1]
 80029a2:	4619      	mov	r1, r3
 80029a4:	23a3      	movs	r3, #163	; 0xa3
 80029a6:	fb01 f303 	mul.w	r3, r1, r3
 80029aa:	4619      	mov	r1, r3
 80029ac:	69fb      	ldr	r3, [r7, #28]
 80029ae:	440b      	add	r3, r1
 80029b0:	005b      	lsls	r3, r3, #1
 80029b2:	4413      	add	r3, r2
 80029b4:	881b      	ldrh	r3, [r3, #0]
 80029b6:	61bb      	str	r3, [r7, #24]
 80029b8:	e050      	b.n	8002a5c <ST7789_DrawChar+0x1fc>
				}
				else if( (uint8_t) ch == 178 ){	// 168 символ по ASCII - І
 80029ba:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 80029be:	2bb2      	cmp	r3, #178	; 0xb2
 80029c0:	d10f      	bne.n	80029e2 <ST7789_DrawChar+0x182>
					// 164 эллемент ( символ І )
					b = Font->data[( 164 ) * Font->FontHeight + i];
 80029c2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80029c4:	685a      	ldr	r2, [r3, #4]
 80029c6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80029c8:	785b      	ldrb	r3, [r3, #1]
 80029ca:	4619      	mov	r1, r3
 80029cc:	23a4      	movs	r3, #164	; 0xa4
 80029ce:	fb01 f303 	mul.w	r3, r1, r3
 80029d2:	4619      	mov	r1, r3
 80029d4:	69fb      	ldr	r3, [r7, #28]
 80029d6:	440b      	add	r3, r1
 80029d8:	005b      	lsls	r3, r3, #1
 80029da:	4413      	add	r3, r2
 80029dc:	881b      	ldrh	r3, [r3, #0]
 80029de:	61bb      	str	r3, [r7, #24]
 80029e0:	e03c      	b.n	8002a5c <ST7789_DrawChar+0x1fc>
				}
				else if( (uint8_t) ch == 179 ){	// 184 символ по ASCII - і
 80029e2:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 80029e6:	2bb3      	cmp	r3, #179	; 0xb3
 80029e8:	d111      	bne.n	8002a0e <ST7789_DrawChar+0x1ae>
					// 165 эллемент  ( символ і )
					b = Font->data[( 165 ) * Font->FontHeight + i];
 80029ea:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80029ec:	685a      	ldr	r2, [r3, #4]
 80029ee:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80029f0:	785b      	ldrb	r3, [r3, #1]
 80029f2:	4619      	mov	r1, r3
 80029f4:	460b      	mov	r3, r1
 80029f6:	009b      	lsls	r3, r3, #2
 80029f8:	440b      	add	r3, r1
 80029fa:	0159      	lsls	r1, r3, #5
 80029fc:	440b      	add	r3, r1
 80029fe:	4619      	mov	r1, r3
 8002a00:	69fb      	ldr	r3, [r7, #28]
 8002a02:	440b      	add	r3, r1
 8002a04:	005b      	lsls	r3, r3, #1
 8002a06:	4413      	add	r3, r2
 8002a08:	881b      	ldrh	r3, [r3, #0]
 8002a0a:	61bb      	str	r3, [r7, #24]
 8002a0c:	e026      	b.n	8002a5c <ST7789_DrawChar+0x1fc>
				}
				else if( (uint8_t) ch == 186 ){	// 184 символ по ASCII - є
 8002a0e:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 8002a12:	2bba      	cmp	r3, #186	; 0xba
 8002a14:	d10f      	bne.n	8002a36 <ST7789_DrawChar+0x1d6>
					// 166 эллемент  ( символ є )
					b = Font->data[( 166 ) * Font->FontHeight + i];
 8002a16:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002a18:	685a      	ldr	r2, [r3, #4]
 8002a1a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002a1c:	785b      	ldrb	r3, [r3, #1]
 8002a1e:	4619      	mov	r1, r3
 8002a20:	23a6      	movs	r3, #166	; 0xa6
 8002a22:	fb01 f303 	mul.w	r3, r1, r3
 8002a26:	4619      	mov	r1, r3
 8002a28:	69fb      	ldr	r3, [r7, #28]
 8002a2a:	440b      	add	r3, r1
 8002a2c:	005b      	lsls	r3, r3, #1
 8002a2e:	4413      	add	r3, r2
 8002a30:	881b      	ldrh	r3, [r3, #0]
 8002a32:	61bb      	str	r3, [r7, #24]
 8002a34:	e012      	b.n	8002a5c <ST7789_DrawChar+0x1fc>
				}
				else if( (uint8_t) ch == 191 ){	// 168 символ по ASCII - ї
 8002a36:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 8002a3a:	2bbf      	cmp	r3, #191	; 0xbf
 8002a3c:	d10e      	bne.n	8002a5c <ST7789_DrawChar+0x1fc>
					// 167 эллемент ( символ ї )
					b = Font->data[( 167 ) * Font->FontHeight + i];
 8002a3e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002a40:	685a      	ldr	r2, [r3, #4]
 8002a42:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002a44:	785b      	ldrb	r3, [r3, #1]
 8002a46:	4619      	mov	r1, r3
 8002a48:	23a7      	movs	r3, #167	; 0xa7
 8002a4a:	fb01 f303 	mul.w	r3, r1, r3
 8002a4e:	4619      	mov	r1, r3
 8002a50:	69fb      	ldr	r3, [r7, #28]
 8002a52:	440b      	add	r3, r1
 8002a54:	005b      	lsls	r3, r3, #1
 8002a56:	4413      	add	r3, r2
 8002a58:	881b      	ldrh	r3, [r3, #0]
 8002a5a:	61bb      	str	r3, [r7, #24]
				}
				//-----------------------------------------------------------------------------
			
				for (j = 0; j < Font->FontWidth; j++) {
 8002a5c:	2300      	movs	r3, #0
 8002a5e:	617b      	str	r3, [r7, #20]
 8002a60:	e068      	b.n	8002b34 <ST7789_DrawChar+0x2d4>
					
					if ((b << j) & 0x8000) {
 8002a62:	69ba      	ldr	r2, [r7, #24]
 8002a64:	697b      	ldr	r3, [r7, #20]
 8002a66:	fa02 f303 	lsl.w	r3, r2, r3
 8002a6a:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8002a6e:	2b00      	cmp	r3, #0
 8002a70:	d028      	beq.n	8002ac4 <ST7789_DrawChar+0x264>
						
						for (yy = 0; yy < multiplier; yy++){
 8002a72:	2300      	movs	r3, #0
 8002a74:	72bb      	strb	r3, [r7, #10]
 8002a76:	e01f      	b.n	8002ab8 <ST7789_DrawChar+0x258>
							for (xx = 0; xx < multiplier; xx++){
 8002a78:	2300      	movs	r3, #0
 8002a7a:	72fb      	strb	r3, [r7, #11]
 8002a7c:	e014      	b.n	8002aa8 <ST7789_DrawChar+0x248>
									ST7789_DrawPixel(X+xx, Y+yy, TextColor);
 8002a7e:	7afb      	ldrb	r3, [r7, #11]
 8002a80:	b29a      	uxth	r2, r3
 8002a82:	693b      	ldr	r3, [r7, #16]
 8002a84:	b29b      	uxth	r3, r3
 8002a86:	4413      	add	r3, r2
 8002a88:	b29b      	uxth	r3, r3
 8002a8a:	b218      	sxth	r0, r3
 8002a8c:	7abb      	ldrb	r3, [r7, #10]
 8002a8e:	b29a      	uxth	r2, r3
 8002a90:	68fb      	ldr	r3, [r7, #12]
 8002a92:	b29b      	uxth	r3, r3
 8002a94:	4413      	add	r3, r2
 8002a96:	b29b      	uxth	r3, r3
 8002a98:	b21b      	sxth	r3, r3
 8002a9a:	887a      	ldrh	r2, [r7, #2]
 8002a9c:	4619      	mov	r1, r3
 8002a9e:	f7ff fe11 	bl	80026c4 <ST7789_DrawPixel>
							for (xx = 0; xx < multiplier; xx++){
 8002aa2:	7afb      	ldrb	r3, [r7, #11]
 8002aa4:	3301      	adds	r3, #1
 8002aa6:	72fb      	strb	r3, [r7, #11]
 8002aa8:	7afa      	ldrb	r2, [r7, #11]
 8002aaa:	f897 3038 	ldrb.w	r3, [r7, #56]	; 0x38
 8002aae:	429a      	cmp	r2, r3
 8002ab0:	d3e5      	bcc.n	8002a7e <ST7789_DrawChar+0x21e>
						for (yy = 0; yy < multiplier; yy++){
 8002ab2:	7abb      	ldrb	r3, [r7, #10]
 8002ab4:	3301      	adds	r3, #1
 8002ab6:	72bb      	strb	r3, [r7, #10]
 8002ab8:	7aba      	ldrb	r2, [r7, #10]
 8002aba:	f897 3038 	ldrb.w	r3, [r7, #56]	; 0x38
 8002abe:	429a      	cmp	r2, r3
 8002ac0:	d3da      	bcc.n	8002a78 <ST7789_DrawChar+0x218>
 8002ac2:	e02f      	b.n	8002b24 <ST7789_DrawChar+0x2c4>
							}
						}
						
					} 
					else if( TransparentBg ){
 8002ac4:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
 8002ac8:	2b00      	cmp	r3, #0
 8002aca:	d02b      	beq.n	8002b24 <ST7789_DrawChar+0x2c4>
						
						for (yy = 0; yy < multiplier; yy++){
 8002acc:	2300      	movs	r3, #0
 8002ace:	72bb      	strb	r3, [r7, #10]
 8002ad0:	e023      	b.n	8002b1a <ST7789_DrawChar+0x2ba>
							for (xx = 0; xx < multiplier; xx++){
 8002ad2:	2300      	movs	r3, #0
 8002ad4:	72fb      	strb	r3, [r7, #11]
 8002ad6:	e018      	b.n	8002b0a <ST7789_DrawChar+0x2aa>
 8002ad8:	200005a0 	.word	0x200005a0
 8002adc:	200005a2 	.word	0x200005a2
									ST7789_DrawPixel(X+xx, Y+yy, BgColor);
 8002ae0:	7afb      	ldrb	r3, [r7, #11]
 8002ae2:	b29a      	uxth	r2, r3
 8002ae4:	693b      	ldr	r3, [r7, #16]
 8002ae6:	b29b      	uxth	r3, r3
 8002ae8:	4413      	add	r3, r2
 8002aea:	b29b      	uxth	r3, r3
 8002aec:	b218      	sxth	r0, r3
 8002aee:	7abb      	ldrb	r3, [r7, #10]
 8002af0:	b29a      	uxth	r2, r3
 8002af2:	68fb      	ldr	r3, [r7, #12]
 8002af4:	b29b      	uxth	r3, r3
 8002af6:	4413      	add	r3, r2
 8002af8:	b29b      	uxth	r3, r3
 8002afa:	b21b      	sxth	r3, r3
 8002afc:	883a      	ldrh	r2, [r7, #0]
 8002afe:	4619      	mov	r1, r3
 8002b00:	f7ff fde0 	bl	80026c4 <ST7789_DrawPixel>
							for (xx = 0; xx < multiplier; xx++){
 8002b04:	7afb      	ldrb	r3, [r7, #11]
 8002b06:	3301      	adds	r3, #1
 8002b08:	72fb      	strb	r3, [r7, #11]
 8002b0a:	7afa      	ldrb	r2, [r7, #11]
 8002b0c:	f897 3038 	ldrb.w	r3, [r7, #56]	; 0x38
 8002b10:	429a      	cmp	r2, r3
 8002b12:	d3e5      	bcc.n	8002ae0 <ST7789_DrawChar+0x280>
						for (yy = 0; yy < multiplier; yy++){
 8002b14:	7abb      	ldrb	r3, [r7, #10]
 8002b16:	3301      	adds	r3, #1
 8002b18:	72bb      	strb	r3, [r7, #10]
 8002b1a:	7aba      	ldrb	r2, [r7, #10]
 8002b1c:	f897 3038 	ldrb.w	r3, [r7, #56]	; 0x38
 8002b20:	429a      	cmp	r2, r3
 8002b22:	d3d6      	bcc.n	8002ad2 <ST7789_DrawChar+0x272>
							}
						}
						
					}
					X = X + multiplier;
 8002b24:	f897 3038 	ldrb.w	r3, [r7, #56]	; 0x38
 8002b28:	693a      	ldr	r2, [r7, #16]
 8002b2a:	4413      	add	r3, r2
 8002b2c:	613b      	str	r3, [r7, #16]
				for (j = 0; j < Font->FontWidth; j++) {
 8002b2e:	697b      	ldr	r3, [r7, #20]
 8002b30:	3301      	adds	r3, #1
 8002b32:	617b      	str	r3, [r7, #20]
 8002b34:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002b36:	781b      	ldrb	r3, [r3, #0]
 8002b38:	461a      	mov	r2, r3
 8002b3a:	697b      	ldr	r3, [r7, #20]
 8002b3c:	4293      	cmp	r3, r2
 8002b3e:	d390      	bcc.n	8002a62 <ST7789_DrawChar+0x202>
				}
				X = x;
 8002b40:	88fb      	ldrh	r3, [r7, #6]
 8002b42:	613b      	str	r3, [r7, #16]
				Y = Y + multiplier;
 8002b44:	f897 3038 	ldrb.w	r3, [r7, #56]	; 0x38
 8002b48:	68fa      	ldr	r2, [r7, #12]
 8002b4a:	4413      	add	r3, r2
 8002b4c:	60fb      	str	r3, [r7, #12]
			for (i = 0; i < Font->FontHeight; i++) {		
 8002b4e:	69fb      	ldr	r3, [r7, #28]
 8002b50:	3301      	adds	r3, #1
 8002b52:	61fb      	str	r3, [r7, #28]
 8002b54:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002b56:	785b      	ldrb	r3, [r3, #1]
 8002b58:	461a      	mov	r2, r3
 8002b5a:	69fb      	ldr	r3, [r7, #28]
 8002b5c:	4293      	cmp	r3, r2
 8002b5e:	f4ff aeaf 	bcc.w	80028c0 <ST7789_DrawChar+0x60>
			}
	}
}
 8002b62:	bf00      	nop
 8002b64:	3724      	adds	r7, #36	; 0x24
 8002b66:	46bd      	mov	sp, r7
 8002b68:	bd90      	pop	{r4, r7, pc}
 8002b6a:	bf00      	nop

08002b6c <ST7789_print>:


//==============================================================================
// Процедура рисования строки
//==============================================================================
void ST7789_print(uint16_t x, uint16_t y, uint16_t TextColor, uint16_t BgColor, uint8_t TransparentBg, FontDef_t* Font, uint8_t multiplier, char *str){	
 8002b6c:	b590      	push	{r4, r7, lr}
 8002b6e:	b089      	sub	sp, #36	; 0x24
 8002b70:	af04      	add	r7, sp, #16
 8002b72:	4604      	mov	r4, r0
 8002b74:	4608      	mov	r0, r1
 8002b76:	4611      	mov	r1, r2
 8002b78:	461a      	mov	r2, r3
 8002b7a:	4623      	mov	r3, r4
 8002b7c:	80fb      	strh	r3, [r7, #6]
 8002b7e:	4603      	mov	r3, r0
 8002b80:	80bb      	strh	r3, [r7, #4]
 8002b82:	460b      	mov	r3, r1
 8002b84:	807b      	strh	r3, [r7, #2]
 8002b86:	4613      	mov	r3, r2
 8002b88:	803b      	strh	r3, [r7, #0]
	
	if( multiplier < 1 ){
 8002b8a:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8002b8e:	2b00      	cmp	r3, #0
 8002b90:	d102      	bne.n	8002b98 <ST7789_print+0x2c>
		multiplier = 1;
 8002b92:	2301      	movs	r3, #1
 8002b94:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	}
	
	unsigned char buff_char;
	
	uint16_t len = strlen(str);
 8002b98:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8002b9a:	f7fd fb21 	bl	80001e0 <strlen>
 8002b9e:	4603      	mov	r3, r0
 8002ba0:	81bb      	strh	r3, [r7, #12]
	
	while (len--) {
 8002ba2:	e09c      	b.n	8002cde <ST7789_print+0x172>
		//---------------------------------------------------------------------
		// проверка на кириллицу UTF-8, если латиница то пропускаем if
		// Расширенные символы ASCII Win-1251 кириллица (код символа 128-255)
		// проверяем первый байт из двух ( так как UTF-8 ето два байта )
		// если он больше либо равен 0xC0 ( первый байт в кириллеце будет равен 0xD0 либо 0xD1 именно в алфавите )
		if ( (uint8_t)*str >= 0xC0 ){	// код 0xC0 соответствует символу кириллица 'A' по ASCII Win-1251
 8002ba4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002ba6:	781b      	ldrb	r3, [r3, #0]
 8002ba8:	2bbf      	cmp	r3, #191	; 0xbf
 8002baa:	d977      	bls.n	8002c9c <ST7789_print+0x130>
			
			// проверяем какой именно байт первый 0xD0 либо 0xD1---------------------------------------------
			switch ((uint8_t)*str) {
 8002bac:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002bae:	781b      	ldrb	r3, [r3, #0]
 8002bb0:	2bd0      	cmp	r3, #208	; 0xd0
 8002bb2:	d002      	beq.n	8002bba <ST7789_print+0x4e>
 8002bb4:	2bd1      	cmp	r3, #209	; 0xd1
 8002bb6:	d02c      	beq.n	8002c12 <ST7789_print+0xa6>
 8002bb8:	e05b      	b.n	8002c72 <ST7789_print+0x106>
				case 0xD0: {
					// увеличиваем массив так как нам нужен второй байт
					str++;
 8002bba:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002bbc:	3301      	adds	r3, #1
 8002bbe:	62fb      	str	r3, [r7, #44]	; 0x2c
					// проверяем второй байт там сам символ
					if ((uint8_t)*str >= 0x90 && (uint8_t)*str <= 0xBF){ buff_char = (*str) + 0x30; }	// байт символов А...Я а...п  делаем здвиг на +48
 8002bc0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002bc2:	781b      	ldrb	r3, [r3, #0]
 8002bc4:	2b8f      	cmp	r3, #143	; 0x8f
 8002bc6:	d908      	bls.n	8002bda <ST7789_print+0x6e>
 8002bc8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002bca:	781b      	ldrb	r3, [r3, #0]
 8002bcc:	2bbf      	cmp	r3, #191	; 0xbf
 8002bce:	d804      	bhi.n	8002bda <ST7789_print+0x6e>
 8002bd0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002bd2:	781b      	ldrb	r3, [r3, #0]
 8002bd4:	3330      	adds	r3, #48	; 0x30
 8002bd6:	73fb      	strb	r3, [r7, #15]
					else if ((uint8_t)*str == 0x81) { buff_char = 0xA8; break; }		// байт символа Ё ( если нужнф еще символы добавляем тут и в функции DrawChar() )
					else if ((uint8_t)*str == 0x84) { buff_char = 0xAA; break; }		// байт символа Є ( если нужнф еще символы добавляем тут и в функции DrawChar() )
					else if ((uint8_t)*str == 0x86) { buff_char = 0xB2; break; }		// байт символа І ( если нужнф еще символы добавляем тут и в функции DrawChar() )
					else if ((uint8_t)*str == 0x87) { buff_char = 0xAF; break; }		// байт символа Ї ( если нужнф еще символы добавляем тут и в функции DrawChar() )
					break;
 8002bd8:	e048      	b.n	8002c6c <ST7789_print+0x100>
					else if ((uint8_t)*str == 0x81) { buff_char = 0xA8; break; }		// байт символа Ё ( если нужнф еще символы добавляем тут и в функции DrawChar() )
 8002bda:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002bdc:	781b      	ldrb	r3, [r3, #0]
 8002bde:	2b81      	cmp	r3, #129	; 0x81
 8002be0:	d102      	bne.n	8002be8 <ST7789_print+0x7c>
 8002be2:	23a8      	movs	r3, #168	; 0xa8
 8002be4:	73fb      	strb	r3, [r7, #15]
 8002be6:	e044      	b.n	8002c72 <ST7789_print+0x106>
					else if ((uint8_t)*str == 0x84) { buff_char = 0xAA; break; }		// байт символа Є ( если нужнф еще символы добавляем тут и в функции DrawChar() )
 8002be8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002bea:	781b      	ldrb	r3, [r3, #0]
 8002bec:	2b84      	cmp	r3, #132	; 0x84
 8002bee:	d102      	bne.n	8002bf6 <ST7789_print+0x8a>
 8002bf0:	23aa      	movs	r3, #170	; 0xaa
 8002bf2:	73fb      	strb	r3, [r7, #15]
 8002bf4:	e03d      	b.n	8002c72 <ST7789_print+0x106>
					else if ((uint8_t)*str == 0x86) { buff_char = 0xB2; break; }		// байт символа І ( если нужнф еще символы добавляем тут и в функции DrawChar() )
 8002bf6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002bf8:	781b      	ldrb	r3, [r3, #0]
 8002bfa:	2b86      	cmp	r3, #134	; 0x86
 8002bfc:	d102      	bne.n	8002c04 <ST7789_print+0x98>
 8002bfe:	23b2      	movs	r3, #178	; 0xb2
 8002c00:	73fb      	strb	r3, [r7, #15]
 8002c02:	e036      	b.n	8002c72 <ST7789_print+0x106>
					else if ((uint8_t)*str == 0x87) { buff_char = 0xAF; break; }		// байт символа Ї ( если нужнф еще символы добавляем тут и в функции DrawChar() )
 8002c04:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002c06:	781b      	ldrb	r3, [r3, #0]
 8002c08:	2b87      	cmp	r3, #135	; 0x87
 8002c0a:	d12f      	bne.n	8002c6c <ST7789_print+0x100>
 8002c0c:	23af      	movs	r3, #175	; 0xaf
 8002c0e:	73fb      	strb	r3, [r7, #15]
 8002c10:	e02f      	b.n	8002c72 <ST7789_print+0x106>
				}
				case 0xD1: {
					// увеличиваем массив так как нам нужен второй байт
					str++;
 8002c12:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002c14:	3301      	adds	r3, #1
 8002c16:	62fb      	str	r3, [r7, #44]	; 0x2c
					// проверяем второй байт там сам символ
					if ((uint8_t)*str >= 0x80 && (uint8_t)*str <= 0x8F){ buff_char = (*str) + 0x70; }	// байт символов п...я	елаем здвиг на +112
 8002c18:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002c1a:	781b      	ldrb	r3, [r3, #0]
 8002c1c:	b25b      	sxtb	r3, r3
 8002c1e:	2b00      	cmp	r3, #0
 8002c20:	da08      	bge.n	8002c34 <ST7789_print+0xc8>
 8002c22:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002c24:	781b      	ldrb	r3, [r3, #0]
 8002c26:	2b8f      	cmp	r3, #143	; 0x8f
 8002c28:	d804      	bhi.n	8002c34 <ST7789_print+0xc8>
 8002c2a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002c2c:	781b      	ldrb	r3, [r3, #0]
 8002c2e:	3370      	adds	r3, #112	; 0x70
 8002c30:	73fb      	strb	r3, [r7, #15]
					else if ((uint8_t)*str == 0x91) { buff_char = 0xB8; break; }		// байт символа ё ( если нужнф еще символы добавляем тут и в функции DrawChar() )
					else if ((uint8_t)*str == 0x94) { buff_char = 0xBA; break; }		// байт символа є ( если нужнф еще символы добавляем тут и в функции DrawChar() )
					else if ((uint8_t)*str == 0x96) { buff_char = 0xB3; break; }		// байт символа і ( если нужнф еще символы добавляем тут и в функции DrawChar() )
					else if ((uint8_t)*str == 0x97) { buff_char = 0xBF; break; }		// байт символа ї ( если нужнф еще символы добавляем тут и в функции DrawChar() )
					break;
 8002c32:	e01d      	b.n	8002c70 <ST7789_print+0x104>
					else if ((uint8_t)*str == 0x91) { buff_char = 0xB8; break; }		// байт символа ё ( если нужнф еще символы добавляем тут и в функции DrawChar() )
 8002c34:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002c36:	781b      	ldrb	r3, [r3, #0]
 8002c38:	2b91      	cmp	r3, #145	; 0x91
 8002c3a:	d102      	bne.n	8002c42 <ST7789_print+0xd6>
 8002c3c:	23b8      	movs	r3, #184	; 0xb8
 8002c3e:	73fb      	strb	r3, [r7, #15]
 8002c40:	e017      	b.n	8002c72 <ST7789_print+0x106>
					else if ((uint8_t)*str == 0x94) { buff_char = 0xBA; break; }		// байт символа є ( если нужнф еще символы добавляем тут и в функции DrawChar() )
 8002c42:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002c44:	781b      	ldrb	r3, [r3, #0]
 8002c46:	2b94      	cmp	r3, #148	; 0x94
 8002c48:	d102      	bne.n	8002c50 <ST7789_print+0xe4>
 8002c4a:	23ba      	movs	r3, #186	; 0xba
 8002c4c:	73fb      	strb	r3, [r7, #15]
 8002c4e:	e010      	b.n	8002c72 <ST7789_print+0x106>
					else if ((uint8_t)*str == 0x96) { buff_char = 0xB3; break; }		// байт символа і ( если нужнф еще символы добавляем тут и в функции DrawChar() )
 8002c50:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002c52:	781b      	ldrb	r3, [r3, #0]
 8002c54:	2b96      	cmp	r3, #150	; 0x96
 8002c56:	d102      	bne.n	8002c5e <ST7789_print+0xf2>
 8002c58:	23b3      	movs	r3, #179	; 0xb3
 8002c5a:	73fb      	strb	r3, [r7, #15]
 8002c5c:	e009      	b.n	8002c72 <ST7789_print+0x106>
					else if ((uint8_t)*str == 0x97) { buff_char = 0xBF; break; }		// байт символа ї ( если нужнф еще символы добавляем тут и в функции DrawChar() )
 8002c5e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002c60:	781b      	ldrb	r3, [r3, #0]
 8002c62:	2b97      	cmp	r3, #151	; 0x97
 8002c64:	d104      	bne.n	8002c70 <ST7789_print+0x104>
 8002c66:	23bf      	movs	r3, #191	; 0xbf
 8002c68:	73fb      	strb	r3, [r7, #15]
 8002c6a:	e002      	b.n	8002c72 <ST7789_print+0x106>
					break;
 8002c6c:	bf00      	nop
 8002c6e:	e000      	b.n	8002c72 <ST7789_print+0x106>
					break;
 8002c70:	bf00      	nop
				}
			}
			//------------------------------------------------------------------------------------------------
			// уменьшаем еще переменную так как израсходывали 2 байта для кириллицы
			len--;
 8002c72:	89bb      	ldrh	r3, [r7, #12]
 8002c74:	3b01      	subs	r3, #1
 8002c76:	81bb      	strh	r3, [r7, #12]
			
			ST7789_DrawChar(x, y, TextColor, BgColor, TransparentBg, Font, multiplier, buff_char);
 8002c78:	883c      	ldrh	r4, [r7, #0]
 8002c7a:	887a      	ldrh	r2, [r7, #2]
 8002c7c:	88b9      	ldrh	r1, [r7, #4]
 8002c7e:	88f8      	ldrh	r0, [r7, #6]
 8002c80:	7bfb      	ldrb	r3, [r7, #15]
 8002c82:	9303      	str	r3, [sp, #12]
 8002c84:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8002c88:	9302      	str	r3, [sp, #8]
 8002c8a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002c8c:	9301      	str	r3, [sp, #4]
 8002c8e:	f897 3020 	ldrb.w	r3, [r7, #32]
 8002c92:	9300      	str	r3, [sp, #0]
 8002c94:	4623      	mov	r3, r4
 8002c96:	f7ff fde3 	bl	8002860 <ST7789_DrawChar>
 8002c9a:	e011      	b.n	8002cc0 <ST7789_print+0x154>
		}
		//---------------------------------------------------------------------
		else{
			ST7789_DrawChar(x, y, TextColor, BgColor, TransparentBg, Font, multiplier, *str);
 8002c9c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002c9e:	781b      	ldrb	r3, [r3, #0]
 8002ca0:	883c      	ldrh	r4, [r7, #0]
 8002ca2:	887a      	ldrh	r2, [r7, #2]
 8002ca4:	88b9      	ldrh	r1, [r7, #4]
 8002ca6:	88f8      	ldrh	r0, [r7, #6]
 8002ca8:	9303      	str	r3, [sp, #12]
 8002caa:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8002cae:	9302      	str	r3, [sp, #8]
 8002cb0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002cb2:	9301      	str	r3, [sp, #4]
 8002cb4:	f897 3020 	ldrb.w	r3, [r7, #32]
 8002cb8:	9300      	str	r3, [sp, #0]
 8002cba:	4623      	mov	r3, r4
 8002cbc:	f7ff fdd0 	bl	8002860 <ST7789_DrawChar>
		}
		
		x = x + (Font->FontWidth * multiplier);
 8002cc0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002cc2:	781b      	ldrb	r3, [r3, #0]
 8002cc4:	b29a      	uxth	r2, r3
 8002cc6:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8002cca:	b29b      	uxth	r3, r3
 8002ccc:	fb12 f303 	smulbb	r3, r2, r3
 8002cd0:	b29a      	uxth	r2, r3
 8002cd2:	88fb      	ldrh	r3, [r7, #6]
 8002cd4:	4413      	add	r3, r2
 8002cd6:	80fb      	strh	r3, [r7, #6]
		/* Increase string pointer */
		str++;
 8002cd8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002cda:	3301      	adds	r3, #1
 8002cdc:	62fb      	str	r3, [r7, #44]	; 0x2c
	while (len--) {
 8002cde:	89bb      	ldrh	r3, [r7, #12]
 8002ce0:	1e5a      	subs	r2, r3, #1
 8002ce2:	81ba      	strh	r2, [r7, #12]
 8002ce4:	2b00      	cmp	r3, #0
 8002ce6:	f47f af5d 	bne.w	8002ba4 <ST7789_print+0x38>
	}
}
 8002cea:	bf00      	nop
 8002cec:	bf00      	nop
 8002cee:	3714      	adds	r7, #20
 8002cf0:	46bd      	mov	sp, r7
 8002cf2:	bd90      	pop	{r4, r7, pc}

08002cf4 <ST7789_rotation>:

//==============================================================================
// Процедура ротации ( положение ) дисплея
//==============================================================================
// па умолчанию 1 режим ( всего 1, 2, 3, 4 )
void ST7789_rotation( uint8_t rotation ){
 8002cf4:	b580      	push	{r7, lr}
 8002cf6:	b082      	sub	sp, #8
 8002cf8:	af00      	add	r7, sp, #0
 8002cfa:	4603      	mov	r3, r0
 8002cfc:	71fb      	strb	r3, [r7, #7]
	
	ST7789_Select();
 8002cfe:	f7ff f9a7 	bl	8002050 <ST7789_Select>
	
	ST7789_SendCmd(ST7789_MADCTL);
 8002d02:	2036      	movs	r0, #54	; 0x36
 8002d04:	f7ff fa1a 	bl	800213c <ST7789_SendCmd>

	// длайвер расчитан на экран 320 х 240 (  максимальный размер )
	// для подгона под любой другой нужно отнимать разницу пикселей

	  switch (rotation) {
 8002d08:	79fb      	ldrb	r3, [r7, #7]
 8002d0a:	3b01      	subs	r3, #1
 8002d0c:	2b03      	cmp	r3, #3
 8002d0e:	d85b      	bhi.n	8002dc8 <ST7789_rotation+0xd4>
 8002d10:	a201      	add	r2, pc, #4	; (adr r2, 8002d18 <ST7789_rotation+0x24>)
 8002d12:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002d16:	bf00      	nop
 8002d18:	08002d29 	.word	0x08002d29
 8002d1c:	08002d51 	.word	0x08002d51
 8002d20:	08002d79 	.word	0x08002d79
 8002d24:	08002da1 	.word	0x08002da1
			#endif
			//==========================================================================
			
			//== 2" 240 x 320 ST7789 =================================================
			#ifdef ST7789_IS_240X320
				ST7789_SendData(ST7789_MADCTL_RGB);
 8002d28:	2000      	movs	r0, #0
 8002d2a:	f7ff fa2d 	bl	8002188 <ST7789_SendData>
				ST7789_Width = 240;
 8002d2e:	4b2a      	ldr	r3, [pc, #168]	; (8002dd8 <ST7789_rotation+0xe4>)
 8002d30:	22f0      	movs	r2, #240	; 0xf0
 8002d32:	801a      	strh	r2, [r3, #0]
				ST7789_Height = 320;
 8002d34:	4b29      	ldr	r3, [pc, #164]	; (8002ddc <ST7789_rotation+0xe8>)
 8002d36:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8002d3a:	801a      	strh	r2, [r3, #0]
				ST7789_X_Start = 0;
 8002d3c:	4b28      	ldr	r3, [pc, #160]	; (8002de0 <ST7789_rotation+0xec>)
 8002d3e:	2200      	movs	r2, #0
 8002d40:	801a      	strh	r2, [r3, #0]
				ST7789_Y_Start = 0;
 8002d42:	4b28      	ldr	r3, [pc, #160]	; (8002de4 <ST7789_rotation+0xf0>)
 8002d44:	2200      	movs	r2, #0
 8002d46:	801a      	strh	r2, [r3, #0]
				ST7789_FillScreen(0);
 8002d48:	2000      	movs	r0, #0
 8002d4a:	f7ff fa75 	bl	8002238 <ST7789_FillScreen>
			#endif
			//==========================================================================
		 break;
 8002d4e:	e03c      	b.n	8002dca <ST7789_rotation+0xd6>
			#endif
			//==========================================================================
			
			//== 2" 240 x 320 ST7789 =================================================
			#ifdef ST7789_IS_240X320
				ST7789_SendData(ST7789_MADCTL_MX | ST7789_MADCTL_MV | ST7789_MADCTL_RGB);
 8002d50:	2060      	movs	r0, #96	; 0x60
 8002d52:	f7ff fa19 	bl	8002188 <ST7789_SendData>
				ST7789_Width = 320;
 8002d56:	4b20      	ldr	r3, [pc, #128]	; (8002dd8 <ST7789_rotation+0xe4>)
 8002d58:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8002d5c:	801a      	strh	r2, [r3, #0]
				ST7789_Height = 240;		
 8002d5e:	4b1f      	ldr	r3, [pc, #124]	; (8002ddc <ST7789_rotation+0xe8>)
 8002d60:	22f0      	movs	r2, #240	; 0xf0
 8002d62:	801a      	strh	r2, [r3, #0]
				ST7789_X_Start = 0;
 8002d64:	4b1e      	ldr	r3, [pc, #120]	; (8002de0 <ST7789_rotation+0xec>)
 8002d66:	2200      	movs	r2, #0
 8002d68:	801a      	strh	r2, [r3, #0]
				ST7789_Y_Start = 0;
 8002d6a:	4b1e      	ldr	r3, [pc, #120]	; (8002de4 <ST7789_rotation+0xf0>)
 8002d6c:	2200      	movs	r2, #0
 8002d6e:	801a      	strh	r2, [r3, #0]
				ST7789_FillScreen(0);
 8002d70:	2000      	movs	r0, #0
 8002d72:	f7ff fa61 	bl	8002238 <ST7789_FillScreen>
			#endif
			//==========================================================================
		 break;
 8002d76:	e028      	b.n	8002dca <ST7789_rotation+0xd6>
			#endif
			//==========================================================================
	   
			//== 2" 240 x 320 ST7789 =================================================
			#ifdef ST7789_IS_240X320
				ST7789_SendData(ST7789_MADCTL_MX | ST7789_MADCTL_MY | ST7789_MADCTL_RGB);
 8002d78:	20c0      	movs	r0, #192	; 0xc0
 8002d7a:	f7ff fa05 	bl	8002188 <ST7789_SendData>
				ST7789_Width = 240;
 8002d7e:	4b16      	ldr	r3, [pc, #88]	; (8002dd8 <ST7789_rotation+0xe4>)
 8002d80:	22f0      	movs	r2, #240	; 0xf0
 8002d82:	801a      	strh	r2, [r3, #0]
				ST7789_Height = 320;
 8002d84:	4b15      	ldr	r3, [pc, #84]	; (8002ddc <ST7789_rotation+0xe8>)
 8002d86:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8002d8a:	801a      	strh	r2, [r3, #0]
				ST7789_X_Start = 0;
 8002d8c:	4b14      	ldr	r3, [pc, #80]	; (8002de0 <ST7789_rotation+0xec>)
 8002d8e:	2200      	movs	r2, #0
 8002d90:	801a      	strh	r2, [r3, #0]
				ST7789_Y_Start = 0;
 8002d92:	4b14      	ldr	r3, [pc, #80]	; (8002de4 <ST7789_rotation+0xf0>)
 8002d94:	2200      	movs	r2, #0
 8002d96:	801a      	strh	r2, [r3, #0]
				ST7789_FillScreen(0);
 8002d98:	2000      	movs	r0, #0
 8002d9a:	f7ff fa4d 	bl	8002238 <ST7789_FillScreen>
			#endif
			//==========================================================================
			
		 break;
 8002d9e:	e014      	b.n	8002dca <ST7789_rotation+0xd6>
			#endif
			//==========================================================================
	   
			//== 2" 240 x 320 ST7789 =================================================
			#ifdef ST7789_IS_240X320
				ST7789_SendData(ST7789_MADCTL_MY | ST7789_MADCTL_MV | ST7789_MADCTL_RGB);
 8002da0:	20a0      	movs	r0, #160	; 0xa0
 8002da2:	f7ff f9f1 	bl	8002188 <ST7789_SendData>
				ST7789_Width = 320;
 8002da6:	4b0c      	ldr	r3, [pc, #48]	; (8002dd8 <ST7789_rotation+0xe4>)
 8002da8:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8002dac:	801a      	strh	r2, [r3, #0]
				ST7789_Height = 240;
 8002dae:	4b0b      	ldr	r3, [pc, #44]	; (8002ddc <ST7789_rotation+0xe8>)
 8002db0:	22f0      	movs	r2, #240	; 0xf0
 8002db2:	801a      	strh	r2, [r3, #0]
				ST7789_X_Start = 0;
 8002db4:	4b0a      	ldr	r3, [pc, #40]	; (8002de0 <ST7789_rotation+0xec>)
 8002db6:	2200      	movs	r2, #0
 8002db8:	801a      	strh	r2, [r3, #0]
				ST7789_Y_Start = 0;
 8002dba:	4b0a      	ldr	r3, [pc, #40]	; (8002de4 <ST7789_rotation+0xf0>)
 8002dbc:	2200      	movs	r2, #0
 8002dbe:	801a      	strh	r2, [r3, #0]
				ST7789_FillScreen(0);
 8002dc0:	2000      	movs	r0, #0
 8002dc2:	f7ff fa39 	bl	8002238 <ST7789_FillScreen>
			#endif
			//==========================================================================
		 break;
 8002dc6:	e000      	b.n	8002dca <ST7789_rotation+0xd6>
	   
	   default:
		 break;
 8002dc8:	bf00      	nop
	  }
	  
	  ST7789_Unselect();
 8002dca:	f7ff f94d 	bl	8002068 <ST7789_Unselect>
}
 8002dce:	bf00      	nop
 8002dd0:	3708      	adds	r7, #8
 8002dd2:	46bd      	mov	sp, r7
 8002dd4:	bd80      	pop	{r7, pc}
 8002dd6:	bf00      	nop
 8002dd8:	200005a0 	.word	0x200005a0
 8002ddc:	200005a2 	.word	0x200005a2
 8002de0:	2000059c 	.word	0x2000059c
 8002de4:	2000059e 	.word	0x2000059e

08002de8 <HAL_Init>:
 8002de8:	b580      	push	{r7, lr}
 8002dea:	af00      	add	r7, sp, #0
 8002dec:	4b0e      	ldr	r3, [pc, #56]	; (8002e28 <HAL_Init+0x40>)
 8002dee:	681b      	ldr	r3, [r3, #0]
 8002df0:	4a0d      	ldr	r2, [pc, #52]	; (8002e28 <HAL_Init+0x40>)
 8002df2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002df6:	6013      	str	r3, [r2, #0]
 8002df8:	4b0b      	ldr	r3, [pc, #44]	; (8002e28 <HAL_Init+0x40>)
 8002dfa:	681b      	ldr	r3, [r3, #0]
 8002dfc:	4a0a      	ldr	r2, [pc, #40]	; (8002e28 <HAL_Init+0x40>)
 8002dfe:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002e02:	6013      	str	r3, [r2, #0]
 8002e04:	4b08      	ldr	r3, [pc, #32]	; (8002e28 <HAL_Init+0x40>)
 8002e06:	681b      	ldr	r3, [r3, #0]
 8002e08:	4a07      	ldr	r2, [pc, #28]	; (8002e28 <HAL_Init+0x40>)
 8002e0a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002e0e:	6013      	str	r3, [r2, #0]
 8002e10:	2003      	movs	r0, #3
 8002e12:	f000 fcfe 	bl	8003812 <HAL_NVIC_SetPriorityGrouping>
 8002e16:	200f      	movs	r0, #15
 8002e18:	f7fe ffa6 	bl	8001d68 <HAL_InitTick>
 8002e1c:	f7fe fd8a 	bl	8001934 <HAL_MspInit>
 8002e20:	2300      	movs	r3, #0
 8002e22:	4618      	mov	r0, r3
 8002e24:	bd80      	pop	{r7, pc}
 8002e26:	bf00      	nop
 8002e28:	40023c00 	.word	0x40023c00

08002e2c <HAL_IncTick>:
 8002e2c:	b480      	push	{r7}
 8002e2e:	af00      	add	r7, sp, #0
 8002e30:	4b06      	ldr	r3, [pc, #24]	; (8002e4c <HAL_IncTick+0x20>)
 8002e32:	781b      	ldrb	r3, [r3, #0]
 8002e34:	461a      	mov	r2, r3
 8002e36:	4b06      	ldr	r3, [pc, #24]	; (8002e50 <HAL_IncTick+0x24>)
 8002e38:	681b      	ldr	r3, [r3, #0]
 8002e3a:	4413      	add	r3, r2
 8002e3c:	4a04      	ldr	r2, [pc, #16]	; (8002e50 <HAL_IncTick+0x24>)
 8002e3e:	6013      	str	r3, [r2, #0]
 8002e40:	bf00      	nop
 8002e42:	46bd      	mov	sp, r7
 8002e44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e48:	4770      	bx	lr
 8002e4a:	bf00      	nop
 8002e4c:	20000010 	.word	0x20000010
 8002e50:	200005a4 	.word	0x200005a4

08002e54 <HAL_GetTick>:
 8002e54:	b480      	push	{r7}
 8002e56:	af00      	add	r7, sp, #0
 8002e58:	4b03      	ldr	r3, [pc, #12]	; (8002e68 <HAL_GetTick+0x14>)
 8002e5a:	681b      	ldr	r3, [r3, #0]
 8002e5c:	4618      	mov	r0, r3
 8002e5e:	46bd      	mov	sp, r7
 8002e60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e64:	4770      	bx	lr
 8002e66:	bf00      	nop
 8002e68:	200005a4 	.word	0x200005a4

08002e6c <HAL_Delay>:
 8002e6c:	b580      	push	{r7, lr}
 8002e6e:	b084      	sub	sp, #16
 8002e70:	af00      	add	r7, sp, #0
 8002e72:	6078      	str	r0, [r7, #4]
 8002e74:	f7ff ffee 	bl	8002e54 <HAL_GetTick>
 8002e78:	60b8      	str	r0, [r7, #8]
 8002e7a:	687b      	ldr	r3, [r7, #4]
 8002e7c:	60fb      	str	r3, [r7, #12]
 8002e7e:	68fb      	ldr	r3, [r7, #12]
 8002e80:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002e84:	d005      	beq.n	8002e92 <HAL_Delay+0x26>
 8002e86:	4b0a      	ldr	r3, [pc, #40]	; (8002eb0 <HAL_Delay+0x44>)
 8002e88:	781b      	ldrb	r3, [r3, #0]
 8002e8a:	461a      	mov	r2, r3
 8002e8c:	68fb      	ldr	r3, [r7, #12]
 8002e8e:	4413      	add	r3, r2
 8002e90:	60fb      	str	r3, [r7, #12]
 8002e92:	bf00      	nop
 8002e94:	f7ff ffde 	bl	8002e54 <HAL_GetTick>
 8002e98:	4602      	mov	r2, r0
 8002e9a:	68bb      	ldr	r3, [r7, #8]
 8002e9c:	1ad3      	subs	r3, r2, r3
 8002e9e:	68fa      	ldr	r2, [r7, #12]
 8002ea0:	429a      	cmp	r2, r3
 8002ea2:	d8f7      	bhi.n	8002e94 <HAL_Delay+0x28>
 8002ea4:	bf00      	nop
 8002ea6:	bf00      	nop
 8002ea8:	3710      	adds	r7, #16
 8002eaa:	46bd      	mov	sp, r7
 8002eac:	bd80      	pop	{r7, pc}
 8002eae:	bf00      	nop
 8002eb0:	20000010 	.word	0x20000010

08002eb4 <HAL_ADC_Init>:
 8002eb4:	b580      	push	{r7, lr}
 8002eb6:	b084      	sub	sp, #16
 8002eb8:	af00      	add	r7, sp, #0
 8002eba:	6078      	str	r0, [r7, #4]
 8002ebc:	2300      	movs	r3, #0
 8002ebe:	73fb      	strb	r3, [r7, #15]
 8002ec0:	687b      	ldr	r3, [r7, #4]
 8002ec2:	2b00      	cmp	r3, #0
 8002ec4:	d101      	bne.n	8002eca <HAL_ADC_Init+0x16>
 8002ec6:	2301      	movs	r3, #1
 8002ec8:	e033      	b.n	8002f32 <HAL_ADC_Init+0x7e>
 8002eca:	687b      	ldr	r3, [r7, #4]
 8002ecc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002ece:	2b00      	cmp	r3, #0
 8002ed0:	d109      	bne.n	8002ee6 <HAL_ADC_Init+0x32>
 8002ed2:	6878      	ldr	r0, [r7, #4]
 8002ed4:	f7fe fd56 	bl	8001984 <HAL_ADC_MspInit>
 8002ed8:	687b      	ldr	r3, [r7, #4]
 8002eda:	2200      	movs	r2, #0
 8002edc:	645a      	str	r2, [r3, #68]	; 0x44
 8002ede:	687b      	ldr	r3, [r7, #4]
 8002ee0:	2200      	movs	r2, #0
 8002ee2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002ee6:	687b      	ldr	r3, [r7, #4]
 8002ee8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002eea:	f003 0310 	and.w	r3, r3, #16
 8002eee:	2b00      	cmp	r3, #0
 8002ef0:	d118      	bne.n	8002f24 <HAL_ADC_Init+0x70>
 8002ef2:	687b      	ldr	r3, [r7, #4]
 8002ef4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002ef6:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8002efa:	f023 0302 	bic.w	r3, r3, #2
 8002efe:	f043 0202 	orr.w	r2, r3, #2
 8002f02:	687b      	ldr	r3, [r7, #4]
 8002f04:	641a      	str	r2, [r3, #64]	; 0x40
 8002f06:	6878      	ldr	r0, [r7, #4]
 8002f08:	f000 fa58 	bl	80033bc <ADC_Init>
 8002f0c:	687b      	ldr	r3, [r7, #4]
 8002f0e:	2200      	movs	r2, #0
 8002f10:	645a      	str	r2, [r3, #68]	; 0x44
 8002f12:	687b      	ldr	r3, [r7, #4]
 8002f14:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002f16:	f023 0303 	bic.w	r3, r3, #3
 8002f1a:	f043 0201 	orr.w	r2, r3, #1
 8002f1e:	687b      	ldr	r3, [r7, #4]
 8002f20:	641a      	str	r2, [r3, #64]	; 0x40
 8002f22:	e001      	b.n	8002f28 <HAL_ADC_Init+0x74>
 8002f24:	2301      	movs	r3, #1
 8002f26:	73fb      	strb	r3, [r7, #15]
 8002f28:	687b      	ldr	r3, [r7, #4]
 8002f2a:	2200      	movs	r2, #0
 8002f2c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002f30:	7bfb      	ldrb	r3, [r7, #15]
 8002f32:	4618      	mov	r0, r3
 8002f34:	3710      	adds	r7, #16
 8002f36:	46bd      	mov	sp, r7
 8002f38:	bd80      	pop	{r7, pc}
	...

08002f3c <HAL_ADC_Start_DMA>:
 8002f3c:	b580      	push	{r7, lr}
 8002f3e:	b086      	sub	sp, #24
 8002f40:	af00      	add	r7, sp, #0
 8002f42:	60f8      	str	r0, [r7, #12]
 8002f44:	60b9      	str	r1, [r7, #8]
 8002f46:	607a      	str	r2, [r7, #4]
 8002f48:	2300      	movs	r3, #0
 8002f4a:	613b      	str	r3, [r7, #16]
 8002f4c:	68fb      	ldr	r3, [r7, #12]
 8002f4e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002f52:	2b01      	cmp	r3, #1
 8002f54:	d101      	bne.n	8002f5a <HAL_ADC_Start_DMA+0x1e>
 8002f56:	2302      	movs	r3, #2
 8002f58:	e0ce      	b.n	80030f8 <HAL_ADC_Start_DMA+0x1bc>
 8002f5a:	68fb      	ldr	r3, [r7, #12]
 8002f5c:	2201      	movs	r2, #1
 8002f5e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002f62:	68fb      	ldr	r3, [r7, #12]
 8002f64:	681b      	ldr	r3, [r3, #0]
 8002f66:	689b      	ldr	r3, [r3, #8]
 8002f68:	f003 0301 	and.w	r3, r3, #1
 8002f6c:	2b01      	cmp	r3, #1
 8002f6e:	d018      	beq.n	8002fa2 <HAL_ADC_Start_DMA+0x66>
 8002f70:	68fb      	ldr	r3, [r7, #12]
 8002f72:	681b      	ldr	r3, [r3, #0]
 8002f74:	689a      	ldr	r2, [r3, #8]
 8002f76:	68fb      	ldr	r3, [r7, #12]
 8002f78:	681b      	ldr	r3, [r3, #0]
 8002f7a:	f042 0201 	orr.w	r2, r2, #1
 8002f7e:	609a      	str	r2, [r3, #8]
 8002f80:	4b5f      	ldr	r3, [pc, #380]	; (8003100 <HAL_ADC_Start_DMA+0x1c4>)
 8002f82:	681b      	ldr	r3, [r3, #0]
 8002f84:	4a5f      	ldr	r2, [pc, #380]	; (8003104 <HAL_ADC_Start_DMA+0x1c8>)
 8002f86:	fba2 2303 	umull	r2, r3, r2, r3
 8002f8a:	0c9a      	lsrs	r2, r3, #18
 8002f8c:	4613      	mov	r3, r2
 8002f8e:	005b      	lsls	r3, r3, #1
 8002f90:	4413      	add	r3, r2
 8002f92:	613b      	str	r3, [r7, #16]
 8002f94:	e002      	b.n	8002f9c <HAL_ADC_Start_DMA+0x60>
 8002f96:	693b      	ldr	r3, [r7, #16]
 8002f98:	3b01      	subs	r3, #1
 8002f9a:	613b      	str	r3, [r7, #16]
 8002f9c:	693b      	ldr	r3, [r7, #16]
 8002f9e:	2b00      	cmp	r3, #0
 8002fa0:	d1f9      	bne.n	8002f96 <HAL_ADC_Start_DMA+0x5a>
 8002fa2:	68fb      	ldr	r3, [r7, #12]
 8002fa4:	681b      	ldr	r3, [r3, #0]
 8002fa6:	689b      	ldr	r3, [r3, #8]
 8002fa8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002fac:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8002fb0:	d107      	bne.n	8002fc2 <HAL_ADC_Start_DMA+0x86>
 8002fb2:	68fb      	ldr	r3, [r7, #12]
 8002fb4:	681b      	ldr	r3, [r3, #0]
 8002fb6:	689a      	ldr	r2, [r3, #8]
 8002fb8:	68fb      	ldr	r3, [r7, #12]
 8002fba:	681b      	ldr	r3, [r3, #0]
 8002fbc:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8002fc0:	609a      	str	r2, [r3, #8]
 8002fc2:	68fb      	ldr	r3, [r7, #12]
 8002fc4:	681b      	ldr	r3, [r3, #0]
 8002fc6:	689b      	ldr	r3, [r3, #8]
 8002fc8:	f003 0301 	and.w	r3, r3, #1
 8002fcc:	2b01      	cmp	r3, #1
 8002fce:	f040 8086 	bne.w	80030de <HAL_ADC_Start_DMA+0x1a2>
 8002fd2:	68fb      	ldr	r3, [r7, #12]
 8002fd4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002fd6:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8002fda:	f023 0301 	bic.w	r3, r3, #1
 8002fde:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8002fe2:	68fb      	ldr	r3, [r7, #12]
 8002fe4:	641a      	str	r2, [r3, #64]	; 0x40
 8002fe6:	68fb      	ldr	r3, [r7, #12]
 8002fe8:	681b      	ldr	r3, [r3, #0]
 8002fea:	685b      	ldr	r3, [r3, #4]
 8002fec:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002ff0:	2b00      	cmp	r3, #0
 8002ff2:	d007      	beq.n	8003004 <HAL_ADC_Start_DMA+0xc8>
 8002ff4:	68fb      	ldr	r3, [r7, #12]
 8002ff6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002ff8:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8002ffc:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 8003000:	68fb      	ldr	r3, [r7, #12]
 8003002:	641a      	str	r2, [r3, #64]	; 0x40
 8003004:	68fb      	ldr	r3, [r7, #12]
 8003006:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003008:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800300c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003010:	d106      	bne.n	8003020 <HAL_ADC_Start_DMA+0xe4>
 8003012:	68fb      	ldr	r3, [r7, #12]
 8003014:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003016:	f023 0206 	bic.w	r2, r3, #6
 800301a:	68fb      	ldr	r3, [r7, #12]
 800301c:	645a      	str	r2, [r3, #68]	; 0x44
 800301e:	e002      	b.n	8003026 <HAL_ADC_Start_DMA+0xea>
 8003020:	68fb      	ldr	r3, [r7, #12]
 8003022:	2200      	movs	r2, #0
 8003024:	645a      	str	r2, [r3, #68]	; 0x44
 8003026:	68fb      	ldr	r3, [r7, #12]
 8003028:	2200      	movs	r2, #0
 800302a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800302e:	4b36      	ldr	r3, [pc, #216]	; (8003108 <HAL_ADC_Start_DMA+0x1cc>)
 8003030:	617b      	str	r3, [r7, #20]
 8003032:	68fb      	ldr	r3, [r7, #12]
 8003034:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003036:	4a35      	ldr	r2, [pc, #212]	; (800310c <HAL_ADC_Start_DMA+0x1d0>)
 8003038:	63da      	str	r2, [r3, #60]	; 0x3c
 800303a:	68fb      	ldr	r3, [r7, #12]
 800303c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800303e:	4a34      	ldr	r2, [pc, #208]	; (8003110 <HAL_ADC_Start_DMA+0x1d4>)
 8003040:	641a      	str	r2, [r3, #64]	; 0x40
 8003042:	68fb      	ldr	r3, [r7, #12]
 8003044:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003046:	4a33      	ldr	r2, [pc, #204]	; (8003114 <HAL_ADC_Start_DMA+0x1d8>)
 8003048:	64da      	str	r2, [r3, #76]	; 0x4c
 800304a:	68fb      	ldr	r3, [r7, #12]
 800304c:	681b      	ldr	r3, [r3, #0]
 800304e:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8003052:	601a      	str	r2, [r3, #0]
 8003054:	68fb      	ldr	r3, [r7, #12]
 8003056:	681b      	ldr	r3, [r3, #0]
 8003058:	685a      	ldr	r2, [r3, #4]
 800305a:	68fb      	ldr	r3, [r7, #12]
 800305c:	681b      	ldr	r3, [r3, #0]
 800305e:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8003062:	605a      	str	r2, [r3, #4]
 8003064:	68fb      	ldr	r3, [r7, #12]
 8003066:	681b      	ldr	r3, [r3, #0]
 8003068:	689a      	ldr	r2, [r3, #8]
 800306a:	68fb      	ldr	r3, [r7, #12]
 800306c:	681b      	ldr	r3, [r3, #0]
 800306e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003072:	609a      	str	r2, [r3, #8]
 8003074:	68fb      	ldr	r3, [r7, #12]
 8003076:	6b98      	ldr	r0, [r3, #56]	; 0x38
 8003078:	68fb      	ldr	r3, [r7, #12]
 800307a:	681b      	ldr	r3, [r3, #0]
 800307c:	334c      	adds	r3, #76	; 0x4c
 800307e:	4619      	mov	r1, r3
 8003080:	68ba      	ldr	r2, [r7, #8]
 8003082:	687b      	ldr	r3, [r7, #4]
 8003084:	f000 fcc4 	bl	8003a10 <HAL_DMA_Start_IT>
 8003088:	697b      	ldr	r3, [r7, #20]
 800308a:	685b      	ldr	r3, [r3, #4]
 800308c:	f003 031f 	and.w	r3, r3, #31
 8003090:	2b00      	cmp	r3, #0
 8003092:	d10f      	bne.n	80030b4 <HAL_ADC_Start_DMA+0x178>
 8003094:	68fb      	ldr	r3, [r7, #12]
 8003096:	681b      	ldr	r3, [r3, #0]
 8003098:	689b      	ldr	r3, [r3, #8]
 800309a:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800309e:	2b00      	cmp	r3, #0
 80030a0:	d129      	bne.n	80030f6 <HAL_ADC_Start_DMA+0x1ba>
 80030a2:	68fb      	ldr	r3, [r7, #12]
 80030a4:	681b      	ldr	r3, [r3, #0]
 80030a6:	689a      	ldr	r2, [r3, #8]
 80030a8:	68fb      	ldr	r3, [r7, #12]
 80030aa:	681b      	ldr	r3, [r3, #0]
 80030ac:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80030b0:	609a      	str	r2, [r3, #8]
 80030b2:	e020      	b.n	80030f6 <HAL_ADC_Start_DMA+0x1ba>
 80030b4:	68fb      	ldr	r3, [r7, #12]
 80030b6:	681b      	ldr	r3, [r3, #0]
 80030b8:	4a17      	ldr	r2, [pc, #92]	; (8003118 <HAL_ADC_Start_DMA+0x1dc>)
 80030ba:	4293      	cmp	r3, r2
 80030bc:	d11b      	bne.n	80030f6 <HAL_ADC_Start_DMA+0x1ba>
 80030be:	68fb      	ldr	r3, [r7, #12]
 80030c0:	681b      	ldr	r3, [r3, #0]
 80030c2:	689b      	ldr	r3, [r3, #8]
 80030c4:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80030c8:	2b00      	cmp	r3, #0
 80030ca:	d114      	bne.n	80030f6 <HAL_ADC_Start_DMA+0x1ba>
 80030cc:	68fb      	ldr	r3, [r7, #12]
 80030ce:	681b      	ldr	r3, [r3, #0]
 80030d0:	689a      	ldr	r2, [r3, #8]
 80030d2:	68fb      	ldr	r3, [r7, #12]
 80030d4:	681b      	ldr	r3, [r3, #0]
 80030d6:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80030da:	609a      	str	r2, [r3, #8]
 80030dc:	e00b      	b.n	80030f6 <HAL_ADC_Start_DMA+0x1ba>
 80030de:	68fb      	ldr	r3, [r7, #12]
 80030e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80030e2:	f043 0210 	orr.w	r2, r3, #16
 80030e6:	68fb      	ldr	r3, [r7, #12]
 80030e8:	641a      	str	r2, [r3, #64]	; 0x40
 80030ea:	68fb      	ldr	r3, [r7, #12]
 80030ec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80030ee:	f043 0201 	orr.w	r2, r3, #1
 80030f2:	68fb      	ldr	r3, [r7, #12]
 80030f4:	645a      	str	r2, [r3, #68]	; 0x44
 80030f6:	2300      	movs	r3, #0
 80030f8:	4618      	mov	r0, r3
 80030fa:	3718      	adds	r7, #24
 80030fc:	46bd      	mov	sp, r7
 80030fe:	bd80      	pop	{r7, pc}
 8003100:	20000008 	.word	0x20000008
 8003104:	431bde83 	.word	0x431bde83
 8003108:	40012300 	.word	0x40012300
 800310c:	080035b5 	.word	0x080035b5
 8003110:	0800366f 	.word	0x0800366f
 8003114:	0800368b 	.word	0x0800368b
 8003118:	40012000 	.word	0x40012000

0800311c <HAL_ADC_ConvCpltCallback>:
 800311c:	b480      	push	{r7}
 800311e:	b083      	sub	sp, #12
 8003120:	af00      	add	r7, sp, #0
 8003122:	6078      	str	r0, [r7, #4]
 8003124:	bf00      	nop
 8003126:	370c      	adds	r7, #12
 8003128:	46bd      	mov	sp, r7
 800312a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800312e:	4770      	bx	lr

08003130 <HAL_ADC_ConvHalfCpltCallback>:
 8003130:	b480      	push	{r7}
 8003132:	b083      	sub	sp, #12
 8003134:	af00      	add	r7, sp, #0
 8003136:	6078      	str	r0, [r7, #4]
 8003138:	bf00      	nop
 800313a:	370c      	adds	r7, #12
 800313c:	46bd      	mov	sp, r7
 800313e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003142:	4770      	bx	lr

08003144 <HAL_ADC_ErrorCallback>:
 8003144:	b480      	push	{r7}
 8003146:	b083      	sub	sp, #12
 8003148:	af00      	add	r7, sp, #0
 800314a:	6078      	str	r0, [r7, #4]
 800314c:	bf00      	nop
 800314e:	370c      	adds	r7, #12
 8003150:	46bd      	mov	sp, r7
 8003152:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003156:	4770      	bx	lr

08003158 <HAL_ADC_ConfigChannel>:
 8003158:	b480      	push	{r7}
 800315a:	b085      	sub	sp, #20
 800315c:	af00      	add	r7, sp, #0
 800315e:	6078      	str	r0, [r7, #4]
 8003160:	6039      	str	r1, [r7, #0]
 8003162:	2300      	movs	r3, #0
 8003164:	60bb      	str	r3, [r7, #8]
 8003166:	687b      	ldr	r3, [r7, #4]
 8003168:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800316c:	2b01      	cmp	r3, #1
 800316e:	d101      	bne.n	8003174 <HAL_ADC_ConfigChannel+0x1c>
 8003170:	2302      	movs	r3, #2
 8003172:	e113      	b.n	800339c <HAL_ADC_ConfigChannel+0x244>
 8003174:	687b      	ldr	r3, [r7, #4]
 8003176:	2201      	movs	r2, #1
 8003178:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800317c:	683b      	ldr	r3, [r7, #0]
 800317e:	681b      	ldr	r3, [r3, #0]
 8003180:	2b09      	cmp	r3, #9
 8003182:	d925      	bls.n	80031d0 <HAL_ADC_ConfigChannel+0x78>
 8003184:	687b      	ldr	r3, [r7, #4]
 8003186:	681b      	ldr	r3, [r3, #0]
 8003188:	68d9      	ldr	r1, [r3, #12]
 800318a:	683b      	ldr	r3, [r7, #0]
 800318c:	681b      	ldr	r3, [r3, #0]
 800318e:	b29b      	uxth	r3, r3
 8003190:	461a      	mov	r2, r3
 8003192:	4613      	mov	r3, r2
 8003194:	005b      	lsls	r3, r3, #1
 8003196:	4413      	add	r3, r2
 8003198:	3b1e      	subs	r3, #30
 800319a:	2207      	movs	r2, #7
 800319c:	fa02 f303 	lsl.w	r3, r2, r3
 80031a0:	43da      	mvns	r2, r3
 80031a2:	687b      	ldr	r3, [r7, #4]
 80031a4:	681b      	ldr	r3, [r3, #0]
 80031a6:	400a      	ands	r2, r1
 80031a8:	60da      	str	r2, [r3, #12]
 80031aa:	687b      	ldr	r3, [r7, #4]
 80031ac:	681b      	ldr	r3, [r3, #0]
 80031ae:	68d9      	ldr	r1, [r3, #12]
 80031b0:	683b      	ldr	r3, [r7, #0]
 80031b2:	689a      	ldr	r2, [r3, #8]
 80031b4:	683b      	ldr	r3, [r7, #0]
 80031b6:	681b      	ldr	r3, [r3, #0]
 80031b8:	b29b      	uxth	r3, r3
 80031ba:	4618      	mov	r0, r3
 80031bc:	4603      	mov	r3, r0
 80031be:	005b      	lsls	r3, r3, #1
 80031c0:	4403      	add	r3, r0
 80031c2:	3b1e      	subs	r3, #30
 80031c4:	409a      	lsls	r2, r3
 80031c6:	687b      	ldr	r3, [r7, #4]
 80031c8:	681b      	ldr	r3, [r3, #0]
 80031ca:	430a      	orrs	r2, r1
 80031cc:	60da      	str	r2, [r3, #12]
 80031ce:	e022      	b.n	8003216 <HAL_ADC_ConfigChannel+0xbe>
 80031d0:	687b      	ldr	r3, [r7, #4]
 80031d2:	681b      	ldr	r3, [r3, #0]
 80031d4:	6919      	ldr	r1, [r3, #16]
 80031d6:	683b      	ldr	r3, [r7, #0]
 80031d8:	681b      	ldr	r3, [r3, #0]
 80031da:	b29b      	uxth	r3, r3
 80031dc:	461a      	mov	r2, r3
 80031de:	4613      	mov	r3, r2
 80031e0:	005b      	lsls	r3, r3, #1
 80031e2:	4413      	add	r3, r2
 80031e4:	2207      	movs	r2, #7
 80031e6:	fa02 f303 	lsl.w	r3, r2, r3
 80031ea:	43da      	mvns	r2, r3
 80031ec:	687b      	ldr	r3, [r7, #4]
 80031ee:	681b      	ldr	r3, [r3, #0]
 80031f0:	400a      	ands	r2, r1
 80031f2:	611a      	str	r2, [r3, #16]
 80031f4:	687b      	ldr	r3, [r7, #4]
 80031f6:	681b      	ldr	r3, [r3, #0]
 80031f8:	6919      	ldr	r1, [r3, #16]
 80031fa:	683b      	ldr	r3, [r7, #0]
 80031fc:	689a      	ldr	r2, [r3, #8]
 80031fe:	683b      	ldr	r3, [r7, #0]
 8003200:	681b      	ldr	r3, [r3, #0]
 8003202:	b29b      	uxth	r3, r3
 8003204:	4618      	mov	r0, r3
 8003206:	4603      	mov	r3, r0
 8003208:	005b      	lsls	r3, r3, #1
 800320a:	4403      	add	r3, r0
 800320c:	409a      	lsls	r2, r3
 800320e:	687b      	ldr	r3, [r7, #4]
 8003210:	681b      	ldr	r3, [r3, #0]
 8003212:	430a      	orrs	r2, r1
 8003214:	611a      	str	r2, [r3, #16]
 8003216:	683b      	ldr	r3, [r7, #0]
 8003218:	685b      	ldr	r3, [r3, #4]
 800321a:	2b06      	cmp	r3, #6
 800321c:	d824      	bhi.n	8003268 <HAL_ADC_ConfigChannel+0x110>
 800321e:	687b      	ldr	r3, [r7, #4]
 8003220:	681b      	ldr	r3, [r3, #0]
 8003222:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8003224:	683b      	ldr	r3, [r7, #0]
 8003226:	685a      	ldr	r2, [r3, #4]
 8003228:	4613      	mov	r3, r2
 800322a:	009b      	lsls	r3, r3, #2
 800322c:	4413      	add	r3, r2
 800322e:	3b05      	subs	r3, #5
 8003230:	221f      	movs	r2, #31
 8003232:	fa02 f303 	lsl.w	r3, r2, r3
 8003236:	43da      	mvns	r2, r3
 8003238:	687b      	ldr	r3, [r7, #4]
 800323a:	681b      	ldr	r3, [r3, #0]
 800323c:	400a      	ands	r2, r1
 800323e:	635a      	str	r2, [r3, #52]	; 0x34
 8003240:	687b      	ldr	r3, [r7, #4]
 8003242:	681b      	ldr	r3, [r3, #0]
 8003244:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8003246:	683b      	ldr	r3, [r7, #0]
 8003248:	681b      	ldr	r3, [r3, #0]
 800324a:	b29b      	uxth	r3, r3
 800324c:	4618      	mov	r0, r3
 800324e:	683b      	ldr	r3, [r7, #0]
 8003250:	685a      	ldr	r2, [r3, #4]
 8003252:	4613      	mov	r3, r2
 8003254:	009b      	lsls	r3, r3, #2
 8003256:	4413      	add	r3, r2
 8003258:	3b05      	subs	r3, #5
 800325a:	fa00 f203 	lsl.w	r2, r0, r3
 800325e:	687b      	ldr	r3, [r7, #4]
 8003260:	681b      	ldr	r3, [r3, #0]
 8003262:	430a      	orrs	r2, r1
 8003264:	635a      	str	r2, [r3, #52]	; 0x34
 8003266:	e04c      	b.n	8003302 <HAL_ADC_ConfigChannel+0x1aa>
 8003268:	683b      	ldr	r3, [r7, #0]
 800326a:	685b      	ldr	r3, [r3, #4]
 800326c:	2b0c      	cmp	r3, #12
 800326e:	d824      	bhi.n	80032ba <HAL_ADC_ConfigChannel+0x162>
 8003270:	687b      	ldr	r3, [r7, #4]
 8003272:	681b      	ldr	r3, [r3, #0]
 8003274:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8003276:	683b      	ldr	r3, [r7, #0]
 8003278:	685a      	ldr	r2, [r3, #4]
 800327a:	4613      	mov	r3, r2
 800327c:	009b      	lsls	r3, r3, #2
 800327e:	4413      	add	r3, r2
 8003280:	3b23      	subs	r3, #35	; 0x23
 8003282:	221f      	movs	r2, #31
 8003284:	fa02 f303 	lsl.w	r3, r2, r3
 8003288:	43da      	mvns	r2, r3
 800328a:	687b      	ldr	r3, [r7, #4]
 800328c:	681b      	ldr	r3, [r3, #0]
 800328e:	400a      	ands	r2, r1
 8003290:	631a      	str	r2, [r3, #48]	; 0x30
 8003292:	687b      	ldr	r3, [r7, #4]
 8003294:	681b      	ldr	r3, [r3, #0]
 8003296:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8003298:	683b      	ldr	r3, [r7, #0]
 800329a:	681b      	ldr	r3, [r3, #0]
 800329c:	b29b      	uxth	r3, r3
 800329e:	4618      	mov	r0, r3
 80032a0:	683b      	ldr	r3, [r7, #0]
 80032a2:	685a      	ldr	r2, [r3, #4]
 80032a4:	4613      	mov	r3, r2
 80032a6:	009b      	lsls	r3, r3, #2
 80032a8:	4413      	add	r3, r2
 80032aa:	3b23      	subs	r3, #35	; 0x23
 80032ac:	fa00 f203 	lsl.w	r2, r0, r3
 80032b0:	687b      	ldr	r3, [r7, #4]
 80032b2:	681b      	ldr	r3, [r3, #0]
 80032b4:	430a      	orrs	r2, r1
 80032b6:	631a      	str	r2, [r3, #48]	; 0x30
 80032b8:	e023      	b.n	8003302 <HAL_ADC_ConfigChannel+0x1aa>
 80032ba:	687b      	ldr	r3, [r7, #4]
 80032bc:	681b      	ldr	r3, [r3, #0]
 80032be:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80032c0:	683b      	ldr	r3, [r7, #0]
 80032c2:	685a      	ldr	r2, [r3, #4]
 80032c4:	4613      	mov	r3, r2
 80032c6:	009b      	lsls	r3, r3, #2
 80032c8:	4413      	add	r3, r2
 80032ca:	3b41      	subs	r3, #65	; 0x41
 80032cc:	221f      	movs	r2, #31
 80032ce:	fa02 f303 	lsl.w	r3, r2, r3
 80032d2:	43da      	mvns	r2, r3
 80032d4:	687b      	ldr	r3, [r7, #4]
 80032d6:	681b      	ldr	r3, [r3, #0]
 80032d8:	400a      	ands	r2, r1
 80032da:	62da      	str	r2, [r3, #44]	; 0x2c
 80032dc:	687b      	ldr	r3, [r7, #4]
 80032de:	681b      	ldr	r3, [r3, #0]
 80032e0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80032e2:	683b      	ldr	r3, [r7, #0]
 80032e4:	681b      	ldr	r3, [r3, #0]
 80032e6:	b29b      	uxth	r3, r3
 80032e8:	4618      	mov	r0, r3
 80032ea:	683b      	ldr	r3, [r7, #0]
 80032ec:	685a      	ldr	r2, [r3, #4]
 80032ee:	4613      	mov	r3, r2
 80032f0:	009b      	lsls	r3, r3, #2
 80032f2:	4413      	add	r3, r2
 80032f4:	3b41      	subs	r3, #65	; 0x41
 80032f6:	fa00 f203 	lsl.w	r2, r0, r3
 80032fa:	687b      	ldr	r3, [r7, #4]
 80032fc:	681b      	ldr	r3, [r3, #0]
 80032fe:	430a      	orrs	r2, r1
 8003300:	62da      	str	r2, [r3, #44]	; 0x2c
 8003302:	4b29      	ldr	r3, [pc, #164]	; (80033a8 <HAL_ADC_ConfigChannel+0x250>)
 8003304:	60fb      	str	r3, [r7, #12]
 8003306:	687b      	ldr	r3, [r7, #4]
 8003308:	681b      	ldr	r3, [r3, #0]
 800330a:	4a28      	ldr	r2, [pc, #160]	; (80033ac <HAL_ADC_ConfigChannel+0x254>)
 800330c:	4293      	cmp	r3, r2
 800330e:	d10f      	bne.n	8003330 <HAL_ADC_ConfigChannel+0x1d8>
 8003310:	683b      	ldr	r3, [r7, #0]
 8003312:	681b      	ldr	r3, [r3, #0]
 8003314:	2b12      	cmp	r3, #18
 8003316:	d10b      	bne.n	8003330 <HAL_ADC_ConfigChannel+0x1d8>
 8003318:	68fb      	ldr	r3, [r7, #12]
 800331a:	685b      	ldr	r3, [r3, #4]
 800331c:	f423 0200 	bic.w	r2, r3, #8388608	; 0x800000
 8003320:	68fb      	ldr	r3, [r7, #12]
 8003322:	605a      	str	r2, [r3, #4]
 8003324:	68fb      	ldr	r3, [r7, #12]
 8003326:	685b      	ldr	r3, [r3, #4]
 8003328:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 800332c:	68fb      	ldr	r3, [r7, #12]
 800332e:	605a      	str	r2, [r3, #4]
 8003330:	687b      	ldr	r3, [r7, #4]
 8003332:	681b      	ldr	r3, [r3, #0]
 8003334:	4a1d      	ldr	r2, [pc, #116]	; (80033ac <HAL_ADC_ConfigChannel+0x254>)
 8003336:	4293      	cmp	r3, r2
 8003338:	d12b      	bne.n	8003392 <HAL_ADC_ConfigChannel+0x23a>
 800333a:	683b      	ldr	r3, [r7, #0]
 800333c:	681b      	ldr	r3, [r3, #0]
 800333e:	4a1c      	ldr	r2, [pc, #112]	; (80033b0 <HAL_ADC_ConfigChannel+0x258>)
 8003340:	4293      	cmp	r3, r2
 8003342:	d003      	beq.n	800334c <HAL_ADC_ConfigChannel+0x1f4>
 8003344:	683b      	ldr	r3, [r7, #0]
 8003346:	681b      	ldr	r3, [r3, #0]
 8003348:	2b11      	cmp	r3, #17
 800334a:	d122      	bne.n	8003392 <HAL_ADC_ConfigChannel+0x23a>
 800334c:	68fb      	ldr	r3, [r7, #12]
 800334e:	685b      	ldr	r3, [r3, #4]
 8003350:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 8003354:	68fb      	ldr	r3, [r7, #12]
 8003356:	605a      	str	r2, [r3, #4]
 8003358:	68fb      	ldr	r3, [r7, #12]
 800335a:	685b      	ldr	r3, [r3, #4]
 800335c:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 8003360:	68fb      	ldr	r3, [r7, #12]
 8003362:	605a      	str	r2, [r3, #4]
 8003364:	683b      	ldr	r3, [r7, #0]
 8003366:	681b      	ldr	r3, [r3, #0]
 8003368:	4a11      	ldr	r2, [pc, #68]	; (80033b0 <HAL_ADC_ConfigChannel+0x258>)
 800336a:	4293      	cmp	r3, r2
 800336c:	d111      	bne.n	8003392 <HAL_ADC_ConfigChannel+0x23a>
 800336e:	4b11      	ldr	r3, [pc, #68]	; (80033b4 <HAL_ADC_ConfigChannel+0x25c>)
 8003370:	681b      	ldr	r3, [r3, #0]
 8003372:	4a11      	ldr	r2, [pc, #68]	; (80033b8 <HAL_ADC_ConfigChannel+0x260>)
 8003374:	fba2 2303 	umull	r2, r3, r2, r3
 8003378:	0c9a      	lsrs	r2, r3, #18
 800337a:	4613      	mov	r3, r2
 800337c:	009b      	lsls	r3, r3, #2
 800337e:	4413      	add	r3, r2
 8003380:	005b      	lsls	r3, r3, #1
 8003382:	60bb      	str	r3, [r7, #8]
 8003384:	e002      	b.n	800338c <HAL_ADC_ConfigChannel+0x234>
 8003386:	68bb      	ldr	r3, [r7, #8]
 8003388:	3b01      	subs	r3, #1
 800338a:	60bb      	str	r3, [r7, #8]
 800338c:	68bb      	ldr	r3, [r7, #8]
 800338e:	2b00      	cmp	r3, #0
 8003390:	d1f9      	bne.n	8003386 <HAL_ADC_ConfigChannel+0x22e>
 8003392:	687b      	ldr	r3, [r7, #4]
 8003394:	2200      	movs	r2, #0
 8003396:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800339a:	2300      	movs	r3, #0
 800339c:	4618      	mov	r0, r3
 800339e:	3714      	adds	r7, #20
 80033a0:	46bd      	mov	sp, r7
 80033a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033a6:	4770      	bx	lr
 80033a8:	40012300 	.word	0x40012300
 80033ac:	40012000 	.word	0x40012000
 80033b0:	10000012 	.word	0x10000012
 80033b4:	20000008 	.word	0x20000008
 80033b8:	431bde83 	.word	0x431bde83

080033bc <ADC_Init>:
 80033bc:	b480      	push	{r7}
 80033be:	b085      	sub	sp, #20
 80033c0:	af00      	add	r7, sp, #0
 80033c2:	6078      	str	r0, [r7, #4]
 80033c4:	4b79      	ldr	r3, [pc, #484]	; (80035ac <ADC_Init+0x1f0>)
 80033c6:	60fb      	str	r3, [r7, #12]
 80033c8:	68fb      	ldr	r3, [r7, #12]
 80033ca:	685b      	ldr	r3, [r3, #4]
 80033cc:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 80033d0:	68fb      	ldr	r3, [r7, #12]
 80033d2:	605a      	str	r2, [r3, #4]
 80033d4:	68fb      	ldr	r3, [r7, #12]
 80033d6:	685a      	ldr	r2, [r3, #4]
 80033d8:	687b      	ldr	r3, [r7, #4]
 80033da:	685b      	ldr	r3, [r3, #4]
 80033dc:	431a      	orrs	r2, r3
 80033de:	68fb      	ldr	r3, [r7, #12]
 80033e0:	605a      	str	r2, [r3, #4]
 80033e2:	687b      	ldr	r3, [r7, #4]
 80033e4:	681b      	ldr	r3, [r3, #0]
 80033e6:	685a      	ldr	r2, [r3, #4]
 80033e8:	687b      	ldr	r3, [r7, #4]
 80033ea:	681b      	ldr	r3, [r3, #0]
 80033ec:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80033f0:	605a      	str	r2, [r3, #4]
 80033f2:	687b      	ldr	r3, [r7, #4]
 80033f4:	681b      	ldr	r3, [r3, #0]
 80033f6:	6859      	ldr	r1, [r3, #4]
 80033f8:	687b      	ldr	r3, [r7, #4]
 80033fa:	691b      	ldr	r3, [r3, #16]
 80033fc:	021a      	lsls	r2, r3, #8
 80033fe:	687b      	ldr	r3, [r7, #4]
 8003400:	681b      	ldr	r3, [r3, #0]
 8003402:	430a      	orrs	r2, r1
 8003404:	605a      	str	r2, [r3, #4]
 8003406:	687b      	ldr	r3, [r7, #4]
 8003408:	681b      	ldr	r3, [r3, #0]
 800340a:	685a      	ldr	r2, [r3, #4]
 800340c:	687b      	ldr	r3, [r7, #4]
 800340e:	681b      	ldr	r3, [r3, #0]
 8003410:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8003414:	605a      	str	r2, [r3, #4]
 8003416:	687b      	ldr	r3, [r7, #4]
 8003418:	681b      	ldr	r3, [r3, #0]
 800341a:	6859      	ldr	r1, [r3, #4]
 800341c:	687b      	ldr	r3, [r7, #4]
 800341e:	689a      	ldr	r2, [r3, #8]
 8003420:	687b      	ldr	r3, [r7, #4]
 8003422:	681b      	ldr	r3, [r3, #0]
 8003424:	430a      	orrs	r2, r1
 8003426:	605a      	str	r2, [r3, #4]
 8003428:	687b      	ldr	r3, [r7, #4]
 800342a:	681b      	ldr	r3, [r3, #0]
 800342c:	689a      	ldr	r2, [r3, #8]
 800342e:	687b      	ldr	r3, [r7, #4]
 8003430:	681b      	ldr	r3, [r3, #0]
 8003432:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003436:	609a      	str	r2, [r3, #8]
 8003438:	687b      	ldr	r3, [r7, #4]
 800343a:	681b      	ldr	r3, [r3, #0]
 800343c:	6899      	ldr	r1, [r3, #8]
 800343e:	687b      	ldr	r3, [r7, #4]
 8003440:	68da      	ldr	r2, [r3, #12]
 8003442:	687b      	ldr	r3, [r7, #4]
 8003444:	681b      	ldr	r3, [r3, #0]
 8003446:	430a      	orrs	r2, r1
 8003448:	609a      	str	r2, [r3, #8]
 800344a:	687b      	ldr	r3, [r7, #4]
 800344c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800344e:	4a58      	ldr	r2, [pc, #352]	; (80035b0 <ADC_Init+0x1f4>)
 8003450:	4293      	cmp	r3, r2
 8003452:	d022      	beq.n	800349a <ADC_Init+0xde>
 8003454:	687b      	ldr	r3, [r7, #4]
 8003456:	681b      	ldr	r3, [r3, #0]
 8003458:	689a      	ldr	r2, [r3, #8]
 800345a:	687b      	ldr	r3, [r7, #4]
 800345c:	681b      	ldr	r3, [r3, #0]
 800345e:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8003462:	609a      	str	r2, [r3, #8]
 8003464:	687b      	ldr	r3, [r7, #4]
 8003466:	681b      	ldr	r3, [r3, #0]
 8003468:	6899      	ldr	r1, [r3, #8]
 800346a:	687b      	ldr	r3, [r7, #4]
 800346c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800346e:	687b      	ldr	r3, [r7, #4]
 8003470:	681b      	ldr	r3, [r3, #0]
 8003472:	430a      	orrs	r2, r1
 8003474:	609a      	str	r2, [r3, #8]
 8003476:	687b      	ldr	r3, [r7, #4]
 8003478:	681b      	ldr	r3, [r3, #0]
 800347a:	689a      	ldr	r2, [r3, #8]
 800347c:	687b      	ldr	r3, [r7, #4]
 800347e:	681b      	ldr	r3, [r3, #0]
 8003480:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8003484:	609a      	str	r2, [r3, #8]
 8003486:	687b      	ldr	r3, [r7, #4]
 8003488:	681b      	ldr	r3, [r3, #0]
 800348a:	6899      	ldr	r1, [r3, #8]
 800348c:	687b      	ldr	r3, [r7, #4]
 800348e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003490:	687b      	ldr	r3, [r7, #4]
 8003492:	681b      	ldr	r3, [r3, #0]
 8003494:	430a      	orrs	r2, r1
 8003496:	609a      	str	r2, [r3, #8]
 8003498:	e00f      	b.n	80034ba <ADC_Init+0xfe>
 800349a:	687b      	ldr	r3, [r7, #4]
 800349c:	681b      	ldr	r3, [r3, #0]
 800349e:	689a      	ldr	r2, [r3, #8]
 80034a0:	687b      	ldr	r3, [r7, #4]
 80034a2:	681b      	ldr	r3, [r3, #0]
 80034a4:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80034a8:	609a      	str	r2, [r3, #8]
 80034aa:	687b      	ldr	r3, [r7, #4]
 80034ac:	681b      	ldr	r3, [r3, #0]
 80034ae:	689a      	ldr	r2, [r3, #8]
 80034b0:	687b      	ldr	r3, [r7, #4]
 80034b2:	681b      	ldr	r3, [r3, #0]
 80034b4:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 80034b8:	609a      	str	r2, [r3, #8]
 80034ba:	687b      	ldr	r3, [r7, #4]
 80034bc:	681b      	ldr	r3, [r3, #0]
 80034be:	689a      	ldr	r2, [r3, #8]
 80034c0:	687b      	ldr	r3, [r7, #4]
 80034c2:	681b      	ldr	r3, [r3, #0]
 80034c4:	f022 0202 	bic.w	r2, r2, #2
 80034c8:	609a      	str	r2, [r3, #8]
 80034ca:	687b      	ldr	r3, [r7, #4]
 80034cc:	681b      	ldr	r3, [r3, #0]
 80034ce:	6899      	ldr	r1, [r3, #8]
 80034d0:	687b      	ldr	r3, [r7, #4]
 80034d2:	7e1b      	ldrb	r3, [r3, #24]
 80034d4:	005a      	lsls	r2, r3, #1
 80034d6:	687b      	ldr	r3, [r7, #4]
 80034d8:	681b      	ldr	r3, [r3, #0]
 80034da:	430a      	orrs	r2, r1
 80034dc:	609a      	str	r2, [r3, #8]
 80034de:	687b      	ldr	r3, [r7, #4]
 80034e0:	f893 3020 	ldrb.w	r3, [r3, #32]
 80034e4:	2b00      	cmp	r3, #0
 80034e6:	d01b      	beq.n	8003520 <ADC_Init+0x164>
 80034e8:	687b      	ldr	r3, [r7, #4]
 80034ea:	681b      	ldr	r3, [r3, #0]
 80034ec:	685a      	ldr	r2, [r3, #4]
 80034ee:	687b      	ldr	r3, [r7, #4]
 80034f0:	681b      	ldr	r3, [r3, #0]
 80034f2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80034f6:	605a      	str	r2, [r3, #4]
 80034f8:	687b      	ldr	r3, [r7, #4]
 80034fa:	681b      	ldr	r3, [r3, #0]
 80034fc:	685a      	ldr	r2, [r3, #4]
 80034fe:	687b      	ldr	r3, [r7, #4]
 8003500:	681b      	ldr	r3, [r3, #0]
 8003502:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8003506:	605a      	str	r2, [r3, #4]
 8003508:	687b      	ldr	r3, [r7, #4]
 800350a:	681b      	ldr	r3, [r3, #0]
 800350c:	6859      	ldr	r1, [r3, #4]
 800350e:	687b      	ldr	r3, [r7, #4]
 8003510:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003512:	3b01      	subs	r3, #1
 8003514:	035a      	lsls	r2, r3, #13
 8003516:	687b      	ldr	r3, [r7, #4]
 8003518:	681b      	ldr	r3, [r3, #0]
 800351a:	430a      	orrs	r2, r1
 800351c:	605a      	str	r2, [r3, #4]
 800351e:	e007      	b.n	8003530 <ADC_Init+0x174>
 8003520:	687b      	ldr	r3, [r7, #4]
 8003522:	681b      	ldr	r3, [r3, #0]
 8003524:	685a      	ldr	r2, [r3, #4]
 8003526:	687b      	ldr	r3, [r7, #4]
 8003528:	681b      	ldr	r3, [r3, #0]
 800352a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800352e:	605a      	str	r2, [r3, #4]
 8003530:	687b      	ldr	r3, [r7, #4]
 8003532:	681b      	ldr	r3, [r3, #0]
 8003534:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003536:	687b      	ldr	r3, [r7, #4]
 8003538:	681b      	ldr	r3, [r3, #0]
 800353a:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 800353e:	62da      	str	r2, [r3, #44]	; 0x2c
 8003540:	687b      	ldr	r3, [r7, #4]
 8003542:	681b      	ldr	r3, [r3, #0]
 8003544:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8003546:	687b      	ldr	r3, [r7, #4]
 8003548:	69db      	ldr	r3, [r3, #28]
 800354a:	3b01      	subs	r3, #1
 800354c:	051a      	lsls	r2, r3, #20
 800354e:	687b      	ldr	r3, [r7, #4]
 8003550:	681b      	ldr	r3, [r3, #0]
 8003552:	430a      	orrs	r2, r1
 8003554:	62da      	str	r2, [r3, #44]	; 0x2c
 8003556:	687b      	ldr	r3, [r7, #4]
 8003558:	681b      	ldr	r3, [r3, #0]
 800355a:	689a      	ldr	r2, [r3, #8]
 800355c:	687b      	ldr	r3, [r7, #4]
 800355e:	681b      	ldr	r3, [r3, #0]
 8003560:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8003564:	609a      	str	r2, [r3, #8]
 8003566:	687b      	ldr	r3, [r7, #4]
 8003568:	681b      	ldr	r3, [r3, #0]
 800356a:	6899      	ldr	r1, [r3, #8]
 800356c:	687b      	ldr	r3, [r7, #4]
 800356e:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8003572:	025a      	lsls	r2, r3, #9
 8003574:	687b      	ldr	r3, [r7, #4]
 8003576:	681b      	ldr	r3, [r3, #0]
 8003578:	430a      	orrs	r2, r1
 800357a:	609a      	str	r2, [r3, #8]
 800357c:	687b      	ldr	r3, [r7, #4]
 800357e:	681b      	ldr	r3, [r3, #0]
 8003580:	689a      	ldr	r2, [r3, #8]
 8003582:	687b      	ldr	r3, [r7, #4]
 8003584:	681b      	ldr	r3, [r3, #0]
 8003586:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800358a:	609a      	str	r2, [r3, #8]
 800358c:	687b      	ldr	r3, [r7, #4]
 800358e:	681b      	ldr	r3, [r3, #0]
 8003590:	6899      	ldr	r1, [r3, #8]
 8003592:	687b      	ldr	r3, [r7, #4]
 8003594:	695b      	ldr	r3, [r3, #20]
 8003596:	029a      	lsls	r2, r3, #10
 8003598:	687b      	ldr	r3, [r7, #4]
 800359a:	681b      	ldr	r3, [r3, #0]
 800359c:	430a      	orrs	r2, r1
 800359e:	609a      	str	r2, [r3, #8]
 80035a0:	bf00      	nop
 80035a2:	3714      	adds	r7, #20
 80035a4:	46bd      	mov	sp, r7
 80035a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035aa:	4770      	bx	lr
 80035ac:	40012300 	.word	0x40012300
 80035b0:	0f000001 	.word	0x0f000001

080035b4 <ADC_DMAConvCplt>:
 80035b4:	b580      	push	{r7, lr}
 80035b6:	b084      	sub	sp, #16
 80035b8:	af00      	add	r7, sp, #0
 80035ba:	6078      	str	r0, [r7, #4]
 80035bc:	687b      	ldr	r3, [r7, #4]
 80035be:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80035c0:	60fb      	str	r3, [r7, #12]
 80035c2:	68fb      	ldr	r3, [r7, #12]
 80035c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80035c6:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80035ca:	2b00      	cmp	r3, #0
 80035cc:	d13c      	bne.n	8003648 <ADC_DMAConvCplt+0x94>
 80035ce:	68fb      	ldr	r3, [r7, #12]
 80035d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80035d2:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 80035d6:	68fb      	ldr	r3, [r7, #12]
 80035d8:	641a      	str	r2, [r3, #64]	; 0x40
 80035da:	68fb      	ldr	r3, [r7, #12]
 80035dc:	681b      	ldr	r3, [r3, #0]
 80035de:	689b      	ldr	r3, [r3, #8]
 80035e0:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80035e4:	2b00      	cmp	r3, #0
 80035e6:	d12b      	bne.n	8003640 <ADC_DMAConvCplt+0x8c>
 80035e8:	68fb      	ldr	r3, [r7, #12]
 80035ea:	7e1b      	ldrb	r3, [r3, #24]
 80035ec:	2b00      	cmp	r3, #0
 80035ee:	d127      	bne.n	8003640 <ADC_DMAConvCplt+0x8c>
 80035f0:	68fb      	ldr	r3, [r7, #12]
 80035f2:	681b      	ldr	r3, [r3, #0]
 80035f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80035f6:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 80035fa:	2b00      	cmp	r3, #0
 80035fc:	d006      	beq.n	800360c <ADC_DMAConvCplt+0x58>
 80035fe:	68fb      	ldr	r3, [r7, #12]
 8003600:	681b      	ldr	r3, [r3, #0]
 8003602:	689b      	ldr	r3, [r3, #8]
 8003604:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003608:	2b00      	cmp	r3, #0
 800360a:	d119      	bne.n	8003640 <ADC_DMAConvCplt+0x8c>
 800360c:	68fb      	ldr	r3, [r7, #12]
 800360e:	681b      	ldr	r3, [r3, #0]
 8003610:	685a      	ldr	r2, [r3, #4]
 8003612:	68fb      	ldr	r3, [r7, #12]
 8003614:	681b      	ldr	r3, [r3, #0]
 8003616:	f022 0220 	bic.w	r2, r2, #32
 800361a:	605a      	str	r2, [r3, #4]
 800361c:	68fb      	ldr	r3, [r7, #12]
 800361e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003620:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8003624:	68fb      	ldr	r3, [r7, #12]
 8003626:	641a      	str	r2, [r3, #64]	; 0x40
 8003628:	68fb      	ldr	r3, [r7, #12]
 800362a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800362c:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8003630:	2b00      	cmp	r3, #0
 8003632:	d105      	bne.n	8003640 <ADC_DMAConvCplt+0x8c>
 8003634:	68fb      	ldr	r3, [r7, #12]
 8003636:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003638:	f043 0201 	orr.w	r2, r3, #1
 800363c:	68fb      	ldr	r3, [r7, #12]
 800363e:	641a      	str	r2, [r3, #64]	; 0x40
 8003640:	68f8      	ldr	r0, [r7, #12]
 8003642:	f7ff fd6b 	bl	800311c <HAL_ADC_ConvCpltCallback>
 8003646:	e00e      	b.n	8003666 <ADC_DMAConvCplt+0xb2>
 8003648:	68fb      	ldr	r3, [r7, #12]
 800364a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800364c:	f003 0310 	and.w	r3, r3, #16
 8003650:	2b00      	cmp	r3, #0
 8003652:	d003      	beq.n	800365c <ADC_DMAConvCplt+0xa8>
 8003654:	68f8      	ldr	r0, [r7, #12]
 8003656:	f7ff fd75 	bl	8003144 <HAL_ADC_ErrorCallback>
 800365a:	e004      	b.n	8003666 <ADC_DMAConvCplt+0xb2>
 800365c:	68fb      	ldr	r3, [r7, #12]
 800365e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003660:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003662:	6878      	ldr	r0, [r7, #4]
 8003664:	4798      	blx	r3
 8003666:	bf00      	nop
 8003668:	3710      	adds	r7, #16
 800366a:	46bd      	mov	sp, r7
 800366c:	bd80      	pop	{r7, pc}

0800366e <ADC_DMAHalfConvCplt>:
 800366e:	b580      	push	{r7, lr}
 8003670:	b084      	sub	sp, #16
 8003672:	af00      	add	r7, sp, #0
 8003674:	6078      	str	r0, [r7, #4]
 8003676:	687b      	ldr	r3, [r7, #4]
 8003678:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800367a:	60fb      	str	r3, [r7, #12]
 800367c:	68f8      	ldr	r0, [r7, #12]
 800367e:	f7ff fd57 	bl	8003130 <HAL_ADC_ConvHalfCpltCallback>
 8003682:	bf00      	nop
 8003684:	3710      	adds	r7, #16
 8003686:	46bd      	mov	sp, r7
 8003688:	bd80      	pop	{r7, pc}

0800368a <ADC_DMAError>:
 800368a:	b580      	push	{r7, lr}
 800368c:	b084      	sub	sp, #16
 800368e:	af00      	add	r7, sp, #0
 8003690:	6078      	str	r0, [r7, #4]
 8003692:	687b      	ldr	r3, [r7, #4]
 8003694:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003696:	60fb      	str	r3, [r7, #12]
 8003698:	68fb      	ldr	r3, [r7, #12]
 800369a:	2240      	movs	r2, #64	; 0x40
 800369c:	641a      	str	r2, [r3, #64]	; 0x40
 800369e:	68fb      	ldr	r3, [r7, #12]
 80036a0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80036a2:	f043 0204 	orr.w	r2, r3, #4
 80036a6:	68fb      	ldr	r3, [r7, #12]
 80036a8:	645a      	str	r2, [r3, #68]	; 0x44
 80036aa:	68f8      	ldr	r0, [r7, #12]
 80036ac:	f7ff fd4a 	bl	8003144 <HAL_ADC_ErrorCallback>
 80036b0:	bf00      	nop
 80036b2:	3710      	adds	r7, #16
 80036b4:	46bd      	mov	sp, r7
 80036b6:	bd80      	pop	{r7, pc}

080036b8 <__NVIC_SetPriorityGrouping>:
 80036b8:	b480      	push	{r7}
 80036ba:	b085      	sub	sp, #20
 80036bc:	af00      	add	r7, sp, #0
 80036be:	6078      	str	r0, [r7, #4]
 80036c0:	687b      	ldr	r3, [r7, #4]
 80036c2:	f003 0307 	and.w	r3, r3, #7
 80036c6:	60fb      	str	r3, [r7, #12]
 80036c8:	4b0c      	ldr	r3, [pc, #48]	; (80036fc <__NVIC_SetPriorityGrouping+0x44>)
 80036ca:	68db      	ldr	r3, [r3, #12]
 80036cc:	60bb      	str	r3, [r7, #8]
 80036ce:	68ba      	ldr	r2, [r7, #8]
 80036d0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80036d4:	4013      	ands	r3, r2
 80036d6:	60bb      	str	r3, [r7, #8]
 80036d8:	68fb      	ldr	r3, [r7, #12]
 80036da:	021a      	lsls	r2, r3, #8
 80036dc:	68bb      	ldr	r3, [r7, #8]
 80036de:	4313      	orrs	r3, r2
 80036e0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80036e4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80036e8:	60bb      	str	r3, [r7, #8]
 80036ea:	4a04      	ldr	r2, [pc, #16]	; (80036fc <__NVIC_SetPriorityGrouping+0x44>)
 80036ec:	68bb      	ldr	r3, [r7, #8]
 80036ee:	60d3      	str	r3, [r2, #12]
 80036f0:	bf00      	nop
 80036f2:	3714      	adds	r7, #20
 80036f4:	46bd      	mov	sp, r7
 80036f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036fa:	4770      	bx	lr
 80036fc:	e000ed00 	.word	0xe000ed00

08003700 <__NVIC_GetPriorityGrouping>:
 8003700:	b480      	push	{r7}
 8003702:	af00      	add	r7, sp, #0
 8003704:	4b04      	ldr	r3, [pc, #16]	; (8003718 <__NVIC_GetPriorityGrouping+0x18>)
 8003706:	68db      	ldr	r3, [r3, #12]
 8003708:	0a1b      	lsrs	r3, r3, #8
 800370a:	f003 0307 	and.w	r3, r3, #7
 800370e:	4618      	mov	r0, r3
 8003710:	46bd      	mov	sp, r7
 8003712:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003716:	4770      	bx	lr
 8003718:	e000ed00 	.word	0xe000ed00

0800371c <__NVIC_EnableIRQ>:
 800371c:	b480      	push	{r7}
 800371e:	b083      	sub	sp, #12
 8003720:	af00      	add	r7, sp, #0
 8003722:	4603      	mov	r3, r0
 8003724:	71fb      	strb	r3, [r7, #7]
 8003726:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800372a:	2b00      	cmp	r3, #0
 800372c:	db0b      	blt.n	8003746 <__NVIC_EnableIRQ+0x2a>
 800372e:	79fb      	ldrb	r3, [r7, #7]
 8003730:	f003 021f 	and.w	r2, r3, #31
 8003734:	4907      	ldr	r1, [pc, #28]	; (8003754 <__NVIC_EnableIRQ+0x38>)
 8003736:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800373a:	095b      	lsrs	r3, r3, #5
 800373c:	2001      	movs	r0, #1
 800373e:	fa00 f202 	lsl.w	r2, r0, r2
 8003742:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003746:	bf00      	nop
 8003748:	370c      	adds	r7, #12
 800374a:	46bd      	mov	sp, r7
 800374c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003750:	4770      	bx	lr
 8003752:	bf00      	nop
 8003754:	e000e100 	.word	0xe000e100

08003758 <__NVIC_SetPriority>:
 8003758:	b480      	push	{r7}
 800375a:	b083      	sub	sp, #12
 800375c:	af00      	add	r7, sp, #0
 800375e:	4603      	mov	r3, r0
 8003760:	6039      	str	r1, [r7, #0]
 8003762:	71fb      	strb	r3, [r7, #7]
 8003764:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003768:	2b00      	cmp	r3, #0
 800376a:	db0a      	blt.n	8003782 <__NVIC_SetPriority+0x2a>
 800376c:	683b      	ldr	r3, [r7, #0]
 800376e:	b2da      	uxtb	r2, r3
 8003770:	490c      	ldr	r1, [pc, #48]	; (80037a4 <__NVIC_SetPriority+0x4c>)
 8003772:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003776:	0112      	lsls	r2, r2, #4
 8003778:	b2d2      	uxtb	r2, r2
 800377a:	440b      	add	r3, r1
 800377c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8003780:	e00a      	b.n	8003798 <__NVIC_SetPriority+0x40>
 8003782:	683b      	ldr	r3, [r7, #0]
 8003784:	b2da      	uxtb	r2, r3
 8003786:	4908      	ldr	r1, [pc, #32]	; (80037a8 <__NVIC_SetPriority+0x50>)
 8003788:	79fb      	ldrb	r3, [r7, #7]
 800378a:	f003 030f 	and.w	r3, r3, #15
 800378e:	3b04      	subs	r3, #4
 8003790:	0112      	lsls	r2, r2, #4
 8003792:	b2d2      	uxtb	r2, r2
 8003794:	440b      	add	r3, r1
 8003796:	761a      	strb	r2, [r3, #24]
 8003798:	bf00      	nop
 800379a:	370c      	adds	r7, #12
 800379c:	46bd      	mov	sp, r7
 800379e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037a2:	4770      	bx	lr
 80037a4:	e000e100 	.word	0xe000e100
 80037a8:	e000ed00 	.word	0xe000ed00

080037ac <NVIC_EncodePriority>:
 80037ac:	b480      	push	{r7}
 80037ae:	b089      	sub	sp, #36	; 0x24
 80037b0:	af00      	add	r7, sp, #0
 80037b2:	60f8      	str	r0, [r7, #12]
 80037b4:	60b9      	str	r1, [r7, #8]
 80037b6:	607a      	str	r2, [r7, #4]
 80037b8:	68fb      	ldr	r3, [r7, #12]
 80037ba:	f003 0307 	and.w	r3, r3, #7
 80037be:	61fb      	str	r3, [r7, #28]
 80037c0:	69fb      	ldr	r3, [r7, #28]
 80037c2:	f1c3 0307 	rsb	r3, r3, #7
 80037c6:	2b04      	cmp	r3, #4
 80037c8:	bf28      	it	cs
 80037ca:	2304      	movcs	r3, #4
 80037cc:	61bb      	str	r3, [r7, #24]
 80037ce:	69fb      	ldr	r3, [r7, #28]
 80037d0:	3304      	adds	r3, #4
 80037d2:	2b06      	cmp	r3, #6
 80037d4:	d902      	bls.n	80037dc <NVIC_EncodePriority+0x30>
 80037d6:	69fb      	ldr	r3, [r7, #28]
 80037d8:	3b03      	subs	r3, #3
 80037da:	e000      	b.n	80037de <NVIC_EncodePriority+0x32>
 80037dc:	2300      	movs	r3, #0
 80037de:	617b      	str	r3, [r7, #20]
 80037e0:	f04f 32ff 	mov.w	r2, #4294967295
 80037e4:	69bb      	ldr	r3, [r7, #24]
 80037e6:	fa02 f303 	lsl.w	r3, r2, r3
 80037ea:	43da      	mvns	r2, r3
 80037ec:	68bb      	ldr	r3, [r7, #8]
 80037ee:	401a      	ands	r2, r3
 80037f0:	697b      	ldr	r3, [r7, #20]
 80037f2:	409a      	lsls	r2, r3
 80037f4:	f04f 31ff 	mov.w	r1, #4294967295
 80037f8:	697b      	ldr	r3, [r7, #20]
 80037fa:	fa01 f303 	lsl.w	r3, r1, r3
 80037fe:	43d9      	mvns	r1, r3
 8003800:	687b      	ldr	r3, [r7, #4]
 8003802:	400b      	ands	r3, r1
 8003804:	4313      	orrs	r3, r2
 8003806:	4618      	mov	r0, r3
 8003808:	3724      	adds	r7, #36	; 0x24
 800380a:	46bd      	mov	sp, r7
 800380c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003810:	4770      	bx	lr

08003812 <HAL_NVIC_SetPriorityGrouping>:
 8003812:	b580      	push	{r7, lr}
 8003814:	b082      	sub	sp, #8
 8003816:	af00      	add	r7, sp, #0
 8003818:	6078      	str	r0, [r7, #4]
 800381a:	6878      	ldr	r0, [r7, #4]
 800381c:	f7ff ff4c 	bl	80036b8 <__NVIC_SetPriorityGrouping>
 8003820:	bf00      	nop
 8003822:	3708      	adds	r7, #8
 8003824:	46bd      	mov	sp, r7
 8003826:	bd80      	pop	{r7, pc}

08003828 <HAL_NVIC_SetPriority>:
 8003828:	b580      	push	{r7, lr}
 800382a:	b086      	sub	sp, #24
 800382c:	af00      	add	r7, sp, #0
 800382e:	4603      	mov	r3, r0
 8003830:	60b9      	str	r1, [r7, #8]
 8003832:	607a      	str	r2, [r7, #4]
 8003834:	73fb      	strb	r3, [r7, #15]
 8003836:	2300      	movs	r3, #0
 8003838:	617b      	str	r3, [r7, #20]
 800383a:	f7ff ff61 	bl	8003700 <__NVIC_GetPriorityGrouping>
 800383e:	6178      	str	r0, [r7, #20]
 8003840:	687a      	ldr	r2, [r7, #4]
 8003842:	68b9      	ldr	r1, [r7, #8]
 8003844:	6978      	ldr	r0, [r7, #20]
 8003846:	f7ff ffb1 	bl	80037ac <NVIC_EncodePriority>
 800384a:	4602      	mov	r2, r0
 800384c:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003850:	4611      	mov	r1, r2
 8003852:	4618      	mov	r0, r3
 8003854:	f7ff ff80 	bl	8003758 <__NVIC_SetPriority>
 8003858:	bf00      	nop
 800385a:	3718      	adds	r7, #24
 800385c:	46bd      	mov	sp, r7
 800385e:	bd80      	pop	{r7, pc}

08003860 <HAL_NVIC_EnableIRQ>:
 8003860:	b580      	push	{r7, lr}
 8003862:	b082      	sub	sp, #8
 8003864:	af00      	add	r7, sp, #0
 8003866:	4603      	mov	r3, r0
 8003868:	71fb      	strb	r3, [r7, #7]
 800386a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800386e:	4618      	mov	r0, r3
 8003870:	f7ff ff54 	bl	800371c <__NVIC_EnableIRQ>
 8003874:	bf00      	nop
 8003876:	3708      	adds	r7, #8
 8003878:	46bd      	mov	sp, r7
 800387a:	bd80      	pop	{r7, pc}

0800387c <HAL_CRC_Init>:
 800387c:	b580      	push	{r7, lr}
 800387e:	b082      	sub	sp, #8
 8003880:	af00      	add	r7, sp, #0
 8003882:	6078      	str	r0, [r7, #4]
 8003884:	687b      	ldr	r3, [r7, #4]
 8003886:	2b00      	cmp	r3, #0
 8003888:	d101      	bne.n	800388e <HAL_CRC_Init+0x12>
 800388a:	2301      	movs	r3, #1
 800388c:	e00e      	b.n	80038ac <HAL_CRC_Init+0x30>
 800388e:	687b      	ldr	r3, [r7, #4]
 8003890:	795b      	ldrb	r3, [r3, #5]
 8003892:	b2db      	uxtb	r3, r3
 8003894:	2b00      	cmp	r3, #0
 8003896:	d105      	bne.n	80038a4 <HAL_CRC_Init+0x28>
 8003898:	687b      	ldr	r3, [r7, #4]
 800389a:	2200      	movs	r2, #0
 800389c:	711a      	strb	r2, [r3, #4]
 800389e:	6878      	ldr	r0, [r7, #4]
 80038a0:	f7fe f8f0 	bl	8001a84 <HAL_CRC_MspInit>
 80038a4:	687b      	ldr	r3, [r7, #4]
 80038a6:	2201      	movs	r2, #1
 80038a8:	715a      	strb	r2, [r3, #5]
 80038aa:	2300      	movs	r3, #0
 80038ac:	4618      	mov	r0, r3
 80038ae:	3708      	adds	r7, #8
 80038b0:	46bd      	mov	sp, r7
 80038b2:	bd80      	pop	{r7, pc}

080038b4 <HAL_DMA_Init>:
 80038b4:	b580      	push	{r7, lr}
 80038b6:	b086      	sub	sp, #24
 80038b8:	af00      	add	r7, sp, #0
 80038ba:	6078      	str	r0, [r7, #4]
 80038bc:	2300      	movs	r3, #0
 80038be:	617b      	str	r3, [r7, #20]
 80038c0:	f7ff fac8 	bl	8002e54 <HAL_GetTick>
 80038c4:	6138      	str	r0, [r7, #16]
 80038c6:	687b      	ldr	r3, [r7, #4]
 80038c8:	2b00      	cmp	r3, #0
 80038ca:	d101      	bne.n	80038d0 <HAL_DMA_Init+0x1c>
 80038cc:	2301      	movs	r3, #1
 80038ce:	e099      	b.n	8003a04 <HAL_DMA_Init+0x150>
 80038d0:	687b      	ldr	r3, [r7, #4]
 80038d2:	2202      	movs	r2, #2
 80038d4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80038d8:	687b      	ldr	r3, [r7, #4]
 80038da:	2200      	movs	r2, #0
 80038dc:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80038e0:	687b      	ldr	r3, [r7, #4]
 80038e2:	681b      	ldr	r3, [r3, #0]
 80038e4:	681a      	ldr	r2, [r3, #0]
 80038e6:	687b      	ldr	r3, [r7, #4]
 80038e8:	681b      	ldr	r3, [r3, #0]
 80038ea:	f022 0201 	bic.w	r2, r2, #1
 80038ee:	601a      	str	r2, [r3, #0]
 80038f0:	e00f      	b.n	8003912 <HAL_DMA_Init+0x5e>
 80038f2:	f7ff faaf 	bl	8002e54 <HAL_GetTick>
 80038f6:	4602      	mov	r2, r0
 80038f8:	693b      	ldr	r3, [r7, #16]
 80038fa:	1ad3      	subs	r3, r2, r3
 80038fc:	2b05      	cmp	r3, #5
 80038fe:	d908      	bls.n	8003912 <HAL_DMA_Init+0x5e>
 8003900:	687b      	ldr	r3, [r7, #4]
 8003902:	2220      	movs	r2, #32
 8003904:	655a      	str	r2, [r3, #84]	; 0x54
 8003906:	687b      	ldr	r3, [r7, #4]
 8003908:	2203      	movs	r2, #3
 800390a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800390e:	2303      	movs	r3, #3
 8003910:	e078      	b.n	8003a04 <HAL_DMA_Init+0x150>
 8003912:	687b      	ldr	r3, [r7, #4]
 8003914:	681b      	ldr	r3, [r3, #0]
 8003916:	681b      	ldr	r3, [r3, #0]
 8003918:	f003 0301 	and.w	r3, r3, #1
 800391c:	2b00      	cmp	r3, #0
 800391e:	d1e8      	bne.n	80038f2 <HAL_DMA_Init+0x3e>
 8003920:	687b      	ldr	r3, [r7, #4]
 8003922:	681b      	ldr	r3, [r3, #0]
 8003924:	681b      	ldr	r3, [r3, #0]
 8003926:	617b      	str	r3, [r7, #20]
 8003928:	697a      	ldr	r2, [r7, #20]
 800392a:	4b38      	ldr	r3, [pc, #224]	; (8003a0c <HAL_DMA_Init+0x158>)
 800392c:	4013      	ands	r3, r2
 800392e:	617b      	str	r3, [r7, #20]
 8003930:	687b      	ldr	r3, [r7, #4]
 8003932:	685a      	ldr	r2, [r3, #4]
 8003934:	687b      	ldr	r3, [r7, #4]
 8003936:	689b      	ldr	r3, [r3, #8]
 8003938:	431a      	orrs	r2, r3
 800393a:	687b      	ldr	r3, [r7, #4]
 800393c:	68db      	ldr	r3, [r3, #12]
 800393e:	431a      	orrs	r2, r3
 8003940:	687b      	ldr	r3, [r7, #4]
 8003942:	691b      	ldr	r3, [r3, #16]
 8003944:	431a      	orrs	r2, r3
 8003946:	687b      	ldr	r3, [r7, #4]
 8003948:	695b      	ldr	r3, [r3, #20]
 800394a:	431a      	orrs	r2, r3
 800394c:	687b      	ldr	r3, [r7, #4]
 800394e:	699b      	ldr	r3, [r3, #24]
 8003950:	431a      	orrs	r2, r3
 8003952:	687b      	ldr	r3, [r7, #4]
 8003954:	69db      	ldr	r3, [r3, #28]
 8003956:	431a      	orrs	r2, r3
 8003958:	687b      	ldr	r3, [r7, #4]
 800395a:	6a1b      	ldr	r3, [r3, #32]
 800395c:	4313      	orrs	r3, r2
 800395e:	697a      	ldr	r2, [r7, #20]
 8003960:	4313      	orrs	r3, r2
 8003962:	617b      	str	r3, [r7, #20]
 8003964:	687b      	ldr	r3, [r7, #4]
 8003966:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003968:	2b04      	cmp	r3, #4
 800396a:	d107      	bne.n	800397c <HAL_DMA_Init+0xc8>
 800396c:	687b      	ldr	r3, [r7, #4]
 800396e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003970:	687b      	ldr	r3, [r7, #4]
 8003972:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003974:	4313      	orrs	r3, r2
 8003976:	697a      	ldr	r2, [r7, #20]
 8003978:	4313      	orrs	r3, r2
 800397a:	617b      	str	r3, [r7, #20]
 800397c:	687b      	ldr	r3, [r7, #4]
 800397e:	681b      	ldr	r3, [r3, #0]
 8003980:	697a      	ldr	r2, [r7, #20]
 8003982:	601a      	str	r2, [r3, #0]
 8003984:	687b      	ldr	r3, [r7, #4]
 8003986:	681b      	ldr	r3, [r3, #0]
 8003988:	695b      	ldr	r3, [r3, #20]
 800398a:	617b      	str	r3, [r7, #20]
 800398c:	697b      	ldr	r3, [r7, #20]
 800398e:	f023 0307 	bic.w	r3, r3, #7
 8003992:	617b      	str	r3, [r7, #20]
 8003994:	687b      	ldr	r3, [r7, #4]
 8003996:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003998:	697a      	ldr	r2, [r7, #20]
 800399a:	4313      	orrs	r3, r2
 800399c:	617b      	str	r3, [r7, #20]
 800399e:	687b      	ldr	r3, [r7, #4]
 80039a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80039a2:	2b04      	cmp	r3, #4
 80039a4:	d117      	bne.n	80039d6 <HAL_DMA_Init+0x122>
 80039a6:	687b      	ldr	r3, [r7, #4]
 80039a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80039aa:	697a      	ldr	r2, [r7, #20]
 80039ac:	4313      	orrs	r3, r2
 80039ae:	617b      	str	r3, [r7, #20]
 80039b0:	687b      	ldr	r3, [r7, #4]
 80039b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80039b4:	2b00      	cmp	r3, #0
 80039b6:	d00e      	beq.n	80039d6 <HAL_DMA_Init+0x122>
 80039b8:	6878      	ldr	r0, [r7, #4]
 80039ba:	f000 fa91 	bl	8003ee0 <DMA_CheckFifoParam>
 80039be:	4603      	mov	r3, r0
 80039c0:	2b00      	cmp	r3, #0
 80039c2:	d008      	beq.n	80039d6 <HAL_DMA_Init+0x122>
 80039c4:	687b      	ldr	r3, [r7, #4]
 80039c6:	2240      	movs	r2, #64	; 0x40
 80039c8:	655a      	str	r2, [r3, #84]	; 0x54
 80039ca:	687b      	ldr	r3, [r7, #4]
 80039cc:	2201      	movs	r2, #1
 80039ce:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80039d2:	2301      	movs	r3, #1
 80039d4:	e016      	b.n	8003a04 <HAL_DMA_Init+0x150>
 80039d6:	687b      	ldr	r3, [r7, #4]
 80039d8:	681b      	ldr	r3, [r3, #0]
 80039da:	697a      	ldr	r2, [r7, #20]
 80039dc:	615a      	str	r2, [r3, #20]
 80039de:	6878      	ldr	r0, [r7, #4]
 80039e0:	f000 fa48 	bl	8003e74 <DMA_CalcBaseAndBitshift>
 80039e4:	4603      	mov	r3, r0
 80039e6:	60fb      	str	r3, [r7, #12]
 80039e8:	687b      	ldr	r3, [r7, #4]
 80039ea:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80039ec:	223f      	movs	r2, #63	; 0x3f
 80039ee:	409a      	lsls	r2, r3
 80039f0:	68fb      	ldr	r3, [r7, #12]
 80039f2:	609a      	str	r2, [r3, #8]
 80039f4:	687b      	ldr	r3, [r7, #4]
 80039f6:	2200      	movs	r2, #0
 80039f8:	655a      	str	r2, [r3, #84]	; 0x54
 80039fa:	687b      	ldr	r3, [r7, #4]
 80039fc:	2201      	movs	r2, #1
 80039fe:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003a02:	2300      	movs	r3, #0
 8003a04:	4618      	mov	r0, r3
 8003a06:	3718      	adds	r7, #24
 8003a08:	46bd      	mov	sp, r7
 8003a0a:	bd80      	pop	{r7, pc}
 8003a0c:	f010803f 	.word	0xf010803f

08003a10 <HAL_DMA_Start_IT>:
 8003a10:	b580      	push	{r7, lr}
 8003a12:	b086      	sub	sp, #24
 8003a14:	af00      	add	r7, sp, #0
 8003a16:	60f8      	str	r0, [r7, #12]
 8003a18:	60b9      	str	r1, [r7, #8]
 8003a1a:	607a      	str	r2, [r7, #4]
 8003a1c:	603b      	str	r3, [r7, #0]
 8003a1e:	2300      	movs	r3, #0
 8003a20:	75fb      	strb	r3, [r7, #23]
 8003a22:	68fb      	ldr	r3, [r7, #12]
 8003a24:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003a26:	613b      	str	r3, [r7, #16]
 8003a28:	68fb      	ldr	r3, [r7, #12]
 8003a2a:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8003a2e:	2b01      	cmp	r3, #1
 8003a30:	d101      	bne.n	8003a36 <HAL_DMA_Start_IT+0x26>
 8003a32:	2302      	movs	r3, #2
 8003a34:	e040      	b.n	8003ab8 <HAL_DMA_Start_IT+0xa8>
 8003a36:	68fb      	ldr	r3, [r7, #12]
 8003a38:	2201      	movs	r2, #1
 8003a3a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003a3e:	68fb      	ldr	r3, [r7, #12]
 8003a40:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003a44:	b2db      	uxtb	r3, r3
 8003a46:	2b01      	cmp	r3, #1
 8003a48:	d12f      	bne.n	8003aaa <HAL_DMA_Start_IT+0x9a>
 8003a4a:	68fb      	ldr	r3, [r7, #12]
 8003a4c:	2202      	movs	r2, #2
 8003a4e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003a52:	68fb      	ldr	r3, [r7, #12]
 8003a54:	2200      	movs	r2, #0
 8003a56:	655a      	str	r2, [r3, #84]	; 0x54
 8003a58:	683b      	ldr	r3, [r7, #0]
 8003a5a:	687a      	ldr	r2, [r7, #4]
 8003a5c:	68b9      	ldr	r1, [r7, #8]
 8003a5e:	68f8      	ldr	r0, [r7, #12]
 8003a60:	f000 f9da 	bl	8003e18 <DMA_SetConfig>
 8003a64:	68fb      	ldr	r3, [r7, #12]
 8003a66:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003a68:	223f      	movs	r2, #63	; 0x3f
 8003a6a:	409a      	lsls	r2, r3
 8003a6c:	693b      	ldr	r3, [r7, #16]
 8003a6e:	609a      	str	r2, [r3, #8]
 8003a70:	68fb      	ldr	r3, [r7, #12]
 8003a72:	681b      	ldr	r3, [r3, #0]
 8003a74:	681a      	ldr	r2, [r3, #0]
 8003a76:	68fb      	ldr	r3, [r7, #12]
 8003a78:	681b      	ldr	r3, [r3, #0]
 8003a7a:	f042 0216 	orr.w	r2, r2, #22
 8003a7e:	601a      	str	r2, [r3, #0]
 8003a80:	68fb      	ldr	r3, [r7, #12]
 8003a82:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003a84:	2b00      	cmp	r3, #0
 8003a86:	d007      	beq.n	8003a98 <HAL_DMA_Start_IT+0x88>
 8003a88:	68fb      	ldr	r3, [r7, #12]
 8003a8a:	681b      	ldr	r3, [r3, #0]
 8003a8c:	681a      	ldr	r2, [r3, #0]
 8003a8e:	68fb      	ldr	r3, [r7, #12]
 8003a90:	681b      	ldr	r3, [r3, #0]
 8003a92:	f042 0208 	orr.w	r2, r2, #8
 8003a96:	601a      	str	r2, [r3, #0]
 8003a98:	68fb      	ldr	r3, [r7, #12]
 8003a9a:	681b      	ldr	r3, [r3, #0]
 8003a9c:	681a      	ldr	r2, [r3, #0]
 8003a9e:	68fb      	ldr	r3, [r7, #12]
 8003aa0:	681b      	ldr	r3, [r3, #0]
 8003aa2:	f042 0201 	orr.w	r2, r2, #1
 8003aa6:	601a      	str	r2, [r3, #0]
 8003aa8:	e005      	b.n	8003ab6 <HAL_DMA_Start_IT+0xa6>
 8003aaa:	68fb      	ldr	r3, [r7, #12]
 8003aac:	2200      	movs	r2, #0
 8003aae:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003ab2:	2302      	movs	r3, #2
 8003ab4:	75fb      	strb	r3, [r7, #23]
 8003ab6:	7dfb      	ldrb	r3, [r7, #23]
 8003ab8:	4618      	mov	r0, r3
 8003aba:	3718      	adds	r7, #24
 8003abc:	46bd      	mov	sp, r7
 8003abe:	bd80      	pop	{r7, pc}

08003ac0 <HAL_DMA_Abort_IT>:
 8003ac0:	b480      	push	{r7}
 8003ac2:	b083      	sub	sp, #12
 8003ac4:	af00      	add	r7, sp, #0
 8003ac6:	6078      	str	r0, [r7, #4]
 8003ac8:	687b      	ldr	r3, [r7, #4]
 8003aca:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003ace:	b2db      	uxtb	r3, r3
 8003ad0:	2b02      	cmp	r3, #2
 8003ad2:	d004      	beq.n	8003ade <HAL_DMA_Abort_IT+0x1e>
 8003ad4:	687b      	ldr	r3, [r7, #4]
 8003ad6:	2280      	movs	r2, #128	; 0x80
 8003ad8:	655a      	str	r2, [r3, #84]	; 0x54
 8003ada:	2301      	movs	r3, #1
 8003adc:	e00c      	b.n	8003af8 <HAL_DMA_Abort_IT+0x38>
 8003ade:	687b      	ldr	r3, [r7, #4]
 8003ae0:	2205      	movs	r2, #5
 8003ae2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003ae6:	687b      	ldr	r3, [r7, #4]
 8003ae8:	681b      	ldr	r3, [r3, #0]
 8003aea:	681a      	ldr	r2, [r3, #0]
 8003aec:	687b      	ldr	r3, [r7, #4]
 8003aee:	681b      	ldr	r3, [r3, #0]
 8003af0:	f022 0201 	bic.w	r2, r2, #1
 8003af4:	601a      	str	r2, [r3, #0]
 8003af6:	2300      	movs	r3, #0
 8003af8:	4618      	mov	r0, r3
 8003afa:	370c      	adds	r7, #12
 8003afc:	46bd      	mov	sp, r7
 8003afe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b02:	4770      	bx	lr

08003b04 <HAL_DMA_IRQHandler>:
 8003b04:	b580      	push	{r7, lr}
 8003b06:	b086      	sub	sp, #24
 8003b08:	af00      	add	r7, sp, #0
 8003b0a:	6078      	str	r0, [r7, #4]
 8003b0c:	2300      	movs	r3, #0
 8003b0e:	60bb      	str	r3, [r7, #8]
 8003b10:	4b8e      	ldr	r3, [pc, #568]	; (8003d4c <HAL_DMA_IRQHandler+0x248>)
 8003b12:	681b      	ldr	r3, [r3, #0]
 8003b14:	4a8e      	ldr	r2, [pc, #568]	; (8003d50 <HAL_DMA_IRQHandler+0x24c>)
 8003b16:	fba2 2303 	umull	r2, r3, r2, r3
 8003b1a:	0a9b      	lsrs	r3, r3, #10
 8003b1c:	617b      	str	r3, [r7, #20]
 8003b1e:	687b      	ldr	r3, [r7, #4]
 8003b20:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003b22:	613b      	str	r3, [r7, #16]
 8003b24:	693b      	ldr	r3, [r7, #16]
 8003b26:	681b      	ldr	r3, [r3, #0]
 8003b28:	60fb      	str	r3, [r7, #12]
 8003b2a:	687b      	ldr	r3, [r7, #4]
 8003b2c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003b2e:	2208      	movs	r2, #8
 8003b30:	409a      	lsls	r2, r3
 8003b32:	68fb      	ldr	r3, [r7, #12]
 8003b34:	4013      	ands	r3, r2
 8003b36:	2b00      	cmp	r3, #0
 8003b38:	d01a      	beq.n	8003b70 <HAL_DMA_IRQHandler+0x6c>
 8003b3a:	687b      	ldr	r3, [r7, #4]
 8003b3c:	681b      	ldr	r3, [r3, #0]
 8003b3e:	681b      	ldr	r3, [r3, #0]
 8003b40:	f003 0304 	and.w	r3, r3, #4
 8003b44:	2b00      	cmp	r3, #0
 8003b46:	d013      	beq.n	8003b70 <HAL_DMA_IRQHandler+0x6c>
 8003b48:	687b      	ldr	r3, [r7, #4]
 8003b4a:	681b      	ldr	r3, [r3, #0]
 8003b4c:	681a      	ldr	r2, [r3, #0]
 8003b4e:	687b      	ldr	r3, [r7, #4]
 8003b50:	681b      	ldr	r3, [r3, #0]
 8003b52:	f022 0204 	bic.w	r2, r2, #4
 8003b56:	601a      	str	r2, [r3, #0]
 8003b58:	687b      	ldr	r3, [r7, #4]
 8003b5a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003b5c:	2208      	movs	r2, #8
 8003b5e:	409a      	lsls	r2, r3
 8003b60:	693b      	ldr	r3, [r7, #16]
 8003b62:	609a      	str	r2, [r3, #8]
 8003b64:	687b      	ldr	r3, [r7, #4]
 8003b66:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003b68:	f043 0201 	orr.w	r2, r3, #1
 8003b6c:	687b      	ldr	r3, [r7, #4]
 8003b6e:	655a      	str	r2, [r3, #84]	; 0x54
 8003b70:	687b      	ldr	r3, [r7, #4]
 8003b72:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003b74:	2201      	movs	r2, #1
 8003b76:	409a      	lsls	r2, r3
 8003b78:	68fb      	ldr	r3, [r7, #12]
 8003b7a:	4013      	ands	r3, r2
 8003b7c:	2b00      	cmp	r3, #0
 8003b7e:	d012      	beq.n	8003ba6 <HAL_DMA_IRQHandler+0xa2>
 8003b80:	687b      	ldr	r3, [r7, #4]
 8003b82:	681b      	ldr	r3, [r3, #0]
 8003b84:	695b      	ldr	r3, [r3, #20]
 8003b86:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003b8a:	2b00      	cmp	r3, #0
 8003b8c:	d00b      	beq.n	8003ba6 <HAL_DMA_IRQHandler+0xa2>
 8003b8e:	687b      	ldr	r3, [r7, #4]
 8003b90:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003b92:	2201      	movs	r2, #1
 8003b94:	409a      	lsls	r2, r3
 8003b96:	693b      	ldr	r3, [r7, #16]
 8003b98:	609a      	str	r2, [r3, #8]
 8003b9a:	687b      	ldr	r3, [r7, #4]
 8003b9c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003b9e:	f043 0202 	orr.w	r2, r3, #2
 8003ba2:	687b      	ldr	r3, [r7, #4]
 8003ba4:	655a      	str	r2, [r3, #84]	; 0x54
 8003ba6:	687b      	ldr	r3, [r7, #4]
 8003ba8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003baa:	2204      	movs	r2, #4
 8003bac:	409a      	lsls	r2, r3
 8003bae:	68fb      	ldr	r3, [r7, #12]
 8003bb0:	4013      	ands	r3, r2
 8003bb2:	2b00      	cmp	r3, #0
 8003bb4:	d012      	beq.n	8003bdc <HAL_DMA_IRQHandler+0xd8>
 8003bb6:	687b      	ldr	r3, [r7, #4]
 8003bb8:	681b      	ldr	r3, [r3, #0]
 8003bba:	681b      	ldr	r3, [r3, #0]
 8003bbc:	f003 0302 	and.w	r3, r3, #2
 8003bc0:	2b00      	cmp	r3, #0
 8003bc2:	d00b      	beq.n	8003bdc <HAL_DMA_IRQHandler+0xd8>
 8003bc4:	687b      	ldr	r3, [r7, #4]
 8003bc6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003bc8:	2204      	movs	r2, #4
 8003bca:	409a      	lsls	r2, r3
 8003bcc:	693b      	ldr	r3, [r7, #16]
 8003bce:	609a      	str	r2, [r3, #8]
 8003bd0:	687b      	ldr	r3, [r7, #4]
 8003bd2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003bd4:	f043 0204 	orr.w	r2, r3, #4
 8003bd8:	687b      	ldr	r3, [r7, #4]
 8003bda:	655a      	str	r2, [r3, #84]	; 0x54
 8003bdc:	687b      	ldr	r3, [r7, #4]
 8003bde:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003be0:	2210      	movs	r2, #16
 8003be2:	409a      	lsls	r2, r3
 8003be4:	68fb      	ldr	r3, [r7, #12]
 8003be6:	4013      	ands	r3, r2
 8003be8:	2b00      	cmp	r3, #0
 8003bea:	d043      	beq.n	8003c74 <HAL_DMA_IRQHandler+0x170>
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	681b      	ldr	r3, [r3, #0]
 8003bf0:	681b      	ldr	r3, [r3, #0]
 8003bf2:	f003 0308 	and.w	r3, r3, #8
 8003bf6:	2b00      	cmp	r3, #0
 8003bf8:	d03c      	beq.n	8003c74 <HAL_DMA_IRQHandler+0x170>
 8003bfa:	687b      	ldr	r3, [r7, #4]
 8003bfc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003bfe:	2210      	movs	r2, #16
 8003c00:	409a      	lsls	r2, r3
 8003c02:	693b      	ldr	r3, [r7, #16]
 8003c04:	609a      	str	r2, [r3, #8]
 8003c06:	687b      	ldr	r3, [r7, #4]
 8003c08:	681b      	ldr	r3, [r3, #0]
 8003c0a:	681b      	ldr	r3, [r3, #0]
 8003c0c:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003c10:	2b00      	cmp	r3, #0
 8003c12:	d018      	beq.n	8003c46 <HAL_DMA_IRQHandler+0x142>
 8003c14:	687b      	ldr	r3, [r7, #4]
 8003c16:	681b      	ldr	r3, [r3, #0]
 8003c18:	681b      	ldr	r3, [r3, #0]
 8003c1a:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8003c1e:	2b00      	cmp	r3, #0
 8003c20:	d108      	bne.n	8003c34 <HAL_DMA_IRQHandler+0x130>
 8003c22:	687b      	ldr	r3, [r7, #4]
 8003c24:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003c26:	2b00      	cmp	r3, #0
 8003c28:	d024      	beq.n	8003c74 <HAL_DMA_IRQHandler+0x170>
 8003c2a:	687b      	ldr	r3, [r7, #4]
 8003c2c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003c2e:	6878      	ldr	r0, [r7, #4]
 8003c30:	4798      	blx	r3
 8003c32:	e01f      	b.n	8003c74 <HAL_DMA_IRQHandler+0x170>
 8003c34:	687b      	ldr	r3, [r7, #4]
 8003c36:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003c38:	2b00      	cmp	r3, #0
 8003c3a:	d01b      	beq.n	8003c74 <HAL_DMA_IRQHandler+0x170>
 8003c3c:	687b      	ldr	r3, [r7, #4]
 8003c3e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003c40:	6878      	ldr	r0, [r7, #4]
 8003c42:	4798      	blx	r3
 8003c44:	e016      	b.n	8003c74 <HAL_DMA_IRQHandler+0x170>
 8003c46:	687b      	ldr	r3, [r7, #4]
 8003c48:	681b      	ldr	r3, [r3, #0]
 8003c4a:	681b      	ldr	r3, [r3, #0]
 8003c4c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003c50:	2b00      	cmp	r3, #0
 8003c52:	d107      	bne.n	8003c64 <HAL_DMA_IRQHandler+0x160>
 8003c54:	687b      	ldr	r3, [r7, #4]
 8003c56:	681b      	ldr	r3, [r3, #0]
 8003c58:	681a      	ldr	r2, [r3, #0]
 8003c5a:	687b      	ldr	r3, [r7, #4]
 8003c5c:	681b      	ldr	r3, [r3, #0]
 8003c5e:	f022 0208 	bic.w	r2, r2, #8
 8003c62:	601a      	str	r2, [r3, #0]
 8003c64:	687b      	ldr	r3, [r7, #4]
 8003c66:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003c68:	2b00      	cmp	r3, #0
 8003c6a:	d003      	beq.n	8003c74 <HAL_DMA_IRQHandler+0x170>
 8003c6c:	687b      	ldr	r3, [r7, #4]
 8003c6e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003c70:	6878      	ldr	r0, [r7, #4]
 8003c72:	4798      	blx	r3
 8003c74:	687b      	ldr	r3, [r7, #4]
 8003c76:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003c78:	2220      	movs	r2, #32
 8003c7a:	409a      	lsls	r2, r3
 8003c7c:	68fb      	ldr	r3, [r7, #12]
 8003c7e:	4013      	ands	r3, r2
 8003c80:	2b00      	cmp	r3, #0
 8003c82:	f000 808f 	beq.w	8003da4 <HAL_DMA_IRQHandler+0x2a0>
 8003c86:	687b      	ldr	r3, [r7, #4]
 8003c88:	681b      	ldr	r3, [r3, #0]
 8003c8a:	681b      	ldr	r3, [r3, #0]
 8003c8c:	f003 0310 	and.w	r3, r3, #16
 8003c90:	2b00      	cmp	r3, #0
 8003c92:	f000 8087 	beq.w	8003da4 <HAL_DMA_IRQHandler+0x2a0>
 8003c96:	687b      	ldr	r3, [r7, #4]
 8003c98:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003c9a:	2220      	movs	r2, #32
 8003c9c:	409a      	lsls	r2, r3
 8003c9e:	693b      	ldr	r3, [r7, #16]
 8003ca0:	609a      	str	r2, [r3, #8]
 8003ca2:	687b      	ldr	r3, [r7, #4]
 8003ca4:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003ca8:	b2db      	uxtb	r3, r3
 8003caa:	2b05      	cmp	r3, #5
 8003cac:	d136      	bne.n	8003d1c <HAL_DMA_IRQHandler+0x218>
 8003cae:	687b      	ldr	r3, [r7, #4]
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	681a      	ldr	r2, [r3, #0]
 8003cb4:	687b      	ldr	r3, [r7, #4]
 8003cb6:	681b      	ldr	r3, [r3, #0]
 8003cb8:	f022 0216 	bic.w	r2, r2, #22
 8003cbc:	601a      	str	r2, [r3, #0]
 8003cbe:	687b      	ldr	r3, [r7, #4]
 8003cc0:	681b      	ldr	r3, [r3, #0]
 8003cc2:	695a      	ldr	r2, [r3, #20]
 8003cc4:	687b      	ldr	r3, [r7, #4]
 8003cc6:	681b      	ldr	r3, [r3, #0]
 8003cc8:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003ccc:	615a      	str	r2, [r3, #20]
 8003cce:	687b      	ldr	r3, [r7, #4]
 8003cd0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003cd2:	2b00      	cmp	r3, #0
 8003cd4:	d103      	bne.n	8003cde <HAL_DMA_IRQHandler+0x1da>
 8003cd6:	687b      	ldr	r3, [r7, #4]
 8003cd8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003cda:	2b00      	cmp	r3, #0
 8003cdc:	d007      	beq.n	8003cee <HAL_DMA_IRQHandler+0x1ea>
 8003cde:	687b      	ldr	r3, [r7, #4]
 8003ce0:	681b      	ldr	r3, [r3, #0]
 8003ce2:	681a      	ldr	r2, [r3, #0]
 8003ce4:	687b      	ldr	r3, [r7, #4]
 8003ce6:	681b      	ldr	r3, [r3, #0]
 8003ce8:	f022 0208 	bic.w	r2, r2, #8
 8003cec:	601a      	str	r2, [r3, #0]
 8003cee:	687b      	ldr	r3, [r7, #4]
 8003cf0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003cf2:	223f      	movs	r2, #63	; 0x3f
 8003cf4:	409a      	lsls	r2, r3
 8003cf6:	693b      	ldr	r3, [r7, #16]
 8003cf8:	609a      	str	r2, [r3, #8]
 8003cfa:	687b      	ldr	r3, [r7, #4]
 8003cfc:	2201      	movs	r2, #1
 8003cfe:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003d02:	687b      	ldr	r3, [r7, #4]
 8003d04:	2200      	movs	r2, #0
 8003d06:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003d0a:	687b      	ldr	r3, [r7, #4]
 8003d0c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8003d0e:	2b00      	cmp	r3, #0
 8003d10:	d07e      	beq.n	8003e10 <HAL_DMA_IRQHandler+0x30c>
 8003d12:	687b      	ldr	r3, [r7, #4]
 8003d14:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8003d16:	6878      	ldr	r0, [r7, #4]
 8003d18:	4798      	blx	r3
 8003d1a:	e079      	b.n	8003e10 <HAL_DMA_IRQHandler+0x30c>
 8003d1c:	687b      	ldr	r3, [r7, #4]
 8003d1e:	681b      	ldr	r3, [r3, #0]
 8003d20:	681b      	ldr	r3, [r3, #0]
 8003d22:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003d26:	2b00      	cmp	r3, #0
 8003d28:	d01d      	beq.n	8003d66 <HAL_DMA_IRQHandler+0x262>
 8003d2a:	687b      	ldr	r3, [r7, #4]
 8003d2c:	681b      	ldr	r3, [r3, #0]
 8003d2e:	681b      	ldr	r3, [r3, #0]
 8003d30:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8003d34:	2b00      	cmp	r3, #0
 8003d36:	d10d      	bne.n	8003d54 <HAL_DMA_IRQHandler+0x250>
 8003d38:	687b      	ldr	r3, [r7, #4]
 8003d3a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003d3c:	2b00      	cmp	r3, #0
 8003d3e:	d031      	beq.n	8003da4 <HAL_DMA_IRQHandler+0x2a0>
 8003d40:	687b      	ldr	r3, [r7, #4]
 8003d42:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003d44:	6878      	ldr	r0, [r7, #4]
 8003d46:	4798      	blx	r3
 8003d48:	e02c      	b.n	8003da4 <HAL_DMA_IRQHandler+0x2a0>
 8003d4a:	bf00      	nop
 8003d4c:	20000008 	.word	0x20000008
 8003d50:	1b4e81b5 	.word	0x1b4e81b5
 8003d54:	687b      	ldr	r3, [r7, #4]
 8003d56:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003d58:	2b00      	cmp	r3, #0
 8003d5a:	d023      	beq.n	8003da4 <HAL_DMA_IRQHandler+0x2a0>
 8003d5c:	687b      	ldr	r3, [r7, #4]
 8003d5e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003d60:	6878      	ldr	r0, [r7, #4]
 8003d62:	4798      	blx	r3
 8003d64:	e01e      	b.n	8003da4 <HAL_DMA_IRQHandler+0x2a0>
 8003d66:	687b      	ldr	r3, [r7, #4]
 8003d68:	681b      	ldr	r3, [r3, #0]
 8003d6a:	681b      	ldr	r3, [r3, #0]
 8003d6c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003d70:	2b00      	cmp	r3, #0
 8003d72:	d10f      	bne.n	8003d94 <HAL_DMA_IRQHandler+0x290>
 8003d74:	687b      	ldr	r3, [r7, #4]
 8003d76:	681b      	ldr	r3, [r3, #0]
 8003d78:	681a      	ldr	r2, [r3, #0]
 8003d7a:	687b      	ldr	r3, [r7, #4]
 8003d7c:	681b      	ldr	r3, [r3, #0]
 8003d7e:	f022 0210 	bic.w	r2, r2, #16
 8003d82:	601a      	str	r2, [r3, #0]
 8003d84:	687b      	ldr	r3, [r7, #4]
 8003d86:	2201      	movs	r2, #1
 8003d88:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003d8c:	687b      	ldr	r3, [r7, #4]
 8003d8e:	2200      	movs	r2, #0
 8003d90:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003d94:	687b      	ldr	r3, [r7, #4]
 8003d96:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003d98:	2b00      	cmp	r3, #0
 8003d9a:	d003      	beq.n	8003da4 <HAL_DMA_IRQHandler+0x2a0>
 8003d9c:	687b      	ldr	r3, [r7, #4]
 8003d9e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003da0:	6878      	ldr	r0, [r7, #4]
 8003da2:	4798      	blx	r3
 8003da4:	687b      	ldr	r3, [r7, #4]
 8003da6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003da8:	2b00      	cmp	r3, #0
 8003daa:	d032      	beq.n	8003e12 <HAL_DMA_IRQHandler+0x30e>
 8003dac:	687b      	ldr	r3, [r7, #4]
 8003dae:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003db0:	f003 0301 	and.w	r3, r3, #1
 8003db4:	2b00      	cmp	r3, #0
 8003db6:	d022      	beq.n	8003dfe <HAL_DMA_IRQHandler+0x2fa>
 8003db8:	687b      	ldr	r3, [r7, #4]
 8003dba:	2205      	movs	r2, #5
 8003dbc:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003dc0:	687b      	ldr	r3, [r7, #4]
 8003dc2:	681b      	ldr	r3, [r3, #0]
 8003dc4:	681a      	ldr	r2, [r3, #0]
 8003dc6:	687b      	ldr	r3, [r7, #4]
 8003dc8:	681b      	ldr	r3, [r3, #0]
 8003dca:	f022 0201 	bic.w	r2, r2, #1
 8003dce:	601a      	str	r2, [r3, #0]
 8003dd0:	68bb      	ldr	r3, [r7, #8]
 8003dd2:	3301      	adds	r3, #1
 8003dd4:	60bb      	str	r3, [r7, #8]
 8003dd6:	697a      	ldr	r2, [r7, #20]
 8003dd8:	429a      	cmp	r2, r3
 8003dda:	d307      	bcc.n	8003dec <HAL_DMA_IRQHandler+0x2e8>
 8003ddc:	687b      	ldr	r3, [r7, #4]
 8003dde:	681b      	ldr	r3, [r3, #0]
 8003de0:	681b      	ldr	r3, [r3, #0]
 8003de2:	f003 0301 	and.w	r3, r3, #1
 8003de6:	2b00      	cmp	r3, #0
 8003de8:	d1f2      	bne.n	8003dd0 <HAL_DMA_IRQHandler+0x2cc>
 8003dea:	e000      	b.n	8003dee <HAL_DMA_IRQHandler+0x2ea>
 8003dec:	bf00      	nop
 8003dee:	687b      	ldr	r3, [r7, #4]
 8003df0:	2201      	movs	r2, #1
 8003df2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003df6:	687b      	ldr	r3, [r7, #4]
 8003df8:	2200      	movs	r2, #0
 8003dfa:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003dfe:	687b      	ldr	r3, [r7, #4]
 8003e00:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003e02:	2b00      	cmp	r3, #0
 8003e04:	d005      	beq.n	8003e12 <HAL_DMA_IRQHandler+0x30e>
 8003e06:	687b      	ldr	r3, [r7, #4]
 8003e08:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003e0a:	6878      	ldr	r0, [r7, #4]
 8003e0c:	4798      	blx	r3
 8003e0e:	e000      	b.n	8003e12 <HAL_DMA_IRQHandler+0x30e>
 8003e10:	bf00      	nop
 8003e12:	3718      	adds	r7, #24
 8003e14:	46bd      	mov	sp, r7
 8003e16:	bd80      	pop	{r7, pc}

08003e18 <DMA_SetConfig>:
 8003e18:	b480      	push	{r7}
 8003e1a:	b085      	sub	sp, #20
 8003e1c:	af00      	add	r7, sp, #0
 8003e1e:	60f8      	str	r0, [r7, #12]
 8003e20:	60b9      	str	r1, [r7, #8]
 8003e22:	607a      	str	r2, [r7, #4]
 8003e24:	603b      	str	r3, [r7, #0]
 8003e26:	68fb      	ldr	r3, [r7, #12]
 8003e28:	681b      	ldr	r3, [r3, #0]
 8003e2a:	681a      	ldr	r2, [r3, #0]
 8003e2c:	68fb      	ldr	r3, [r7, #12]
 8003e2e:	681b      	ldr	r3, [r3, #0]
 8003e30:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8003e34:	601a      	str	r2, [r3, #0]
 8003e36:	68fb      	ldr	r3, [r7, #12]
 8003e38:	681b      	ldr	r3, [r3, #0]
 8003e3a:	683a      	ldr	r2, [r7, #0]
 8003e3c:	605a      	str	r2, [r3, #4]
 8003e3e:	68fb      	ldr	r3, [r7, #12]
 8003e40:	689b      	ldr	r3, [r3, #8]
 8003e42:	2b40      	cmp	r3, #64	; 0x40
 8003e44:	d108      	bne.n	8003e58 <DMA_SetConfig+0x40>
 8003e46:	68fb      	ldr	r3, [r7, #12]
 8003e48:	681b      	ldr	r3, [r3, #0]
 8003e4a:	687a      	ldr	r2, [r7, #4]
 8003e4c:	609a      	str	r2, [r3, #8]
 8003e4e:	68fb      	ldr	r3, [r7, #12]
 8003e50:	681b      	ldr	r3, [r3, #0]
 8003e52:	68ba      	ldr	r2, [r7, #8]
 8003e54:	60da      	str	r2, [r3, #12]
 8003e56:	e007      	b.n	8003e68 <DMA_SetConfig+0x50>
 8003e58:	68fb      	ldr	r3, [r7, #12]
 8003e5a:	681b      	ldr	r3, [r3, #0]
 8003e5c:	68ba      	ldr	r2, [r7, #8]
 8003e5e:	609a      	str	r2, [r3, #8]
 8003e60:	68fb      	ldr	r3, [r7, #12]
 8003e62:	681b      	ldr	r3, [r3, #0]
 8003e64:	687a      	ldr	r2, [r7, #4]
 8003e66:	60da      	str	r2, [r3, #12]
 8003e68:	bf00      	nop
 8003e6a:	3714      	adds	r7, #20
 8003e6c:	46bd      	mov	sp, r7
 8003e6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e72:	4770      	bx	lr

08003e74 <DMA_CalcBaseAndBitshift>:
 8003e74:	b480      	push	{r7}
 8003e76:	b085      	sub	sp, #20
 8003e78:	af00      	add	r7, sp, #0
 8003e7a:	6078      	str	r0, [r7, #4]
 8003e7c:	687b      	ldr	r3, [r7, #4]
 8003e7e:	681b      	ldr	r3, [r3, #0]
 8003e80:	b2db      	uxtb	r3, r3
 8003e82:	3b10      	subs	r3, #16
 8003e84:	4a14      	ldr	r2, [pc, #80]	; (8003ed8 <DMA_CalcBaseAndBitshift+0x64>)
 8003e86:	fba2 2303 	umull	r2, r3, r2, r3
 8003e8a:	091b      	lsrs	r3, r3, #4
 8003e8c:	60fb      	str	r3, [r7, #12]
 8003e8e:	4a13      	ldr	r2, [pc, #76]	; (8003edc <DMA_CalcBaseAndBitshift+0x68>)
 8003e90:	68fb      	ldr	r3, [r7, #12]
 8003e92:	4413      	add	r3, r2
 8003e94:	781b      	ldrb	r3, [r3, #0]
 8003e96:	461a      	mov	r2, r3
 8003e98:	687b      	ldr	r3, [r7, #4]
 8003e9a:	65da      	str	r2, [r3, #92]	; 0x5c
 8003e9c:	68fb      	ldr	r3, [r7, #12]
 8003e9e:	2b03      	cmp	r3, #3
 8003ea0:	d909      	bls.n	8003eb6 <DMA_CalcBaseAndBitshift+0x42>
 8003ea2:	687b      	ldr	r3, [r7, #4]
 8003ea4:	681b      	ldr	r3, [r3, #0]
 8003ea6:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8003eaa:	f023 0303 	bic.w	r3, r3, #3
 8003eae:	1d1a      	adds	r2, r3, #4
 8003eb0:	687b      	ldr	r3, [r7, #4]
 8003eb2:	659a      	str	r2, [r3, #88]	; 0x58
 8003eb4:	e007      	b.n	8003ec6 <DMA_CalcBaseAndBitshift+0x52>
 8003eb6:	687b      	ldr	r3, [r7, #4]
 8003eb8:	681b      	ldr	r3, [r3, #0]
 8003eba:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8003ebe:	f023 0303 	bic.w	r3, r3, #3
 8003ec2:	687a      	ldr	r2, [r7, #4]
 8003ec4:	6593      	str	r3, [r2, #88]	; 0x58
 8003ec6:	687b      	ldr	r3, [r7, #4]
 8003ec8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003eca:	4618      	mov	r0, r3
 8003ecc:	3714      	adds	r7, #20
 8003ece:	46bd      	mov	sp, r7
 8003ed0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ed4:	4770      	bx	lr
 8003ed6:	bf00      	nop
 8003ed8:	aaaaaaab 	.word	0xaaaaaaab
 8003edc:	080147a8 	.word	0x080147a8

08003ee0 <DMA_CheckFifoParam>:
 8003ee0:	b480      	push	{r7}
 8003ee2:	b085      	sub	sp, #20
 8003ee4:	af00      	add	r7, sp, #0
 8003ee6:	6078      	str	r0, [r7, #4]
 8003ee8:	2300      	movs	r3, #0
 8003eea:	73fb      	strb	r3, [r7, #15]
 8003eec:	687b      	ldr	r3, [r7, #4]
 8003eee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003ef0:	60bb      	str	r3, [r7, #8]
 8003ef2:	687b      	ldr	r3, [r7, #4]
 8003ef4:	699b      	ldr	r3, [r3, #24]
 8003ef6:	2b00      	cmp	r3, #0
 8003ef8:	d11f      	bne.n	8003f3a <DMA_CheckFifoParam+0x5a>
 8003efa:	68bb      	ldr	r3, [r7, #8]
 8003efc:	2b03      	cmp	r3, #3
 8003efe:	d856      	bhi.n	8003fae <DMA_CheckFifoParam+0xce>
 8003f00:	a201      	add	r2, pc, #4	; (adr r2, 8003f08 <DMA_CheckFifoParam+0x28>)
 8003f02:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003f06:	bf00      	nop
 8003f08:	08003f19 	.word	0x08003f19
 8003f0c:	08003f2b 	.word	0x08003f2b
 8003f10:	08003f19 	.word	0x08003f19
 8003f14:	08003faf 	.word	0x08003faf
 8003f18:	687b      	ldr	r3, [r7, #4]
 8003f1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003f1c:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003f20:	2b00      	cmp	r3, #0
 8003f22:	d046      	beq.n	8003fb2 <DMA_CheckFifoParam+0xd2>
 8003f24:	2301      	movs	r3, #1
 8003f26:	73fb      	strb	r3, [r7, #15]
 8003f28:	e043      	b.n	8003fb2 <DMA_CheckFifoParam+0xd2>
 8003f2a:	687b      	ldr	r3, [r7, #4]
 8003f2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003f2e:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8003f32:	d140      	bne.n	8003fb6 <DMA_CheckFifoParam+0xd6>
 8003f34:	2301      	movs	r3, #1
 8003f36:	73fb      	strb	r3, [r7, #15]
 8003f38:	e03d      	b.n	8003fb6 <DMA_CheckFifoParam+0xd6>
 8003f3a:	687b      	ldr	r3, [r7, #4]
 8003f3c:	699b      	ldr	r3, [r3, #24]
 8003f3e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003f42:	d121      	bne.n	8003f88 <DMA_CheckFifoParam+0xa8>
 8003f44:	68bb      	ldr	r3, [r7, #8]
 8003f46:	2b03      	cmp	r3, #3
 8003f48:	d837      	bhi.n	8003fba <DMA_CheckFifoParam+0xda>
 8003f4a:	a201      	add	r2, pc, #4	; (adr r2, 8003f50 <DMA_CheckFifoParam+0x70>)
 8003f4c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003f50:	08003f61 	.word	0x08003f61
 8003f54:	08003f67 	.word	0x08003f67
 8003f58:	08003f61 	.word	0x08003f61
 8003f5c:	08003f79 	.word	0x08003f79
 8003f60:	2301      	movs	r3, #1
 8003f62:	73fb      	strb	r3, [r7, #15]
 8003f64:	e030      	b.n	8003fc8 <DMA_CheckFifoParam+0xe8>
 8003f66:	687b      	ldr	r3, [r7, #4]
 8003f68:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003f6a:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003f6e:	2b00      	cmp	r3, #0
 8003f70:	d025      	beq.n	8003fbe <DMA_CheckFifoParam+0xde>
 8003f72:	2301      	movs	r3, #1
 8003f74:	73fb      	strb	r3, [r7, #15]
 8003f76:	e022      	b.n	8003fbe <DMA_CheckFifoParam+0xde>
 8003f78:	687b      	ldr	r3, [r7, #4]
 8003f7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003f7c:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8003f80:	d11f      	bne.n	8003fc2 <DMA_CheckFifoParam+0xe2>
 8003f82:	2301      	movs	r3, #1
 8003f84:	73fb      	strb	r3, [r7, #15]
 8003f86:	e01c      	b.n	8003fc2 <DMA_CheckFifoParam+0xe2>
 8003f88:	68bb      	ldr	r3, [r7, #8]
 8003f8a:	2b02      	cmp	r3, #2
 8003f8c:	d903      	bls.n	8003f96 <DMA_CheckFifoParam+0xb6>
 8003f8e:	68bb      	ldr	r3, [r7, #8]
 8003f90:	2b03      	cmp	r3, #3
 8003f92:	d003      	beq.n	8003f9c <DMA_CheckFifoParam+0xbc>
 8003f94:	e018      	b.n	8003fc8 <DMA_CheckFifoParam+0xe8>
 8003f96:	2301      	movs	r3, #1
 8003f98:	73fb      	strb	r3, [r7, #15]
 8003f9a:	e015      	b.n	8003fc8 <DMA_CheckFifoParam+0xe8>
 8003f9c:	687b      	ldr	r3, [r7, #4]
 8003f9e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003fa0:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003fa4:	2b00      	cmp	r3, #0
 8003fa6:	d00e      	beq.n	8003fc6 <DMA_CheckFifoParam+0xe6>
 8003fa8:	2301      	movs	r3, #1
 8003faa:	73fb      	strb	r3, [r7, #15]
 8003fac:	e00b      	b.n	8003fc6 <DMA_CheckFifoParam+0xe6>
 8003fae:	bf00      	nop
 8003fb0:	e00a      	b.n	8003fc8 <DMA_CheckFifoParam+0xe8>
 8003fb2:	bf00      	nop
 8003fb4:	e008      	b.n	8003fc8 <DMA_CheckFifoParam+0xe8>
 8003fb6:	bf00      	nop
 8003fb8:	e006      	b.n	8003fc8 <DMA_CheckFifoParam+0xe8>
 8003fba:	bf00      	nop
 8003fbc:	e004      	b.n	8003fc8 <DMA_CheckFifoParam+0xe8>
 8003fbe:	bf00      	nop
 8003fc0:	e002      	b.n	8003fc8 <DMA_CheckFifoParam+0xe8>
 8003fc2:	bf00      	nop
 8003fc4:	e000      	b.n	8003fc8 <DMA_CheckFifoParam+0xe8>
 8003fc6:	bf00      	nop
 8003fc8:	7bfb      	ldrb	r3, [r7, #15]
 8003fca:	4618      	mov	r0, r3
 8003fcc:	3714      	adds	r7, #20
 8003fce:	46bd      	mov	sp, r7
 8003fd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fd4:	4770      	bx	lr
 8003fd6:	bf00      	nop

08003fd8 <HAL_GPIO_Init>:
 8003fd8:	b480      	push	{r7}
 8003fda:	b089      	sub	sp, #36	; 0x24
 8003fdc:	af00      	add	r7, sp, #0
 8003fde:	6078      	str	r0, [r7, #4]
 8003fe0:	6039      	str	r1, [r7, #0]
 8003fe2:	2300      	movs	r3, #0
 8003fe4:	617b      	str	r3, [r7, #20]
 8003fe6:	2300      	movs	r3, #0
 8003fe8:	613b      	str	r3, [r7, #16]
 8003fea:	2300      	movs	r3, #0
 8003fec:	61bb      	str	r3, [r7, #24]
 8003fee:	2300      	movs	r3, #0
 8003ff0:	61fb      	str	r3, [r7, #28]
 8003ff2:	e159      	b.n	80042a8 <HAL_GPIO_Init+0x2d0>
 8003ff4:	2201      	movs	r2, #1
 8003ff6:	69fb      	ldr	r3, [r7, #28]
 8003ff8:	fa02 f303 	lsl.w	r3, r2, r3
 8003ffc:	617b      	str	r3, [r7, #20]
 8003ffe:	683b      	ldr	r3, [r7, #0]
 8004000:	681b      	ldr	r3, [r3, #0]
 8004002:	697a      	ldr	r2, [r7, #20]
 8004004:	4013      	ands	r3, r2
 8004006:	613b      	str	r3, [r7, #16]
 8004008:	693a      	ldr	r2, [r7, #16]
 800400a:	697b      	ldr	r3, [r7, #20]
 800400c:	429a      	cmp	r2, r3
 800400e:	f040 8148 	bne.w	80042a2 <HAL_GPIO_Init+0x2ca>
 8004012:	683b      	ldr	r3, [r7, #0]
 8004014:	685b      	ldr	r3, [r3, #4]
 8004016:	f003 0303 	and.w	r3, r3, #3
 800401a:	2b01      	cmp	r3, #1
 800401c:	d005      	beq.n	800402a <HAL_GPIO_Init+0x52>
 800401e:	683b      	ldr	r3, [r7, #0]
 8004020:	685b      	ldr	r3, [r3, #4]
 8004022:	f003 0303 	and.w	r3, r3, #3
 8004026:	2b02      	cmp	r3, #2
 8004028:	d130      	bne.n	800408c <HAL_GPIO_Init+0xb4>
 800402a:	687b      	ldr	r3, [r7, #4]
 800402c:	689b      	ldr	r3, [r3, #8]
 800402e:	61bb      	str	r3, [r7, #24]
 8004030:	69fb      	ldr	r3, [r7, #28]
 8004032:	005b      	lsls	r3, r3, #1
 8004034:	2203      	movs	r2, #3
 8004036:	fa02 f303 	lsl.w	r3, r2, r3
 800403a:	43db      	mvns	r3, r3
 800403c:	69ba      	ldr	r2, [r7, #24]
 800403e:	4013      	ands	r3, r2
 8004040:	61bb      	str	r3, [r7, #24]
 8004042:	683b      	ldr	r3, [r7, #0]
 8004044:	68da      	ldr	r2, [r3, #12]
 8004046:	69fb      	ldr	r3, [r7, #28]
 8004048:	005b      	lsls	r3, r3, #1
 800404a:	fa02 f303 	lsl.w	r3, r2, r3
 800404e:	69ba      	ldr	r2, [r7, #24]
 8004050:	4313      	orrs	r3, r2
 8004052:	61bb      	str	r3, [r7, #24]
 8004054:	687b      	ldr	r3, [r7, #4]
 8004056:	69ba      	ldr	r2, [r7, #24]
 8004058:	609a      	str	r2, [r3, #8]
 800405a:	687b      	ldr	r3, [r7, #4]
 800405c:	685b      	ldr	r3, [r3, #4]
 800405e:	61bb      	str	r3, [r7, #24]
 8004060:	2201      	movs	r2, #1
 8004062:	69fb      	ldr	r3, [r7, #28]
 8004064:	fa02 f303 	lsl.w	r3, r2, r3
 8004068:	43db      	mvns	r3, r3
 800406a:	69ba      	ldr	r2, [r7, #24]
 800406c:	4013      	ands	r3, r2
 800406e:	61bb      	str	r3, [r7, #24]
 8004070:	683b      	ldr	r3, [r7, #0]
 8004072:	685b      	ldr	r3, [r3, #4]
 8004074:	091b      	lsrs	r3, r3, #4
 8004076:	f003 0201 	and.w	r2, r3, #1
 800407a:	69fb      	ldr	r3, [r7, #28]
 800407c:	fa02 f303 	lsl.w	r3, r2, r3
 8004080:	69ba      	ldr	r2, [r7, #24]
 8004082:	4313      	orrs	r3, r2
 8004084:	61bb      	str	r3, [r7, #24]
 8004086:	687b      	ldr	r3, [r7, #4]
 8004088:	69ba      	ldr	r2, [r7, #24]
 800408a:	605a      	str	r2, [r3, #4]
 800408c:	683b      	ldr	r3, [r7, #0]
 800408e:	685b      	ldr	r3, [r3, #4]
 8004090:	f003 0303 	and.w	r3, r3, #3
 8004094:	2b03      	cmp	r3, #3
 8004096:	d017      	beq.n	80040c8 <HAL_GPIO_Init+0xf0>
 8004098:	687b      	ldr	r3, [r7, #4]
 800409a:	68db      	ldr	r3, [r3, #12]
 800409c:	61bb      	str	r3, [r7, #24]
 800409e:	69fb      	ldr	r3, [r7, #28]
 80040a0:	005b      	lsls	r3, r3, #1
 80040a2:	2203      	movs	r2, #3
 80040a4:	fa02 f303 	lsl.w	r3, r2, r3
 80040a8:	43db      	mvns	r3, r3
 80040aa:	69ba      	ldr	r2, [r7, #24]
 80040ac:	4013      	ands	r3, r2
 80040ae:	61bb      	str	r3, [r7, #24]
 80040b0:	683b      	ldr	r3, [r7, #0]
 80040b2:	689a      	ldr	r2, [r3, #8]
 80040b4:	69fb      	ldr	r3, [r7, #28]
 80040b6:	005b      	lsls	r3, r3, #1
 80040b8:	fa02 f303 	lsl.w	r3, r2, r3
 80040bc:	69ba      	ldr	r2, [r7, #24]
 80040be:	4313      	orrs	r3, r2
 80040c0:	61bb      	str	r3, [r7, #24]
 80040c2:	687b      	ldr	r3, [r7, #4]
 80040c4:	69ba      	ldr	r2, [r7, #24]
 80040c6:	60da      	str	r2, [r3, #12]
 80040c8:	683b      	ldr	r3, [r7, #0]
 80040ca:	685b      	ldr	r3, [r3, #4]
 80040cc:	f003 0303 	and.w	r3, r3, #3
 80040d0:	2b02      	cmp	r3, #2
 80040d2:	d123      	bne.n	800411c <HAL_GPIO_Init+0x144>
 80040d4:	69fb      	ldr	r3, [r7, #28]
 80040d6:	08da      	lsrs	r2, r3, #3
 80040d8:	687b      	ldr	r3, [r7, #4]
 80040da:	3208      	adds	r2, #8
 80040dc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80040e0:	61bb      	str	r3, [r7, #24]
 80040e2:	69fb      	ldr	r3, [r7, #28]
 80040e4:	f003 0307 	and.w	r3, r3, #7
 80040e8:	009b      	lsls	r3, r3, #2
 80040ea:	220f      	movs	r2, #15
 80040ec:	fa02 f303 	lsl.w	r3, r2, r3
 80040f0:	43db      	mvns	r3, r3
 80040f2:	69ba      	ldr	r2, [r7, #24]
 80040f4:	4013      	ands	r3, r2
 80040f6:	61bb      	str	r3, [r7, #24]
 80040f8:	683b      	ldr	r3, [r7, #0]
 80040fa:	691a      	ldr	r2, [r3, #16]
 80040fc:	69fb      	ldr	r3, [r7, #28]
 80040fe:	f003 0307 	and.w	r3, r3, #7
 8004102:	009b      	lsls	r3, r3, #2
 8004104:	fa02 f303 	lsl.w	r3, r2, r3
 8004108:	69ba      	ldr	r2, [r7, #24]
 800410a:	4313      	orrs	r3, r2
 800410c:	61bb      	str	r3, [r7, #24]
 800410e:	69fb      	ldr	r3, [r7, #28]
 8004110:	08da      	lsrs	r2, r3, #3
 8004112:	687b      	ldr	r3, [r7, #4]
 8004114:	3208      	adds	r2, #8
 8004116:	69b9      	ldr	r1, [r7, #24]
 8004118:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800411c:	687b      	ldr	r3, [r7, #4]
 800411e:	681b      	ldr	r3, [r3, #0]
 8004120:	61bb      	str	r3, [r7, #24]
 8004122:	69fb      	ldr	r3, [r7, #28]
 8004124:	005b      	lsls	r3, r3, #1
 8004126:	2203      	movs	r2, #3
 8004128:	fa02 f303 	lsl.w	r3, r2, r3
 800412c:	43db      	mvns	r3, r3
 800412e:	69ba      	ldr	r2, [r7, #24]
 8004130:	4013      	ands	r3, r2
 8004132:	61bb      	str	r3, [r7, #24]
 8004134:	683b      	ldr	r3, [r7, #0]
 8004136:	685b      	ldr	r3, [r3, #4]
 8004138:	f003 0203 	and.w	r2, r3, #3
 800413c:	69fb      	ldr	r3, [r7, #28]
 800413e:	005b      	lsls	r3, r3, #1
 8004140:	fa02 f303 	lsl.w	r3, r2, r3
 8004144:	69ba      	ldr	r2, [r7, #24]
 8004146:	4313      	orrs	r3, r2
 8004148:	61bb      	str	r3, [r7, #24]
 800414a:	687b      	ldr	r3, [r7, #4]
 800414c:	69ba      	ldr	r2, [r7, #24]
 800414e:	601a      	str	r2, [r3, #0]
 8004150:	683b      	ldr	r3, [r7, #0]
 8004152:	685b      	ldr	r3, [r3, #4]
 8004154:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8004158:	2b00      	cmp	r3, #0
 800415a:	f000 80a2 	beq.w	80042a2 <HAL_GPIO_Init+0x2ca>
 800415e:	2300      	movs	r3, #0
 8004160:	60fb      	str	r3, [r7, #12]
 8004162:	4b57      	ldr	r3, [pc, #348]	; (80042c0 <HAL_GPIO_Init+0x2e8>)
 8004164:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004166:	4a56      	ldr	r2, [pc, #344]	; (80042c0 <HAL_GPIO_Init+0x2e8>)
 8004168:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800416c:	6453      	str	r3, [r2, #68]	; 0x44
 800416e:	4b54      	ldr	r3, [pc, #336]	; (80042c0 <HAL_GPIO_Init+0x2e8>)
 8004170:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004172:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004176:	60fb      	str	r3, [r7, #12]
 8004178:	68fb      	ldr	r3, [r7, #12]
 800417a:	4a52      	ldr	r2, [pc, #328]	; (80042c4 <HAL_GPIO_Init+0x2ec>)
 800417c:	69fb      	ldr	r3, [r7, #28]
 800417e:	089b      	lsrs	r3, r3, #2
 8004180:	3302      	adds	r3, #2
 8004182:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004186:	61bb      	str	r3, [r7, #24]
 8004188:	69fb      	ldr	r3, [r7, #28]
 800418a:	f003 0303 	and.w	r3, r3, #3
 800418e:	009b      	lsls	r3, r3, #2
 8004190:	220f      	movs	r2, #15
 8004192:	fa02 f303 	lsl.w	r3, r2, r3
 8004196:	43db      	mvns	r3, r3
 8004198:	69ba      	ldr	r2, [r7, #24]
 800419a:	4013      	ands	r3, r2
 800419c:	61bb      	str	r3, [r7, #24]
 800419e:	687b      	ldr	r3, [r7, #4]
 80041a0:	4a49      	ldr	r2, [pc, #292]	; (80042c8 <HAL_GPIO_Init+0x2f0>)
 80041a2:	4293      	cmp	r3, r2
 80041a4:	d019      	beq.n	80041da <HAL_GPIO_Init+0x202>
 80041a6:	687b      	ldr	r3, [r7, #4]
 80041a8:	4a48      	ldr	r2, [pc, #288]	; (80042cc <HAL_GPIO_Init+0x2f4>)
 80041aa:	4293      	cmp	r3, r2
 80041ac:	d013      	beq.n	80041d6 <HAL_GPIO_Init+0x1fe>
 80041ae:	687b      	ldr	r3, [r7, #4]
 80041b0:	4a47      	ldr	r2, [pc, #284]	; (80042d0 <HAL_GPIO_Init+0x2f8>)
 80041b2:	4293      	cmp	r3, r2
 80041b4:	d00d      	beq.n	80041d2 <HAL_GPIO_Init+0x1fa>
 80041b6:	687b      	ldr	r3, [r7, #4]
 80041b8:	4a46      	ldr	r2, [pc, #280]	; (80042d4 <HAL_GPIO_Init+0x2fc>)
 80041ba:	4293      	cmp	r3, r2
 80041bc:	d007      	beq.n	80041ce <HAL_GPIO_Init+0x1f6>
 80041be:	687b      	ldr	r3, [r7, #4]
 80041c0:	4a45      	ldr	r2, [pc, #276]	; (80042d8 <HAL_GPIO_Init+0x300>)
 80041c2:	4293      	cmp	r3, r2
 80041c4:	d101      	bne.n	80041ca <HAL_GPIO_Init+0x1f2>
 80041c6:	2304      	movs	r3, #4
 80041c8:	e008      	b.n	80041dc <HAL_GPIO_Init+0x204>
 80041ca:	2307      	movs	r3, #7
 80041cc:	e006      	b.n	80041dc <HAL_GPIO_Init+0x204>
 80041ce:	2303      	movs	r3, #3
 80041d0:	e004      	b.n	80041dc <HAL_GPIO_Init+0x204>
 80041d2:	2302      	movs	r3, #2
 80041d4:	e002      	b.n	80041dc <HAL_GPIO_Init+0x204>
 80041d6:	2301      	movs	r3, #1
 80041d8:	e000      	b.n	80041dc <HAL_GPIO_Init+0x204>
 80041da:	2300      	movs	r3, #0
 80041dc:	69fa      	ldr	r2, [r7, #28]
 80041de:	f002 0203 	and.w	r2, r2, #3
 80041e2:	0092      	lsls	r2, r2, #2
 80041e4:	4093      	lsls	r3, r2
 80041e6:	69ba      	ldr	r2, [r7, #24]
 80041e8:	4313      	orrs	r3, r2
 80041ea:	61bb      	str	r3, [r7, #24]
 80041ec:	4935      	ldr	r1, [pc, #212]	; (80042c4 <HAL_GPIO_Init+0x2ec>)
 80041ee:	69fb      	ldr	r3, [r7, #28]
 80041f0:	089b      	lsrs	r3, r3, #2
 80041f2:	3302      	adds	r3, #2
 80041f4:	69ba      	ldr	r2, [r7, #24]
 80041f6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80041fa:	4b38      	ldr	r3, [pc, #224]	; (80042dc <HAL_GPIO_Init+0x304>)
 80041fc:	689b      	ldr	r3, [r3, #8]
 80041fe:	61bb      	str	r3, [r7, #24]
 8004200:	693b      	ldr	r3, [r7, #16]
 8004202:	43db      	mvns	r3, r3
 8004204:	69ba      	ldr	r2, [r7, #24]
 8004206:	4013      	ands	r3, r2
 8004208:	61bb      	str	r3, [r7, #24]
 800420a:	683b      	ldr	r3, [r7, #0]
 800420c:	685b      	ldr	r3, [r3, #4]
 800420e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8004212:	2b00      	cmp	r3, #0
 8004214:	d003      	beq.n	800421e <HAL_GPIO_Init+0x246>
 8004216:	69ba      	ldr	r2, [r7, #24]
 8004218:	693b      	ldr	r3, [r7, #16]
 800421a:	4313      	orrs	r3, r2
 800421c:	61bb      	str	r3, [r7, #24]
 800421e:	4a2f      	ldr	r2, [pc, #188]	; (80042dc <HAL_GPIO_Init+0x304>)
 8004220:	69bb      	ldr	r3, [r7, #24]
 8004222:	6093      	str	r3, [r2, #8]
 8004224:	4b2d      	ldr	r3, [pc, #180]	; (80042dc <HAL_GPIO_Init+0x304>)
 8004226:	68db      	ldr	r3, [r3, #12]
 8004228:	61bb      	str	r3, [r7, #24]
 800422a:	693b      	ldr	r3, [r7, #16]
 800422c:	43db      	mvns	r3, r3
 800422e:	69ba      	ldr	r2, [r7, #24]
 8004230:	4013      	ands	r3, r2
 8004232:	61bb      	str	r3, [r7, #24]
 8004234:	683b      	ldr	r3, [r7, #0]
 8004236:	685b      	ldr	r3, [r3, #4]
 8004238:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800423c:	2b00      	cmp	r3, #0
 800423e:	d003      	beq.n	8004248 <HAL_GPIO_Init+0x270>
 8004240:	69ba      	ldr	r2, [r7, #24]
 8004242:	693b      	ldr	r3, [r7, #16]
 8004244:	4313      	orrs	r3, r2
 8004246:	61bb      	str	r3, [r7, #24]
 8004248:	4a24      	ldr	r2, [pc, #144]	; (80042dc <HAL_GPIO_Init+0x304>)
 800424a:	69bb      	ldr	r3, [r7, #24]
 800424c:	60d3      	str	r3, [r2, #12]
 800424e:	4b23      	ldr	r3, [pc, #140]	; (80042dc <HAL_GPIO_Init+0x304>)
 8004250:	685b      	ldr	r3, [r3, #4]
 8004252:	61bb      	str	r3, [r7, #24]
 8004254:	693b      	ldr	r3, [r7, #16]
 8004256:	43db      	mvns	r3, r3
 8004258:	69ba      	ldr	r2, [r7, #24]
 800425a:	4013      	ands	r3, r2
 800425c:	61bb      	str	r3, [r7, #24]
 800425e:	683b      	ldr	r3, [r7, #0]
 8004260:	685b      	ldr	r3, [r3, #4]
 8004262:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004266:	2b00      	cmp	r3, #0
 8004268:	d003      	beq.n	8004272 <HAL_GPIO_Init+0x29a>
 800426a:	69ba      	ldr	r2, [r7, #24]
 800426c:	693b      	ldr	r3, [r7, #16]
 800426e:	4313      	orrs	r3, r2
 8004270:	61bb      	str	r3, [r7, #24]
 8004272:	4a1a      	ldr	r2, [pc, #104]	; (80042dc <HAL_GPIO_Init+0x304>)
 8004274:	69bb      	ldr	r3, [r7, #24]
 8004276:	6053      	str	r3, [r2, #4]
 8004278:	4b18      	ldr	r3, [pc, #96]	; (80042dc <HAL_GPIO_Init+0x304>)
 800427a:	681b      	ldr	r3, [r3, #0]
 800427c:	61bb      	str	r3, [r7, #24]
 800427e:	693b      	ldr	r3, [r7, #16]
 8004280:	43db      	mvns	r3, r3
 8004282:	69ba      	ldr	r2, [r7, #24]
 8004284:	4013      	ands	r3, r2
 8004286:	61bb      	str	r3, [r7, #24]
 8004288:	683b      	ldr	r3, [r7, #0]
 800428a:	685b      	ldr	r3, [r3, #4]
 800428c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004290:	2b00      	cmp	r3, #0
 8004292:	d003      	beq.n	800429c <HAL_GPIO_Init+0x2c4>
 8004294:	69ba      	ldr	r2, [r7, #24]
 8004296:	693b      	ldr	r3, [r7, #16]
 8004298:	4313      	orrs	r3, r2
 800429a:	61bb      	str	r3, [r7, #24]
 800429c:	4a0f      	ldr	r2, [pc, #60]	; (80042dc <HAL_GPIO_Init+0x304>)
 800429e:	69bb      	ldr	r3, [r7, #24]
 80042a0:	6013      	str	r3, [r2, #0]
 80042a2:	69fb      	ldr	r3, [r7, #28]
 80042a4:	3301      	adds	r3, #1
 80042a6:	61fb      	str	r3, [r7, #28]
 80042a8:	69fb      	ldr	r3, [r7, #28]
 80042aa:	2b0f      	cmp	r3, #15
 80042ac:	f67f aea2 	bls.w	8003ff4 <HAL_GPIO_Init+0x1c>
 80042b0:	bf00      	nop
 80042b2:	bf00      	nop
 80042b4:	3724      	adds	r7, #36	; 0x24
 80042b6:	46bd      	mov	sp, r7
 80042b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042bc:	4770      	bx	lr
 80042be:	bf00      	nop
 80042c0:	40023800 	.word	0x40023800
 80042c4:	40013800 	.word	0x40013800
 80042c8:	40020000 	.word	0x40020000
 80042cc:	40020400 	.word	0x40020400
 80042d0:	40020800 	.word	0x40020800
 80042d4:	40020c00 	.word	0x40020c00
 80042d8:	40021000 	.word	0x40021000
 80042dc:	40013c00 	.word	0x40013c00

080042e0 <HAL_GPIO_WritePin>:
 80042e0:	b480      	push	{r7}
 80042e2:	b083      	sub	sp, #12
 80042e4:	af00      	add	r7, sp, #0
 80042e6:	6078      	str	r0, [r7, #4]
 80042e8:	460b      	mov	r3, r1
 80042ea:	807b      	strh	r3, [r7, #2]
 80042ec:	4613      	mov	r3, r2
 80042ee:	707b      	strb	r3, [r7, #1]
 80042f0:	787b      	ldrb	r3, [r7, #1]
 80042f2:	2b00      	cmp	r3, #0
 80042f4:	d003      	beq.n	80042fe <HAL_GPIO_WritePin+0x1e>
 80042f6:	887a      	ldrh	r2, [r7, #2]
 80042f8:	687b      	ldr	r3, [r7, #4]
 80042fa:	619a      	str	r2, [r3, #24]
 80042fc:	e003      	b.n	8004306 <HAL_GPIO_WritePin+0x26>
 80042fe:	887b      	ldrh	r3, [r7, #2]
 8004300:	041a      	lsls	r2, r3, #16
 8004302:	687b      	ldr	r3, [r7, #4]
 8004304:	619a      	str	r2, [r3, #24]
 8004306:	bf00      	nop
 8004308:	370c      	adds	r7, #12
 800430a:	46bd      	mov	sp, r7
 800430c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004310:	4770      	bx	lr

08004312 <HAL_PCD_Init>:
 8004312:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004314:	b08f      	sub	sp, #60	; 0x3c
 8004316:	af0a      	add	r7, sp, #40	; 0x28
 8004318:	6078      	str	r0, [r7, #4]
 800431a:	687b      	ldr	r3, [r7, #4]
 800431c:	2b00      	cmp	r3, #0
 800431e:	d101      	bne.n	8004324 <HAL_PCD_Init+0x12>
 8004320:	2301      	movs	r3, #1
 8004322:	e10f      	b.n	8004544 <HAL_PCD_Init+0x232>
 8004324:	687b      	ldr	r3, [r7, #4]
 8004326:	681b      	ldr	r3, [r3, #0]
 8004328:	60bb      	str	r3, [r7, #8]
 800432a:	687b      	ldr	r3, [r7, #4]
 800432c:	f893 34bd 	ldrb.w	r3, [r3, #1213]	; 0x4bd
 8004330:	b2db      	uxtb	r3, r3
 8004332:	2b00      	cmp	r3, #0
 8004334:	d106      	bne.n	8004344 <HAL_PCD_Init+0x32>
 8004336:	687b      	ldr	r3, [r7, #4]
 8004338:	2200      	movs	r2, #0
 800433a:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 800433e:	6878      	ldr	r0, [r7, #4]
 8004340:	f007 fe4a 	bl	800bfd8 <HAL_PCD_MspInit>
 8004344:	687b      	ldr	r3, [r7, #4]
 8004346:	2203      	movs	r2, #3
 8004348:	f883 24bd 	strb.w	r2, [r3, #1213]	; 0x4bd
 800434c:	68bb      	ldr	r3, [r7, #8]
 800434e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004350:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004354:	2b00      	cmp	r3, #0
 8004356:	d102      	bne.n	800435e <HAL_PCD_Init+0x4c>
 8004358:	687b      	ldr	r3, [r7, #4]
 800435a:	2200      	movs	r2, #0
 800435c:	611a      	str	r2, [r3, #16]
 800435e:	687b      	ldr	r3, [r7, #4]
 8004360:	681b      	ldr	r3, [r3, #0]
 8004362:	4618      	mov	r0, r3
 8004364:	f003 fd67 	bl	8007e36 <USB_DisableGlobalInt>
 8004368:	687b      	ldr	r3, [r7, #4]
 800436a:	681b      	ldr	r3, [r3, #0]
 800436c:	603b      	str	r3, [r7, #0]
 800436e:	687e      	ldr	r6, [r7, #4]
 8004370:	466d      	mov	r5, sp
 8004372:	f106 0410 	add.w	r4, r6, #16
 8004376:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8004378:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800437a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800437c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800437e:	e894 0003 	ldmia.w	r4, {r0, r1}
 8004382:	e885 0003 	stmia.w	r5, {r0, r1}
 8004386:	1d33      	adds	r3, r6, #4
 8004388:	cb0e      	ldmia	r3, {r1, r2, r3}
 800438a:	6838      	ldr	r0, [r7, #0]
 800438c:	f003 fc3e 	bl	8007c0c <USB_CoreInit>
 8004390:	4603      	mov	r3, r0
 8004392:	2b00      	cmp	r3, #0
 8004394:	d005      	beq.n	80043a2 <HAL_PCD_Init+0x90>
 8004396:	687b      	ldr	r3, [r7, #4]
 8004398:	2202      	movs	r2, #2
 800439a:	f883 24bd 	strb.w	r2, [r3, #1213]	; 0x4bd
 800439e:	2301      	movs	r3, #1
 80043a0:	e0d0      	b.n	8004544 <HAL_PCD_Init+0x232>
 80043a2:	687b      	ldr	r3, [r7, #4]
 80043a4:	681b      	ldr	r3, [r3, #0]
 80043a6:	2100      	movs	r1, #0
 80043a8:	4618      	mov	r0, r3
 80043aa:	f003 fd55 	bl	8007e58 <USB_SetCurrentMode>
 80043ae:	2300      	movs	r3, #0
 80043b0:	73fb      	strb	r3, [r7, #15]
 80043b2:	e04a      	b.n	800444a <HAL_PCD_Init+0x138>
 80043b4:	7bfa      	ldrb	r2, [r7, #15]
 80043b6:	6879      	ldr	r1, [r7, #4]
 80043b8:	4613      	mov	r3, r2
 80043ba:	00db      	lsls	r3, r3, #3
 80043bc:	4413      	add	r3, r2
 80043be:	009b      	lsls	r3, r3, #2
 80043c0:	440b      	add	r3, r1
 80043c2:	333d      	adds	r3, #61	; 0x3d
 80043c4:	2201      	movs	r2, #1
 80043c6:	701a      	strb	r2, [r3, #0]
 80043c8:	7bfa      	ldrb	r2, [r7, #15]
 80043ca:	6879      	ldr	r1, [r7, #4]
 80043cc:	4613      	mov	r3, r2
 80043ce:	00db      	lsls	r3, r3, #3
 80043d0:	4413      	add	r3, r2
 80043d2:	009b      	lsls	r3, r3, #2
 80043d4:	440b      	add	r3, r1
 80043d6:	333c      	adds	r3, #60	; 0x3c
 80043d8:	7bfa      	ldrb	r2, [r7, #15]
 80043da:	701a      	strb	r2, [r3, #0]
 80043dc:	7bfa      	ldrb	r2, [r7, #15]
 80043de:	7bfb      	ldrb	r3, [r7, #15]
 80043e0:	b298      	uxth	r0, r3
 80043e2:	6879      	ldr	r1, [r7, #4]
 80043e4:	4613      	mov	r3, r2
 80043e6:	00db      	lsls	r3, r3, #3
 80043e8:	4413      	add	r3, r2
 80043ea:	009b      	lsls	r3, r3, #2
 80043ec:	440b      	add	r3, r1
 80043ee:	3344      	adds	r3, #68	; 0x44
 80043f0:	4602      	mov	r2, r0
 80043f2:	801a      	strh	r2, [r3, #0]
 80043f4:	7bfa      	ldrb	r2, [r7, #15]
 80043f6:	6879      	ldr	r1, [r7, #4]
 80043f8:	4613      	mov	r3, r2
 80043fa:	00db      	lsls	r3, r3, #3
 80043fc:	4413      	add	r3, r2
 80043fe:	009b      	lsls	r3, r3, #2
 8004400:	440b      	add	r3, r1
 8004402:	3340      	adds	r3, #64	; 0x40
 8004404:	2200      	movs	r2, #0
 8004406:	701a      	strb	r2, [r3, #0]
 8004408:	7bfa      	ldrb	r2, [r7, #15]
 800440a:	6879      	ldr	r1, [r7, #4]
 800440c:	4613      	mov	r3, r2
 800440e:	00db      	lsls	r3, r3, #3
 8004410:	4413      	add	r3, r2
 8004412:	009b      	lsls	r3, r3, #2
 8004414:	440b      	add	r3, r1
 8004416:	3348      	adds	r3, #72	; 0x48
 8004418:	2200      	movs	r2, #0
 800441a:	601a      	str	r2, [r3, #0]
 800441c:	7bfa      	ldrb	r2, [r7, #15]
 800441e:	6879      	ldr	r1, [r7, #4]
 8004420:	4613      	mov	r3, r2
 8004422:	00db      	lsls	r3, r3, #3
 8004424:	4413      	add	r3, r2
 8004426:	009b      	lsls	r3, r3, #2
 8004428:	440b      	add	r3, r1
 800442a:	334c      	adds	r3, #76	; 0x4c
 800442c:	2200      	movs	r2, #0
 800442e:	601a      	str	r2, [r3, #0]
 8004430:	7bfa      	ldrb	r2, [r7, #15]
 8004432:	6879      	ldr	r1, [r7, #4]
 8004434:	4613      	mov	r3, r2
 8004436:	00db      	lsls	r3, r3, #3
 8004438:	4413      	add	r3, r2
 800443a:	009b      	lsls	r3, r3, #2
 800443c:	440b      	add	r3, r1
 800443e:	3354      	adds	r3, #84	; 0x54
 8004440:	2200      	movs	r2, #0
 8004442:	601a      	str	r2, [r3, #0]
 8004444:	7bfb      	ldrb	r3, [r7, #15]
 8004446:	3301      	adds	r3, #1
 8004448:	73fb      	strb	r3, [r7, #15]
 800444a:	7bfa      	ldrb	r2, [r7, #15]
 800444c:	687b      	ldr	r3, [r7, #4]
 800444e:	685b      	ldr	r3, [r3, #4]
 8004450:	429a      	cmp	r2, r3
 8004452:	d3af      	bcc.n	80043b4 <HAL_PCD_Init+0xa2>
 8004454:	2300      	movs	r3, #0
 8004456:	73fb      	strb	r3, [r7, #15]
 8004458:	e044      	b.n	80044e4 <HAL_PCD_Init+0x1d2>
 800445a:	7bfa      	ldrb	r2, [r7, #15]
 800445c:	6879      	ldr	r1, [r7, #4]
 800445e:	4613      	mov	r3, r2
 8004460:	00db      	lsls	r3, r3, #3
 8004462:	4413      	add	r3, r2
 8004464:	009b      	lsls	r3, r3, #2
 8004466:	440b      	add	r3, r1
 8004468:	f203 237d 	addw	r3, r3, #637	; 0x27d
 800446c:	2200      	movs	r2, #0
 800446e:	701a      	strb	r2, [r3, #0]
 8004470:	7bfa      	ldrb	r2, [r7, #15]
 8004472:	6879      	ldr	r1, [r7, #4]
 8004474:	4613      	mov	r3, r2
 8004476:	00db      	lsls	r3, r3, #3
 8004478:	4413      	add	r3, r2
 800447a:	009b      	lsls	r3, r3, #2
 800447c:	440b      	add	r3, r1
 800447e:	f503 731f 	add.w	r3, r3, #636	; 0x27c
 8004482:	7bfa      	ldrb	r2, [r7, #15]
 8004484:	701a      	strb	r2, [r3, #0]
 8004486:	7bfa      	ldrb	r2, [r7, #15]
 8004488:	6879      	ldr	r1, [r7, #4]
 800448a:	4613      	mov	r3, r2
 800448c:	00db      	lsls	r3, r3, #3
 800448e:	4413      	add	r3, r2
 8004490:	009b      	lsls	r3, r3, #2
 8004492:	440b      	add	r3, r1
 8004494:	f503 7320 	add.w	r3, r3, #640	; 0x280
 8004498:	2200      	movs	r2, #0
 800449a:	701a      	strb	r2, [r3, #0]
 800449c:	7bfa      	ldrb	r2, [r7, #15]
 800449e:	6879      	ldr	r1, [r7, #4]
 80044a0:	4613      	mov	r3, r2
 80044a2:	00db      	lsls	r3, r3, #3
 80044a4:	4413      	add	r3, r2
 80044a6:	009b      	lsls	r3, r3, #2
 80044a8:	440b      	add	r3, r1
 80044aa:	f503 7322 	add.w	r3, r3, #648	; 0x288
 80044ae:	2200      	movs	r2, #0
 80044b0:	601a      	str	r2, [r3, #0]
 80044b2:	7bfa      	ldrb	r2, [r7, #15]
 80044b4:	6879      	ldr	r1, [r7, #4]
 80044b6:	4613      	mov	r3, r2
 80044b8:	00db      	lsls	r3, r3, #3
 80044ba:	4413      	add	r3, r2
 80044bc:	009b      	lsls	r3, r3, #2
 80044be:	440b      	add	r3, r1
 80044c0:	f503 7323 	add.w	r3, r3, #652	; 0x28c
 80044c4:	2200      	movs	r2, #0
 80044c6:	601a      	str	r2, [r3, #0]
 80044c8:	7bfa      	ldrb	r2, [r7, #15]
 80044ca:	6879      	ldr	r1, [r7, #4]
 80044cc:	4613      	mov	r3, r2
 80044ce:	00db      	lsls	r3, r3, #3
 80044d0:	4413      	add	r3, r2
 80044d2:	009b      	lsls	r3, r3, #2
 80044d4:	440b      	add	r3, r1
 80044d6:	f503 7325 	add.w	r3, r3, #660	; 0x294
 80044da:	2200      	movs	r2, #0
 80044dc:	601a      	str	r2, [r3, #0]
 80044de:	7bfb      	ldrb	r3, [r7, #15]
 80044e0:	3301      	adds	r3, #1
 80044e2:	73fb      	strb	r3, [r7, #15]
 80044e4:	7bfa      	ldrb	r2, [r7, #15]
 80044e6:	687b      	ldr	r3, [r7, #4]
 80044e8:	685b      	ldr	r3, [r3, #4]
 80044ea:	429a      	cmp	r2, r3
 80044ec:	d3b5      	bcc.n	800445a <HAL_PCD_Init+0x148>
 80044ee:	687b      	ldr	r3, [r7, #4]
 80044f0:	681b      	ldr	r3, [r3, #0]
 80044f2:	603b      	str	r3, [r7, #0]
 80044f4:	687e      	ldr	r6, [r7, #4]
 80044f6:	466d      	mov	r5, sp
 80044f8:	f106 0410 	add.w	r4, r6, #16
 80044fc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80044fe:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8004500:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8004502:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8004504:	e894 0003 	ldmia.w	r4, {r0, r1}
 8004508:	e885 0003 	stmia.w	r5, {r0, r1}
 800450c:	1d33      	adds	r3, r6, #4
 800450e:	cb0e      	ldmia	r3, {r1, r2, r3}
 8004510:	6838      	ldr	r0, [r7, #0]
 8004512:	f003 fced 	bl	8007ef0 <USB_DevInit>
 8004516:	4603      	mov	r3, r0
 8004518:	2b00      	cmp	r3, #0
 800451a:	d005      	beq.n	8004528 <HAL_PCD_Init+0x216>
 800451c:	687b      	ldr	r3, [r7, #4]
 800451e:	2202      	movs	r2, #2
 8004520:	f883 24bd 	strb.w	r2, [r3, #1213]	; 0x4bd
 8004524:	2301      	movs	r3, #1
 8004526:	e00d      	b.n	8004544 <HAL_PCD_Init+0x232>
 8004528:	687b      	ldr	r3, [r7, #4]
 800452a:	2200      	movs	r2, #0
 800452c:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8004530:	687b      	ldr	r3, [r7, #4]
 8004532:	2201      	movs	r2, #1
 8004534:	f883 24bd 	strb.w	r2, [r3, #1213]	; 0x4bd
 8004538:	687b      	ldr	r3, [r7, #4]
 800453a:	681b      	ldr	r3, [r3, #0]
 800453c:	4618      	mov	r0, r3
 800453e:	f004 fe3c 	bl	80091ba <USB_DevDisconnect>
 8004542:	2300      	movs	r3, #0
 8004544:	4618      	mov	r0, r3
 8004546:	3714      	adds	r7, #20
 8004548:	46bd      	mov	sp, r7
 800454a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800454c <HAL_PCD_Start>:
 800454c:	b580      	push	{r7, lr}
 800454e:	b084      	sub	sp, #16
 8004550:	af00      	add	r7, sp, #0
 8004552:	6078      	str	r0, [r7, #4]
 8004554:	687b      	ldr	r3, [r7, #4]
 8004556:	681b      	ldr	r3, [r3, #0]
 8004558:	60fb      	str	r3, [r7, #12]
 800455a:	687b      	ldr	r3, [r7, #4]
 800455c:	f893 34bc 	ldrb.w	r3, [r3, #1212]	; 0x4bc
 8004560:	2b01      	cmp	r3, #1
 8004562:	d101      	bne.n	8004568 <HAL_PCD_Start+0x1c>
 8004564:	2302      	movs	r3, #2
 8004566:	e020      	b.n	80045aa <HAL_PCD_Start+0x5e>
 8004568:	687b      	ldr	r3, [r7, #4]
 800456a:	2201      	movs	r2, #1
 800456c:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8004570:	687b      	ldr	r3, [r7, #4]
 8004572:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004574:	2b01      	cmp	r3, #1
 8004576:	d109      	bne.n	800458c <HAL_PCD_Start+0x40>
 8004578:	687b      	ldr	r3, [r7, #4]
 800457a:	699b      	ldr	r3, [r3, #24]
 800457c:	2b01      	cmp	r3, #1
 800457e:	d005      	beq.n	800458c <HAL_PCD_Start+0x40>
 8004580:	68fb      	ldr	r3, [r7, #12]
 8004582:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004584:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 8004588:	68fb      	ldr	r3, [r7, #12]
 800458a:	639a      	str	r2, [r3, #56]	; 0x38
 800458c:	687b      	ldr	r3, [r7, #4]
 800458e:	681b      	ldr	r3, [r3, #0]
 8004590:	4618      	mov	r0, r3
 8004592:	f003 fc3f 	bl	8007e14 <USB_EnableGlobalInt>
 8004596:	687b      	ldr	r3, [r7, #4]
 8004598:	681b      	ldr	r3, [r3, #0]
 800459a:	4618      	mov	r0, r3
 800459c:	f004 fdec 	bl	8009178 <USB_DevConnect>
 80045a0:	687b      	ldr	r3, [r7, #4]
 80045a2:	2200      	movs	r2, #0
 80045a4:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 80045a8:	2300      	movs	r3, #0
 80045aa:	4618      	mov	r0, r3
 80045ac:	3710      	adds	r7, #16
 80045ae:	46bd      	mov	sp, r7
 80045b0:	bd80      	pop	{r7, pc}

080045b2 <HAL_PCD_IRQHandler>:
 80045b2:	b590      	push	{r4, r7, lr}
 80045b4:	b08d      	sub	sp, #52	; 0x34
 80045b6:	af00      	add	r7, sp, #0
 80045b8:	6078      	str	r0, [r7, #4]
 80045ba:	687b      	ldr	r3, [r7, #4]
 80045bc:	681b      	ldr	r3, [r3, #0]
 80045be:	623b      	str	r3, [r7, #32]
 80045c0:	6a3b      	ldr	r3, [r7, #32]
 80045c2:	61fb      	str	r3, [r7, #28]
 80045c4:	687b      	ldr	r3, [r7, #4]
 80045c6:	681b      	ldr	r3, [r3, #0]
 80045c8:	4618      	mov	r0, r3
 80045ca:	f004 feaa 	bl	8009322 <USB_GetMode>
 80045ce:	4603      	mov	r3, r0
 80045d0:	2b00      	cmp	r3, #0
 80045d2:	f040 848a 	bne.w	8004eea <HAL_PCD_IRQHandler+0x938>
 80045d6:	687b      	ldr	r3, [r7, #4]
 80045d8:	681b      	ldr	r3, [r3, #0]
 80045da:	4618      	mov	r0, r3
 80045dc:	f004 fe0e 	bl	80091fc <USB_ReadInterrupts>
 80045e0:	4603      	mov	r3, r0
 80045e2:	2b00      	cmp	r3, #0
 80045e4:	f000 8480 	beq.w	8004ee8 <HAL_PCD_IRQHandler+0x936>
 80045e8:	69fb      	ldr	r3, [r7, #28]
 80045ea:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80045ee:	689b      	ldr	r3, [r3, #8]
 80045f0:	0a1b      	lsrs	r3, r3, #8
 80045f2:	f3c3 020d 	ubfx	r2, r3, #0, #14
 80045f6:	687b      	ldr	r3, [r7, #4]
 80045f8:	f8c3 24fc 	str.w	r2, [r3, #1276]	; 0x4fc
 80045fc:	687b      	ldr	r3, [r7, #4]
 80045fe:	681b      	ldr	r3, [r3, #0]
 8004600:	4618      	mov	r0, r3
 8004602:	f004 fdfb 	bl	80091fc <USB_ReadInterrupts>
 8004606:	4603      	mov	r3, r0
 8004608:	f003 0302 	and.w	r3, r3, #2
 800460c:	2b02      	cmp	r3, #2
 800460e:	d107      	bne.n	8004620 <HAL_PCD_IRQHandler+0x6e>
 8004610:	687b      	ldr	r3, [r7, #4]
 8004612:	681b      	ldr	r3, [r3, #0]
 8004614:	695a      	ldr	r2, [r3, #20]
 8004616:	687b      	ldr	r3, [r7, #4]
 8004618:	681b      	ldr	r3, [r3, #0]
 800461a:	f002 0202 	and.w	r2, r2, #2
 800461e:	615a      	str	r2, [r3, #20]
 8004620:	687b      	ldr	r3, [r7, #4]
 8004622:	681b      	ldr	r3, [r3, #0]
 8004624:	4618      	mov	r0, r3
 8004626:	f004 fde9 	bl	80091fc <USB_ReadInterrupts>
 800462a:	4603      	mov	r3, r0
 800462c:	f003 0310 	and.w	r3, r3, #16
 8004630:	2b10      	cmp	r3, #16
 8004632:	d161      	bne.n	80046f8 <HAL_PCD_IRQHandler+0x146>
 8004634:	687b      	ldr	r3, [r7, #4]
 8004636:	681b      	ldr	r3, [r3, #0]
 8004638:	699a      	ldr	r2, [r3, #24]
 800463a:	687b      	ldr	r3, [r7, #4]
 800463c:	681b      	ldr	r3, [r3, #0]
 800463e:	f022 0210 	bic.w	r2, r2, #16
 8004642:	619a      	str	r2, [r3, #24]
 8004644:	6a3b      	ldr	r3, [r7, #32]
 8004646:	6a1b      	ldr	r3, [r3, #32]
 8004648:	61bb      	str	r3, [r7, #24]
 800464a:	69bb      	ldr	r3, [r7, #24]
 800464c:	f003 020f 	and.w	r2, r3, #15
 8004650:	4613      	mov	r3, r2
 8004652:	00db      	lsls	r3, r3, #3
 8004654:	4413      	add	r3, r2
 8004656:	009b      	lsls	r3, r3, #2
 8004658:	f503 731e 	add.w	r3, r3, #632	; 0x278
 800465c:	687a      	ldr	r2, [r7, #4]
 800465e:	4413      	add	r3, r2
 8004660:	3304      	adds	r3, #4
 8004662:	617b      	str	r3, [r7, #20]
 8004664:	69bb      	ldr	r3, [r7, #24]
 8004666:	0c5b      	lsrs	r3, r3, #17
 8004668:	f003 030f 	and.w	r3, r3, #15
 800466c:	2b02      	cmp	r3, #2
 800466e:	d124      	bne.n	80046ba <HAL_PCD_IRQHandler+0x108>
 8004670:	69ba      	ldr	r2, [r7, #24]
 8004672:	f647 73f0 	movw	r3, #32752	; 0x7ff0
 8004676:	4013      	ands	r3, r2
 8004678:	2b00      	cmp	r3, #0
 800467a:	d035      	beq.n	80046e8 <HAL_PCD_IRQHandler+0x136>
 800467c:	697b      	ldr	r3, [r7, #20]
 800467e:	6919      	ldr	r1, [r3, #16]
 8004680:	69bb      	ldr	r3, [r7, #24]
 8004682:	091b      	lsrs	r3, r3, #4
 8004684:	b29b      	uxth	r3, r3
 8004686:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800468a:	b29b      	uxth	r3, r3
 800468c:	461a      	mov	r2, r3
 800468e:	6a38      	ldr	r0, [r7, #32]
 8004690:	f004 fc20 	bl	8008ed4 <USB_ReadPacket>
 8004694:	697b      	ldr	r3, [r7, #20]
 8004696:	691a      	ldr	r2, [r3, #16]
 8004698:	69bb      	ldr	r3, [r7, #24]
 800469a:	091b      	lsrs	r3, r3, #4
 800469c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80046a0:	441a      	add	r2, r3
 80046a2:	697b      	ldr	r3, [r7, #20]
 80046a4:	611a      	str	r2, [r3, #16]
 80046a6:	697b      	ldr	r3, [r7, #20]
 80046a8:	6a1a      	ldr	r2, [r3, #32]
 80046aa:	69bb      	ldr	r3, [r7, #24]
 80046ac:	091b      	lsrs	r3, r3, #4
 80046ae:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80046b2:	441a      	add	r2, r3
 80046b4:	697b      	ldr	r3, [r7, #20]
 80046b6:	621a      	str	r2, [r3, #32]
 80046b8:	e016      	b.n	80046e8 <HAL_PCD_IRQHandler+0x136>
 80046ba:	69bb      	ldr	r3, [r7, #24]
 80046bc:	0c5b      	lsrs	r3, r3, #17
 80046be:	f003 030f 	and.w	r3, r3, #15
 80046c2:	2b06      	cmp	r3, #6
 80046c4:	d110      	bne.n	80046e8 <HAL_PCD_IRQHandler+0x136>
 80046c6:	687b      	ldr	r3, [r7, #4]
 80046c8:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 80046cc:	2208      	movs	r2, #8
 80046ce:	4619      	mov	r1, r3
 80046d0:	6a38      	ldr	r0, [r7, #32]
 80046d2:	f004 fbff 	bl	8008ed4 <USB_ReadPacket>
 80046d6:	697b      	ldr	r3, [r7, #20]
 80046d8:	6a1a      	ldr	r2, [r3, #32]
 80046da:	69bb      	ldr	r3, [r7, #24]
 80046dc:	091b      	lsrs	r3, r3, #4
 80046de:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80046e2:	441a      	add	r2, r3
 80046e4:	697b      	ldr	r3, [r7, #20]
 80046e6:	621a      	str	r2, [r3, #32]
 80046e8:	687b      	ldr	r3, [r7, #4]
 80046ea:	681b      	ldr	r3, [r3, #0]
 80046ec:	699a      	ldr	r2, [r3, #24]
 80046ee:	687b      	ldr	r3, [r7, #4]
 80046f0:	681b      	ldr	r3, [r3, #0]
 80046f2:	f042 0210 	orr.w	r2, r2, #16
 80046f6:	619a      	str	r2, [r3, #24]
 80046f8:	687b      	ldr	r3, [r7, #4]
 80046fa:	681b      	ldr	r3, [r3, #0]
 80046fc:	4618      	mov	r0, r3
 80046fe:	f004 fd7d 	bl	80091fc <USB_ReadInterrupts>
 8004702:	4603      	mov	r3, r0
 8004704:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8004708:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
 800470c:	f040 80a7 	bne.w	800485e <HAL_PCD_IRQHandler+0x2ac>
 8004710:	2300      	movs	r3, #0
 8004712:	627b      	str	r3, [r7, #36]	; 0x24
 8004714:	687b      	ldr	r3, [r7, #4]
 8004716:	681b      	ldr	r3, [r3, #0]
 8004718:	4618      	mov	r0, r3
 800471a:	f004 fd82 	bl	8009222 <USB_ReadDevAllOutEpInterrupt>
 800471e:	62b8      	str	r0, [r7, #40]	; 0x28
 8004720:	e099      	b.n	8004856 <HAL_PCD_IRQHandler+0x2a4>
 8004722:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004724:	f003 0301 	and.w	r3, r3, #1
 8004728:	2b00      	cmp	r3, #0
 800472a:	f000 808e 	beq.w	800484a <HAL_PCD_IRQHandler+0x298>
 800472e:	687b      	ldr	r3, [r7, #4]
 8004730:	681b      	ldr	r3, [r3, #0]
 8004732:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004734:	b2d2      	uxtb	r2, r2
 8004736:	4611      	mov	r1, r2
 8004738:	4618      	mov	r0, r3
 800473a:	f004 fda6 	bl	800928a <USB_ReadDevOutEPInterrupt>
 800473e:	6138      	str	r0, [r7, #16]
 8004740:	693b      	ldr	r3, [r7, #16]
 8004742:	f003 0301 	and.w	r3, r3, #1
 8004746:	2b00      	cmp	r3, #0
 8004748:	d00c      	beq.n	8004764 <HAL_PCD_IRQHandler+0x1b2>
 800474a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800474c:	015a      	lsls	r2, r3, #5
 800474e:	69fb      	ldr	r3, [r7, #28]
 8004750:	4413      	add	r3, r2
 8004752:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8004756:	461a      	mov	r2, r3
 8004758:	2301      	movs	r3, #1
 800475a:	6093      	str	r3, [r2, #8]
 800475c:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800475e:	6878      	ldr	r0, [r7, #4]
 8004760:	f000 fec2 	bl	80054e8 <PCD_EP_OutXfrComplete_int>
 8004764:	693b      	ldr	r3, [r7, #16]
 8004766:	f003 0308 	and.w	r3, r3, #8
 800476a:	2b00      	cmp	r3, #0
 800476c:	d00c      	beq.n	8004788 <HAL_PCD_IRQHandler+0x1d6>
 800476e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004770:	015a      	lsls	r2, r3, #5
 8004772:	69fb      	ldr	r3, [r7, #28]
 8004774:	4413      	add	r3, r2
 8004776:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800477a:	461a      	mov	r2, r3
 800477c:	2308      	movs	r3, #8
 800477e:	6093      	str	r3, [r2, #8]
 8004780:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8004782:	6878      	ldr	r0, [r7, #4]
 8004784:	f000 ff98 	bl	80056b8 <PCD_EP_OutSetupPacket_int>
 8004788:	693b      	ldr	r3, [r7, #16]
 800478a:	f003 0310 	and.w	r3, r3, #16
 800478e:	2b00      	cmp	r3, #0
 8004790:	d008      	beq.n	80047a4 <HAL_PCD_IRQHandler+0x1f2>
 8004792:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004794:	015a      	lsls	r2, r3, #5
 8004796:	69fb      	ldr	r3, [r7, #28]
 8004798:	4413      	add	r3, r2
 800479a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800479e:	461a      	mov	r2, r3
 80047a0:	2310      	movs	r3, #16
 80047a2:	6093      	str	r3, [r2, #8]
 80047a4:	693b      	ldr	r3, [r7, #16]
 80047a6:	f003 0302 	and.w	r3, r3, #2
 80047aa:	2b00      	cmp	r3, #0
 80047ac:	d030      	beq.n	8004810 <HAL_PCD_IRQHandler+0x25e>
 80047ae:	6a3b      	ldr	r3, [r7, #32]
 80047b0:	695b      	ldr	r3, [r3, #20]
 80047b2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80047b6:	2b80      	cmp	r3, #128	; 0x80
 80047b8:	d109      	bne.n	80047ce <HAL_PCD_IRQHandler+0x21c>
 80047ba:	69fb      	ldr	r3, [r7, #28]
 80047bc:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80047c0:	685b      	ldr	r3, [r3, #4]
 80047c2:	69fa      	ldr	r2, [r7, #28]
 80047c4:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80047c8:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80047cc:	6053      	str	r3, [r2, #4]
 80047ce:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80047d0:	4613      	mov	r3, r2
 80047d2:	00db      	lsls	r3, r3, #3
 80047d4:	4413      	add	r3, r2
 80047d6:	009b      	lsls	r3, r3, #2
 80047d8:	f503 731e 	add.w	r3, r3, #632	; 0x278
 80047dc:	687a      	ldr	r2, [r7, #4]
 80047de:	4413      	add	r3, r2
 80047e0:	3304      	adds	r3, #4
 80047e2:	617b      	str	r3, [r7, #20]
 80047e4:	697b      	ldr	r3, [r7, #20]
 80047e6:	78db      	ldrb	r3, [r3, #3]
 80047e8:	2b01      	cmp	r3, #1
 80047ea:	d108      	bne.n	80047fe <HAL_PCD_IRQHandler+0x24c>
 80047ec:	697b      	ldr	r3, [r7, #20]
 80047ee:	2200      	movs	r2, #0
 80047f0:	70da      	strb	r2, [r3, #3]
 80047f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80047f4:	b2db      	uxtb	r3, r3
 80047f6:	4619      	mov	r1, r3
 80047f8:	6878      	ldr	r0, [r7, #4]
 80047fa:	f007 fce9 	bl	800c1d0 <HAL_PCD_ISOOUTIncompleteCallback>
 80047fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004800:	015a      	lsls	r2, r3, #5
 8004802:	69fb      	ldr	r3, [r7, #28]
 8004804:	4413      	add	r3, r2
 8004806:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800480a:	461a      	mov	r2, r3
 800480c:	2302      	movs	r3, #2
 800480e:	6093      	str	r3, [r2, #8]
 8004810:	693b      	ldr	r3, [r7, #16]
 8004812:	f003 0320 	and.w	r3, r3, #32
 8004816:	2b00      	cmp	r3, #0
 8004818:	d008      	beq.n	800482c <HAL_PCD_IRQHandler+0x27a>
 800481a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800481c:	015a      	lsls	r2, r3, #5
 800481e:	69fb      	ldr	r3, [r7, #28]
 8004820:	4413      	add	r3, r2
 8004822:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8004826:	461a      	mov	r2, r3
 8004828:	2320      	movs	r3, #32
 800482a:	6093      	str	r3, [r2, #8]
 800482c:	693b      	ldr	r3, [r7, #16]
 800482e:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8004832:	2b00      	cmp	r3, #0
 8004834:	d009      	beq.n	800484a <HAL_PCD_IRQHandler+0x298>
 8004836:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004838:	015a      	lsls	r2, r3, #5
 800483a:	69fb      	ldr	r3, [r7, #28]
 800483c:	4413      	add	r3, r2
 800483e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8004842:	461a      	mov	r2, r3
 8004844:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8004848:	6093      	str	r3, [r2, #8]
 800484a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800484c:	3301      	adds	r3, #1
 800484e:	627b      	str	r3, [r7, #36]	; 0x24
 8004850:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004852:	085b      	lsrs	r3, r3, #1
 8004854:	62bb      	str	r3, [r7, #40]	; 0x28
 8004856:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004858:	2b00      	cmp	r3, #0
 800485a:	f47f af62 	bne.w	8004722 <HAL_PCD_IRQHandler+0x170>
 800485e:	687b      	ldr	r3, [r7, #4]
 8004860:	681b      	ldr	r3, [r3, #0]
 8004862:	4618      	mov	r0, r3
 8004864:	f004 fcca 	bl	80091fc <USB_ReadInterrupts>
 8004868:	4603      	mov	r3, r0
 800486a:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800486e:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8004872:	f040 80db 	bne.w	8004a2c <HAL_PCD_IRQHandler+0x47a>
 8004876:	687b      	ldr	r3, [r7, #4]
 8004878:	681b      	ldr	r3, [r3, #0]
 800487a:	4618      	mov	r0, r3
 800487c:	f004 fceb 	bl	8009256 <USB_ReadDevAllInEpInterrupt>
 8004880:	62b8      	str	r0, [r7, #40]	; 0x28
 8004882:	2300      	movs	r3, #0
 8004884:	627b      	str	r3, [r7, #36]	; 0x24
 8004886:	e0cd      	b.n	8004a24 <HAL_PCD_IRQHandler+0x472>
 8004888:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800488a:	f003 0301 	and.w	r3, r3, #1
 800488e:	2b00      	cmp	r3, #0
 8004890:	f000 80c2 	beq.w	8004a18 <HAL_PCD_IRQHandler+0x466>
 8004894:	687b      	ldr	r3, [r7, #4]
 8004896:	681b      	ldr	r3, [r3, #0]
 8004898:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800489a:	b2d2      	uxtb	r2, r2
 800489c:	4611      	mov	r1, r2
 800489e:	4618      	mov	r0, r3
 80048a0:	f004 fd11 	bl	80092c6 <USB_ReadDevInEPInterrupt>
 80048a4:	6138      	str	r0, [r7, #16]
 80048a6:	693b      	ldr	r3, [r7, #16]
 80048a8:	f003 0301 	and.w	r3, r3, #1
 80048ac:	2b00      	cmp	r3, #0
 80048ae:	d057      	beq.n	8004960 <HAL_PCD_IRQHandler+0x3ae>
 80048b0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80048b2:	f003 030f 	and.w	r3, r3, #15
 80048b6:	2201      	movs	r2, #1
 80048b8:	fa02 f303 	lsl.w	r3, r2, r3
 80048bc:	60fb      	str	r3, [r7, #12]
 80048be:	69fb      	ldr	r3, [r7, #28]
 80048c0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80048c4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80048c6:	68fb      	ldr	r3, [r7, #12]
 80048c8:	43db      	mvns	r3, r3
 80048ca:	69f9      	ldr	r1, [r7, #28]
 80048cc:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 80048d0:	4013      	ands	r3, r2
 80048d2:	634b      	str	r3, [r1, #52]	; 0x34
 80048d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80048d6:	015a      	lsls	r2, r3, #5
 80048d8:	69fb      	ldr	r3, [r7, #28]
 80048da:	4413      	add	r3, r2
 80048dc:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80048e0:	461a      	mov	r2, r3
 80048e2:	2301      	movs	r3, #1
 80048e4:	6093      	str	r3, [r2, #8]
 80048e6:	687b      	ldr	r3, [r7, #4]
 80048e8:	691b      	ldr	r3, [r3, #16]
 80048ea:	2b01      	cmp	r3, #1
 80048ec:	d132      	bne.n	8004954 <HAL_PCD_IRQHandler+0x3a2>
 80048ee:	6879      	ldr	r1, [r7, #4]
 80048f0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80048f2:	4613      	mov	r3, r2
 80048f4:	00db      	lsls	r3, r3, #3
 80048f6:	4413      	add	r3, r2
 80048f8:	009b      	lsls	r3, r3, #2
 80048fa:	440b      	add	r3, r1
 80048fc:	334c      	adds	r3, #76	; 0x4c
 80048fe:	6819      	ldr	r1, [r3, #0]
 8004900:	6878      	ldr	r0, [r7, #4]
 8004902:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004904:	4613      	mov	r3, r2
 8004906:	00db      	lsls	r3, r3, #3
 8004908:	4413      	add	r3, r2
 800490a:	009b      	lsls	r3, r3, #2
 800490c:	4403      	add	r3, r0
 800490e:	3348      	adds	r3, #72	; 0x48
 8004910:	681b      	ldr	r3, [r3, #0]
 8004912:	4419      	add	r1, r3
 8004914:	6878      	ldr	r0, [r7, #4]
 8004916:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004918:	4613      	mov	r3, r2
 800491a:	00db      	lsls	r3, r3, #3
 800491c:	4413      	add	r3, r2
 800491e:	009b      	lsls	r3, r3, #2
 8004920:	4403      	add	r3, r0
 8004922:	334c      	adds	r3, #76	; 0x4c
 8004924:	6019      	str	r1, [r3, #0]
 8004926:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004928:	2b00      	cmp	r3, #0
 800492a:	d113      	bne.n	8004954 <HAL_PCD_IRQHandler+0x3a2>
 800492c:	6879      	ldr	r1, [r7, #4]
 800492e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004930:	4613      	mov	r3, r2
 8004932:	00db      	lsls	r3, r3, #3
 8004934:	4413      	add	r3, r2
 8004936:	009b      	lsls	r3, r3, #2
 8004938:	440b      	add	r3, r1
 800493a:	3354      	adds	r3, #84	; 0x54
 800493c:	681b      	ldr	r3, [r3, #0]
 800493e:	2b00      	cmp	r3, #0
 8004940:	d108      	bne.n	8004954 <HAL_PCD_IRQHandler+0x3a2>
 8004942:	687b      	ldr	r3, [r7, #4]
 8004944:	6818      	ldr	r0, [r3, #0]
 8004946:	687b      	ldr	r3, [r7, #4]
 8004948:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 800494c:	461a      	mov	r2, r3
 800494e:	2101      	movs	r1, #1
 8004950:	f004 fd18 	bl	8009384 <USB_EP0_OutStart>
 8004954:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004956:	b2db      	uxtb	r3, r3
 8004958:	4619      	mov	r1, r3
 800495a:	6878      	ldr	r0, [r7, #4]
 800495c:	f007 fbbd 	bl	800c0da <HAL_PCD_DataInStageCallback>
 8004960:	693b      	ldr	r3, [r7, #16]
 8004962:	f003 0308 	and.w	r3, r3, #8
 8004966:	2b00      	cmp	r3, #0
 8004968:	d008      	beq.n	800497c <HAL_PCD_IRQHandler+0x3ca>
 800496a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800496c:	015a      	lsls	r2, r3, #5
 800496e:	69fb      	ldr	r3, [r7, #28]
 8004970:	4413      	add	r3, r2
 8004972:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8004976:	461a      	mov	r2, r3
 8004978:	2308      	movs	r3, #8
 800497a:	6093      	str	r3, [r2, #8]
 800497c:	693b      	ldr	r3, [r7, #16]
 800497e:	f003 0310 	and.w	r3, r3, #16
 8004982:	2b00      	cmp	r3, #0
 8004984:	d008      	beq.n	8004998 <HAL_PCD_IRQHandler+0x3e6>
 8004986:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004988:	015a      	lsls	r2, r3, #5
 800498a:	69fb      	ldr	r3, [r7, #28]
 800498c:	4413      	add	r3, r2
 800498e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8004992:	461a      	mov	r2, r3
 8004994:	2310      	movs	r3, #16
 8004996:	6093      	str	r3, [r2, #8]
 8004998:	693b      	ldr	r3, [r7, #16]
 800499a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800499e:	2b00      	cmp	r3, #0
 80049a0:	d008      	beq.n	80049b4 <HAL_PCD_IRQHandler+0x402>
 80049a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80049a4:	015a      	lsls	r2, r3, #5
 80049a6:	69fb      	ldr	r3, [r7, #28]
 80049a8:	4413      	add	r3, r2
 80049aa:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80049ae:	461a      	mov	r2, r3
 80049b0:	2340      	movs	r3, #64	; 0x40
 80049b2:	6093      	str	r3, [r2, #8]
 80049b4:	693b      	ldr	r3, [r7, #16]
 80049b6:	f003 0302 	and.w	r3, r3, #2
 80049ba:	2b00      	cmp	r3, #0
 80049bc:	d023      	beq.n	8004a06 <HAL_PCD_IRQHandler+0x454>
 80049be:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80049c0:	6a38      	ldr	r0, [r7, #32]
 80049c2:	f003 fbf9 	bl	80081b8 <USB_FlushTxFifo>
 80049c6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80049c8:	4613      	mov	r3, r2
 80049ca:	00db      	lsls	r3, r3, #3
 80049cc:	4413      	add	r3, r2
 80049ce:	009b      	lsls	r3, r3, #2
 80049d0:	3338      	adds	r3, #56	; 0x38
 80049d2:	687a      	ldr	r2, [r7, #4]
 80049d4:	4413      	add	r3, r2
 80049d6:	3304      	adds	r3, #4
 80049d8:	617b      	str	r3, [r7, #20]
 80049da:	697b      	ldr	r3, [r7, #20]
 80049dc:	78db      	ldrb	r3, [r3, #3]
 80049de:	2b01      	cmp	r3, #1
 80049e0:	d108      	bne.n	80049f4 <HAL_PCD_IRQHandler+0x442>
 80049e2:	697b      	ldr	r3, [r7, #20]
 80049e4:	2200      	movs	r2, #0
 80049e6:	70da      	strb	r2, [r3, #3]
 80049e8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80049ea:	b2db      	uxtb	r3, r3
 80049ec:	4619      	mov	r1, r3
 80049ee:	6878      	ldr	r0, [r7, #4]
 80049f0:	f007 fc00 	bl	800c1f4 <HAL_PCD_ISOINIncompleteCallback>
 80049f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80049f6:	015a      	lsls	r2, r3, #5
 80049f8:	69fb      	ldr	r3, [r7, #28]
 80049fa:	4413      	add	r3, r2
 80049fc:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8004a00:	461a      	mov	r2, r3
 8004a02:	2302      	movs	r3, #2
 8004a04:	6093      	str	r3, [r2, #8]
 8004a06:	693b      	ldr	r3, [r7, #16]
 8004a08:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004a0c:	2b00      	cmp	r3, #0
 8004a0e:	d003      	beq.n	8004a18 <HAL_PCD_IRQHandler+0x466>
 8004a10:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8004a12:	6878      	ldr	r0, [r7, #4]
 8004a14:	f000 fcdb 	bl	80053ce <PCD_WriteEmptyTxFifo>
 8004a18:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004a1a:	3301      	adds	r3, #1
 8004a1c:	627b      	str	r3, [r7, #36]	; 0x24
 8004a1e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004a20:	085b      	lsrs	r3, r3, #1
 8004a22:	62bb      	str	r3, [r7, #40]	; 0x28
 8004a24:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004a26:	2b00      	cmp	r3, #0
 8004a28:	f47f af2e 	bne.w	8004888 <HAL_PCD_IRQHandler+0x2d6>
 8004a2c:	687b      	ldr	r3, [r7, #4]
 8004a2e:	681b      	ldr	r3, [r3, #0]
 8004a30:	4618      	mov	r0, r3
 8004a32:	f004 fbe3 	bl	80091fc <USB_ReadInterrupts>
 8004a36:	4603      	mov	r3, r0
 8004a38:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8004a3c:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8004a40:	d122      	bne.n	8004a88 <HAL_PCD_IRQHandler+0x4d6>
 8004a42:	69fb      	ldr	r3, [r7, #28]
 8004a44:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8004a48:	685b      	ldr	r3, [r3, #4]
 8004a4a:	69fa      	ldr	r2, [r7, #28]
 8004a4c:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8004a50:	f023 0301 	bic.w	r3, r3, #1
 8004a54:	6053      	str	r3, [r2, #4]
 8004a56:	687b      	ldr	r3, [r7, #4]
 8004a58:	f893 34f4 	ldrb.w	r3, [r3, #1268]	; 0x4f4
 8004a5c:	2b01      	cmp	r3, #1
 8004a5e:	d108      	bne.n	8004a72 <HAL_PCD_IRQHandler+0x4c0>
 8004a60:	687b      	ldr	r3, [r7, #4]
 8004a62:	2200      	movs	r2, #0
 8004a64:	f883 24f4 	strb.w	r2, [r3, #1268]	; 0x4f4
 8004a68:	2100      	movs	r1, #0
 8004a6a:	6878      	ldr	r0, [r7, #4]
 8004a6c:	f000 fec2 	bl	80057f4 <HAL_PCDEx_LPM_Callback>
 8004a70:	e002      	b.n	8004a78 <HAL_PCD_IRQHandler+0x4c6>
 8004a72:	6878      	ldr	r0, [r7, #4]
 8004a74:	f007 fb9e 	bl	800c1b4 <HAL_PCD_ResumeCallback>
 8004a78:	687b      	ldr	r3, [r7, #4]
 8004a7a:	681b      	ldr	r3, [r3, #0]
 8004a7c:	695a      	ldr	r2, [r3, #20]
 8004a7e:	687b      	ldr	r3, [r7, #4]
 8004a80:	681b      	ldr	r3, [r3, #0]
 8004a82:	f002 4200 	and.w	r2, r2, #2147483648	; 0x80000000
 8004a86:	615a      	str	r2, [r3, #20]
 8004a88:	687b      	ldr	r3, [r7, #4]
 8004a8a:	681b      	ldr	r3, [r3, #0]
 8004a8c:	4618      	mov	r0, r3
 8004a8e:	f004 fbb5 	bl	80091fc <USB_ReadInterrupts>
 8004a92:	4603      	mov	r3, r0
 8004a94:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8004a98:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8004a9c:	d112      	bne.n	8004ac4 <HAL_PCD_IRQHandler+0x512>
 8004a9e:	69fb      	ldr	r3, [r7, #28]
 8004aa0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8004aa4:	689b      	ldr	r3, [r3, #8]
 8004aa6:	f003 0301 	and.w	r3, r3, #1
 8004aaa:	2b01      	cmp	r3, #1
 8004aac:	d102      	bne.n	8004ab4 <HAL_PCD_IRQHandler+0x502>
 8004aae:	6878      	ldr	r0, [r7, #4]
 8004ab0:	f007 fb5a 	bl	800c168 <HAL_PCD_SuspendCallback>
 8004ab4:	687b      	ldr	r3, [r7, #4]
 8004ab6:	681b      	ldr	r3, [r3, #0]
 8004ab8:	695a      	ldr	r2, [r3, #20]
 8004aba:	687b      	ldr	r3, [r7, #4]
 8004abc:	681b      	ldr	r3, [r3, #0]
 8004abe:	f402 6200 	and.w	r2, r2, #2048	; 0x800
 8004ac2:	615a      	str	r2, [r3, #20]
 8004ac4:	687b      	ldr	r3, [r7, #4]
 8004ac6:	681b      	ldr	r3, [r3, #0]
 8004ac8:	4618      	mov	r0, r3
 8004aca:	f004 fb97 	bl	80091fc <USB_ReadInterrupts>
 8004ace:	4603      	mov	r3, r0
 8004ad0:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8004ad4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004ad8:	f040 80b7 	bne.w	8004c4a <HAL_PCD_IRQHandler+0x698>
 8004adc:	69fb      	ldr	r3, [r7, #28]
 8004ade:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8004ae2:	685b      	ldr	r3, [r3, #4]
 8004ae4:	69fa      	ldr	r2, [r7, #28]
 8004ae6:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8004aea:	f023 0301 	bic.w	r3, r3, #1
 8004aee:	6053      	str	r3, [r2, #4]
 8004af0:	687b      	ldr	r3, [r7, #4]
 8004af2:	681b      	ldr	r3, [r3, #0]
 8004af4:	2110      	movs	r1, #16
 8004af6:	4618      	mov	r0, r3
 8004af8:	f003 fb5e 	bl	80081b8 <USB_FlushTxFifo>
 8004afc:	2300      	movs	r3, #0
 8004afe:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004b00:	e046      	b.n	8004b90 <HAL_PCD_IRQHandler+0x5de>
 8004b02:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004b04:	015a      	lsls	r2, r3, #5
 8004b06:	69fb      	ldr	r3, [r7, #28]
 8004b08:	4413      	add	r3, r2
 8004b0a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8004b0e:	461a      	mov	r2, r3
 8004b10:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 8004b14:	6093      	str	r3, [r2, #8]
 8004b16:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004b18:	015a      	lsls	r2, r3, #5
 8004b1a:	69fb      	ldr	r3, [r7, #28]
 8004b1c:	4413      	add	r3, r2
 8004b1e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8004b22:	681b      	ldr	r3, [r3, #0]
 8004b24:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8004b26:	0151      	lsls	r1, r2, #5
 8004b28:	69fa      	ldr	r2, [r7, #28]
 8004b2a:	440a      	add	r2, r1
 8004b2c:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8004b30:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8004b34:	6013      	str	r3, [r2, #0]
 8004b36:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004b38:	015a      	lsls	r2, r3, #5
 8004b3a:	69fb      	ldr	r3, [r7, #28]
 8004b3c:	4413      	add	r3, r2
 8004b3e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8004b42:	461a      	mov	r2, r3
 8004b44:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 8004b48:	6093      	str	r3, [r2, #8]
 8004b4a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004b4c:	015a      	lsls	r2, r3, #5
 8004b4e:	69fb      	ldr	r3, [r7, #28]
 8004b50:	4413      	add	r3, r2
 8004b52:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8004b56:	681b      	ldr	r3, [r3, #0]
 8004b58:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8004b5a:	0151      	lsls	r1, r2, #5
 8004b5c:	69fa      	ldr	r2, [r7, #28]
 8004b5e:	440a      	add	r2, r1
 8004b60:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8004b64:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8004b68:	6013      	str	r3, [r2, #0]
 8004b6a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004b6c:	015a      	lsls	r2, r3, #5
 8004b6e:	69fb      	ldr	r3, [r7, #28]
 8004b70:	4413      	add	r3, r2
 8004b72:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8004b76:	681b      	ldr	r3, [r3, #0]
 8004b78:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8004b7a:	0151      	lsls	r1, r2, #5
 8004b7c:	69fa      	ldr	r2, [r7, #28]
 8004b7e:	440a      	add	r2, r1
 8004b80:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8004b84:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8004b88:	6013      	str	r3, [r2, #0]
 8004b8a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004b8c:	3301      	adds	r3, #1
 8004b8e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004b90:	687b      	ldr	r3, [r7, #4]
 8004b92:	685b      	ldr	r3, [r3, #4]
 8004b94:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8004b96:	429a      	cmp	r2, r3
 8004b98:	d3b3      	bcc.n	8004b02 <HAL_PCD_IRQHandler+0x550>
 8004b9a:	69fb      	ldr	r3, [r7, #28]
 8004b9c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8004ba0:	69db      	ldr	r3, [r3, #28]
 8004ba2:	69fa      	ldr	r2, [r7, #28]
 8004ba4:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8004ba8:	f043 1301 	orr.w	r3, r3, #65537	; 0x10001
 8004bac:	61d3      	str	r3, [r2, #28]
 8004bae:	687b      	ldr	r3, [r7, #4]
 8004bb0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004bb2:	2b00      	cmp	r3, #0
 8004bb4:	d016      	beq.n	8004be4 <HAL_PCD_IRQHandler+0x632>
 8004bb6:	69fb      	ldr	r3, [r7, #28]
 8004bb8:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8004bbc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004bc0:	69fa      	ldr	r2, [r7, #28]
 8004bc2:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8004bc6:	f043 030b 	orr.w	r3, r3, #11
 8004bca:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
 8004bce:	69fb      	ldr	r3, [r7, #28]
 8004bd0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8004bd4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004bd6:	69fa      	ldr	r2, [r7, #28]
 8004bd8:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8004bdc:	f043 030b 	orr.w	r3, r3, #11
 8004be0:	6453      	str	r3, [r2, #68]	; 0x44
 8004be2:	e015      	b.n	8004c10 <HAL_PCD_IRQHandler+0x65e>
 8004be4:	69fb      	ldr	r3, [r7, #28]
 8004be6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8004bea:	695b      	ldr	r3, [r3, #20]
 8004bec:	69fa      	ldr	r2, [r7, #28]
 8004bee:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8004bf2:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8004bf6:	f043 032b 	orr.w	r3, r3, #43	; 0x2b
 8004bfa:	6153      	str	r3, [r2, #20]
 8004bfc:	69fb      	ldr	r3, [r7, #28]
 8004bfe:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8004c02:	691b      	ldr	r3, [r3, #16]
 8004c04:	69fa      	ldr	r2, [r7, #28]
 8004c06:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8004c0a:	f043 030b 	orr.w	r3, r3, #11
 8004c0e:	6113      	str	r3, [r2, #16]
 8004c10:	69fb      	ldr	r3, [r7, #28]
 8004c12:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8004c16:	681b      	ldr	r3, [r3, #0]
 8004c18:	69fa      	ldr	r2, [r7, #28]
 8004c1a:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8004c1e:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 8004c22:	6013      	str	r3, [r2, #0]
 8004c24:	687b      	ldr	r3, [r7, #4]
 8004c26:	6818      	ldr	r0, [r3, #0]
 8004c28:	687b      	ldr	r3, [r7, #4]
 8004c2a:	691b      	ldr	r3, [r3, #16]
 8004c2c:	b2d9      	uxtb	r1, r3
 8004c2e:	687b      	ldr	r3, [r7, #4]
 8004c30:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 8004c34:	461a      	mov	r2, r3
 8004c36:	f004 fba5 	bl	8009384 <USB_EP0_OutStart>
 8004c3a:	687b      	ldr	r3, [r7, #4]
 8004c3c:	681b      	ldr	r3, [r3, #0]
 8004c3e:	695a      	ldr	r2, [r3, #20]
 8004c40:	687b      	ldr	r3, [r7, #4]
 8004c42:	681b      	ldr	r3, [r3, #0]
 8004c44:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
 8004c48:	615a      	str	r2, [r3, #20]
 8004c4a:	687b      	ldr	r3, [r7, #4]
 8004c4c:	681b      	ldr	r3, [r3, #0]
 8004c4e:	4618      	mov	r0, r3
 8004c50:	f004 fad4 	bl	80091fc <USB_ReadInterrupts>
 8004c54:	4603      	mov	r3, r0
 8004c56:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8004c5a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8004c5e:	d124      	bne.n	8004caa <HAL_PCD_IRQHandler+0x6f8>
 8004c60:	687b      	ldr	r3, [r7, #4]
 8004c62:	681b      	ldr	r3, [r3, #0]
 8004c64:	4618      	mov	r0, r3
 8004c66:	f004 fb6a 	bl	800933e <USB_ActivateSetup>
 8004c6a:	687b      	ldr	r3, [r7, #4]
 8004c6c:	681b      	ldr	r3, [r3, #0]
 8004c6e:	4618      	mov	r0, r3
 8004c70:	f003 fb1f 	bl	80082b2 <USB_GetDevSpeed>
 8004c74:	4603      	mov	r3, r0
 8004c76:	461a      	mov	r2, r3
 8004c78:	687b      	ldr	r3, [r7, #4]
 8004c7a:	60da      	str	r2, [r3, #12]
 8004c7c:	687b      	ldr	r3, [r7, #4]
 8004c7e:	681c      	ldr	r4, [r3, #0]
 8004c80:	f001 f9e8 	bl	8006054 <HAL_RCC_GetHCLKFreq>
 8004c84:	4601      	mov	r1, r0
 8004c86:	687b      	ldr	r3, [r7, #4]
 8004c88:	68db      	ldr	r3, [r3, #12]
 8004c8a:	b2db      	uxtb	r3, r3
 8004c8c:	461a      	mov	r2, r3
 8004c8e:	4620      	mov	r0, r4
 8004c90:	f003 f81e 	bl	8007cd0 <USB_SetTurnaroundTime>
 8004c94:	6878      	ldr	r0, [r7, #4]
 8004c96:	f007 fa48 	bl	800c12a <HAL_PCD_ResetCallback>
 8004c9a:	687b      	ldr	r3, [r7, #4]
 8004c9c:	681b      	ldr	r3, [r3, #0]
 8004c9e:	695a      	ldr	r2, [r3, #20]
 8004ca0:	687b      	ldr	r3, [r7, #4]
 8004ca2:	681b      	ldr	r3, [r3, #0]
 8004ca4:	f402 5200 	and.w	r2, r2, #8192	; 0x2000
 8004ca8:	615a      	str	r2, [r3, #20]
 8004caa:	687b      	ldr	r3, [r7, #4]
 8004cac:	681b      	ldr	r3, [r3, #0]
 8004cae:	4618      	mov	r0, r3
 8004cb0:	f004 faa4 	bl	80091fc <USB_ReadInterrupts>
 8004cb4:	4603      	mov	r3, r0
 8004cb6:	f003 0308 	and.w	r3, r3, #8
 8004cba:	2b08      	cmp	r3, #8
 8004cbc:	d10a      	bne.n	8004cd4 <HAL_PCD_IRQHandler+0x722>
 8004cbe:	6878      	ldr	r0, [r7, #4]
 8004cc0:	f007 fa25 	bl	800c10e <HAL_PCD_SOFCallback>
 8004cc4:	687b      	ldr	r3, [r7, #4]
 8004cc6:	681b      	ldr	r3, [r3, #0]
 8004cc8:	695a      	ldr	r2, [r3, #20]
 8004cca:	687b      	ldr	r3, [r7, #4]
 8004ccc:	681b      	ldr	r3, [r3, #0]
 8004cce:	f002 0208 	and.w	r2, r2, #8
 8004cd2:	615a      	str	r2, [r3, #20]
 8004cd4:	687b      	ldr	r3, [r7, #4]
 8004cd6:	681b      	ldr	r3, [r3, #0]
 8004cd8:	4618      	mov	r0, r3
 8004cda:	f004 fa8f 	bl	80091fc <USB_ReadInterrupts>
 8004cde:	4603      	mov	r3, r0
 8004ce0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004ce4:	2b80      	cmp	r3, #128	; 0x80
 8004ce6:	d122      	bne.n	8004d2e <HAL_PCD_IRQHandler+0x77c>
 8004ce8:	6a3b      	ldr	r3, [r7, #32]
 8004cea:	699b      	ldr	r3, [r3, #24]
 8004cec:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8004cf0:	6a3b      	ldr	r3, [r7, #32]
 8004cf2:	619a      	str	r2, [r3, #24]
 8004cf4:	2301      	movs	r3, #1
 8004cf6:	627b      	str	r3, [r7, #36]	; 0x24
 8004cf8:	e014      	b.n	8004d24 <HAL_PCD_IRQHandler+0x772>
 8004cfa:	6879      	ldr	r1, [r7, #4]
 8004cfc:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004cfe:	4613      	mov	r3, r2
 8004d00:	00db      	lsls	r3, r3, #3
 8004d02:	4413      	add	r3, r2
 8004d04:	009b      	lsls	r3, r3, #2
 8004d06:	440b      	add	r3, r1
 8004d08:	f203 237f 	addw	r3, r3, #639	; 0x27f
 8004d0c:	781b      	ldrb	r3, [r3, #0]
 8004d0e:	2b01      	cmp	r3, #1
 8004d10:	d105      	bne.n	8004d1e <HAL_PCD_IRQHandler+0x76c>
 8004d12:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004d14:	b2db      	uxtb	r3, r3
 8004d16:	4619      	mov	r1, r3
 8004d18:	6878      	ldr	r0, [r7, #4]
 8004d1a:	f000 fb27 	bl	800536c <HAL_PCD_EP_Abort>
 8004d1e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004d20:	3301      	adds	r3, #1
 8004d22:	627b      	str	r3, [r7, #36]	; 0x24
 8004d24:	687b      	ldr	r3, [r7, #4]
 8004d26:	685b      	ldr	r3, [r3, #4]
 8004d28:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004d2a:	429a      	cmp	r2, r3
 8004d2c:	d3e5      	bcc.n	8004cfa <HAL_PCD_IRQHandler+0x748>
 8004d2e:	687b      	ldr	r3, [r7, #4]
 8004d30:	681b      	ldr	r3, [r3, #0]
 8004d32:	4618      	mov	r0, r3
 8004d34:	f004 fa62 	bl	80091fc <USB_ReadInterrupts>
 8004d38:	4603      	mov	r3, r0
 8004d3a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8004d3e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8004d42:	d13b      	bne.n	8004dbc <HAL_PCD_IRQHandler+0x80a>
 8004d44:	2301      	movs	r3, #1
 8004d46:	627b      	str	r3, [r7, #36]	; 0x24
 8004d48:	e02b      	b.n	8004da2 <HAL_PCD_IRQHandler+0x7f0>
 8004d4a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004d4c:	015a      	lsls	r2, r3, #5
 8004d4e:	69fb      	ldr	r3, [r7, #28]
 8004d50:	4413      	add	r3, r2
 8004d52:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8004d56:	681b      	ldr	r3, [r3, #0]
 8004d58:	61bb      	str	r3, [r7, #24]
 8004d5a:	6879      	ldr	r1, [r7, #4]
 8004d5c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004d5e:	4613      	mov	r3, r2
 8004d60:	00db      	lsls	r3, r3, #3
 8004d62:	4413      	add	r3, r2
 8004d64:	009b      	lsls	r3, r3, #2
 8004d66:	440b      	add	r3, r1
 8004d68:	3340      	adds	r3, #64	; 0x40
 8004d6a:	781b      	ldrb	r3, [r3, #0]
 8004d6c:	2b01      	cmp	r3, #1
 8004d6e:	d115      	bne.n	8004d9c <HAL_PCD_IRQHandler+0x7ea>
 8004d70:	69bb      	ldr	r3, [r7, #24]
 8004d72:	2b00      	cmp	r3, #0
 8004d74:	da12      	bge.n	8004d9c <HAL_PCD_IRQHandler+0x7ea>
 8004d76:	6879      	ldr	r1, [r7, #4]
 8004d78:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004d7a:	4613      	mov	r3, r2
 8004d7c:	00db      	lsls	r3, r3, #3
 8004d7e:	4413      	add	r3, r2
 8004d80:	009b      	lsls	r3, r3, #2
 8004d82:	440b      	add	r3, r1
 8004d84:	333f      	adds	r3, #63	; 0x3f
 8004d86:	2201      	movs	r2, #1
 8004d88:	701a      	strb	r2, [r3, #0]
 8004d8a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004d8c:	b2db      	uxtb	r3, r3
 8004d8e:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8004d92:	b2db      	uxtb	r3, r3
 8004d94:	4619      	mov	r1, r3
 8004d96:	6878      	ldr	r0, [r7, #4]
 8004d98:	f000 fae8 	bl	800536c <HAL_PCD_EP_Abort>
 8004d9c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004d9e:	3301      	adds	r3, #1
 8004da0:	627b      	str	r3, [r7, #36]	; 0x24
 8004da2:	687b      	ldr	r3, [r7, #4]
 8004da4:	685b      	ldr	r3, [r3, #4]
 8004da6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004da8:	429a      	cmp	r2, r3
 8004daa:	d3ce      	bcc.n	8004d4a <HAL_PCD_IRQHandler+0x798>
 8004dac:	687b      	ldr	r3, [r7, #4]
 8004dae:	681b      	ldr	r3, [r3, #0]
 8004db0:	695a      	ldr	r2, [r3, #20]
 8004db2:	687b      	ldr	r3, [r7, #4]
 8004db4:	681b      	ldr	r3, [r3, #0]
 8004db6:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8004dba:	615a      	str	r2, [r3, #20]
 8004dbc:	687b      	ldr	r3, [r7, #4]
 8004dbe:	681b      	ldr	r3, [r3, #0]
 8004dc0:	4618      	mov	r0, r3
 8004dc2:	f004 fa1b 	bl	80091fc <USB_ReadInterrupts>
 8004dc6:	4603      	mov	r3, r0
 8004dc8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8004dcc:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8004dd0:	d155      	bne.n	8004e7e <HAL_PCD_IRQHandler+0x8cc>
 8004dd2:	2301      	movs	r3, #1
 8004dd4:	627b      	str	r3, [r7, #36]	; 0x24
 8004dd6:	e045      	b.n	8004e64 <HAL_PCD_IRQHandler+0x8b2>
 8004dd8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004dda:	015a      	lsls	r2, r3, #5
 8004ddc:	69fb      	ldr	r3, [r7, #28]
 8004dde:	4413      	add	r3, r2
 8004de0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8004de4:	681b      	ldr	r3, [r3, #0]
 8004de6:	61bb      	str	r3, [r7, #24]
 8004de8:	6879      	ldr	r1, [r7, #4]
 8004dea:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004dec:	4613      	mov	r3, r2
 8004dee:	00db      	lsls	r3, r3, #3
 8004df0:	4413      	add	r3, r2
 8004df2:	009b      	lsls	r3, r3, #2
 8004df4:	440b      	add	r3, r1
 8004df6:	f503 7320 	add.w	r3, r3, #640	; 0x280
 8004dfa:	781b      	ldrb	r3, [r3, #0]
 8004dfc:	2b01      	cmp	r3, #1
 8004dfe:	d12e      	bne.n	8004e5e <HAL_PCD_IRQHandler+0x8ac>
 8004e00:	69bb      	ldr	r3, [r7, #24]
 8004e02:	2b00      	cmp	r3, #0
 8004e04:	da2b      	bge.n	8004e5e <HAL_PCD_IRQHandler+0x8ac>
 8004e06:	69bb      	ldr	r3, [r7, #24]
 8004e08:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8004e0c:	687b      	ldr	r3, [r7, #4]
 8004e0e:	f8d3 34fc 	ldr.w	r3, [r3, #1276]	; 0x4fc
 8004e12:	f003 0301 	and.w	r3, r3, #1
 8004e16:	429a      	cmp	r2, r3
 8004e18:	d121      	bne.n	8004e5e <HAL_PCD_IRQHandler+0x8ac>
 8004e1a:	6879      	ldr	r1, [r7, #4]
 8004e1c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004e1e:	4613      	mov	r3, r2
 8004e20:	00db      	lsls	r3, r3, #3
 8004e22:	4413      	add	r3, r2
 8004e24:	009b      	lsls	r3, r3, #2
 8004e26:	440b      	add	r3, r1
 8004e28:	f203 237f 	addw	r3, r3, #639	; 0x27f
 8004e2c:	2201      	movs	r2, #1
 8004e2e:	701a      	strb	r2, [r3, #0]
 8004e30:	6a3b      	ldr	r3, [r7, #32]
 8004e32:	699b      	ldr	r3, [r3, #24]
 8004e34:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 8004e38:	6a3b      	ldr	r3, [r7, #32]
 8004e3a:	619a      	str	r2, [r3, #24]
 8004e3c:	6a3b      	ldr	r3, [r7, #32]
 8004e3e:	695b      	ldr	r3, [r3, #20]
 8004e40:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004e44:	2b00      	cmp	r3, #0
 8004e46:	d10a      	bne.n	8004e5e <HAL_PCD_IRQHandler+0x8ac>
 8004e48:	69fb      	ldr	r3, [r7, #28]
 8004e4a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8004e4e:	685b      	ldr	r3, [r3, #4]
 8004e50:	69fa      	ldr	r2, [r7, #28]
 8004e52:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8004e56:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004e5a:	6053      	str	r3, [r2, #4]
 8004e5c:	e007      	b.n	8004e6e <HAL_PCD_IRQHandler+0x8bc>
 8004e5e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e60:	3301      	adds	r3, #1
 8004e62:	627b      	str	r3, [r7, #36]	; 0x24
 8004e64:	687b      	ldr	r3, [r7, #4]
 8004e66:	685b      	ldr	r3, [r3, #4]
 8004e68:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004e6a:	429a      	cmp	r2, r3
 8004e6c:	d3b4      	bcc.n	8004dd8 <HAL_PCD_IRQHandler+0x826>
 8004e6e:	687b      	ldr	r3, [r7, #4]
 8004e70:	681b      	ldr	r3, [r3, #0]
 8004e72:	695a      	ldr	r2, [r3, #20]
 8004e74:	687b      	ldr	r3, [r7, #4]
 8004e76:	681b      	ldr	r3, [r3, #0]
 8004e78:	f402 1200 	and.w	r2, r2, #2097152	; 0x200000
 8004e7c:	615a      	str	r2, [r3, #20]
 8004e7e:	687b      	ldr	r3, [r7, #4]
 8004e80:	681b      	ldr	r3, [r3, #0]
 8004e82:	4618      	mov	r0, r3
 8004e84:	f004 f9ba 	bl	80091fc <USB_ReadInterrupts>
 8004e88:	4603      	mov	r3, r0
 8004e8a:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 8004e8e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004e92:	d10a      	bne.n	8004eaa <HAL_PCD_IRQHandler+0x8f8>
 8004e94:	6878      	ldr	r0, [r7, #4]
 8004e96:	f007 f9bf 	bl	800c218 <HAL_PCD_ConnectCallback>
 8004e9a:	687b      	ldr	r3, [r7, #4]
 8004e9c:	681b      	ldr	r3, [r3, #0]
 8004e9e:	695a      	ldr	r2, [r3, #20]
 8004ea0:	687b      	ldr	r3, [r7, #4]
 8004ea2:	681b      	ldr	r3, [r3, #0]
 8004ea4:	f002 4280 	and.w	r2, r2, #1073741824	; 0x40000000
 8004ea8:	615a      	str	r2, [r3, #20]
 8004eaa:	687b      	ldr	r3, [r7, #4]
 8004eac:	681b      	ldr	r3, [r3, #0]
 8004eae:	4618      	mov	r0, r3
 8004eb0:	f004 f9a4 	bl	80091fc <USB_ReadInterrupts>
 8004eb4:	4603      	mov	r3, r0
 8004eb6:	f003 0304 	and.w	r3, r3, #4
 8004eba:	2b04      	cmp	r3, #4
 8004ebc:	d115      	bne.n	8004eea <HAL_PCD_IRQHandler+0x938>
 8004ebe:	687b      	ldr	r3, [r7, #4]
 8004ec0:	681b      	ldr	r3, [r3, #0]
 8004ec2:	685b      	ldr	r3, [r3, #4]
 8004ec4:	61bb      	str	r3, [r7, #24]
 8004ec6:	69bb      	ldr	r3, [r7, #24]
 8004ec8:	f003 0304 	and.w	r3, r3, #4
 8004ecc:	2b00      	cmp	r3, #0
 8004ece:	d002      	beq.n	8004ed6 <HAL_PCD_IRQHandler+0x924>
 8004ed0:	6878      	ldr	r0, [r7, #4]
 8004ed2:	f007 f9af 	bl	800c234 <HAL_PCD_DisconnectCallback>
 8004ed6:	687b      	ldr	r3, [r7, #4]
 8004ed8:	681b      	ldr	r3, [r3, #0]
 8004eda:	6859      	ldr	r1, [r3, #4]
 8004edc:	687b      	ldr	r3, [r7, #4]
 8004ede:	681b      	ldr	r3, [r3, #0]
 8004ee0:	69ba      	ldr	r2, [r7, #24]
 8004ee2:	430a      	orrs	r2, r1
 8004ee4:	605a      	str	r2, [r3, #4]
 8004ee6:	e000      	b.n	8004eea <HAL_PCD_IRQHandler+0x938>
 8004ee8:	bf00      	nop
 8004eea:	3734      	adds	r7, #52	; 0x34
 8004eec:	46bd      	mov	sp, r7
 8004eee:	bd90      	pop	{r4, r7, pc}

08004ef0 <HAL_PCD_SetAddress>:
 8004ef0:	b580      	push	{r7, lr}
 8004ef2:	b082      	sub	sp, #8
 8004ef4:	af00      	add	r7, sp, #0
 8004ef6:	6078      	str	r0, [r7, #4]
 8004ef8:	460b      	mov	r3, r1
 8004efa:	70fb      	strb	r3, [r7, #3]
 8004efc:	687b      	ldr	r3, [r7, #4]
 8004efe:	f893 34bc 	ldrb.w	r3, [r3, #1212]	; 0x4bc
 8004f02:	2b01      	cmp	r3, #1
 8004f04:	d101      	bne.n	8004f0a <HAL_PCD_SetAddress+0x1a>
 8004f06:	2302      	movs	r3, #2
 8004f08:	e013      	b.n	8004f32 <HAL_PCD_SetAddress+0x42>
 8004f0a:	687b      	ldr	r3, [r7, #4]
 8004f0c:	2201      	movs	r2, #1
 8004f0e:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8004f12:	687b      	ldr	r3, [r7, #4]
 8004f14:	78fa      	ldrb	r2, [r7, #3]
 8004f16:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8004f1a:	687b      	ldr	r3, [r7, #4]
 8004f1c:	681b      	ldr	r3, [r3, #0]
 8004f1e:	78fa      	ldrb	r2, [r7, #3]
 8004f20:	4611      	mov	r1, r2
 8004f22:	4618      	mov	r0, r3
 8004f24:	f004 f902 	bl	800912c <USB_SetDevAddress>
 8004f28:	687b      	ldr	r3, [r7, #4]
 8004f2a:	2200      	movs	r2, #0
 8004f2c:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8004f30:	2300      	movs	r3, #0
 8004f32:	4618      	mov	r0, r3
 8004f34:	3708      	adds	r7, #8
 8004f36:	46bd      	mov	sp, r7
 8004f38:	bd80      	pop	{r7, pc}

08004f3a <HAL_PCD_EP_Open>:
 8004f3a:	b580      	push	{r7, lr}
 8004f3c:	b084      	sub	sp, #16
 8004f3e:	af00      	add	r7, sp, #0
 8004f40:	6078      	str	r0, [r7, #4]
 8004f42:	4608      	mov	r0, r1
 8004f44:	4611      	mov	r1, r2
 8004f46:	461a      	mov	r2, r3
 8004f48:	4603      	mov	r3, r0
 8004f4a:	70fb      	strb	r3, [r7, #3]
 8004f4c:	460b      	mov	r3, r1
 8004f4e:	803b      	strh	r3, [r7, #0]
 8004f50:	4613      	mov	r3, r2
 8004f52:	70bb      	strb	r3, [r7, #2]
 8004f54:	2300      	movs	r3, #0
 8004f56:	72fb      	strb	r3, [r7, #11]
 8004f58:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8004f5c:	2b00      	cmp	r3, #0
 8004f5e:	da0f      	bge.n	8004f80 <HAL_PCD_EP_Open+0x46>
 8004f60:	78fb      	ldrb	r3, [r7, #3]
 8004f62:	f003 020f 	and.w	r2, r3, #15
 8004f66:	4613      	mov	r3, r2
 8004f68:	00db      	lsls	r3, r3, #3
 8004f6a:	4413      	add	r3, r2
 8004f6c:	009b      	lsls	r3, r3, #2
 8004f6e:	3338      	adds	r3, #56	; 0x38
 8004f70:	687a      	ldr	r2, [r7, #4]
 8004f72:	4413      	add	r3, r2
 8004f74:	3304      	adds	r3, #4
 8004f76:	60fb      	str	r3, [r7, #12]
 8004f78:	68fb      	ldr	r3, [r7, #12]
 8004f7a:	2201      	movs	r2, #1
 8004f7c:	705a      	strb	r2, [r3, #1]
 8004f7e:	e00f      	b.n	8004fa0 <HAL_PCD_EP_Open+0x66>
 8004f80:	78fb      	ldrb	r3, [r7, #3]
 8004f82:	f003 020f 	and.w	r2, r3, #15
 8004f86:	4613      	mov	r3, r2
 8004f88:	00db      	lsls	r3, r3, #3
 8004f8a:	4413      	add	r3, r2
 8004f8c:	009b      	lsls	r3, r3, #2
 8004f8e:	f503 731e 	add.w	r3, r3, #632	; 0x278
 8004f92:	687a      	ldr	r2, [r7, #4]
 8004f94:	4413      	add	r3, r2
 8004f96:	3304      	adds	r3, #4
 8004f98:	60fb      	str	r3, [r7, #12]
 8004f9a:	68fb      	ldr	r3, [r7, #12]
 8004f9c:	2200      	movs	r2, #0
 8004f9e:	705a      	strb	r2, [r3, #1]
 8004fa0:	78fb      	ldrb	r3, [r7, #3]
 8004fa2:	f003 030f 	and.w	r3, r3, #15
 8004fa6:	b2da      	uxtb	r2, r3
 8004fa8:	68fb      	ldr	r3, [r7, #12]
 8004faa:	701a      	strb	r2, [r3, #0]
 8004fac:	883a      	ldrh	r2, [r7, #0]
 8004fae:	68fb      	ldr	r3, [r7, #12]
 8004fb0:	60da      	str	r2, [r3, #12]
 8004fb2:	68fb      	ldr	r3, [r7, #12]
 8004fb4:	78ba      	ldrb	r2, [r7, #2]
 8004fb6:	711a      	strb	r2, [r3, #4]
 8004fb8:	68fb      	ldr	r3, [r7, #12]
 8004fba:	785b      	ldrb	r3, [r3, #1]
 8004fbc:	2b00      	cmp	r3, #0
 8004fbe:	d004      	beq.n	8004fca <HAL_PCD_EP_Open+0x90>
 8004fc0:	68fb      	ldr	r3, [r7, #12]
 8004fc2:	781b      	ldrb	r3, [r3, #0]
 8004fc4:	b29a      	uxth	r2, r3
 8004fc6:	68fb      	ldr	r3, [r7, #12]
 8004fc8:	811a      	strh	r2, [r3, #8]
 8004fca:	78bb      	ldrb	r3, [r7, #2]
 8004fcc:	2b02      	cmp	r3, #2
 8004fce:	d102      	bne.n	8004fd6 <HAL_PCD_EP_Open+0x9c>
 8004fd0:	68fb      	ldr	r3, [r7, #12]
 8004fd2:	2200      	movs	r2, #0
 8004fd4:	715a      	strb	r2, [r3, #5]
 8004fd6:	687b      	ldr	r3, [r7, #4]
 8004fd8:	f893 34bc 	ldrb.w	r3, [r3, #1212]	; 0x4bc
 8004fdc:	2b01      	cmp	r3, #1
 8004fde:	d101      	bne.n	8004fe4 <HAL_PCD_EP_Open+0xaa>
 8004fe0:	2302      	movs	r3, #2
 8004fe2:	e00e      	b.n	8005002 <HAL_PCD_EP_Open+0xc8>
 8004fe4:	687b      	ldr	r3, [r7, #4]
 8004fe6:	2201      	movs	r2, #1
 8004fe8:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8004fec:	687b      	ldr	r3, [r7, #4]
 8004fee:	681b      	ldr	r3, [r3, #0]
 8004ff0:	68f9      	ldr	r1, [r7, #12]
 8004ff2:	4618      	mov	r0, r3
 8004ff4:	f003 f982 	bl	80082fc <USB_ActivateEndpoint>
 8004ff8:	687b      	ldr	r3, [r7, #4]
 8004ffa:	2200      	movs	r2, #0
 8004ffc:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8005000:	7afb      	ldrb	r3, [r7, #11]
 8005002:	4618      	mov	r0, r3
 8005004:	3710      	adds	r7, #16
 8005006:	46bd      	mov	sp, r7
 8005008:	bd80      	pop	{r7, pc}

0800500a <HAL_PCD_EP_Close>:
 800500a:	b580      	push	{r7, lr}
 800500c:	b084      	sub	sp, #16
 800500e:	af00      	add	r7, sp, #0
 8005010:	6078      	str	r0, [r7, #4]
 8005012:	460b      	mov	r3, r1
 8005014:	70fb      	strb	r3, [r7, #3]
 8005016:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800501a:	2b00      	cmp	r3, #0
 800501c:	da0f      	bge.n	800503e <HAL_PCD_EP_Close+0x34>
 800501e:	78fb      	ldrb	r3, [r7, #3]
 8005020:	f003 020f 	and.w	r2, r3, #15
 8005024:	4613      	mov	r3, r2
 8005026:	00db      	lsls	r3, r3, #3
 8005028:	4413      	add	r3, r2
 800502a:	009b      	lsls	r3, r3, #2
 800502c:	3338      	adds	r3, #56	; 0x38
 800502e:	687a      	ldr	r2, [r7, #4]
 8005030:	4413      	add	r3, r2
 8005032:	3304      	adds	r3, #4
 8005034:	60fb      	str	r3, [r7, #12]
 8005036:	68fb      	ldr	r3, [r7, #12]
 8005038:	2201      	movs	r2, #1
 800503a:	705a      	strb	r2, [r3, #1]
 800503c:	e00f      	b.n	800505e <HAL_PCD_EP_Close+0x54>
 800503e:	78fb      	ldrb	r3, [r7, #3]
 8005040:	f003 020f 	and.w	r2, r3, #15
 8005044:	4613      	mov	r3, r2
 8005046:	00db      	lsls	r3, r3, #3
 8005048:	4413      	add	r3, r2
 800504a:	009b      	lsls	r3, r3, #2
 800504c:	f503 731e 	add.w	r3, r3, #632	; 0x278
 8005050:	687a      	ldr	r2, [r7, #4]
 8005052:	4413      	add	r3, r2
 8005054:	3304      	adds	r3, #4
 8005056:	60fb      	str	r3, [r7, #12]
 8005058:	68fb      	ldr	r3, [r7, #12]
 800505a:	2200      	movs	r2, #0
 800505c:	705a      	strb	r2, [r3, #1]
 800505e:	78fb      	ldrb	r3, [r7, #3]
 8005060:	f003 030f 	and.w	r3, r3, #15
 8005064:	b2da      	uxtb	r2, r3
 8005066:	68fb      	ldr	r3, [r7, #12]
 8005068:	701a      	strb	r2, [r3, #0]
 800506a:	687b      	ldr	r3, [r7, #4]
 800506c:	f893 34bc 	ldrb.w	r3, [r3, #1212]	; 0x4bc
 8005070:	2b01      	cmp	r3, #1
 8005072:	d101      	bne.n	8005078 <HAL_PCD_EP_Close+0x6e>
 8005074:	2302      	movs	r3, #2
 8005076:	e00e      	b.n	8005096 <HAL_PCD_EP_Close+0x8c>
 8005078:	687b      	ldr	r3, [r7, #4]
 800507a:	2201      	movs	r2, #1
 800507c:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8005080:	687b      	ldr	r3, [r7, #4]
 8005082:	681b      	ldr	r3, [r3, #0]
 8005084:	68f9      	ldr	r1, [r7, #12]
 8005086:	4618      	mov	r0, r3
 8005088:	f003 f9c0 	bl	800840c <USB_DeactivateEndpoint>
 800508c:	687b      	ldr	r3, [r7, #4]
 800508e:	2200      	movs	r2, #0
 8005090:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8005094:	2300      	movs	r3, #0
 8005096:	4618      	mov	r0, r3
 8005098:	3710      	adds	r7, #16
 800509a:	46bd      	mov	sp, r7
 800509c:	bd80      	pop	{r7, pc}

0800509e <HAL_PCD_EP_Receive>:
 800509e:	b580      	push	{r7, lr}
 80050a0:	b086      	sub	sp, #24
 80050a2:	af00      	add	r7, sp, #0
 80050a4:	60f8      	str	r0, [r7, #12]
 80050a6:	607a      	str	r2, [r7, #4]
 80050a8:	603b      	str	r3, [r7, #0]
 80050aa:	460b      	mov	r3, r1
 80050ac:	72fb      	strb	r3, [r7, #11]
 80050ae:	7afb      	ldrb	r3, [r7, #11]
 80050b0:	f003 020f 	and.w	r2, r3, #15
 80050b4:	4613      	mov	r3, r2
 80050b6:	00db      	lsls	r3, r3, #3
 80050b8:	4413      	add	r3, r2
 80050ba:	009b      	lsls	r3, r3, #2
 80050bc:	f503 731e 	add.w	r3, r3, #632	; 0x278
 80050c0:	68fa      	ldr	r2, [r7, #12]
 80050c2:	4413      	add	r3, r2
 80050c4:	3304      	adds	r3, #4
 80050c6:	617b      	str	r3, [r7, #20]
 80050c8:	697b      	ldr	r3, [r7, #20]
 80050ca:	687a      	ldr	r2, [r7, #4]
 80050cc:	611a      	str	r2, [r3, #16]
 80050ce:	697b      	ldr	r3, [r7, #20]
 80050d0:	683a      	ldr	r2, [r7, #0]
 80050d2:	619a      	str	r2, [r3, #24]
 80050d4:	697b      	ldr	r3, [r7, #20]
 80050d6:	2200      	movs	r2, #0
 80050d8:	621a      	str	r2, [r3, #32]
 80050da:	697b      	ldr	r3, [r7, #20]
 80050dc:	2200      	movs	r2, #0
 80050de:	705a      	strb	r2, [r3, #1]
 80050e0:	7afb      	ldrb	r3, [r7, #11]
 80050e2:	f003 030f 	and.w	r3, r3, #15
 80050e6:	b2da      	uxtb	r2, r3
 80050e8:	697b      	ldr	r3, [r7, #20]
 80050ea:	701a      	strb	r2, [r3, #0]
 80050ec:	68fb      	ldr	r3, [r7, #12]
 80050ee:	691b      	ldr	r3, [r3, #16]
 80050f0:	2b01      	cmp	r3, #1
 80050f2:	d102      	bne.n	80050fa <HAL_PCD_EP_Receive+0x5c>
 80050f4:	687a      	ldr	r2, [r7, #4]
 80050f6:	697b      	ldr	r3, [r7, #20]
 80050f8:	615a      	str	r2, [r3, #20]
 80050fa:	7afb      	ldrb	r3, [r7, #11]
 80050fc:	f003 030f 	and.w	r3, r3, #15
 8005100:	2b00      	cmp	r3, #0
 8005102:	d109      	bne.n	8005118 <HAL_PCD_EP_Receive+0x7a>
 8005104:	68fb      	ldr	r3, [r7, #12]
 8005106:	6818      	ldr	r0, [r3, #0]
 8005108:	68fb      	ldr	r3, [r7, #12]
 800510a:	691b      	ldr	r3, [r3, #16]
 800510c:	b2db      	uxtb	r3, r3
 800510e:	461a      	mov	r2, r3
 8005110:	6979      	ldr	r1, [r7, #20]
 8005112:	f003 fc9f 	bl	8008a54 <USB_EP0StartXfer>
 8005116:	e008      	b.n	800512a <HAL_PCD_EP_Receive+0x8c>
 8005118:	68fb      	ldr	r3, [r7, #12]
 800511a:	6818      	ldr	r0, [r3, #0]
 800511c:	68fb      	ldr	r3, [r7, #12]
 800511e:	691b      	ldr	r3, [r3, #16]
 8005120:	b2db      	uxtb	r3, r3
 8005122:	461a      	mov	r2, r3
 8005124:	6979      	ldr	r1, [r7, #20]
 8005126:	f003 fa4d 	bl	80085c4 <USB_EPStartXfer>
 800512a:	2300      	movs	r3, #0
 800512c:	4618      	mov	r0, r3
 800512e:	3718      	adds	r7, #24
 8005130:	46bd      	mov	sp, r7
 8005132:	bd80      	pop	{r7, pc}

08005134 <HAL_PCD_EP_GetRxCount>:
 8005134:	b480      	push	{r7}
 8005136:	b083      	sub	sp, #12
 8005138:	af00      	add	r7, sp, #0
 800513a:	6078      	str	r0, [r7, #4]
 800513c:	460b      	mov	r3, r1
 800513e:	70fb      	strb	r3, [r7, #3]
 8005140:	78fb      	ldrb	r3, [r7, #3]
 8005142:	f003 020f 	and.w	r2, r3, #15
 8005146:	6879      	ldr	r1, [r7, #4]
 8005148:	4613      	mov	r3, r2
 800514a:	00db      	lsls	r3, r3, #3
 800514c:	4413      	add	r3, r2
 800514e:	009b      	lsls	r3, r3, #2
 8005150:	440b      	add	r3, r1
 8005152:	f503 7327 	add.w	r3, r3, #668	; 0x29c
 8005156:	681b      	ldr	r3, [r3, #0]
 8005158:	4618      	mov	r0, r3
 800515a:	370c      	adds	r7, #12
 800515c:	46bd      	mov	sp, r7
 800515e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005162:	4770      	bx	lr

08005164 <HAL_PCD_EP_Transmit>:
 8005164:	b580      	push	{r7, lr}
 8005166:	b086      	sub	sp, #24
 8005168:	af00      	add	r7, sp, #0
 800516a:	60f8      	str	r0, [r7, #12]
 800516c:	607a      	str	r2, [r7, #4]
 800516e:	603b      	str	r3, [r7, #0]
 8005170:	460b      	mov	r3, r1
 8005172:	72fb      	strb	r3, [r7, #11]
 8005174:	7afb      	ldrb	r3, [r7, #11]
 8005176:	f003 020f 	and.w	r2, r3, #15
 800517a:	4613      	mov	r3, r2
 800517c:	00db      	lsls	r3, r3, #3
 800517e:	4413      	add	r3, r2
 8005180:	009b      	lsls	r3, r3, #2
 8005182:	3338      	adds	r3, #56	; 0x38
 8005184:	68fa      	ldr	r2, [r7, #12]
 8005186:	4413      	add	r3, r2
 8005188:	3304      	adds	r3, #4
 800518a:	617b      	str	r3, [r7, #20]
 800518c:	697b      	ldr	r3, [r7, #20]
 800518e:	687a      	ldr	r2, [r7, #4]
 8005190:	611a      	str	r2, [r3, #16]
 8005192:	697b      	ldr	r3, [r7, #20]
 8005194:	683a      	ldr	r2, [r7, #0]
 8005196:	619a      	str	r2, [r3, #24]
 8005198:	697b      	ldr	r3, [r7, #20]
 800519a:	2200      	movs	r2, #0
 800519c:	621a      	str	r2, [r3, #32]
 800519e:	697b      	ldr	r3, [r7, #20]
 80051a0:	2201      	movs	r2, #1
 80051a2:	705a      	strb	r2, [r3, #1]
 80051a4:	7afb      	ldrb	r3, [r7, #11]
 80051a6:	f003 030f 	and.w	r3, r3, #15
 80051aa:	b2da      	uxtb	r2, r3
 80051ac:	697b      	ldr	r3, [r7, #20]
 80051ae:	701a      	strb	r2, [r3, #0]
 80051b0:	68fb      	ldr	r3, [r7, #12]
 80051b2:	691b      	ldr	r3, [r3, #16]
 80051b4:	2b01      	cmp	r3, #1
 80051b6:	d102      	bne.n	80051be <HAL_PCD_EP_Transmit+0x5a>
 80051b8:	687a      	ldr	r2, [r7, #4]
 80051ba:	697b      	ldr	r3, [r7, #20]
 80051bc:	615a      	str	r2, [r3, #20]
 80051be:	7afb      	ldrb	r3, [r7, #11]
 80051c0:	f003 030f 	and.w	r3, r3, #15
 80051c4:	2b00      	cmp	r3, #0
 80051c6:	d109      	bne.n	80051dc <HAL_PCD_EP_Transmit+0x78>
 80051c8:	68fb      	ldr	r3, [r7, #12]
 80051ca:	6818      	ldr	r0, [r3, #0]
 80051cc:	68fb      	ldr	r3, [r7, #12]
 80051ce:	691b      	ldr	r3, [r3, #16]
 80051d0:	b2db      	uxtb	r3, r3
 80051d2:	461a      	mov	r2, r3
 80051d4:	6979      	ldr	r1, [r7, #20]
 80051d6:	f003 fc3d 	bl	8008a54 <USB_EP0StartXfer>
 80051da:	e008      	b.n	80051ee <HAL_PCD_EP_Transmit+0x8a>
 80051dc:	68fb      	ldr	r3, [r7, #12]
 80051de:	6818      	ldr	r0, [r3, #0]
 80051e0:	68fb      	ldr	r3, [r7, #12]
 80051e2:	691b      	ldr	r3, [r3, #16]
 80051e4:	b2db      	uxtb	r3, r3
 80051e6:	461a      	mov	r2, r3
 80051e8:	6979      	ldr	r1, [r7, #20]
 80051ea:	f003 f9eb 	bl	80085c4 <USB_EPStartXfer>
 80051ee:	2300      	movs	r3, #0
 80051f0:	4618      	mov	r0, r3
 80051f2:	3718      	adds	r7, #24
 80051f4:	46bd      	mov	sp, r7
 80051f6:	bd80      	pop	{r7, pc}

080051f8 <HAL_PCD_EP_SetStall>:
 80051f8:	b580      	push	{r7, lr}
 80051fa:	b084      	sub	sp, #16
 80051fc:	af00      	add	r7, sp, #0
 80051fe:	6078      	str	r0, [r7, #4]
 8005200:	460b      	mov	r3, r1
 8005202:	70fb      	strb	r3, [r7, #3]
 8005204:	78fb      	ldrb	r3, [r7, #3]
 8005206:	f003 020f 	and.w	r2, r3, #15
 800520a:	687b      	ldr	r3, [r7, #4]
 800520c:	685b      	ldr	r3, [r3, #4]
 800520e:	429a      	cmp	r2, r3
 8005210:	d901      	bls.n	8005216 <HAL_PCD_EP_SetStall+0x1e>
 8005212:	2301      	movs	r3, #1
 8005214:	e050      	b.n	80052b8 <HAL_PCD_EP_SetStall+0xc0>
 8005216:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800521a:	2b00      	cmp	r3, #0
 800521c:	da0f      	bge.n	800523e <HAL_PCD_EP_SetStall+0x46>
 800521e:	78fb      	ldrb	r3, [r7, #3]
 8005220:	f003 020f 	and.w	r2, r3, #15
 8005224:	4613      	mov	r3, r2
 8005226:	00db      	lsls	r3, r3, #3
 8005228:	4413      	add	r3, r2
 800522a:	009b      	lsls	r3, r3, #2
 800522c:	3338      	adds	r3, #56	; 0x38
 800522e:	687a      	ldr	r2, [r7, #4]
 8005230:	4413      	add	r3, r2
 8005232:	3304      	adds	r3, #4
 8005234:	60fb      	str	r3, [r7, #12]
 8005236:	68fb      	ldr	r3, [r7, #12]
 8005238:	2201      	movs	r2, #1
 800523a:	705a      	strb	r2, [r3, #1]
 800523c:	e00d      	b.n	800525a <HAL_PCD_EP_SetStall+0x62>
 800523e:	78fa      	ldrb	r2, [r7, #3]
 8005240:	4613      	mov	r3, r2
 8005242:	00db      	lsls	r3, r3, #3
 8005244:	4413      	add	r3, r2
 8005246:	009b      	lsls	r3, r3, #2
 8005248:	f503 731e 	add.w	r3, r3, #632	; 0x278
 800524c:	687a      	ldr	r2, [r7, #4]
 800524e:	4413      	add	r3, r2
 8005250:	3304      	adds	r3, #4
 8005252:	60fb      	str	r3, [r7, #12]
 8005254:	68fb      	ldr	r3, [r7, #12]
 8005256:	2200      	movs	r2, #0
 8005258:	705a      	strb	r2, [r3, #1]
 800525a:	68fb      	ldr	r3, [r7, #12]
 800525c:	2201      	movs	r2, #1
 800525e:	709a      	strb	r2, [r3, #2]
 8005260:	78fb      	ldrb	r3, [r7, #3]
 8005262:	f003 030f 	and.w	r3, r3, #15
 8005266:	b2da      	uxtb	r2, r3
 8005268:	68fb      	ldr	r3, [r7, #12]
 800526a:	701a      	strb	r2, [r3, #0]
 800526c:	687b      	ldr	r3, [r7, #4]
 800526e:	f893 34bc 	ldrb.w	r3, [r3, #1212]	; 0x4bc
 8005272:	2b01      	cmp	r3, #1
 8005274:	d101      	bne.n	800527a <HAL_PCD_EP_SetStall+0x82>
 8005276:	2302      	movs	r3, #2
 8005278:	e01e      	b.n	80052b8 <HAL_PCD_EP_SetStall+0xc0>
 800527a:	687b      	ldr	r3, [r7, #4]
 800527c:	2201      	movs	r2, #1
 800527e:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8005282:	687b      	ldr	r3, [r7, #4]
 8005284:	681b      	ldr	r3, [r3, #0]
 8005286:	68f9      	ldr	r1, [r7, #12]
 8005288:	4618      	mov	r0, r3
 800528a:	f003 fe7b 	bl	8008f84 <USB_EPSetStall>
 800528e:	78fb      	ldrb	r3, [r7, #3]
 8005290:	f003 030f 	and.w	r3, r3, #15
 8005294:	2b00      	cmp	r3, #0
 8005296:	d10a      	bne.n	80052ae <HAL_PCD_EP_SetStall+0xb6>
 8005298:	687b      	ldr	r3, [r7, #4]
 800529a:	6818      	ldr	r0, [r3, #0]
 800529c:	687b      	ldr	r3, [r7, #4]
 800529e:	691b      	ldr	r3, [r3, #16]
 80052a0:	b2d9      	uxtb	r1, r3
 80052a2:	687b      	ldr	r3, [r7, #4]
 80052a4:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 80052a8:	461a      	mov	r2, r3
 80052aa:	f004 f86b 	bl	8009384 <USB_EP0_OutStart>
 80052ae:	687b      	ldr	r3, [r7, #4]
 80052b0:	2200      	movs	r2, #0
 80052b2:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 80052b6:	2300      	movs	r3, #0
 80052b8:	4618      	mov	r0, r3
 80052ba:	3710      	adds	r7, #16
 80052bc:	46bd      	mov	sp, r7
 80052be:	bd80      	pop	{r7, pc}

080052c0 <HAL_PCD_EP_ClrStall>:
 80052c0:	b580      	push	{r7, lr}
 80052c2:	b084      	sub	sp, #16
 80052c4:	af00      	add	r7, sp, #0
 80052c6:	6078      	str	r0, [r7, #4]
 80052c8:	460b      	mov	r3, r1
 80052ca:	70fb      	strb	r3, [r7, #3]
 80052cc:	78fb      	ldrb	r3, [r7, #3]
 80052ce:	f003 020f 	and.w	r2, r3, #15
 80052d2:	687b      	ldr	r3, [r7, #4]
 80052d4:	685b      	ldr	r3, [r3, #4]
 80052d6:	429a      	cmp	r2, r3
 80052d8:	d901      	bls.n	80052de <HAL_PCD_EP_ClrStall+0x1e>
 80052da:	2301      	movs	r3, #1
 80052dc:	e042      	b.n	8005364 <HAL_PCD_EP_ClrStall+0xa4>
 80052de:	f997 3003 	ldrsb.w	r3, [r7, #3]
 80052e2:	2b00      	cmp	r3, #0
 80052e4:	da0f      	bge.n	8005306 <HAL_PCD_EP_ClrStall+0x46>
 80052e6:	78fb      	ldrb	r3, [r7, #3]
 80052e8:	f003 020f 	and.w	r2, r3, #15
 80052ec:	4613      	mov	r3, r2
 80052ee:	00db      	lsls	r3, r3, #3
 80052f0:	4413      	add	r3, r2
 80052f2:	009b      	lsls	r3, r3, #2
 80052f4:	3338      	adds	r3, #56	; 0x38
 80052f6:	687a      	ldr	r2, [r7, #4]
 80052f8:	4413      	add	r3, r2
 80052fa:	3304      	adds	r3, #4
 80052fc:	60fb      	str	r3, [r7, #12]
 80052fe:	68fb      	ldr	r3, [r7, #12]
 8005300:	2201      	movs	r2, #1
 8005302:	705a      	strb	r2, [r3, #1]
 8005304:	e00f      	b.n	8005326 <HAL_PCD_EP_ClrStall+0x66>
 8005306:	78fb      	ldrb	r3, [r7, #3]
 8005308:	f003 020f 	and.w	r2, r3, #15
 800530c:	4613      	mov	r3, r2
 800530e:	00db      	lsls	r3, r3, #3
 8005310:	4413      	add	r3, r2
 8005312:	009b      	lsls	r3, r3, #2
 8005314:	f503 731e 	add.w	r3, r3, #632	; 0x278
 8005318:	687a      	ldr	r2, [r7, #4]
 800531a:	4413      	add	r3, r2
 800531c:	3304      	adds	r3, #4
 800531e:	60fb      	str	r3, [r7, #12]
 8005320:	68fb      	ldr	r3, [r7, #12]
 8005322:	2200      	movs	r2, #0
 8005324:	705a      	strb	r2, [r3, #1]
 8005326:	68fb      	ldr	r3, [r7, #12]
 8005328:	2200      	movs	r2, #0
 800532a:	709a      	strb	r2, [r3, #2]
 800532c:	78fb      	ldrb	r3, [r7, #3]
 800532e:	f003 030f 	and.w	r3, r3, #15
 8005332:	b2da      	uxtb	r2, r3
 8005334:	68fb      	ldr	r3, [r7, #12]
 8005336:	701a      	strb	r2, [r3, #0]
 8005338:	687b      	ldr	r3, [r7, #4]
 800533a:	f893 34bc 	ldrb.w	r3, [r3, #1212]	; 0x4bc
 800533e:	2b01      	cmp	r3, #1
 8005340:	d101      	bne.n	8005346 <HAL_PCD_EP_ClrStall+0x86>
 8005342:	2302      	movs	r3, #2
 8005344:	e00e      	b.n	8005364 <HAL_PCD_EP_ClrStall+0xa4>
 8005346:	687b      	ldr	r3, [r7, #4]
 8005348:	2201      	movs	r2, #1
 800534a:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 800534e:	687b      	ldr	r3, [r7, #4]
 8005350:	681b      	ldr	r3, [r3, #0]
 8005352:	68f9      	ldr	r1, [r7, #12]
 8005354:	4618      	mov	r0, r3
 8005356:	f003 fe83 	bl	8009060 <USB_EPClearStall>
 800535a:	687b      	ldr	r3, [r7, #4]
 800535c:	2200      	movs	r2, #0
 800535e:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8005362:	2300      	movs	r3, #0
 8005364:	4618      	mov	r0, r3
 8005366:	3710      	adds	r7, #16
 8005368:	46bd      	mov	sp, r7
 800536a:	bd80      	pop	{r7, pc}

0800536c <HAL_PCD_EP_Abort>:
 800536c:	b580      	push	{r7, lr}
 800536e:	b084      	sub	sp, #16
 8005370:	af00      	add	r7, sp, #0
 8005372:	6078      	str	r0, [r7, #4]
 8005374:	460b      	mov	r3, r1
 8005376:	70fb      	strb	r3, [r7, #3]
 8005378:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800537c:	2b00      	cmp	r3, #0
 800537e:	da0c      	bge.n	800539a <HAL_PCD_EP_Abort+0x2e>
 8005380:	78fb      	ldrb	r3, [r7, #3]
 8005382:	f003 020f 	and.w	r2, r3, #15
 8005386:	4613      	mov	r3, r2
 8005388:	00db      	lsls	r3, r3, #3
 800538a:	4413      	add	r3, r2
 800538c:	009b      	lsls	r3, r3, #2
 800538e:	3338      	adds	r3, #56	; 0x38
 8005390:	687a      	ldr	r2, [r7, #4]
 8005392:	4413      	add	r3, r2
 8005394:	3304      	adds	r3, #4
 8005396:	60fb      	str	r3, [r7, #12]
 8005398:	e00c      	b.n	80053b4 <HAL_PCD_EP_Abort+0x48>
 800539a:	78fb      	ldrb	r3, [r7, #3]
 800539c:	f003 020f 	and.w	r2, r3, #15
 80053a0:	4613      	mov	r3, r2
 80053a2:	00db      	lsls	r3, r3, #3
 80053a4:	4413      	add	r3, r2
 80053a6:	009b      	lsls	r3, r3, #2
 80053a8:	f503 731e 	add.w	r3, r3, #632	; 0x278
 80053ac:	687a      	ldr	r2, [r7, #4]
 80053ae:	4413      	add	r3, r2
 80053b0:	3304      	adds	r3, #4
 80053b2:	60fb      	str	r3, [r7, #12]
 80053b4:	687b      	ldr	r3, [r7, #4]
 80053b6:	681b      	ldr	r3, [r3, #0]
 80053b8:	68f9      	ldr	r1, [r7, #12]
 80053ba:	4618      	mov	r0, r3
 80053bc:	f003 fca2 	bl	8008d04 <USB_EPStopXfer>
 80053c0:	4603      	mov	r3, r0
 80053c2:	72fb      	strb	r3, [r7, #11]
 80053c4:	7afb      	ldrb	r3, [r7, #11]
 80053c6:	4618      	mov	r0, r3
 80053c8:	3710      	adds	r7, #16
 80053ca:	46bd      	mov	sp, r7
 80053cc:	bd80      	pop	{r7, pc}

080053ce <PCD_WriteEmptyTxFifo>:
 80053ce:	b580      	push	{r7, lr}
 80053d0:	b08a      	sub	sp, #40	; 0x28
 80053d2:	af02      	add	r7, sp, #8
 80053d4:	6078      	str	r0, [r7, #4]
 80053d6:	6039      	str	r1, [r7, #0]
 80053d8:	687b      	ldr	r3, [r7, #4]
 80053da:	681b      	ldr	r3, [r3, #0]
 80053dc:	617b      	str	r3, [r7, #20]
 80053de:	697b      	ldr	r3, [r7, #20]
 80053e0:	613b      	str	r3, [r7, #16]
 80053e2:	683a      	ldr	r2, [r7, #0]
 80053e4:	4613      	mov	r3, r2
 80053e6:	00db      	lsls	r3, r3, #3
 80053e8:	4413      	add	r3, r2
 80053ea:	009b      	lsls	r3, r3, #2
 80053ec:	3338      	adds	r3, #56	; 0x38
 80053ee:	687a      	ldr	r2, [r7, #4]
 80053f0:	4413      	add	r3, r2
 80053f2:	3304      	adds	r3, #4
 80053f4:	60fb      	str	r3, [r7, #12]
 80053f6:	68fb      	ldr	r3, [r7, #12]
 80053f8:	6a1a      	ldr	r2, [r3, #32]
 80053fa:	68fb      	ldr	r3, [r7, #12]
 80053fc:	699b      	ldr	r3, [r3, #24]
 80053fe:	429a      	cmp	r2, r3
 8005400:	d901      	bls.n	8005406 <PCD_WriteEmptyTxFifo+0x38>
 8005402:	2301      	movs	r3, #1
 8005404:	e06c      	b.n	80054e0 <PCD_WriteEmptyTxFifo+0x112>
 8005406:	68fb      	ldr	r3, [r7, #12]
 8005408:	699a      	ldr	r2, [r3, #24]
 800540a:	68fb      	ldr	r3, [r7, #12]
 800540c:	6a1b      	ldr	r3, [r3, #32]
 800540e:	1ad3      	subs	r3, r2, r3
 8005410:	61fb      	str	r3, [r7, #28]
 8005412:	68fb      	ldr	r3, [r7, #12]
 8005414:	68db      	ldr	r3, [r3, #12]
 8005416:	69fa      	ldr	r2, [r7, #28]
 8005418:	429a      	cmp	r2, r3
 800541a:	d902      	bls.n	8005422 <PCD_WriteEmptyTxFifo+0x54>
 800541c:	68fb      	ldr	r3, [r7, #12]
 800541e:	68db      	ldr	r3, [r3, #12]
 8005420:	61fb      	str	r3, [r7, #28]
 8005422:	69fb      	ldr	r3, [r7, #28]
 8005424:	3303      	adds	r3, #3
 8005426:	089b      	lsrs	r3, r3, #2
 8005428:	61bb      	str	r3, [r7, #24]
 800542a:	e02b      	b.n	8005484 <PCD_WriteEmptyTxFifo+0xb6>
 800542c:	68fb      	ldr	r3, [r7, #12]
 800542e:	699a      	ldr	r2, [r3, #24]
 8005430:	68fb      	ldr	r3, [r7, #12]
 8005432:	6a1b      	ldr	r3, [r3, #32]
 8005434:	1ad3      	subs	r3, r2, r3
 8005436:	61fb      	str	r3, [r7, #28]
 8005438:	68fb      	ldr	r3, [r7, #12]
 800543a:	68db      	ldr	r3, [r3, #12]
 800543c:	69fa      	ldr	r2, [r7, #28]
 800543e:	429a      	cmp	r2, r3
 8005440:	d902      	bls.n	8005448 <PCD_WriteEmptyTxFifo+0x7a>
 8005442:	68fb      	ldr	r3, [r7, #12]
 8005444:	68db      	ldr	r3, [r3, #12]
 8005446:	61fb      	str	r3, [r7, #28]
 8005448:	69fb      	ldr	r3, [r7, #28]
 800544a:	3303      	adds	r3, #3
 800544c:	089b      	lsrs	r3, r3, #2
 800544e:	61bb      	str	r3, [r7, #24]
 8005450:	68fb      	ldr	r3, [r7, #12]
 8005452:	6919      	ldr	r1, [r3, #16]
 8005454:	683b      	ldr	r3, [r7, #0]
 8005456:	b2da      	uxtb	r2, r3
 8005458:	69fb      	ldr	r3, [r7, #28]
 800545a:	b298      	uxth	r0, r3
 800545c:	687b      	ldr	r3, [r7, #4]
 800545e:	691b      	ldr	r3, [r3, #16]
 8005460:	b2db      	uxtb	r3, r3
 8005462:	9300      	str	r3, [sp, #0]
 8005464:	4603      	mov	r3, r0
 8005466:	6978      	ldr	r0, [r7, #20]
 8005468:	f003 fcf6 	bl	8008e58 <USB_WritePacket>
 800546c:	68fb      	ldr	r3, [r7, #12]
 800546e:	691a      	ldr	r2, [r3, #16]
 8005470:	69fb      	ldr	r3, [r7, #28]
 8005472:	441a      	add	r2, r3
 8005474:	68fb      	ldr	r3, [r7, #12]
 8005476:	611a      	str	r2, [r3, #16]
 8005478:	68fb      	ldr	r3, [r7, #12]
 800547a:	6a1a      	ldr	r2, [r3, #32]
 800547c:	69fb      	ldr	r3, [r7, #28]
 800547e:	441a      	add	r2, r3
 8005480:	68fb      	ldr	r3, [r7, #12]
 8005482:	621a      	str	r2, [r3, #32]
 8005484:	683b      	ldr	r3, [r7, #0]
 8005486:	015a      	lsls	r2, r3, #5
 8005488:	693b      	ldr	r3, [r7, #16]
 800548a:	4413      	add	r3, r2
 800548c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005490:	699b      	ldr	r3, [r3, #24]
 8005492:	b29b      	uxth	r3, r3
 8005494:	69ba      	ldr	r2, [r7, #24]
 8005496:	429a      	cmp	r2, r3
 8005498:	d809      	bhi.n	80054ae <PCD_WriteEmptyTxFifo+0xe0>
 800549a:	68fb      	ldr	r3, [r7, #12]
 800549c:	6a1a      	ldr	r2, [r3, #32]
 800549e:	68fb      	ldr	r3, [r7, #12]
 80054a0:	699b      	ldr	r3, [r3, #24]
 80054a2:	429a      	cmp	r2, r3
 80054a4:	d203      	bcs.n	80054ae <PCD_WriteEmptyTxFifo+0xe0>
 80054a6:	68fb      	ldr	r3, [r7, #12]
 80054a8:	699b      	ldr	r3, [r3, #24]
 80054aa:	2b00      	cmp	r3, #0
 80054ac:	d1be      	bne.n	800542c <PCD_WriteEmptyTxFifo+0x5e>
 80054ae:	68fb      	ldr	r3, [r7, #12]
 80054b0:	699a      	ldr	r2, [r3, #24]
 80054b2:	68fb      	ldr	r3, [r7, #12]
 80054b4:	6a1b      	ldr	r3, [r3, #32]
 80054b6:	429a      	cmp	r2, r3
 80054b8:	d811      	bhi.n	80054de <PCD_WriteEmptyTxFifo+0x110>
 80054ba:	683b      	ldr	r3, [r7, #0]
 80054bc:	f003 030f 	and.w	r3, r3, #15
 80054c0:	2201      	movs	r2, #1
 80054c2:	fa02 f303 	lsl.w	r3, r2, r3
 80054c6:	60bb      	str	r3, [r7, #8]
 80054c8:	693b      	ldr	r3, [r7, #16]
 80054ca:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80054ce:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80054d0:	68bb      	ldr	r3, [r7, #8]
 80054d2:	43db      	mvns	r3, r3
 80054d4:	6939      	ldr	r1, [r7, #16]
 80054d6:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 80054da:	4013      	ands	r3, r2
 80054dc:	634b      	str	r3, [r1, #52]	; 0x34
 80054de:	2300      	movs	r3, #0
 80054e0:	4618      	mov	r0, r3
 80054e2:	3720      	adds	r7, #32
 80054e4:	46bd      	mov	sp, r7
 80054e6:	bd80      	pop	{r7, pc}

080054e8 <PCD_EP_OutXfrComplete_int>:
 80054e8:	b580      	push	{r7, lr}
 80054ea:	b088      	sub	sp, #32
 80054ec:	af00      	add	r7, sp, #0
 80054ee:	6078      	str	r0, [r7, #4]
 80054f0:	6039      	str	r1, [r7, #0]
 80054f2:	687b      	ldr	r3, [r7, #4]
 80054f4:	681b      	ldr	r3, [r3, #0]
 80054f6:	61fb      	str	r3, [r7, #28]
 80054f8:	69fb      	ldr	r3, [r7, #28]
 80054fa:	61bb      	str	r3, [r7, #24]
 80054fc:	69fb      	ldr	r3, [r7, #28]
 80054fe:	333c      	adds	r3, #60	; 0x3c
 8005500:	3304      	adds	r3, #4
 8005502:	681b      	ldr	r3, [r3, #0]
 8005504:	617b      	str	r3, [r7, #20]
 8005506:	683b      	ldr	r3, [r7, #0]
 8005508:	015a      	lsls	r2, r3, #5
 800550a:	69bb      	ldr	r3, [r7, #24]
 800550c:	4413      	add	r3, r2
 800550e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005512:	689b      	ldr	r3, [r3, #8]
 8005514:	613b      	str	r3, [r7, #16]
 8005516:	687b      	ldr	r3, [r7, #4]
 8005518:	691b      	ldr	r3, [r3, #16]
 800551a:	2b01      	cmp	r3, #1
 800551c:	d17b      	bne.n	8005616 <PCD_EP_OutXfrComplete_int+0x12e>
 800551e:	693b      	ldr	r3, [r7, #16]
 8005520:	f003 0308 	and.w	r3, r3, #8
 8005524:	2b00      	cmp	r3, #0
 8005526:	d015      	beq.n	8005554 <PCD_EP_OutXfrComplete_int+0x6c>
 8005528:	697b      	ldr	r3, [r7, #20]
 800552a:	4a61      	ldr	r2, [pc, #388]	; (80056b0 <PCD_EP_OutXfrComplete_int+0x1c8>)
 800552c:	4293      	cmp	r3, r2
 800552e:	f240 80b9 	bls.w	80056a4 <PCD_EP_OutXfrComplete_int+0x1bc>
 8005532:	693b      	ldr	r3, [r7, #16]
 8005534:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8005538:	2b00      	cmp	r3, #0
 800553a:	f000 80b3 	beq.w	80056a4 <PCD_EP_OutXfrComplete_int+0x1bc>
 800553e:	683b      	ldr	r3, [r7, #0]
 8005540:	015a      	lsls	r2, r3, #5
 8005542:	69bb      	ldr	r3, [r7, #24]
 8005544:	4413      	add	r3, r2
 8005546:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800554a:	461a      	mov	r2, r3
 800554c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8005550:	6093      	str	r3, [r2, #8]
 8005552:	e0a7      	b.n	80056a4 <PCD_EP_OutXfrComplete_int+0x1bc>
 8005554:	693b      	ldr	r3, [r7, #16]
 8005556:	f003 0320 	and.w	r3, r3, #32
 800555a:	2b00      	cmp	r3, #0
 800555c:	d009      	beq.n	8005572 <PCD_EP_OutXfrComplete_int+0x8a>
 800555e:	683b      	ldr	r3, [r7, #0]
 8005560:	015a      	lsls	r2, r3, #5
 8005562:	69bb      	ldr	r3, [r7, #24]
 8005564:	4413      	add	r3, r2
 8005566:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800556a:	461a      	mov	r2, r3
 800556c:	2320      	movs	r3, #32
 800556e:	6093      	str	r3, [r2, #8]
 8005570:	e098      	b.n	80056a4 <PCD_EP_OutXfrComplete_int+0x1bc>
 8005572:	693b      	ldr	r3, [r7, #16]
 8005574:	f003 0328 	and.w	r3, r3, #40	; 0x28
 8005578:	2b00      	cmp	r3, #0
 800557a:	f040 8093 	bne.w	80056a4 <PCD_EP_OutXfrComplete_int+0x1bc>
 800557e:	697b      	ldr	r3, [r7, #20]
 8005580:	4a4b      	ldr	r2, [pc, #300]	; (80056b0 <PCD_EP_OutXfrComplete_int+0x1c8>)
 8005582:	4293      	cmp	r3, r2
 8005584:	d90f      	bls.n	80055a6 <PCD_EP_OutXfrComplete_int+0xbe>
 8005586:	693b      	ldr	r3, [r7, #16]
 8005588:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800558c:	2b00      	cmp	r3, #0
 800558e:	d00a      	beq.n	80055a6 <PCD_EP_OutXfrComplete_int+0xbe>
 8005590:	683b      	ldr	r3, [r7, #0]
 8005592:	015a      	lsls	r2, r3, #5
 8005594:	69bb      	ldr	r3, [r7, #24]
 8005596:	4413      	add	r3, r2
 8005598:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800559c:	461a      	mov	r2, r3
 800559e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80055a2:	6093      	str	r3, [r2, #8]
 80055a4:	e07e      	b.n	80056a4 <PCD_EP_OutXfrComplete_int+0x1bc>
 80055a6:	683a      	ldr	r2, [r7, #0]
 80055a8:	4613      	mov	r3, r2
 80055aa:	00db      	lsls	r3, r3, #3
 80055ac:	4413      	add	r3, r2
 80055ae:	009b      	lsls	r3, r3, #2
 80055b0:	f503 731e 	add.w	r3, r3, #632	; 0x278
 80055b4:	687a      	ldr	r2, [r7, #4]
 80055b6:	4413      	add	r3, r2
 80055b8:	3304      	adds	r3, #4
 80055ba:	60fb      	str	r3, [r7, #12]
 80055bc:	68fb      	ldr	r3, [r7, #12]
 80055be:	69da      	ldr	r2, [r3, #28]
 80055c0:	683b      	ldr	r3, [r7, #0]
 80055c2:	0159      	lsls	r1, r3, #5
 80055c4:	69bb      	ldr	r3, [r7, #24]
 80055c6:	440b      	add	r3, r1
 80055c8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80055cc:	691b      	ldr	r3, [r3, #16]
 80055ce:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80055d2:	1ad2      	subs	r2, r2, r3
 80055d4:	68fb      	ldr	r3, [r7, #12]
 80055d6:	621a      	str	r2, [r3, #32]
 80055d8:	683b      	ldr	r3, [r7, #0]
 80055da:	2b00      	cmp	r3, #0
 80055dc:	d114      	bne.n	8005608 <PCD_EP_OutXfrComplete_int+0x120>
 80055de:	68fb      	ldr	r3, [r7, #12]
 80055e0:	699b      	ldr	r3, [r3, #24]
 80055e2:	2b00      	cmp	r3, #0
 80055e4:	d109      	bne.n	80055fa <PCD_EP_OutXfrComplete_int+0x112>
 80055e6:	687b      	ldr	r3, [r7, #4]
 80055e8:	6818      	ldr	r0, [r3, #0]
 80055ea:	687b      	ldr	r3, [r7, #4]
 80055ec:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 80055f0:	461a      	mov	r2, r3
 80055f2:	2101      	movs	r1, #1
 80055f4:	f003 fec6 	bl	8009384 <USB_EP0_OutStart>
 80055f8:	e006      	b.n	8005608 <PCD_EP_OutXfrComplete_int+0x120>
 80055fa:	68fb      	ldr	r3, [r7, #12]
 80055fc:	691a      	ldr	r2, [r3, #16]
 80055fe:	68fb      	ldr	r3, [r7, #12]
 8005600:	6a1b      	ldr	r3, [r3, #32]
 8005602:	441a      	add	r2, r3
 8005604:	68fb      	ldr	r3, [r7, #12]
 8005606:	611a      	str	r2, [r3, #16]
 8005608:	683b      	ldr	r3, [r7, #0]
 800560a:	b2db      	uxtb	r3, r3
 800560c:	4619      	mov	r1, r3
 800560e:	6878      	ldr	r0, [r7, #4]
 8005610:	f006 fd48 	bl	800c0a4 <HAL_PCD_DataOutStageCallback>
 8005614:	e046      	b.n	80056a4 <PCD_EP_OutXfrComplete_int+0x1bc>
 8005616:	697b      	ldr	r3, [r7, #20]
 8005618:	4a26      	ldr	r2, [pc, #152]	; (80056b4 <PCD_EP_OutXfrComplete_int+0x1cc>)
 800561a:	4293      	cmp	r3, r2
 800561c:	d124      	bne.n	8005668 <PCD_EP_OutXfrComplete_int+0x180>
 800561e:	693b      	ldr	r3, [r7, #16]
 8005620:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8005624:	2b00      	cmp	r3, #0
 8005626:	d00a      	beq.n	800563e <PCD_EP_OutXfrComplete_int+0x156>
 8005628:	683b      	ldr	r3, [r7, #0]
 800562a:	015a      	lsls	r2, r3, #5
 800562c:	69bb      	ldr	r3, [r7, #24]
 800562e:	4413      	add	r3, r2
 8005630:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005634:	461a      	mov	r2, r3
 8005636:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800563a:	6093      	str	r3, [r2, #8]
 800563c:	e032      	b.n	80056a4 <PCD_EP_OutXfrComplete_int+0x1bc>
 800563e:	693b      	ldr	r3, [r7, #16]
 8005640:	f003 0320 	and.w	r3, r3, #32
 8005644:	2b00      	cmp	r3, #0
 8005646:	d008      	beq.n	800565a <PCD_EP_OutXfrComplete_int+0x172>
 8005648:	683b      	ldr	r3, [r7, #0]
 800564a:	015a      	lsls	r2, r3, #5
 800564c:	69bb      	ldr	r3, [r7, #24]
 800564e:	4413      	add	r3, r2
 8005650:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005654:	461a      	mov	r2, r3
 8005656:	2320      	movs	r3, #32
 8005658:	6093      	str	r3, [r2, #8]
 800565a:	683b      	ldr	r3, [r7, #0]
 800565c:	b2db      	uxtb	r3, r3
 800565e:	4619      	mov	r1, r3
 8005660:	6878      	ldr	r0, [r7, #4]
 8005662:	f006 fd1f 	bl	800c0a4 <HAL_PCD_DataOutStageCallback>
 8005666:	e01d      	b.n	80056a4 <PCD_EP_OutXfrComplete_int+0x1bc>
 8005668:	683b      	ldr	r3, [r7, #0]
 800566a:	2b00      	cmp	r3, #0
 800566c:	d114      	bne.n	8005698 <PCD_EP_OutXfrComplete_int+0x1b0>
 800566e:	6879      	ldr	r1, [r7, #4]
 8005670:	683a      	ldr	r2, [r7, #0]
 8005672:	4613      	mov	r3, r2
 8005674:	00db      	lsls	r3, r3, #3
 8005676:	4413      	add	r3, r2
 8005678:	009b      	lsls	r3, r3, #2
 800567a:	440b      	add	r3, r1
 800567c:	f503 7325 	add.w	r3, r3, #660	; 0x294
 8005680:	681b      	ldr	r3, [r3, #0]
 8005682:	2b00      	cmp	r3, #0
 8005684:	d108      	bne.n	8005698 <PCD_EP_OutXfrComplete_int+0x1b0>
 8005686:	687b      	ldr	r3, [r7, #4]
 8005688:	6818      	ldr	r0, [r3, #0]
 800568a:	687b      	ldr	r3, [r7, #4]
 800568c:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 8005690:	461a      	mov	r2, r3
 8005692:	2100      	movs	r1, #0
 8005694:	f003 fe76 	bl	8009384 <USB_EP0_OutStart>
 8005698:	683b      	ldr	r3, [r7, #0]
 800569a:	b2db      	uxtb	r3, r3
 800569c:	4619      	mov	r1, r3
 800569e:	6878      	ldr	r0, [r7, #4]
 80056a0:	f006 fd00 	bl	800c0a4 <HAL_PCD_DataOutStageCallback>
 80056a4:	2300      	movs	r3, #0
 80056a6:	4618      	mov	r0, r3
 80056a8:	3720      	adds	r7, #32
 80056aa:	46bd      	mov	sp, r7
 80056ac:	bd80      	pop	{r7, pc}
 80056ae:	bf00      	nop
 80056b0:	4f54300a 	.word	0x4f54300a
 80056b4:	4f54310a 	.word	0x4f54310a

080056b8 <PCD_EP_OutSetupPacket_int>:
 80056b8:	b580      	push	{r7, lr}
 80056ba:	b086      	sub	sp, #24
 80056bc:	af00      	add	r7, sp, #0
 80056be:	6078      	str	r0, [r7, #4]
 80056c0:	6039      	str	r1, [r7, #0]
 80056c2:	687b      	ldr	r3, [r7, #4]
 80056c4:	681b      	ldr	r3, [r3, #0]
 80056c6:	617b      	str	r3, [r7, #20]
 80056c8:	697b      	ldr	r3, [r7, #20]
 80056ca:	613b      	str	r3, [r7, #16]
 80056cc:	697b      	ldr	r3, [r7, #20]
 80056ce:	333c      	adds	r3, #60	; 0x3c
 80056d0:	3304      	adds	r3, #4
 80056d2:	681b      	ldr	r3, [r3, #0]
 80056d4:	60fb      	str	r3, [r7, #12]
 80056d6:	683b      	ldr	r3, [r7, #0]
 80056d8:	015a      	lsls	r2, r3, #5
 80056da:	693b      	ldr	r3, [r7, #16]
 80056dc:	4413      	add	r3, r2
 80056de:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80056e2:	689b      	ldr	r3, [r3, #8]
 80056e4:	60bb      	str	r3, [r7, #8]
 80056e6:	68fb      	ldr	r3, [r7, #12]
 80056e8:	4a15      	ldr	r2, [pc, #84]	; (8005740 <PCD_EP_OutSetupPacket_int+0x88>)
 80056ea:	4293      	cmp	r3, r2
 80056ec:	d90e      	bls.n	800570c <PCD_EP_OutSetupPacket_int+0x54>
 80056ee:	68bb      	ldr	r3, [r7, #8]
 80056f0:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80056f4:	2b00      	cmp	r3, #0
 80056f6:	d009      	beq.n	800570c <PCD_EP_OutSetupPacket_int+0x54>
 80056f8:	683b      	ldr	r3, [r7, #0]
 80056fa:	015a      	lsls	r2, r3, #5
 80056fc:	693b      	ldr	r3, [r7, #16]
 80056fe:	4413      	add	r3, r2
 8005700:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005704:	461a      	mov	r2, r3
 8005706:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800570a:	6093      	str	r3, [r2, #8]
 800570c:	6878      	ldr	r0, [r7, #4]
 800570e:	f006 fcb7 	bl	800c080 <HAL_PCD_SetupStageCallback>
 8005712:	68fb      	ldr	r3, [r7, #12]
 8005714:	4a0a      	ldr	r2, [pc, #40]	; (8005740 <PCD_EP_OutSetupPacket_int+0x88>)
 8005716:	4293      	cmp	r3, r2
 8005718:	d90c      	bls.n	8005734 <PCD_EP_OutSetupPacket_int+0x7c>
 800571a:	687b      	ldr	r3, [r7, #4]
 800571c:	691b      	ldr	r3, [r3, #16]
 800571e:	2b01      	cmp	r3, #1
 8005720:	d108      	bne.n	8005734 <PCD_EP_OutSetupPacket_int+0x7c>
 8005722:	687b      	ldr	r3, [r7, #4]
 8005724:	6818      	ldr	r0, [r3, #0]
 8005726:	687b      	ldr	r3, [r7, #4]
 8005728:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 800572c:	461a      	mov	r2, r3
 800572e:	2101      	movs	r1, #1
 8005730:	f003 fe28 	bl	8009384 <USB_EP0_OutStart>
 8005734:	2300      	movs	r3, #0
 8005736:	4618      	mov	r0, r3
 8005738:	3718      	adds	r7, #24
 800573a:	46bd      	mov	sp, r7
 800573c:	bd80      	pop	{r7, pc}
 800573e:	bf00      	nop
 8005740:	4f54300a 	.word	0x4f54300a

08005744 <HAL_PCDEx_SetTxFiFo>:
 8005744:	b480      	push	{r7}
 8005746:	b085      	sub	sp, #20
 8005748:	af00      	add	r7, sp, #0
 800574a:	6078      	str	r0, [r7, #4]
 800574c:	460b      	mov	r3, r1
 800574e:	70fb      	strb	r3, [r7, #3]
 8005750:	4613      	mov	r3, r2
 8005752:	803b      	strh	r3, [r7, #0]
 8005754:	687b      	ldr	r3, [r7, #4]
 8005756:	681b      	ldr	r3, [r3, #0]
 8005758:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800575a:	60bb      	str	r3, [r7, #8]
 800575c:	78fb      	ldrb	r3, [r7, #3]
 800575e:	2b00      	cmp	r3, #0
 8005760:	d107      	bne.n	8005772 <HAL_PCDEx_SetTxFiFo+0x2e>
 8005762:	883b      	ldrh	r3, [r7, #0]
 8005764:	0419      	lsls	r1, r3, #16
 8005766:	687b      	ldr	r3, [r7, #4]
 8005768:	681b      	ldr	r3, [r3, #0]
 800576a:	68ba      	ldr	r2, [r7, #8]
 800576c:	430a      	orrs	r2, r1
 800576e:	629a      	str	r2, [r3, #40]	; 0x28
 8005770:	e028      	b.n	80057c4 <HAL_PCDEx_SetTxFiFo+0x80>
 8005772:	687b      	ldr	r3, [r7, #4]
 8005774:	681b      	ldr	r3, [r3, #0]
 8005776:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005778:	0c1b      	lsrs	r3, r3, #16
 800577a:	68ba      	ldr	r2, [r7, #8]
 800577c:	4413      	add	r3, r2
 800577e:	60bb      	str	r3, [r7, #8]
 8005780:	2300      	movs	r3, #0
 8005782:	73fb      	strb	r3, [r7, #15]
 8005784:	e00d      	b.n	80057a2 <HAL_PCDEx_SetTxFiFo+0x5e>
 8005786:	687b      	ldr	r3, [r7, #4]
 8005788:	681a      	ldr	r2, [r3, #0]
 800578a:	7bfb      	ldrb	r3, [r7, #15]
 800578c:	3340      	adds	r3, #64	; 0x40
 800578e:	009b      	lsls	r3, r3, #2
 8005790:	4413      	add	r3, r2
 8005792:	685b      	ldr	r3, [r3, #4]
 8005794:	0c1b      	lsrs	r3, r3, #16
 8005796:	68ba      	ldr	r2, [r7, #8]
 8005798:	4413      	add	r3, r2
 800579a:	60bb      	str	r3, [r7, #8]
 800579c:	7bfb      	ldrb	r3, [r7, #15]
 800579e:	3301      	adds	r3, #1
 80057a0:	73fb      	strb	r3, [r7, #15]
 80057a2:	7bfa      	ldrb	r2, [r7, #15]
 80057a4:	78fb      	ldrb	r3, [r7, #3]
 80057a6:	3b01      	subs	r3, #1
 80057a8:	429a      	cmp	r2, r3
 80057aa:	d3ec      	bcc.n	8005786 <HAL_PCDEx_SetTxFiFo+0x42>
 80057ac:	883b      	ldrh	r3, [r7, #0]
 80057ae:	0418      	lsls	r0, r3, #16
 80057b0:	687b      	ldr	r3, [r7, #4]
 80057b2:	6819      	ldr	r1, [r3, #0]
 80057b4:	78fb      	ldrb	r3, [r7, #3]
 80057b6:	3b01      	subs	r3, #1
 80057b8:	68ba      	ldr	r2, [r7, #8]
 80057ba:	4302      	orrs	r2, r0
 80057bc:	3340      	adds	r3, #64	; 0x40
 80057be:	009b      	lsls	r3, r3, #2
 80057c0:	440b      	add	r3, r1
 80057c2:	605a      	str	r2, [r3, #4]
 80057c4:	2300      	movs	r3, #0
 80057c6:	4618      	mov	r0, r3
 80057c8:	3714      	adds	r7, #20
 80057ca:	46bd      	mov	sp, r7
 80057cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057d0:	4770      	bx	lr

080057d2 <HAL_PCDEx_SetRxFiFo>:
 80057d2:	b480      	push	{r7}
 80057d4:	b083      	sub	sp, #12
 80057d6:	af00      	add	r7, sp, #0
 80057d8:	6078      	str	r0, [r7, #4]
 80057da:	460b      	mov	r3, r1
 80057dc:	807b      	strh	r3, [r7, #2]
 80057de:	687b      	ldr	r3, [r7, #4]
 80057e0:	681b      	ldr	r3, [r3, #0]
 80057e2:	887a      	ldrh	r2, [r7, #2]
 80057e4:	625a      	str	r2, [r3, #36]	; 0x24
 80057e6:	2300      	movs	r3, #0
 80057e8:	4618      	mov	r0, r3
 80057ea:	370c      	adds	r7, #12
 80057ec:	46bd      	mov	sp, r7
 80057ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057f2:	4770      	bx	lr

080057f4 <HAL_PCDEx_LPM_Callback>:
 80057f4:	b480      	push	{r7}
 80057f6:	b083      	sub	sp, #12
 80057f8:	af00      	add	r7, sp, #0
 80057fa:	6078      	str	r0, [r7, #4]
 80057fc:	460b      	mov	r3, r1
 80057fe:	70fb      	strb	r3, [r7, #3]
 8005800:	bf00      	nop
 8005802:	370c      	adds	r7, #12
 8005804:	46bd      	mov	sp, r7
 8005806:	f85d 7b04 	ldr.w	r7, [sp], #4
 800580a:	4770      	bx	lr

0800580c <HAL_RCC_OscConfig>:
 800580c:	b580      	push	{r7, lr}
 800580e:	b086      	sub	sp, #24
 8005810:	af00      	add	r7, sp, #0
 8005812:	6078      	str	r0, [r7, #4]
 8005814:	687b      	ldr	r3, [r7, #4]
 8005816:	2b00      	cmp	r3, #0
 8005818:	d101      	bne.n	800581e <HAL_RCC_OscConfig+0x12>
 800581a:	2301      	movs	r3, #1
 800581c:	e267      	b.n	8005cee <HAL_RCC_OscConfig+0x4e2>
 800581e:	687b      	ldr	r3, [r7, #4]
 8005820:	681b      	ldr	r3, [r3, #0]
 8005822:	f003 0301 	and.w	r3, r3, #1
 8005826:	2b00      	cmp	r3, #0
 8005828:	d075      	beq.n	8005916 <HAL_RCC_OscConfig+0x10a>
 800582a:	4b88      	ldr	r3, [pc, #544]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 800582c:	689b      	ldr	r3, [r3, #8]
 800582e:	f003 030c 	and.w	r3, r3, #12
 8005832:	2b04      	cmp	r3, #4
 8005834:	d00c      	beq.n	8005850 <HAL_RCC_OscConfig+0x44>
 8005836:	4b85      	ldr	r3, [pc, #532]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 8005838:	689b      	ldr	r3, [r3, #8]
 800583a:	f003 030c 	and.w	r3, r3, #12
 800583e:	2b08      	cmp	r3, #8
 8005840:	d112      	bne.n	8005868 <HAL_RCC_OscConfig+0x5c>
 8005842:	4b82      	ldr	r3, [pc, #520]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 8005844:	685b      	ldr	r3, [r3, #4]
 8005846:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800584a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800584e:	d10b      	bne.n	8005868 <HAL_RCC_OscConfig+0x5c>
 8005850:	4b7e      	ldr	r3, [pc, #504]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 8005852:	681b      	ldr	r3, [r3, #0]
 8005854:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005858:	2b00      	cmp	r3, #0
 800585a:	d05b      	beq.n	8005914 <HAL_RCC_OscConfig+0x108>
 800585c:	687b      	ldr	r3, [r7, #4]
 800585e:	685b      	ldr	r3, [r3, #4]
 8005860:	2b00      	cmp	r3, #0
 8005862:	d157      	bne.n	8005914 <HAL_RCC_OscConfig+0x108>
 8005864:	2301      	movs	r3, #1
 8005866:	e242      	b.n	8005cee <HAL_RCC_OscConfig+0x4e2>
 8005868:	687b      	ldr	r3, [r7, #4]
 800586a:	685b      	ldr	r3, [r3, #4]
 800586c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005870:	d106      	bne.n	8005880 <HAL_RCC_OscConfig+0x74>
 8005872:	4b76      	ldr	r3, [pc, #472]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 8005874:	681b      	ldr	r3, [r3, #0]
 8005876:	4a75      	ldr	r2, [pc, #468]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 8005878:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800587c:	6013      	str	r3, [r2, #0]
 800587e:	e01d      	b.n	80058bc <HAL_RCC_OscConfig+0xb0>
 8005880:	687b      	ldr	r3, [r7, #4]
 8005882:	685b      	ldr	r3, [r3, #4]
 8005884:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8005888:	d10c      	bne.n	80058a4 <HAL_RCC_OscConfig+0x98>
 800588a:	4b70      	ldr	r3, [pc, #448]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 800588c:	681b      	ldr	r3, [r3, #0]
 800588e:	4a6f      	ldr	r2, [pc, #444]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 8005890:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8005894:	6013      	str	r3, [r2, #0]
 8005896:	4b6d      	ldr	r3, [pc, #436]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 8005898:	681b      	ldr	r3, [r3, #0]
 800589a:	4a6c      	ldr	r2, [pc, #432]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 800589c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80058a0:	6013      	str	r3, [r2, #0]
 80058a2:	e00b      	b.n	80058bc <HAL_RCC_OscConfig+0xb0>
 80058a4:	4b69      	ldr	r3, [pc, #420]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 80058a6:	681b      	ldr	r3, [r3, #0]
 80058a8:	4a68      	ldr	r2, [pc, #416]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 80058aa:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80058ae:	6013      	str	r3, [r2, #0]
 80058b0:	4b66      	ldr	r3, [pc, #408]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 80058b2:	681b      	ldr	r3, [r3, #0]
 80058b4:	4a65      	ldr	r2, [pc, #404]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 80058b6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80058ba:	6013      	str	r3, [r2, #0]
 80058bc:	687b      	ldr	r3, [r7, #4]
 80058be:	685b      	ldr	r3, [r3, #4]
 80058c0:	2b00      	cmp	r3, #0
 80058c2:	d013      	beq.n	80058ec <HAL_RCC_OscConfig+0xe0>
 80058c4:	f7fd fac6 	bl	8002e54 <HAL_GetTick>
 80058c8:	6138      	str	r0, [r7, #16]
 80058ca:	e008      	b.n	80058de <HAL_RCC_OscConfig+0xd2>
 80058cc:	f7fd fac2 	bl	8002e54 <HAL_GetTick>
 80058d0:	4602      	mov	r2, r0
 80058d2:	693b      	ldr	r3, [r7, #16]
 80058d4:	1ad3      	subs	r3, r2, r3
 80058d6:	2b64      	cmp	r3, #100	; 0x64
 80058d8:	d901      	bls.n	80058de <HAL_RCC_OscConfig+0xd2>
 80058da:	2303      	movs	r3, #3
 80058dc:	e207      	b.n	8005cee <HAL_RCC_OscConfig+0x4e2>
 80058de:	4b5b      	ldr	r3, [pc, #364]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 80058e0:	681b      	ldr	r3, [r3, #0]
 80058e2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80058e6:	2b00      	cmp	r3, #0
 80058e8:	d0f0      	beq.n	80058cc <HAL_RCC_OscConfig+0xc0>
 80058ea:	e014      	b.n	8005916 <HAL_RCC_OscConfig+0x10a>
 80058ec:	f7fd fab2 	bl	8002e54 <HAL_GetTick>
 80058f0:	6138      	str	r0, [r7, #16]
 80058f2:	e008      	b.n	8005906 <HAL_RCC_OscConfig+0xfa>
 80058f4:	f7fd faae 	bl	8002e54 <HAL_GetTick>
 80058f8:	4602      	mov	r2, r0
 80058fa:	693b      	ldr	r3, [r7, #16]
 80058fc:	1ad3      	subs	r3, r2, r3
 80058fe:	2b64      	cmp	r3, #100	; 0x64
 8005900:	d901      	bls.n	8005906 <HAL_RCC_OscConfig+0xfa>
 8005902:	2303      	movs	r3, #3
 8005904:	e1f3      	b.n	8005cee <HAL_RCC_OscConfig+0x4e2>
 8005906:	4b51      	ldr	r3, [pc, #324]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 8005908:	681b      	ldr	r3, [r3, #0]
 800590a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800590e:	2b00      	cmp	r3, #0
 8005910:	d1f0      	bne.n	80058f4 <HAL_RCC_OscConfig+0xe8>
 8005912:	e000      	b.n	8005916 <HAL_RCC_OscConfig+0x10a>
 8005914:	bf00      	nop
 8005916:	687b      	ldr	r3, [r7, #4]
 8005918:	681b      	ldr	r3, [r3, #0]
 800591a:	f003 0302 	and.w	r3, r3, #2
 800591e:	2b00      	cmp	r3, #0
 8005920:	d063      	beq.n	80059ea <HAL_RCC_OscConfig+0x1de>
 8005922:	4b4a      	ldr	r3, [pc, #296]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 8005924:	689b      	ldr	r3, [r3, #8]
 8005926:	f003 030c 	and.w	r3, r3, #12
 800592a:	2b00      	cmp	r3, #0
 800592c:	d00b      	beq.n	8005946 <HAL_RCC_OscConfig+0x13a>
 800592e:	4b47      	ldr	r3, [pc, #284]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 8005930:	689b      	ldr	r3, [r3, #8]
 8005932:	f003 030c 	and.w	r3, r3, #12
 8005936:	2b08      	cmp	r3, #8
 8005938:	d11c      	bne.n	8005974 <HAL_RCC_OscConfig+0x168>
 800593a:	4b44      	ldr	r3, [pc, #272]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 800593c:	685b      	ldr	r3, [r3, #4]
 800593e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005942:	2b00      	cmp	r3, #0
 8005944:	d116      	bne.n	8005974 <HAL_RCC_OscConfig+0x168>
 8005946:	4b41      	ldr	r3, [pc, #260]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 8005948:	681b      	ldr	r3, [r3, #0]
 800594a:	f003 0302 	and.w	r3, r3, #2
 800594e:	2b00      	cmp	r3, #0
 8005950:	d005      	beq.n	800595e <HAL_RCC_OscConfig+0x152>
 8005952:	687b      	ldr	r3, [r7, #4]
 8005954:	68db      	ldr	r3, [r3, #12]
 8005956:	2b01      	cmp	r3, #1
 8005958:	d001      	beq.n	800595e <HAL_RCC_OscConfig+0x152>
 800595a:	2301      	movs	r3, #1
 800595c:	e1c7      	b.n	8005cee <HAL_RCC_OscConfig+0x4e2>
 800595e:	4b3b      	ldr	r3, [pc, #236]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 8005960:	681b      	ldr	r3, [r3, #0]
 8005962:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8005966:	687b      	ldr	r3, [r7, #4]
 8005968:	691b      	ldr	r3, [r3, #16]
 800596a:	00db      	lsls	r3, r3, #3
 800596c:	4937      	ldr	r1, [pc, #220]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 800596e:	4313      	orrs	r3, r2
 8005970:	600b      	str	r3, [r1, #0]
 8005972:	e03a      	b.n	80059ea <HAL_RCC_OscConfig+0x1de>
 8005974:	687b      	ldr	r3, [r7, #4]
 8005976:	68db      	ldr	r3, [r3, #12]
 8005978:	2b00      	cmp	r3, #0
 800597a:	d020      	beq.n	80059be <HAL_RCC_OscConfig+0x1b2>
 800597c:	4b34      	ldr	r3, [pc, #208]	; (8005a50 <HAL_RCC_OscConfig+0x244>)
 800597e:	2201      	movs	r2, #1
 8005980:	601a      	str	r2, [r3, #0]
 8005982:	f7fd fa67 	bl	8002e54 <HAL_GetTick>
 8005986:	6138      	str	r0, [r7, #16]
 8005988:	e008      	b.n	800599c <HAL_RCC_OscConfig+0x190>
 800598a:	f7fd fa63 	bl	8002e54 <HAL_GetTick>
 800598e:	4602      	mov	r2, r0
 8005990:	693b      	ldr	r3, [r7, #16]
 8005992:	1ad3      	subs	r3, r2, r3
 8005994:	2b02      	cmp	r3, #2
 8005996:	d901      	bls.n	800599c <HAL_RCC_OscConfig+0x190>
 8005998:	2303      	movs	r3, #3
 800599a:	e1a8      	b.n	8005cee <HAL_RCC_OscConfig+0x4e2>
 800599c:	4b2b      	ldr	r3, [pc, #172]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 800599e:	681b      	ldr	r3, [r3, #0]
 80059a0:	f003 0302 	and.w	r3, r3, #2
 80059a4:	2b00      	cmp	r3, #0
 80059a6:	d0f0      	beq.n	800598a <HAL_RCC_OscConfig+0x17e>
 80059a8:	4b28      	ldr	r3, [pc, #160]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 80059aa:	681b      	ldr	r3, [r3, #0]
 80059ac:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80059b0:	687b      	ldr	r3, [r7, #4]
 80059b2:	691b      	ldr	r3, [r3, #16]
 80059b4:	00db      	lsls	r3, r3, #3
 80059b6:	4925      	ldr	r1, [pc, #148]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 80059b8:	4313      	orrs	r3, r2
 80059ba:	600b      	str	r3, [r1, #0]
 80059bc:	e015      	b.n	80059ea <HAL_RCC_OscConfig+0x1de>
 80059be:	4b24      	ldr	r3, [pc, #144]	; (8005a50 <HAL_RCC_OscConfig+0x244>)
 80059c0:	2200      	movs	r2, #0
 80059c2:	601a      	str	r2, [r3, #0]
 80059c4:	f7fd fa46 	bl	8002e54 <HAL_GetTick>
 80059c8:	6138      	str	r0, [r7, #16]
 80059ca:	e008      	b.n	80059de <HAL_RCC_OscConfig+0x1d2>
 80059cc:	f7fd fa42 	bl	8002e54 <HAL_GetTick>
 80059d0:	4602      	mov	r2, r0
 80059d2:	693b      	ldr	r3, [r7, #16]
 80059d4:	1ad3      	subs	r3, r2, r3
 80059d6:	2b02      	cmp	r3, #2
 80059d8:	d901      	bls.n	80059de <HAL_RCC_OscConfig+0x1d2>
 80059da:	2303      	movs	r3, #3
 80059dc:	e187      	b.n	8005cee <HAL_RCC_OscConfig+0x4e2>
 80059de:	4b1b      	ldr	r3, [pc, #108]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 80059e0:	681b      	ldr	r3, [r3, #0]
 80059e2:	f003 0302 	and.w	r3, r3, #2
 80059e6:	2b00      	cmp	r3, #0
 80059e8:	d1f0      	bne.n	80059cc <HAL_RCC_OscConfig+0x1c0>
 80059ea:	687b      	ldr	r3, [r7, #4]
 80059ec:	681b      	ldr	r3, [r3, #0]
 80059ee:	f003 0308 	and.w	r3, r3, #8
 80059f2:	2b00      	cmp	r3, #0
 80059f4:	d036      	beq.n	8005a64 <HAL_RCC_OscConfig+0x258>
 80059f6:	687b      	ldr	r3, [r7, #4]
 80059f8:	695b      	ldr	r3, [r3, #20]
 80059fa:	2b00      	cmp	r3, #0
 80059fc:	d016      	beq.n	8005a2c <HAL_RCC_OscConfig+0x220>
 80059fe:	4b15      	ldr	r3, [pc, #84]	; (8005a54 <HAL_RCC_OscConfig+0x248>)
 8005a00:	2201      	movs	r2, #1
 8005a02:	601a      	str	r2, [r3, #0]
 8005a04:	f7fd fa26 	bl	8002e54 <HAL_GetTick>
 8005a08:	6138      	str	r0, [r7, #16]
 8005a0a:	e008      	b.n	8005a1e <HAL_RCC_OscConfig+0x212>
 8005a0c:	f7fd fa22 	bl	8002e54 <HAL_GetTick>
 8005a10:	4602      	mov	r2, r0
 8005a12:	693b      	ldr	r3, [r7, #16]
 8005a14:	1ad3      	subs	r3, r2, r3
 8005a16:	2b02      	cmp	r3, #2
 8005a18:	d901      	bls.n	8005a1e <HAL_RCC_OscConfig+0x212>
 8005a1a:	2303      	movs	r3, #3
 8005a1c:	e167      	b.n	8005cee <HAL_RCC_OscConfig+0x4e2>
 8005a1e:	4b0b      	ldr	r3, [pc, #44]	; (8005a4c <HAL_RCC_OscConfig+0x240>)
 8005a20:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005a22:	f003 0302 	and.w	r3, r3, #2
 8005a26:	2b00      	cmp	r3, #0
 8005a28:	d0f0      	beq.n	8005a0c <HAL_RCC_OscConfig+0x200>
 8005a2a:	e01b      	b.n	8005a64 <HAL_RCC_OscConfig+0x258>
 8005a2c:	4b09      	ldr	r3, [pc, #36]	; (8005a54 <HAL_RCC_OscConfig+0x248>)
 8005a2e:	2200      	movs	r2, #0
 8005a30:	601a      	str	r2, [r3, #0]
 8005a32:	f7fd fa0f 	bl	8002e54 <HAL_GetTick>
 8005a36:	6138      	str	r0, [r7, #16]
 8005a38:	e00e      	b.n	8005a58 <HAL_RCC_OscConfig+0x24c>
 8005a3a:	f7fd fa0b 	bl	8002e54 <HAL_GetTick>
 8005a3e:	4602      	mov	r2, r0
 8005a40:	693b      	ldr	r3, [r7, #16]
 8005a42:	1ad3      	subs	r3, r2, r3
 8005a44:	2b02      	cmp	r3, #2
 8005a46:	d907      	bls.n	8005a58 <HAL_RCC_OscConfig+0x24c>
 8005a48:	2303      	movs	r3, #3
 8005a4a:	e150      	b.n	8005cee <HAL_RCC_OscConfig+0x4e2>
 8005a4c:	40023800 	.word	0x40023800
 8005a50:	42470000 	.word	0x42470000
 8005a54:	42470e80 	.word	0x42470e80
 8005a58:	4b88      	ldr	r3, [pc, #544]	; (8005c7c <HAL_RCC_OscConfig+0x470>)
 8005a5a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005a5c:	f003 0302 	and.w	r3, r3, #2
 8005a60:	2b00      	cmp	r3, #0
 8005a62:	d1ea      	bne.n	8005a3a <HAL_RCC_OscConfig+0x22e>
 8005a64:	687b      	ldr	r3, [r7, #4]
 8005a66:	681b      	ldr	r3, [r3, #0]
 8005a68:	f003 0304 	and.w	r3, r3, #4
 8005a6c:	2b00      	cmp	r3, #0
 8005a6e:	f000 8097 	beq.w	8005ba0 <HAL_RCC_OscConfig+0x394>
 8005a72:	2300      	movs	r3, #0
 8005a74:	75fb      	strb	r3, [r7, #23]
 8005a76:	4b81      	ldr	r3, [pc, #516]	; (8005c7c <HAL_RCC_OscConfig+0x470>)
 8005a78:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005a7a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005a7e:	2b00      	cmp	r3, #0
 8005a80:	d10f      	bne.n	8005aa2 <HAL_RCC_OscConfig+0x296>
 8005a82:	2300      	movs	r3, #0
 8005a84:	60bb      	str	r3, [r7, #8]
 8005a86:	4b7d      	ldr	r3, [pc, #500]	; (8005c7c <HAL_RCC_OscConfig+0x470>)
 8005a88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005a8a:	4a7c      	ldr	r2, [pc, #496]	; (8005c7c <HAL_RCC_OscConfig+0x470>)
 8005a8c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005a90:	6413      	str	r3, [r2, #64]	; 0x40
 8005a92:	4b7a      	ldr	r3, [pc, #488]	; (8005c7c <HAL_RCC_OscConfig+0x470>)
 8005a94:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005a96:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005a9a:	60bb      	str	r3, [r7, #8]
 8005a9c:	68bb      	ldr	r3, [r7, #8]
 8005a9e:	2301      	movs	r3, #1
 8005aa0:	75fb      	strb	r3, [r7, #23]
 8005aa2:	4b77      	ldr	r3, [pc, #476]	; (8005c80 <HAL_RCC_OscConfig+0x474>)
 8005aa4:	681b      	ldr	r3, [r3, #0]
 8005aa6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005aaa:	2b00      	cmp	r3, #0
 8005aac:	d118      	bne.n	8005ae0 <HAL_RCC_OscConfig+0x2d4>
 8005aae:	4b74      	ldr	r3, [pc, #464]	; (8005c80 <HAL_RCC_OscConfig+0x474>)
 8005ab0:	681b      	ldr	r3, [r3, #0]
 8005ab2:	4a73      	ldr	r2, [pc, #460]	; (8005c80 <HAL_RCC_OscConfig+0x474>)
 8005ab4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005ab8:	6013      	str	r3, [r2, #0]
 8005aba:	f7fd f9cb 	bl	8002e54 <HAL_GetTick>
 8005abe:	6138      	str	r0, [r7, #16]
 8005ac0:	e008      	b.n	8005ad4 <HAL_RCC_OscConfig+0x2c8>
 8005ac2:	f7fd f9c7 	bl	8002e54 <HAL_GetTick>
 8005ac6:	4602      	mov	r2, r0
 8005ac8:	693b      	ldr	r3, [r7, #16]
 8005aca:	1ad3      	subs	r3, r2, r3
 8005acc:	2b02      	cmp	r3, #2
 8005ace:	d901      	bls.n	8005ad4 <HAL_RCC_OscConfig+0x2c8>
 8005ad0:	2303      	movs	r3, #3
 8005ad2:	e10c      	b.n	8005cee <HAL_RCC_OscConfig+0x4e2>
 8005ad4:	4b6a      	ldr	r3, [pc, #424]	; (8005c80 <HAL_RCC_OscConfig+0x474>)
 8005ad6:	681b      	ldr	r3, [r3, #0]
 8005ad8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005adc:	2b00      	cmp	r3, #0
 8005ade:	d0f0      	beq.n	8005ac2 <HAL_RCC_OscConfig+0x2b6>
 8005ae0:	687b      	ldr	r3, [r7, #4]
 8005ae2:	689b      	ldr	r3, [r3, #8]
 8005ae4:	2b01      	cmp	r3, #1
 8005ae6:	d106      	bne.n	8005af6 <HAL_RCC_OscConfig+0x2ea>
 8005ae8:	4b64      	ldr	r3, [pc, #400]	; (8005c7c <HAL_RCC_OscConfig+0x470>)
 8005aea:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005aec:	4a63      	ldr	r2, [pc, #396]	; (8005c7c <HAL_RCC_OscConfig+0x470>)
 8005aee:	f043 0301 	orr.w	r3, r3, #1
 8005af2:	6713      	str	r3, [r2, #112]	; 0x70
 8005af4:	e01c      	b.n	8005b30 <HAL_RCC_OscConfig+0x324>
 8005af6:	687b      	ldr	r3, [r7, #4]
 8005af8:	689b      	ldr	r3, [r3, #8]
 8005afa:	2b05      	cmp	r3, #5
 8005afc:	d10c      	bne.n	8005b18 <HAL_RCC_OscConfig+0x30c>
 8005afe:	4b5f      	ldr	r3, [pc, #380]	; (8005c7c <HAL_RCC_OscConfig+0x470>)
 8005b00:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005b02:	4a5e      	ldr	r2, [pc, #376]	; (8005c7c <HAL_RCC_OscConfig+0x470>)
 8005b04:	f043 0304 	orr.w	r3, r3, #4
 8005b08:	6713      	str	r3, [r2, #112]	; 0x70
 8005b0a:	4b5c      	ldr	r3, [pc, #368]	; (8005c7c <HAL_RCC_OscConfig+0x470>)
 8005b0c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005b0e:	4a5b      	ldr	r2, [pc, #364]	; (8005c7c <HAL_RCC_OscConfig+0x470>)
 8005b10:	f043 0301 	orr.w	r3, r3, #1
 8005b14:	6713      	str	r3, [r2, #112]	; 0x70
 8005b16:	e00b      	b.n	8005b30 <HAL_RCC_OscConfig+0x324>
 8005b18:	4b58      	ldr	r3, [pc, #352]	; (8005c7c <HAL_RCC_OscConfig+0x470>)
 8005b1a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005b1c:	4a57      	ldr	r2, [pc, #348]	; (8005c7c <HAL_RCC_OscConfig+0x470>)
 8005b1e:	f023 0301 	bic.w	r3, r3, #1
 8005b22:	6713      	str	r3, [r2, #112]	; 0x70
 8005b24:	4b55      	ldr	r3, [pc, #340]	; (8005c7c <HAL_RCC_OscConfig+0x470>)
 8005b26:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005b28:	4a54      	ldr	r2, [pc, #336]	; (8005c7c <HAL_RCC_OscConfig+0x470>)
 8005b2a:	f023 0304 	bic.w	r3, r3, #4
 8005b2e:	6713      	str	r3, [r2, #112]	; 0x70
 8005b30:	687b      	ldr	r3, [r7, #4]
 8005b32:	689b      	ldr	r3, [r3, #8]
 8005b34:	2b00      	cmp	r3, #0
 8005b36:	d015      	beq.n	8005b64 <HAL_RCC_OscConfig+0x358>
 8005b38:	f7fd f98c 	bl	8002e54 <HAL_GetTick>
 8005b3c:	6138      	str	r0, [r7, #16]
 8005b3e:	e00a      	b.n	8005b56 <HAL_RCC_OscConfig+0x34a>
 8005b40:	f7fd f988 	bl	8002e54 <HAL_GetTick>
 8005b44:	4602      	mov	r2, r0
 8005b46:	693b      	ldr	r3, [r7, #16]
 8005b48:	1ad3      	subs	r3, r2, r3
 8005b4a:	f241 3288 	movw	r2, #5000	; 0x1388
 8005b4e:	4293      	cmp	r3, r2
 8005b50:	d901      	bls.n	8005b56 <HAL_RCC_OscConfig+0x34a>
 8005b52:	2303      	movs	r3, #3
 8005b54:	e0cb      	b.n	8005cee <HAL_RCC_OscConfig+0x4e2>
 8005b56:	4b49      	ldr	r3, [pc, #292]	; (8005c7c <HAL_RCC_OscConfig+0x470>)
 8005b58:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005b5a:	f003 0302 	and.w	r3, r3, #2
 8005b5e:	2b00      	cmp	r3, #0
 8005b60:	d0ee      	beq.n	8005b40 <HAL_RCC_OscConfig+0x334>
 8005b62:	e014      	b.n	8005b8e <HAL_RCC_OscConfig+0x382>
 8005b64:	f7fd f976 	bl	8002e54 <HAL_GetTick>
 8005b68:	6138      	str	r0, [r7, #16]
 8005b6a:	e00a      	b.n	8005b82 <HAL_RCC_OscConfig+0x376>
 8005b6c:	f7fd f972 	bl	8002e54 <HAL_GetTick>
 8005b70:	4602      	mov	r2, r0
 8005b72:	693b      	ldr	r3, [r7, #16]
 8005b74:	1ad3      	subs	r3, r2, r3
 8005b76:	f241 3288 	movw	r2, #5000	; 0x1388
 8005b7a:	4293      	cmp	r3, r2
 8005b7c:	d901      	bls.n	8005b82 <HAL_RCC_OscConfig+0x376>
 8005b7e:	2303      	movs	r3, #3
 8005b80:	e0b5      	b.n	8005cee <HAL_RCC_OscConfig+0x4e2>
 8005b82:	4b3e      	ldr	r3, [pc, #248]	; (8005c7c <HAL_RCC_OscConfig+0x470>)
 8005b84:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005b86:	f003 0302 	and.w	r3, r3, #2
 8005b8a:	2b00      	cmp	r3, #0
 8005b8c:	d1ee      	bne.n	8005b6c <HAL_RCC_OscConfig+0x360>
 8005b8e:	7dfb      	ldrb	r3, [r7, #23]
 8005b90:	2b01      	cmp	r3, #1
 8005b92:	d105      	bne.n	8005ba0 <HAL_RCC_OscConfig+0x394>
 8005b94:	4b39      	ldr	r3, [pc, #228]	; (8005c7c <HAL_RCC_OscConfig+0x470>)
 8005b96:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005b98:	4a38      	ldr	r2, [pc, #224]	; (8005c7c <HAL_RCC_OscConfig+0x470>)
 8005b9a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005b9e:	6413      	str	r3, [r2, #64]	; 0x40
 8005ba0:	687b      	ldr	r3, [r7, #4]
 8005ba2:	699b      	ldr	r3, [r3, #24]
 8005ba4:	2b00      	cmp	r3, #0
 8005ba6:	f000 80a1 	beq.w	8005cec <HAL_RCC_OscConfig+0x4e0>
 8005baa:	4b34      	ldr	r3, [pc, #208]	; (8005c7c <HAL_RCC_OscConfig+0x470>)
 8005bac:	689b      	ldr	r3, [r3, #8]
 8005bae:	f003 030c 	and.w	r3, r3, #12
 8005bb2:	2b08      	cmp	r3, #8
 8005bb4:	d05c      	beq.n	8005c70 <HAL_RCC_OscConfig+0x464>
 8005bb6:	687b      	ldr	r3, [r7, #4]
 8005bb8:	699b      	ldr	r3, [r3, #24]
 8005bba:	2b02      	cmp	r3, #2
 8005bbc:	d141      	bne.n	8005c42 <HAL_RCC_OscConfig+0x436>
 8005bbe:	4b31      	ldr	r3, [pc, #196]	; (8005c84 <HAL_RCC_OscConfig+0x478>)
 8005bc0:	2200      	movs	r2, #0
 8005bc2:	601a      	str	r2, [r3, #0]
 8005bc4:	f7fd f946 	bl	8002e54 <HAL_GetTick>
 8005bc8:	6138      	str	r0, [r7, #16]
 8005bca:	e008      	b.n	8005bde <HAL_RCC_OscConfig+0x3d2>
 8005bcc:	f7fd f942 	bl	8002e54 <HAL_GetTick>
 8005bd0:	4602      	mov	r2, r0
 8005bd2:	693b      	ldr	r3, [r7, #16]
 8005bd4:	1ad3      	subs	r3, r2, r3
 8005bd6:	2b02      	cmp	r3, #2
 8005bd8:	d901      	bls.n	8005bde <HAL_RCC_OscConfig+0x3d2>
 8005bda:	2303      	movs	r3, #3
 8005bdc:	e087      	b.n	8005cee <HAL_RCC_OscConfig+0x4e2>
 8005bde:	4b27      	ldr	r3, [pc, #156]	; (8005c7c <HAL_RCC_OscConfig+0x470>)
 8005be0:	681b      	ldr	r3, [r3, #0]
 8005be2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005be6:	2b00      	cmp	r3, #0
 8005be8:	d1f0      	bne.n	8005bcc <HAL_RCC_OscConfig+0x3c0>
 8005bea:	687b      	ldr	r3, [r7, #4]
 8005bec:	69da      	ldr	r2, [r3, #28]
 8005bee:	687b      	ldr	r3, [r7, #4]
 8005bf0:	6a1b      	ldr	r3, [r3, #32]
 8005bf2:	431a      	orrs	r2, r3
 8005bf4:	687b      	ldr	r3, [r7, #4]
 8005bf6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005bf8:	019b      	lsls	r3, r3, #6
 8005bfa:	431a      	orrs	r2, r3
 8005bfc:	687b      	ldr	r3, [r7, #4]
 8005bfe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005c00:	085b      	lsrs	r3, r3, #1
 8005c02:	3b01      	subs	r3, #1
 8005c04:	041b      	lsls	r3, r3, #16
 8005c06:	431a      	orrs	r2, r3
 8005c08:	687b      	ldr	r3, [r7, #4]
 8005c0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005c0c:	061b      	lsls	r3, r3, #24
 8005c0e:	491b      	ldr	r1, [pc, #108]	; (8005c7c <HAL_RCC_OscConfig+0x470>)
 8005c10:	4313      	orrs	r3, r2
 8005c12:	604b      	str	r3, [r1, #4]
 8005c14:	4b1b      	ldr	r3, [pc, #108]	; (8005c84 <HAL_RCC_OscConfig+0x478>)
 8005c16:	2201      	movs	r2, #1
 8005c18:	601a      	str	r2, [r3, #0]
 8005c1a:	f7fd f91b 	bl	8002e54 <HAL_GetTick>
 8005c1e:	6138      	str	r0, [r7, #16]
 8005c20:	e008      	b.n	8005c34 <HAL_RCC_OscConfig+0x428>
 8005c22:	f7fd f917 	bl	8002e54 <HAL_GetTick>
 8005c26:	4602      	mov	r2, r0
 8005c28:	693b      	ldr	r3, [r7, #16]
 8005c2a:	1ad3      	subs	r3, r2, r3
 8005c2c:	2b02      	cmp	r3, #2
 8005c2e:	d901      	bls.n	8005c34 <HAL_RCC_OscConfig+0x428>
 8005c30:	2303      	movs	r3, #3
 8005c32:	e05c      	b.n	8005cee <HAL_RCC_OscConfig+0x4e2>
 8005c34:	4b11      	ldr	r3, [pc, #68]	; (8005c7c <HAL_RCC_OscConfig+0x470>)
 8005c36:	681b      	ldr	r3, [r3, #0]
 8005c38:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005c3c:	2b00      	cmp	r3, #0
 8005c3e:	d0f0      	beq.n	8005c22 <HAL_RCC_OscConfig+0x416>
 8005c40:	e054      	b.n	8005cec <HAL_RCC_OscConfig+0x4e0>
 8005c42:	4b10      	ldr	r3, [pc, #64]	; (8005c84 <HAL_RCC_OscConfig+0x478>)
 8005c44:	2200      	movs	r2, #0
 8005c46:	601a      	str	r2, [r3, #0]
 8005c48:	f7fd f904 	bl	8002e54 <HAL_GetTick>
 8005c4c:	6138      	str	r0, [r7, #16]
 8005c4e:	e008      	b.n	8005c62 <HAL_RCC_OscConfig+0x456>
 8005c50:	f7fd f900 	bl	8002e54 <HAL_GetTick>
 8005c54:	4602      	mov	r2, r0
 8005c56:	693b      	ldr	r3, [r7, #16]
 8005c58:	1ad3      	subs	r3, r2, r3
 8005c5a:	2b02      	cmp	r3, #2
 8005c5c:	d901      	bls.n	8005c62 <HAL_RCC_OscConfig+0x456>
 8005c5e:	2303      	movs	r3, #3
 8005c60:	e045      	b.n	8005cee <HAL_RCC_OscConfig+0x4e2>
 8005c62:	4b06      	ldr	r3, [pc, #24]	; (8005c7c <HAL_RCC_OscConfig+0x470>)
 8005c64:	681b      	ldr	r3, [r3, #0]
 8005c66:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005c6a:	2b00      	cmp	r3, #0
 8005c6c:	d1f0      	bne.n	8005c50 <HAL_RCC_OscConfig+0x444>
 8005c6e:	e03d      	b.n	8005cec <HAL_RCC_OscConfig+0x4e0>
 8005c70:	687b      	ldr	r3, [r7, #4]
 8005c72:	699b      	ldr	r3, [r3, #24]
 8005c74:	2b01      	cmp	r3, #1
 8005c76:	d107      	bne.n	8005c88 <HAL_RCC_OscConfig+0x47c>
 8005c78:	2301      	movs	r3, #1
 8005c7a:	e038      	b.n	8005cee <HAL_RCC_OscConfig+0x4e2>
 8005c7c:	40023800 	.word	0x40023800
 8005c80:	40007000 	.word	0x40007000
 8005c84:	42470060 	.word	0x42470060
 8005c88:	4b1b      	ldr	r3, [pc, #108]	; (8005cf8 <HAL_RCC_OscConfig+0x4ec>)
 8005c8a:	685b      	ldr	r3, [r3, #4]
 8005c8c:	60fb      	str	r3, [r7, #12]
 8005c8e:	687b      	ldr	r3, [r7, #4]
 8005c90:	699b      	ldr	r3, [r3, #24]
 8005c92:	2b01      	cmp	r3, #1
 8005c94:	d028      	beq.n	8005ce8 <HAL_RCC_OscConfig+0x4dc>
 8005c96:	68fb      	ldr	r3, [r7, #12]
 8005c98:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8005c9c:	687b      	ldr	r3, [r7, #4]
 8005c9e:	69db      	ldr	r3, [r3, #28]
 8005ca0:	429a      	cmp	r2, r3
 8005ca2:	d121      	bne.n	8005ce8 <HAL_RCC_OscConfig+0x4dc>
 8005ca4:	68fb      	ldr	r3, [r7, #12]
 8005ca6:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8005caa:	687b      	ldr	r3, [r7, #4]
 8005cac:	6a1b      	ldr	r3, [r3, #32]
 8005cae:	429a      	cmp	r2, r3
 8005cb0:	d11a      	bne.n	8005ce8 <HAL_RCC_OscConfig+0x4dc>
 8005cb2:	68fa      	ldr	r2, [r7, #12]
 8005cb4:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8005cb8:	4013      	ands	r3, r2
 8005cba:	687a      	ldr	r2, [r7, #4]
 8005cbc:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8005cbe:	0192      	lsls	r2, r2, #6
 8005cc0:	4293      	cmp	r3, r2
 8005cc2:	d111      	bne.n	8005ce8 <HAL_RCC_OscConfig+0x4dc>
 8005cc4:	68fb      	ldr	r3, [r7, #12]
 8005cc6:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8005cca:	687b      	ldr	r3, [r7, #4]
 8005ccc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005cce:	085b      	lsrs	r3, r3, #1
 8005cd0:	3b01      	subs	r3, #1
 8005cd2:	041b      	lsls	r3, r3, #16
 8005cd4:	429a      	cmp	r2, r3
 8005cd6:	d107      	bne.n	8005ce8 <HAL_RCC_OscConfig+0x4dc>
 8005cd8:	68fb      	ldr	r3, [r7, #12]
 8005cda:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8005cde:	687b      	ldr	r3, [r7, #4]
 8005ce0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005ce2:	061b      	lsls	r3, r3, #24
 8005ce4:	429a      	cmp	r2, r3
 8005ce6:	d001      	beq.n	8005cec <HAL_RCC_OscConfig+0x4e0>
 8005ce8:	2301      	movs	r3, #1
 8005cea:	e000      	b.n	8005cee <HAL_RCC_OscConfig+0x4e2>
 8005cec:	2300      	movs	r3, #0
 8005cee:	4618      	mov	r0, r3
 8005cf0:	3718      	adds	r7, #24
 8005cf2:	46bd      	mov	sp, r7
 8005cf4:	bd80      	pop	{r7, pc}
 8005cf6:	bf00      	nop
 8005cf8:	40023800 	.word	0x40023800

08005cfc <HAL_RCC_ClockConfig>:
 8005cfc:	b580      	push	{r7, lr}
 8005cfe:	b084      	sub	sp, #16
 8005d00:	af00      	add	r7, sp, #0
 8005d02:	6078      	str	r0, [r7, #4]
 8005d04:	6039      	str	r1, [r7, #0]
 8005d06:	687b      	ldr	r3, [r7, #4]
 8005d08:	2b00      	cmp	r3, #0
 8005d0a:	d101      	bne.n	8005d10 <HAL_RCC_ClockConfig+0x14>
 8005d0c:	2301      	movs	r3, #1
 8005d0e:	e0cc      	b.n	8005eaa <HAL_RCC_ClockConfig+0x1ae>
 8005d10:	4b68      	ldr	r3, [pc, #416]	; (8005eb4 <HAL_RCC_ClockConfig+0x1b8>)
 8005d12:	681b      	ldr	r3, [r3, #0]
 8005d14:	f003 0307 	and.w	r3, r3, #7
 8005d18:	683a      	ldr	r2, [r7, #0]
 8005d1a:	429a      	cmp	r2, r3
 8005d1c:	d90c      	bls.n	8005d38 <HAL_RCC_ClockConfig+0x3c>
 8005d1e:	4b65      	ldr	r3, [pc, #404]	; (8005eb4 <HAL_RCC_ClockConfig+0x1b8>)
 8005d20:	683a      	ldr	r2, [r7, #0]
 8005d22:	b2d2      	uxtb	r2, r2
 8005d24:	701a      	strb	r2, [r3, #0]
 8005d26:	4b63      	ldr	r3, [pc, #396]	; (8005eb4 <HAL_RCC_ClockConfig+0x1b8>)
 8005d28:	681b      	ldr	r3, [r3, #0]
 8005d2a:	f003 0307 	and.w	r3, r3, #7
 8005d2e:	683a      	ldr	r2, [r7, #0]
 8005d30:	429a      	cmp	r2, r3
 8005d32:	d001      	beq.n	8005d38 <HAL_RCC_ClockConfig+0x3c>
 8005d34:	2301      	movs	r3, #1
 8005d36:	e0b8      	b.n	8005eaa <HAL_RCC_ClockConfig+0x1ae>
 8005d38:	687b      	ldr	r3, [r7, #4]
 8005d3a:	681b      	ldr	r3, [r3, #0]
 8005d3c:	f003 0302 	and.w	r3, r3, #2
 8005d40:	2b00      	cmp	r3, #0
 8005d42:	d020      	beq.n	8005d86 <HAL_RCC_ClockConfig+0x8a>
 8005d44:	687b      	ldr	r3, [r7, #4]
 8005d46:	681b      	ldr	r3, [r3, #0]
 8005d48:	f003 0304 	and.w	r3, r3, #4
 8005d4c:	2b00      	cmp	r3, #0
 8005d4e:	d005      	beq.n	8005d5c <HAL_RCC_ClockConfig+0x60>
 8005d50:	4b59      	ldr	r3, [pc, #356]	; (8005eb8 <HAL_RCC_ClockConfig+0x1bc>)
 8005d52:	689b      	ldr	r3, [r3, #8]
 8005d54:	4a58      	ldr	r2, [pc, #352]	; (8005eb8 <HAL_RCC_ClockConfig+0x1bc>)
 8005d56:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8005d5a:	6093      	str	r3, [r2, #8]
 8005d5c:	687b      	ldr	r3, [r7, #4]
 8005d5e:	681b      	ldr	r3, [r3, #0]
 8005d60:	f003 0308 	and.w	r3, r3, #8
 8005d64:	2b00      	cmp	r3, #0
 8005d66:	d005      	beq.n	8005d74 <HAL_RCC_ClockConfig+0x78>
 8005d68:	4b53      	ldr	r3, [pc, #332]	; (8005eb8 <HAL_RCC_ClockConfig+0x1bc>)
 8005d6a:	689b      	ldr	r3, [r3, #8]
 8005d6c:	4a52      	ldr	r2, [pc, #328]	; (8005eb8 <HAL_RCC_ClockConfig+0x1bc>)
 8005d6e:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8005d72:	6093      	str	r3, [r2, #8]
 8005d74:	4b50      	ldr	r3, [pc, #320]	; (8005eb8 <HAL_RCC_ClockConfig+0x1bc>)
 8005d76:	689b      	ldr	r3, [r3, #8]
 8005d78:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8005d7c:	687b      	ldr	r3, [r7, #4]
 8005d7e:	689b      	ldr	r3, [r3, #8]
 8005d80:	494d      	ldr	r1, [pc, #308]	; (8005eb8 <HAL_RCC_ClockConfig+0x1bc>)
 8005d82:	4313      	orrs	r3, r2
 8005d84:	608b      	str	r3, [r1, #8]
 8005d86:	687b      	ldr	r3, [r7, #4]
 8005d88:	681b      	ldr	r3, [r3, #0]
 8005d8a:	f003 0301 	and.w	r3, r3, #1
 8005d8e:	2b00      	cmp	r3, #0
 8005d90:	d044      	beq.n	8005e1c <HAL_RCC_ClockConfig+0x120>
 8005d92:	687b      	ldr	r3, [r7, #4]
 8005d94:	685b      	ldr	r3, [r3, #4]
 8005d96:	2b01      	cmp	r3, #1
 8005d98:	d107      	bne.n	8005daa <HAL_RCC_ClockConfig+0xae>
 8005d9a:	4b47      	ldr	r3, [pc, #284]	; (8005eb8 <HAL_RCC_ClockConfig+0x1bc>)
 8005d9c:	681b      	ldr	r3, [r3, #0]
 8005d9e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005da2:	2b00      	cmp	r3, #0
 8005da4:	d119      	bne.n	8005dda <HAL_RCC_ClockConfig+0xde>
 8005da6:	2301      	movs	r3, #1
 8005da8:	e07f      	b.n	8005eaa <HAL_RCC_ClockConfig+0x1ae>
 8005daa:	687b      	ldr	r3, [r7, #4]
 8005dac:	685b      	ldr	r3, [r3, #4]
 8005dae:	2b02      	cmp	r3, #2
 8005db0:	d003      	beq.n	8005dba <HAL_RCC_ClockConfig+0xbe>
 8005db2:	687b      	ldr	r3, [r7, #4]
 8005db4:	685b      	ldr	r3, [r3, #4]
 8005db6:	2b03      	cmp	r3, #3
 8005db8:	d107      	bne.n	8005dca <HAL_RCC_ClockConfig+0xce>
 8005dba:	4b3f      	ldr	r3, [pc, #252]	; (8005eb8 <HAL_RCC_ClockConfig+0x1bc>)
 8005dbc:	681b      	ldr	r3, [r3, #0]
 8005dbe:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005dc2:	2b00      	cmp	r3, #0
 8005dc4:	d109      	bne.n	8005dda <HAL_RCC_ClockConfig+0xde>
 8005dc6:	2301      	movs	r3, #1
 8005dc8:	e06f      	b.n	8005eaa <HAL_RCC_ClockConfig+0x1ae>
 8005dca:	4b3b      	ldr	r3, [pc, #236]	; (8005eb8 <HAL_RCC_ClockConfig+0x1bc>)
 8005dcc:	681b      	ldr	r3, [r3, #0]
 8005dce:	f003 0302 	and.w	r3, r3, #2
 8005dd2:	2b00      	cmp	r3, #0
 8005dd4:	d101      	bne.n	8005dda <HAL_RCC_ClockConfig+0xde>
 8005dd6:	2301      	movs	r3, #1
 8005dd8:	e067      	b.n	8005eaa <HAL_RCC_ClockConfig+0x1ae>
 8005dda:	4b37      	ldr	r3, [pc, #220]	; (8005eb8 <HAL_RCC_ClockConfig+0x1bc>)
 8005ddc:	689b      	ldr	r3, [r3, #8]
 8005dde:	f023 0203 	bic.w	r2, r3, #3
 8005de2:	687b      	ldr	r3, [r7, #4]
 8005de4:	685b      	ldr	r3, [r3, #4]
 8005de6:	4934      	ldr	r1, [pc, #208]	; (8005eb8 <HAL_RCC_ClockConfig+0x1bc>)
 8005de8:	4313      	orrs	r3, r2
 8005dea:	608b      	str	r3, [r1, #8]
 8005dec:	f7fd f832 	bl	8002e54 <HAL_GetTick>
 8005df0:	60f8      	str	r0, [r7, #12]
 8005df2:	e00a      	b.n	8005e0a <HAL_RCC_ClockConfig+0x10e>
 8005df4:	f7fd f82e 	bl	8002e54 <HAL_GetTick>
 8005df8:	4602      	mov	r2, r0
 8005dfa:	68fb      	ldr	r3, [r7, #12]
 8005dfc:	1ad3      	subs	r3, r2, r3
 8005dfe:	f241 3288 	movw	r2, #5000	; 0x1388
 8005e02:	4293      	cmp	r3, r2
 8005e04:	d901      	bls.n	8005e0a <HAL_RCC_ClockConfig+0x10e>
 8005e06:	2303      	movs	r3, #3
 8005e08:	e04f      	b.n	8005eaa <HAL_RCC_ClockConfig+0x1ae>
 8005e0a:	4b2b      	ldr	r3, [pc, #172]	; (8005eb8 <HAL_RCC_ClockConfig+0x1bc>)
 8005e0c:	689b      	ldr	r3, [r3, #8]
 8005e0e:	f003 020c 	and.w	r2, r3, #12
 8005e12:	687b      	ldr	r3, [r7, #4]
 8005e14:	685b      	ldr	r3, [r3, #4]
 8005e16:	009b      	lsls	r3, r3, #2
 8005e18:	429a      	cmp	r2, r3
 8005e1a:	d1eb      	bne.n	8005df4 <HAL_RCC_ClockConfig+0xf8>
 8005e1c:	4b25      	ldr	r3, [pc, #148]	; (8005eb4 <HAL_RCC_ClockConfig+0x1b8>)
 8005e1e:	681b      	ldr	r3, [r3, #0]
 8005e20:	f003 0307 	and.w	r3, r3, #7
 8005e24:	683a      	ldr	r2, [r7, #0]
 8005e26:	429a      	cmp	r2, r3
 8005e28:	d20c      	bcs.n	8005e44 <HAL_RCC_ClockConfig+0x148>
 8005e2a:	4b22      	ldr	r3, [pc, #136]	; (8005eb4 <HAL_RCC_ClockConfig+0x1b8>)
 8005e2c:	683a      	ldr	r2, [r7, #0]
 8005e2e:	b2d2      	uxtb	r2, r2
 8005e30:	701a      	strb	r2, [r3, #0]
 8005e32:	4b20      	ldr	r3, [pc, #128]	; (8005eb4 <HAL_RCC_ClockConfig+0x1b8>)
 8005e34:	681b      	ldr	r3, [r3, #0]
 8005e36:	f003 0307 	and.w	r3, r3, #7
 8005e3a:	683a      	ldr	r2, [r7, #0]
 8005e3c:	429a      	cmp	r2, r3
 8005e3e:	d001      	beq.n	8005e44 <HAL_RCC_ClockConfig+0x148>
 8005e40:	2301      	movs	r3, #1
 8005e42:	e032      	b.n	8005eaa <HAL_RCC_ClockConfig+0x1ae>
 8005e44:	687b      	ldr	r3, [r7, #4]
 8005e46:	681b      	ldr	r3, [r3, #0]
 8005e48:	f003 0304 	and.w	r3, r3, #4
 8005e4c:	2b00      	cmp	r3, #0
 8005e4e:	d008      	beq.n	8005e62 <HAL_RCC_ClockConfig+0x166>
 8005e50:	4b19      	ldr	r3, [pc, #100]	; (8005eb8 <HAL_RCC_ClockConfig+0x1bc>)
 8005e52:	689b      	ldr	r3, [r3, #8]
 8005e54:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8005e58:	687b      	ldr	r3, [r7, #4]
 8005e5a:	68db      	ldr	r3, [r3, #12]
 8005e5c:	4916      	ldr	r1, [pc, #88]	; (8005eb8 <HAL_RCC_ClockConfig+0x1bc>)
 8005e5e:	4313      	orrs	r3, r2
 8005e60:	608b      	str	r3, [r1, #8]
 8005e62:	687b      	ldr	r3, [r7, #4]
 8005e64:	681b      	ldr	r3, [r3, #0]
 8005e66:	f003 0308 	and.w	r3, r3, #8
 8005e6a:	2b00      	cmp	r3, #0
 8005e6c:	d009      	beq.n	8005e82 <HAL_RCC_ClockConfig+0x186>
 8005e6e:	4b12      	ldr	r3, [pc, #72]	; (8005eb8 <HAL_RCC_ClockConfig+0x1bc>)
 8005e70:	689b      	ldr	r3, [r3, #8]
 8005e72:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8005e76:	687b      	ldr	r3, [r7, #4]
 8005e78:	691b      	ldr	r3, [r3, #16]
 8005e7a:	00db      	lsls	r3, r3, #3
 8005e7c:	490e      	ldr	r1, [pc, #56]	; (8005eb8 <HAL_RCC_ClockConfig+0x1bc>)
 8005e7e:	4313      	orrs	r3, r2
 8005e80:	608b      	str	r3, [r1, #8]
 8005e82:	f000 f821 	bl	8005ec8 <HAL_RCC_GetSysClockFreq>
 8005e86:	4602      	mov	r2, r0
 8005e88:	4b0b      	ldr	r3, [pc, #44]	; (8005eb8 <HAL_RCC_ClockConfig+0x1bc>)
 8005e8a:	689b      	ldr	r3, [r3, #8]
 8005e8c:	091b      	lsrs	r3, r3, #4
 8005e8e:	f003 030f 	and.w	r3, r3, #15
 8005e92:	490a      	ldr	r1, [pc, #40]	; (8005ebc <HAL_RCC_ClockConfig+0x1c0>)
 8005e94:	5ccb      	ldrb	r3, [r1, r3]
 8005e96:	fa22 f303 	lsr.w	r3, r2, r3
 8005e9a:	4a09      	ldr	r2, [pc, #36]	; (8005ec0 <HAL_RCC_ClockConfig+0x1c4>)
 8005e9c:	6013      	str	r3, [r2, #0]
 8005e9e:	4b09      	ldr	r3, [pc, #36]	; (8005ec4 <HAL_RCC_ClockConfig+0x1c8>)
 8005ea0:	681b      	ldr	r3, [r3, #0]
 8005ea2:	4618      	mov	r0, r3
 8005ea4:	f7fb ff60 	bl	8001d68 <HAL_InitTick>
 8005ea8:	2300      	movs	r3, #0
 8005eaa:	4618      	mov	r0, r3
 8005eac:	3710      	adds	r7, #16
 8005eae:	46bd      	mov	sp, r7
 8005eb0:	bd80      	pop	{r7, pc}
 8005eb2:	bf00      	nop
 8005eb4:	40023c00 	.word	0x40023c00
 8005eb8:	40023800 	.word	0x40023800
 8005ebc:	0801476c 	.word	0x0801476c
 8005ec0:	20000008 	.word	0x20000008
 8005ec4:	2000000c 	.word	0x2000000c

08005ec8 <HAL_RCC_GetSysClockFreq>:
 8005ec8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005ecc:	b090      	sub	sp, #64	; 0x40
 8005ece:	af00      	add	r7, sp, #0
 8005ed0:	2300      	movs	r3, #0
 8005ed2:	637b      	str	r3, [r7, #52]	; 0x34
 8005ed4:	2300      	movs	r3, #0
 8005ed6:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005ed8:	2300      	movs	r3, #0
 8005eda:	633b      	str	r3, [r7, #48]	; 0x30
 8005edc:	2300      	movs	r3, #0
 8005ede:	63bb      	str	r3, [r7, #56]	; 0x38
 8005ee0:	4b59      	ldr	r3, [pc, #356]	; (8006048 <HAL_RCC_GetSysClockFreq+0x180>)
 8005ee2:	689b      	ldr	r3, [r3, #8]
 8005ee4:	f003 030c 	and.w	r3, r3, #12
 8005ee8:	2b08      	cmp	r3, #8
 8005eea:	d00d      	beq.n	8005f08 <HAL_RCC_GetSysClockFreq+0x40>
 8005eec:	2b08      	cmp	r3, #8
 8005eee:	f200 80a1 	bhi.w	8006034 <HAL_RCC_GetSysClockFreq+0x16c>
 8005ef2:	2b00      	cmp	r3, #0
 8005ef4:	d002      	beq.n	8005efc <HAL_RCC_GetSysClockFreq+0x34>
 8005ef6:	2b04      	cmp	r3, #4
 8005ef8:	d003      	beq.n	8005f02 <HAL_RCC_GetSysClockFreq+0x3a>
 8005efa:	e09b      	b.n	8006034 <HAL_RCC_GetSysClockFreq+0x16c>
 8005efc:	4b53      	ldr	r3, [pc, #332]	; (800604c <HAL_RCC_GetSysClockFreq+0x184>)
 8005efe:	63bb      	str	r3, [r7, #56]	; 0x38
 8005f00:	e09b      	b.n	800603a <HAL_RCC_GetSysClockFreq+0x172>
 8005f02:	4b53      	ldr	r3, [pc, #332]	; (8006050 <HAL_RCC_GetSysClockFreq+0x188>)
 8005f04:	63bb      	str	r3, [r7, #56]	; 0x38
 8005f06:	e098      	b.n	800603a <HAL_RCC_GetSysClockFreq+0x172>
 8005f08:	4b4f      	ldr	r3, [pc, #316]	; (8006048 <HAL_RCC_GetSysClockFreq+0x180>)
 8005f0a:	685b      	ldr	r3, [r3, #4]
 8005f0c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8005f10:	637b      	str	r3, [r7, #52]	; 0x34
 8005f12:	4b4d      	ldr	r3, [pc, #308]	; (8006048 <HAL_RCC_GetSysClockFreq+0x180>)
 8005f14:	685b      	ldr	r3, [r3, #4]
 8005f16:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005f1a:	2b00      	cmp	r3, #0
 8005f1c:	d028      	beq.n	8005f70 <HAL_RCC_GetSysClockFreq+0xa8>
 8005f1e:	4b4a      	ldr	r3, [pc, #296]	; (8006048 <HAL_RCC_GetSysClockFreq+0x180>)
 8005f20:	685b      	ldr	r3, [r3, #4]
 8005f22:	099b      	lsrs	r3, r3, #6
 8005f24:	2200      	movs	r2, #0
 8005f26:	623b      	str	r3, [r7, #32]
 8005f28:	627a      	str	r2, [r7, #36]	; 0x24
 8005f2a:	6a3b      	ldr	r3, [r7, #32]
 8005f2c:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8005f30:	2100      	movs	r1, #0
 8005f32:	4b47      	ldr	r3, [pc, #284]	; (8006050 <HAL_RCC_GetSysClockFreq+0x188>)
 8005f34:	fb03 f201 	mul.w	r2, r3, r1
 8005f38:	2300      	movs	r3, #0
 8005f3a:	fb00 f303 	mul.w	r3, r0, r3
 8005f3e:	4413      	add	r3, r2
 8005f40:	4a43      	ldr	r2, [pc, #268]	; (8006050 <HAL_RCC_GetSysClockFreq+0x188>)
 8005f42:	fba0 1202 	umull	r1, r2, r0, r2
 8005f46:	62fa      	str	r2, [r7, #44]	; 0x2c
 8005f48:	460a      	mov	r2, r1
 8005f4a:	62ba      	str	r2, [r7, #40]	; 0x28
 8005f4c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8005f4e:	4413      	add	r3, r2
 8005f50:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005f52:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005f54:	2200      	movs	r2, #0
 8005f56:	61bb      	str	r3, [r7, #24]
 8005f58:	61fa      	str	r2, [r7, #28]
 8005f5a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8005f5e:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8005f62:	f7fa fe99 	bl	8000c98 <__aeabi_uldivmod>
 8005f66:	4602      	mov	r2, r0
 8005f68:	460b      	mov	r3, r1
 8005f6a:	4613      	mov	r3, r2
 8005f6c:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005f6e:	e053      	b.n	8006018 <HAL_RCC_GetSysClockFreq+0x150>
 8005f70:	4b35      	ldr	r3, [pc, #212]	; (8006048 <HAL_RCC_GetSysClockFreq+0x180>)
 8005f72:	685b      	ldr	r3, [r3, #4]
 8005f74:	099b      	lsrs	r3, r3, #6
 8005f76:	2200      	movs	r2, #0
 8005f78:	613b      	str	r3, [r7, #16]
 8005f7a:	617a      	str	r2, [r7, #20]
 8005f7c:	693b      	ldr	r3, [r7, #16]
 8005f7e:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8005f82:	f04f 0b00 	mov.w	fp, #0
 8005f86:	4652      	mov	r2, sl
 8005f88:	465b      	mov	r3, fp
 8005f8a:	f04f 0000 	mov.w	r0, #0
 8005f8e:	f04f 0100 	mov.w	r1, #0
 8005f92:	0159      	lsls	r1, r3, #5
 8005f94:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005f98:	0150      	lsls	r0, r2, #5
 8005f9a:	4602      	mov	r2, r0
 8005f9c:	460b      	mov	r3, r1
 8005f9e:	ebb2 080a 	subs.w	r8, r2, sl
 8005fa2:	eb63 090b 	sbc.w	r9, r3, fp
 8005fa6:	f04f 0200 	mov.w	r2, #0
 8005faa:	f04f 0300 	mov.w	r3, #0
 8005fae:	ea4f 1389 	mov.w	r3, r9, lsl #6
 8005fb2:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 8005fb6:	ea4f 1288 	mov.w	r2, r8, lsl #6
 8005fba:	ebb2 0408 	subs.w	r4, r2, r8
 8005fbe:	eb63 0509 	sbc.w	r5, r3, r9
 8005fc2:	f04f 0200 	mov.w	r2, #0
 8005fc6:	f04f 0300 	mov.w	r3, #0
 8005fca:	00eb      	lsls	r3, r5, #3
 8005fcc:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8005fd0:	00e2      	lsls	r2, r4, #3
 8005fd2:	4614      	mov	r4, r2
 8005fd4:	461d      	mov	r5, r3
 8005fd6:	eb14 030a 	adds.w	r3, r4, sl
 8005fda:	603b      	str	r3, [r7, #0]
 8005fdc:	eb45 030b 	adc.w	r3, r5, fp
 8005fe0:	607b      	str	r3, [r7, #4]
 8005fe2:	f04f 0200 	mov.w	r2, #0
 8005fe6:	f04f 0300 	mov.w	r3, #0
 8005fea:	e9d7 4500 	ldrd	r4, r5, [r7]
 8005fee:	4629      	mov	r1, r5
 8005ff0:	028b      	lsls	r3, r1, #10
 8005ff2:	4621      	mov	r1, r4
 8005ff4:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8005ff8:	4621      	mov	r1, r4
 8005ffa:	028a      	lsls	r2, r1, #10
 8005ffc:	4610      	mov	r0, r2
 8005ffe:	4619      	mov	r1, r3
 8006000:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006002:	2200      	movs	r2, #0
 8006004:	60bb      	str	r3, [r7, #8]
 8006006:	60fa      	str	r2, [r7, #12]
 8006008:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800600c:	f7fa fe44 	bl	8000c98 <__aeabi_uldivmod>
 8006010:	4602      	mov	r2, r0
 8006012:	460b      	mov	r3, r1
 8006014:	4613      	mov	r3, r2
 8006016:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006018:	4b0b      	ldr	r3, [pc, #44]	; (8006048 <HAL_RCC_GetSysClockFreq+0x180>)
 800601a:	685b      	ldr	r3, [r3, #4]
 800601c:	0c1b      	lsrs	r3, r3, #16
 800601e:	f003 0303 	and.w	r3, r3, #3
 8006022:	3301      	adds	r3, #1
 8006024:	005b      	lsls	r3, r3, #1
 8006026:	633b      	str	r3, [r7, #48]	; 0x30
 8006028:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800602a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800602c:	fbb2 f3f3 	udiv	r3, r2, r3
 8006030:	63bb      	str	r3, [r7, #56]	; 0x38
 8006032:	e002      	b.n	800603a <HAL_RCC_GetSysClockFreq+0x172>
 8006034:	4b05      	ldr	r3, [pc, #20]	; (800604c <HAL_RCC_GetSysClockFreq+0x184>)
 8006036:	63bb      	str	r3, [r7, #56]	; 0x38
 8006038:	bf00      	nop
 800603a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800603c:	4618      	mov	r0, r3
 800603e:	3740      	adds	r7, #64	; 0x40
 8006040:	46bd      	mov	sp, r7
 8006042:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8006046:	bf00      	nop
 8006048:	40023800 	.word	0x40023800
 800604c:	00f42400 	.word	0x00f42400
 8006050:	017d7840 	.word	0x017d7840

08006054 <HAL_RCC_GetHCLKFreq>:
 8006054:	b480      	push	{r7}
 8006056:	af00      	add	r7, sp, #0
 8006058:	4b03      	ldr	r3, [pc, #12]	; (8006068 <HAL_RCC_GetHCLKFreq+0x14>)
 800605a:	681b      	ldr	r3, [r3, #0]
 800605c:	4618      	mov	r0, r3
 800605e:	46bd      	mov	sp, r7
 8006060:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006064:	4770      	bx	lr
 8006066:	bf00      	nop
 8006068:	20000008 	.word	0x20000008

0800606c <HAL_RCC_GetPCLK2Freq>:
 800606c:	b580      	push	{r7, lr}
 800606e:	af00      	add	r7, sp, #0
 8006070:	f7ff fff0 	bl	8006054 <HAL_RCC_GetHCLKFreq>
 8006074:	4602      	mov	r2, r0
 8006076:	4b05      	ldr	r3, [pc, #20]	; (800608c <HAL_RCC_GetPCLK2Freq+0x20>)
 8006078:	689b      	ldr	r3, [r3, #8]
 800607a:	0b5b      	lsrs	r3, r3, #13
 800607c:	f003 0307 	and.w	r3, r3, #7
 8006080:	4903      	ldr	r1, [pc, #12]	; (8006090 <HAL_RCC_GetPCLK2Freq+0x24>)
 8006082:	5ccb      	ldrb	r3, [r1, r3]
 8006084:	fa22 f303 	lsr.w	r3, r2, r3
 8006088:	4618      	mov	r0, r3
 800608a:	bd80      	pop	{r7, pc}
 800608c:	40023800 	.word	0x40023800
 8006090:	0801477c 	.word	0x0801477c

08006094 <HAL_RCC_GetClockConfig>:
 8006094:	b480      	push	{r7}
 8006096:	b083      	sub	sp, #12
 8006098:	af00      	add	r7, sp, #0
 800609a:	6078      	str	r0, [r7, #4]
 800609c:	6039      	str	r1, [r7, #0]
 800609e:	687b      	ldr	r3, [r7, #4]
 80060a0:	220f      	movs	r2, #15
 80060a2:	601a      	str	r2, [r3, #0]
 80060a4:	4b12      	ldr	r3, [pc, #72]	; (80060f0 <HAL_RCC_GetClockConfig+0x5c>)
 80060a6:	689b      	ldr	r3, [r3, #8]
 80060a8:	f003 0203 	and.w	r2, r3, #3
 80060ac:	687b      	ldr	r3, [r7, #4]
 80060ae:	605a      	str	r2, [r3, #4]
 80060b0:	4b0f      	ldr	r3, [pc, #60]	; (80060f0 <HAL_RCC_GetClockConfig+0x5c>)
 80060b2:	689b      	ldr	r3, [r3, #8]
 80060b4:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 80060b8:	687b      	ldr	r3, [r7, #4]
 80060ba:	609a      	str	r2, [r3, #8]
 80060bc:	4b0c      	ldr	r3, [pc, #48]	; (80060f0 <HAL_RCC_GetClockConfig+0x5c>)
 80060be:	689b      	ldr	r3, [r3, #8]
 80060c0:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 80060c4:	687b      	ldr	r3, [r7, #4]
 80060c6:	60da      	str	r2, [r3, #12]
 80060c8:	4b09      	ldr	r3, [pc, #36]	; (80060f0 <HAL_RCC_GetClockConfig+0x5c>)
 80060ca:	689b      	ldr	r3, [r3, #8]
 80060cc:	08db      	lsrs	r3, r3, #3
 80060ce:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 80060d2:	687b      	ldr	r3, [r7, #4]
 80060d4:	611a      	str	r2, [r3, #16]
 80060d6:	4b07      	ldr	r3, [pc, #28]	; (80060f4 <HAL_RCC_GetClockConfig+0x60>)
 80060d8:	681b      	ldr	r3, [r3, #0]
 80060da:	f003 0207 	and.w	r2, r3, #7
 80060de:	683b      	ldr	r3, [r7, #0]
 80060e0:	601a      	str	r2, [r3, #0]
 80060e2:	bf00      	nop
 80060e4:	370c      	adds	r7, #12
 80060e6:	46bd      	mov	sp, r7
 80060e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80060ec:	4770      	bx	lr
 80060ee:	bf00      	nop
 80060f0:	40023800 	.word	0x40023800
 80060f4:	40023c00 	.word	0x40023c00

080060f8 <HAL_SPI_Init>:
 80060f8:	b580      	push	{r7, lr}
 80060fa:	b082      	sub	sp, #8
 80060fc:	af00      	add	r7, sp, #0
 80060fe:	6078      	str	r0, [r7, #4]
 8006100:	687b      	ldr	r3, [r7, #4]
 8006102:	2b00      	cmp	r3, #0
 8006104:	d101      	bne.n	800610a <HAL_SPI_Init+0x12>
 8006106:	2301      	movs	r3, #1
 8006108:	e07b      	b.n	8006202 <HAL_SPI_Init+0x10a>
 800610a:	687b      	ldr	r3, [r7, #4]
 800610c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800610e:	2b00      	cmp	r3, #0
 8006110:	d108      	bne.n	8006124 <HAL_SPI_Init+0x2c>
 8006112:	687b      	ldr	r3, [r7, #4]
 8006114:	685b      	ldr	r3, [r3, #4]
 8006116:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800611a:	d009      	beq.n	8006130 <HAL_SPI_Init+0x38>
 800611c:	687b      	ldr	r3, [r7, #4]
 800611e:	2200      	movs	r2, #0
 8006120:	61da      	str	r2, [r3, #28]
 8006122:	e005      	b.n	8006130 <HAL_SPI_Init+0x38>
 8006124:	687b      	ldr	r3, [r7, #4]
 8006126:	2200      	movs	r2, #0
 8006128:	611a      	str	r2, [r3, #16]
 800612a:	687b      	ldr	r3, [r7, #4]
 800612c:	2200      	movs	r2, #0
 800612e:	615a      	str	r2, [r3, #20]
 8006130:	687b      	ldr	r3, [r7, #4]
 8006132:	2200      	movs	r2, #0
 8006134:	629a      	str	r2, [r3, #40]	; 0x28
 8006136:	687b      	ldr	r3, [r7, #4]
 8006138:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800613c:	b2db      	uxtb	r3, r3
 800613e:	2b00      	cmp	r3, #0
 8006140:	d106      	bne.n	8006150 <HAL_SPI_Init+0x58>
 8006142:	687b      	ldr	r3, [r7, #4]
 8006144:	2200      	movs	r2, #0
 8006146:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800614a:	6878      	ldr	r0, [r7, #4]
 800614c:	f7fb fcbc 	bl	8001ac8 <HAL_SPI_MspInit>
 8006150:	687b      	ldr	r3, [r7, #4]
 8006152:	2202      	movs	r2, #2
 8006154:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8006158:	687b      	ldr	r3, [r7, #4]
 800615a:	681b      	ldr	r3, [r3, #0]
 800615c:	681a      	ldr	r2, [r3, #0]
 800615e:	687b      	ldr	r3, [r7, #4]
 8006160:	681b      	ldr	r3, [r3, #0]
 8006162:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006166:	601a      	str	r2, [r3, #0]
 8006168:	687b      	ldr	r3, [r7, #4]
 800616a:	685b      	ldr	r3, [r3, #4]
 800616c:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8006170:	687b      	ldr	r3, [r7, #4]
 8006172:	689b      	ldr	r3, [r3, #8]
 8006174:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8006178:	431a      	orrs	r2, r3
 800617a:	687b      	ldr	r3, [r7, #4]
 800617c:	68db      	ldr	r3, [r3, #12]
 800617e:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8006182:	431a      	orrs	r2, r3
 8006184:	687b      	ldr	r3, [r7, #4]
 8006186:	691b      	ldr	r3, [r3, #16]
 8006188:	f003 0302 	and.w	r3, r3, #2
 800618c:	431a      	orrs	r2, r3
 800618e:	687b      	ldr	r3, [r7, #4]
 8006190:	695b      	ldr	r3, [r3, #20]
 8006192:	f003 0301 	and.w	r3, r3, #1
 8006196:	431a      	orrs	r2, r3
 8006198:	687b      	ldr	r3, [r7, #4]
 800619a:	699b      	ldr	r3, [r3, #24]
 800619c:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80061a0:	431a      	orrs	r2, r3
 80061a2:	687b      	ldr	r3, [r7, #4]
 80061a4:	69db      	ldr	r3, [r3, #28]
 80061a6:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80061aa:	431a      	orrs	r2, r3
 80061ac:	687b      	ldr	r3, [r7, #4]
 80061ae:	6a1b      	ldr	r3, [r3, #32]
 80061b0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80061b4:	ea42 0103 	orr.w	r1, r2, r3
 80061b8:	687b      	ldr	r3, [r7, #4]
 80061ba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80061bc:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 80061c0:	687b      	ldr	r3, [r7, #4]
 80061c2:	681b      	ldr	r3, [r3, #0]
 80061c4:	430a      	orrs	r2, r1
 80061c6:	601a      	str	r2, [r3, #0]
 80061c8:	687b      	ldr	r3, [r7, #4]
 80061ca:	699b      	ldr	r3, [r3, #24]
 80061cc:	0c1b      	lsrs	r3, r3, #16
 80061ce:	f003 0104 	and.w	r1, r3, #4
 80061d2:	687b      	ldr	r3, [r7, #4]
 80061d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80061d6:	f003 0210 	and.w	r2, r3, #16
 80061da:	687b      	ldr	r3, [r7, #4]
 80061dc:	681b      	ldr	r3, [r3, #0]
 80061de:	430a      	orrs	r2, r1
 80061e0:	605a      	str	r2, [r3, #4]
 80061e2:	687b      	ldr	r3, [r7, #4]
 80061e4:	681b      	ldr	r3, [r3, #0]
 80061e6:	69da      	ldr	r2, [r3, #28]
 80061e8:	687b      	ldr	r3, [r7, #4]
 80061ea:	681b      	ldr	r3, [r3, #0]
 80061ec:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80061f0:	61da      	str	r2, [r3, #28]
 80061f2:	687b      	ldr	r3, [r7, #4]
 80061f4:	2200      	movs	r2, #0
 80061f6:	655a      	str	r2, [r3, #84]	; 0x54
 80061f8:	687b      	ldr	r3, [r7, #4]
 80061fa:	2201      	movs	r2, #1
 80061fc:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8006200:	2300      	movs	r3, #0
 8006202:	4618      	mov	r0, r3
 8006204:	3708      	adds	r7, #8
 8006206:	46bd      	mov	sp, r7
 8006208:	bd80      	pop	{r7, pc}

0800620a <HAL_SPI_Transmit>:
 800620a:	b580      	push	{r7, lr}
 800620c:	b088      	sub	sp, #32
 800620e:	af00      	add	r7, sp, #0
 8006210:	60f8      	str	r0, [r7, #12]
 8006212:	60b9      	str	r1, [r7, #8]
 8006214:	603b      	str	r3, [r7, #0]
 8006216:	4613      	mov	r3, r2
 8006218:	80fb      	strh	r3, [r7, #6]
 800621a:	2300      	movs	r3, #0
 800621c:	77fb      	strb	r3, [r7, #31]
 800621e:	68fb      	ldr	r3, [r7, #12]
 8006220:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8006224:	2b01      	cmp	r3, #1
 8006226:	d101      	bne.n	800622c <HAL_SPI_Transmit+0x22>
 8006228:	2302      	movs	r3, #2
 800622a:	e126      	b.n	800647a <HAL_SPI_Transmit+0x270>
 800622c:	68fb      	ldr	r3, [r7, #12]
 800622e:	2201      	movs	r2, #1
 8006230:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8006234:	f7fc fe0e 	bl	8002e54 <HAL_GetTick>
 8006238:	61b8      	str	r0, [r7, #24]
 800623a:	88fb      	ldrh	r3, [r7, #6]
 800623c:	82fb      	strh	r3, [r7, #22]
 800623e:	68fb      	ldr	r3, [r7, #12]
 8006240:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8006244:	b2db      	uxtb	r3, r3
 8006246:	2b01      	cmp	r3, #1
 8006248:	d002      	beq.n	8006250 <HAL_SPI_Transmit+0x46>
 800624a:	2302      	movs	r3, #2
 800624c:	77fb      	strb	r3, [r7, #31]
 800624e:	e10b      	b.n	8006468 <HAL_SPI_Transmit+0x25e>
 8006250:	68bb      	ldr	r3, [r7, #8]
 8006252:	2b00      	cmp	r3, #0
 8006254:	d002      	beq.n	800625c <HAL_SPI_Transmit+0x52>
 8006256:	88fb      	ldrh	r3, [r7, #6]
 8006258:	2b00      	cmp	r3, #0
 800625a:	d102      	bne.n	8006262 <HAL_SPI_Transmit+0x58>
 800625c:	2301      	movs	r3, #1
 800625e:	77fb      	strb	r3, [r7, #31]
 8006260:	e102      	b.n	8006468 <HAL_SPI_Transmit+0x25e>
 8006262:	68fb      	ldr	r3, [r7, #12]
 8006264:	2203      	movs	r2, #3
 8006266:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800626a:	68fb      	ldr	r3, [r7, #12]
 800626c:	2200      	movs	r2, #0
 800626e:	655a      	str	r2, [r3, #84]	; 0x54
 8006270:	68fb      	ldr	r3, [r7, #12]
 8006272:	68ba      	ldr	r2, [r7, #8]
 8006274:	631a      	str	r2, [r3, #48]	; 0x30
 8006276:	68fb      	ldr	r3, [r7, #12]
 8006278:	88fa      	ldrh	r2, [r7, #6]
 800627a:	869a      	strh	r2, [r3, #52]	; 0x34
 800627c:	68fb      	ldr	r3, [r7, #12]
 800627e:	88fa      	ldrh	r2, [r7, #6]
 8006280:	86da      	strh	r2, [r3, #54]	; 0x36
 8006282:	68fb      	ldr	r3, [r7, #12]
 8006284:	2200      	movs	r2, #0
 8006286:	639a      	str	r2, [r3, #56]	; 0x38
 8006288:	68fb      	ldr	r3, [r7, #12]
 800628a:	2200      	movs	r2, #0
 800628c:	879a      	strh	r2, [r3, #60]	; 0x3c
 800628e:	68fb      	ldr	r3, [r7, #12]
 8006290:	2200      	movs	r2, #0
 8006292:	87da      	strh	r2, [r3, #62]	; 0x3e
 8006294:	68fb      	ldr	r3, [r7, #12]
 8006296:	2200      	movs	r2, #0
 8006298:	645a      	str	r2, [r3, #68]	; 0x44
 800629a:	68fb      	ldr	r3, [r7, #12]
 800629c:	2200      	movs	r2, #0
 800629e:	641a      	str	r2, [r3, #64]	; 0x40
 80062a0:	68fb      	ldr	r3, [r7, #12]
 80062a2:	689b      	ldr	r3, [r3, #8]
 80062a4:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80062a8:	d10f      	bne.n	80062ca <HAL_SPI_Transmit+0xc0>
 80062aa:	68fb      	ldr	r3, [r7, #12]
 80062ac:	681b      	ldr	r3, [r3, #0]
 80062ae:	681a      	ldr	r2, [r3, #0]
 80062b0:	68fb      	ldr	r3, [r7, #12]
 80062b2:	681b      	ldr	r3, [r3, #0]
 80062b4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80062b8:	601a      	str	r2, [r3, #0]
 80062ba:	68fb      	ldr	r3, [r7, #12]
 80062bc:	681b      	ldr	r3, [r3, #0]
 80062be:	681a      	ldr	r2, [r3, #0]
 80062c0:	68fb      	ldr	r3, [r7, #12]
 80062c2:	681b      	ldr	r3, [r3, #0]
 80062c4:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80062c8:	601a      	str	r2, [r3, #0]
 80062ca:	68fb      	ldr	r3, [r7, #12]
 80062cc:	681b      	ldr	r3, [r3, #0]
 80062ce:	681b      	ldr	r3, [r3, #0]
 80062d0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80062d4:	2b40      	cmp	r3, #64	; 0x40
 80062d6:	d007      	beq.n	80062e8 <HAL_SPI_Transmit+0xde>
 80062d8:	68fb      	ldr	r3, [r7, #12]
 80062da:	681b      	ldr	r3, [r3, #0]
 80062dc:	681a      	ldr	r2, [r3, #0]
 80062de:	68fb      	ldr	r3, [r7, #12]
 80062e0:	681b      	ldr	r3, [r3, #0]
 80062e2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80062e6:	601a      	str	r2, [r3, #0]
 80062e8:	68fb      	ldr	r3, [r7, #12]
 80062ea:	68db      	ldr	r3, [r3, #12]
 80062ec:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80062f0:	d14b      	bne.n	800638a <HAL_SPI_Transmit+0x180>
 80062f2:	68fb      	ldr	r3, [r7, #12]
 80062f4:	685b      	ldr	r3, [r3, #4]
 80062f6:	2b00      	cmp	r3, #0
 80062f8:	d002      	beq.n	8006300 <HAL_SPI_Transmit+0xf6>
 80062fa:	8afb      	ldrh	r3, [r7, #22]
 80062fc:	2b01      	cmp	r3, #1
 80062fe:	d13e      	bne.n	800637e <HAL_SPI_Transmit+0x174>
 8006300:	68fb      	ldr	r3, [r7, #12]
 8006302:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006304:	881a      	ldrh	r2, [r3, #0]
 8006306:	68fb      	ldr	r3, [r7, #12]
 8006308:	681b      	ldr	r3, [r3, #0]
 800630a:	60da      	str	r2, [r3, #12]
 800630c:	68fb      	ldr	r3, [r7, #12]
 800630e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006310:	1c9a      	adds	r2, r3, #2
 8006312:	68fb      	ldr	r3, [r7, #12]
 8006314:	631a      	str	r2, [r3, #48]	; 0x30
 8006316:	68fb      	ldr	r3, [r7, #12]
 8006318:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800631a:	b29b      	uxth	r3, r3
 800631c:	3b01      	subs	r3, #1
 800631e:	b29a      	uxth	r2, r3
 8006320:	68fb      	ldr	r3, [r7, #12]
 8006322:	86da      	strh	r2, [r3, #54]	; 0x36
 8006324:	e02b      	b.n	800637e <HAL_SPI_Transmit+0x174>
 8006326:	68fb      	ldr	r3, [r7, #12]
 8006328:	681b      	ldr	r3, [r3, #0]
 800632a:	689b      	ldr	r3, [r3, #8]
 800632c:	f003 0302 	and.w	r3, r3, #2
 8006330:	2b02      	cmp	r3, #2
 8006332:	d112      	bne.n	800635a <HAL_SPI_Transmit+0x150>
 8006334:	68fb      	ldr	r3, [r7, #12]
 8006336:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006338:	881a      	ldrh	r2, [r3, #0]
 800633a:	68fb      	ldr	r3, [r7, #12]
 800633c:	681b      	ldr	r3, [r3, #0]
 800633e:	60da      	str	r2, [r3, #12]
 8006340:	68fb      	ldr	r3, [r7, #12]
 8006342:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006344:	1c9a      	adds	r2, r3, #2
 8006346:	68fb      	ldr	r3, [r7, #12]
 8006348:	631a      	str	r2, [r3, #48]	; 0x30
 800634a:	68fb      	ldr	r3, [r7, #12]
 800634c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800634e:	b29b      	uxth	r3, r3
 8006350:	3b01      	subs	r3, #1
 8006352:	b29a      	uxth	r2, r3
 8006354:	68fb      	ldr	r3, [r7, #12]
 8006356:	86da      	strh	r2, [r3, #54]	; 0x36
 8006358:	e011      	b.n	800637e <HAL_SPI_Transmit+0x174>
 800635a:	f7fc fd7b 	bl	8002e54 <HAL_GetTick>
 800635e:	4602      	mov	r2, r0
 8006360:	69bb      	ldr	r3, [r7, #24]
 8006362:	1ad3      	subs	r3, r2, r3
 8006364:	683a      	ldr	r2, [r7, #0]
 8006366:	429a      	cmp	r2, r3
 8006368:	d803      	bhi.n	8006372 <HAL_SPI_Transmit+0x168>
 800636a:	683b      	ldr	r3, [r7, #0]
 800636c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006370:	d102      	bne.n	8006378 <HAL_SPI_Transmit+0x16e>
 8006372:	683b      	ldr	r3, [r7, #0]
 8006374:	2b00      	cmp	r3, #0
 8006376:	d102      	bne.n	800637e <HAL_SPI_Transmit+0x174>
 8006378:	2303      	movs	r3, #3
 800637a:	77fb      	strb	r3, [r7, #31]
 800637c:	e074      	b.n	8006468 <HAL_SPI_Transmit+0x25e>
 800637e:	68fb      	ldr	r3, [r7, #12]
 8006380:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006382:	b29b      	uxth	r3, r3
 8006384:	2b00      	cmp	r3, #0
 8006386:	d1ce      	bne.n	8006326 <HAL_SPI_Transmit+0x11c>
 8006388:	e04c      	b.n	8006424 <HAL_SPI_Transmit+0x21a>
 800638a:	68fb      	ldr	r3, [r7, #12]
 800638c:	685b      	ldr	r3, [r3, #4]
 800638e:	2b00      	cmp	r3, #0
 8006390:	d002      	beq.n	8006398 <HAL_SPI_Transmit+0x18e>
 8006392:	8afb      	ldrh	r3, [r7, #22]
 8006394:	2b01      	cmp	r3, #1
 8006396:	d140      	bne.n	800641a <HAL_SPI_Transmit+0x210>
 8006398:	68fb      	ldr	r3, [r7, #12]
 800639a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800639c:	68fb      	ldr	r3, [r7, #12]
 800639e:	681b      	ldr	r3, [r3, #0]
 80063a0:	330c      	adds	r3, #12
 80063a2:	7812      	ldrb	r2, [r2, #0]
 80063a4:	701a      	strb	r2, [r3, #0]
 80063a6:	68fb      	ldr	r3, [r7, #12]
 80063a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80063aa:	1c5a      	adds	r2, r3, #1
 80063ac:	68fb      	ldr	r3, [r7, #12]
 80063ae:	631a      	str	r2, [r3, #48]	; 0x30
 80063b0:	68fb      	ldr	r3, [r7, #12]
 80063b2:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80063b4:	b29b      	uxth	r3, r3
 80063b6:	3b01      	subs	r3, #1
 80063b8:	b29a      	uxth	r2, r3
 80063ba:	68fb      	ldr	r3, [r7, #12]
 80063bc:	86da      	strh	r2, [r3, #54]	; 0x36
 80063be:	e02c      	b.n	800641a <HAL_SPI_Transmit+0x210>
 80063c0:	68fb      	ldr	r3, [r7, #12]
 80063c2:	681b      	ldr	r3, [r3, #0]
 80063c4:	689b      	ldr	r3, [r3, #8]
 80063c6:	f003 0302 	and.w	r3, r3, #2
 80063ca:	2b02      	cmp	r3, #2
 80063cc:	d113      	bne.n	80063f6 <HAL_SPI_Transmit+0x1ec>
 80063ce:	68fb      	ldr	r3, [r7, #12]
 80063d0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80063d2:	68fb      	ldr	r3, [r7, #12]
 80063d4:	681b      	ldr	r3, [r3, #0]
 80063d6:	330c      	adds	r3, #12
 80063d8:	7812      	ldrb	r2, [r2, #0]
 80063da:	701a      	strb	r2, [r3, #0]
 80063dc:	68fb      	ldr	r3, [r7, #12]
 80063de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80063e0:	1c5a      	adds	r2, r3, #1
 80063e2:	68fb      	ldr	r3, [r7, #12]
 80063e4:	631a      	str	r2, [r3, #48]	; 0x30
 80063e6:	68fb      	ldr	r3, [r7, #12]
 80063e8:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80063ea:	b29b      	uxth	r3, r3
 80063ec:	3b01      	subs	r3, #1
 80063ee:	b29a      	uxth	r2, r3
 80063f0:	68fb      	ldr	r3, [r7, #12]
 80063f2:	86da      	strh	r2, [r3, #54]	; 0x36
 80063f4:	e011      	b.n	800641a <HAL_SPI_Transmit+0x210>
 80063f6:	f7fc fd2d 	bl	8002e54 <HAL_GetTick>
 80063fa:	4602      	mov	r2, r0
 80063fc:	69bb      	ldr	r3, [r7, #24]
 80063fe:	1ad3      	subs	r3, r2, r3
 8006400:	683a      	ldr	r2, [r7, #0]
 8006402:	429a      	cmp	r2, r3
 8006404:	d803      	bhi.n	800640e <HAL_SPI_Transmit+0x204>
 8006406:	683b      	ldr	r3, [r7, #0]
 8006408:	f1b3 3fff 	cmp.w	r3, #4294967295
 800640c:	d102      	bne.n	8006414 <HAL_SPI_Transmit+0x20a>
 800640e:	683b      	ldr	r3, [r7, #0]
 8006410:	2b00      	cmp	r3, #0
 8006412:	d102      	bne.n	800641a <HAL_SPI_Transmit+0x210>
 8006414:	2303      	movs	r3, #3
 8006416:	77fb      	strb	r3, [r7, #31]
 8006418:	e026      	b.n	8006468 <HAL_SPI_Transmit+0x25e>
 800641a:	68fb      	ldr	r3, [r7, #12]
 800641c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800641e:	b29b      	uxth	r3, r3
 8006420:	2b00      	cmp	r3, #0
 8006422:	d1cd      	bne.n	80063c0 <HAL_SPI_Transmit+0x1b6>
 8006424:	69ba      	ldr	r2, [r7, #24]
 8006426:	6839      	ldr	r1, [r7, #0]
 8006428:	68f8      	ldr	r0, [r7, #12]
 800642a:	f000 f9df 	bl	80067ec <SPI_EndRxTxTransaction>
 800642e:	4603      	mov	r3, r0
 8006430:	2b00      	cmp	r3, #0
 8006432:	d002      	beq.n	800643a <HAL_SPI_Transmit+0x230>
 8006434:	68fb      	ldr	r3, [r7, #12]
 8006436:	2220      	movs	r2, #32
 8006438:	655a      	str	r2, [r3, #84]	; 0x54
 800643a:	68fb      	ldr	r3, [r7, #12]
 800643c:	689b      	ldr	r3, [r3, #8]
 800643e:	2b00      	cmp	r3, #0
 8006440:	d10a      	bne.n	8006458 <HAL_SPI_Transmit+0x24e>
 8006442:	2300      	movs	r3, #0
 8006444:	613b      	str	r3, [r7, #16]
 8006446:	68fb      	ldr	r3, [r7, #12]
 8006448:	681b      	ldr	r3, [r3, #0]
 800644a:	68db      	ldr	r3, [r3, #12]
 800644c:	613b      	str	r3, [r7, #16]
 800644e:	68fb      	ldr	r3, [r7, #12]
 8006450:	681b      	ldr	r3, [r3, #0]
 8006452:	689b      	ldr	r3, [r3, #8]
 8006454:	613b      	str	r3, [r7, #16]
 8006456:	693b      	ldr	r3, [r7, #16]
 8006458:	68fb      	ldr	r3, [r7, #12]
 800645a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800645c:	2b00      	cmp	r3, #0
 800645e:	d002      	beq.n	8006466 <HAL_SPI_Transmit+0x25c>
 8006460:	2301      	movs	r3, #1
 8006462:	77fb      	strb	r3, [r7, #31]
 8006464:	e000      	b.n	8006468 <HAL_SPI_Transmit+0x25e>
 8006466:	bf00      	nop
 8006468:	68fb      	ldr	r3, [r7, #12]
 800646a:	2201      	movs	r2, #1
 800646c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8006470:	68fb      	ldr	r3, [r7, #12]
 8006472:	2200      	movs	r2, #0
 8006474:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8006478:	7ffb      	ldrb	r3, [r7, #31]
 800647a:	4618      	mov	r0, r3
 800647c:	3720      	adds	r7, #32
 800647e:	46bd      	mov	sp, r7
 8006480:	bd80      	pop	{r7, pc}
	...

08006484 <HAL_SPI_IRQHandler>:
 8006484:	b580      	push	{r7, lr}
 8006486:	b088      	sub	sp, #32
 8006488:	af00      	add	r7, sp, #0
 800648a:	6078      	str	r0, [r7, #4]
 800648c:	687b      	ldr	r3, [r7, #4]
 800648e:	681b      	ldr	r3, [r3, #0]
 8006490:	685b      	ldr	r3, [r3, #4]
 8006492:	61fb      	str	r3, [r7, #28]
 8006494:	687b      	ldr	r3, [r7, #4]
 8006496:	681b      	ldr	r3, [r3, #0]
 8006498:	689b      	ldr	r3, [r3, #8]
 800649a:	61bb      	str	r3, [r7, #24]
 800649c:	69bb      	ldr	r3, [r7, #24]
 800649e:	099b      	lsrs	r3, r3, #6
 80064a0:	f003 0301 	and.w	r3, r3, #1
 80064a4:	2b00      	cmp	r3, #0
 80064a6:	d10f      	bne.n	80064c8 <HAL_SPI_IRQHandler+0x44>
 80064a8:	69bb      	ldr	r3, [r7, #24]
 80064aa:	f003 0301 	and.w	r3, r3, #1
 80064ae:	2b00      	cmp	r3, #0
 80064b0:	d00a      	beq.n	80064c8 <HAL_SPI_IRQHandler+0x44>
 80064b2:	69fb      	ldr	r3, [r7, #28]
 80064b4:	099b      	lsrs	r3, r3, #6
 80064b6:	f003 0301 	and.w	r3, r3, #1
 80064ba:	2b00      	cmp	r3, #0
 80064bc:	d004      	beq.n	80064c8 <HAL_SPI_IRQHandler+0x44>
 80064be:	687b      	ldr	r3, [r7, #4]
 80064c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80064c2:	6878      	ldr	r0, [r7, #4]
 80064c4:	4798      	blx	r3
 80064c6:	e0d7      	b.n	8006678 <HAL_SPI_IRQHandler+0x1f4>
 80064c8:	69bb      	ldr	r3, [r7, #24]
 80064ca:	085b      	lsrs	r3, r3, #1
 80064cc:	f003 0301 	and.w	r3, r3, #1
 80064d0:	2b00      	cmp	r3, #0
 80064d2:	d00a      	beq.n	80064ea <HAL_SPI_IRQHandler+0x66>
 80064d4:	69fb      	ldr	r3, [r7, #28]
 80064d6:	09db      	lsrs	r3, r3, #7
 80064d8:	f003 0301 	and.w	r3, r3, #1
 80064dc:	2b00      	cmp	r3, #0
 80064de:	d004      	beq.n	80064ea <HAL_SPI_IRQHandler+0x66>
 80064e0:	687b      	ldr	r3, [r7, #4]
 80064e2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80064e4:	6878      	ldr	r0, [r7, #4]
 80064e6:	4798      	blx	r3
 80064e8:	e0c6      	b.n	8006678 <HAL_SPI_IRQHandler+0x1f4>
 80064ea:	69bb      	ldr	r3, [r7, #24]
 80064ec:	095b      	lsrs	r3, r3, #5
 80064ee:	f003 0301 	and.w	r3, r3, #1
 80064f2:	2b00      	cmp	r3, #0
 80064f4:	d10c      	bne.n	8006510 <HAL_SPI_IRQHandler+0x8c>
 80064f6:	69bb      	ldr	r3, [r7, #24]
 80064f8:	099b      	lsrs	r3, r3, #6
 80064fa:	f003 0301 	and.w	r3, r3, #1
 80064fe:	2b00      	cmp	r3, #0
 8006500:	d106      	bne.n	8006510 <HAL_SPI_IRQHandler+0x8c>
 8006502:	69bb      	ldr	r3, [r7, #24]
 8006504:	0a1b      	lsrs	r3, r3, #8
 8006506:	f003 0301 	and.w	r3, r3, #1
 800650a:	2b00      	cmp	r3, #0
 800650c:	f000 80b4 	beq.w	8006678 <HAL_SPI_IRQHandler+0x1f4>
 8006510:	69fb      	ldr	r3, [r7, #28]
 8006512:	095b      	lsrs	r3, r3, #5
 8006514:	f003 0301 	and.w	r3, r3, #1
 8006518:	2b00      	cmp	r3, #0
 800651a:	f000 80ad 	beq.w	8006678 <HAL_SPI_IRQHandler+0x1f4>
 800651e:	69bb      	ldr	r3, [r7, #24]
 8006520:	099b      	lsrs	r3, r3, #6
 8006522:	f003 0301 	and.w	r3, r3, #1
 8006526:	2b00      	cmp	r3, #0
 8006528:	d023      	beq.n	8006572 <HAL_SPI_IRQHandler+0xee>
 800652a:	687b      	ldr	r3, [r7, #4]
 800652c:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8006530:	b2db      	uxtb	r3, r3
 8006532:	2b03      	cmp	r3, #3
 8006534:	d011      	beq.n	800655a <HAL_SPI_IRQHandler+0xd6>
 8006536:	687b      	ldr	r3, [r7, #4]
 8006538:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800653a:	f043 0204 	orr.w	r2, r3, #4
 800653e:	687b      	ldr	r3, [r7, #4]
 8006540:	655a      	str	r2, [r3, #84]	; 0x54
 8006542:	2300      	movs	r3, #0
 8006544:	617b      	str	r3, [r7, #20]
 8006546:	687b      	ldr	r3, [r7, #4]
 8006548:	681b      	ldr	r3, [r3, #0]
 800654a:	68db      	ldr	r3, [r3, #12]
 800654c:	617b      	str	r3, [r7, #20]
 800654e:	687b      	ldr	r3, [r7, #4]
 8006550:	681b      	ldr	r3, [r3, #0]
 8006552:	689b      	ldr	r3, [r3, #8]
 8006554:	617b      	str	r3, [r7, #20]
 8006556:	697b      	ldr	r3, [r7, #20]
 8006558:	e00b      	b.n	8006572 <HAL_SPI_IRQHandler+0xee>
 800655a:	2300      	movs	r3, #0
 800655c:	613b      	str	r3, [r7, #16]
 800655e:	687b      	ldr	r3, [r7, #4]
 8006560:	681b      	ldr	r3, [r3, #0]
 8006562:	68db      	ldr	r3, [r3, #12]
 8006564:	613b      	str	r3, [r7, #16]
 8006566:	687b      	ldr	r3, [r7, #4]
 8006568:	681b      	ldr	r3, [r3, #0]
 800656a:	689b      	ldr	r3, [r3, #8]
 800656c:	613b      	str	r3, [r7, #16]
 800656e:	693b      	ldr	r3, [r7, #16]
 8006570:	e082      	b.n	8006678 <HAL_SPI_IRQHandler+0x1f4>
 8006572:	69bb      	ldr	r3, [r7, #24]
 8006574:	095b      	lsrs	r3, r3, #5
 8006576:	f003 0301 	and.w	r3, r3, #1
 800657a:	2b00      	cmp	r3, #0
 800657c:	d014      	beq.n	80065a8 <HAL_SPI_IRQHandler+0x124>
 800657e:	687b      	ldr	r3, [r7, #4]
 8006580:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006582:	f043 0201 	orr.w	r2, r3, #1
 8006586:	687b      	ldr	r3, [r7, #4]
 8006588:	655a      	str	r2, [r3, #84]	; 0x54
 800658a:	2300      	movs	r3, #0
 800658c:	60fb      	str	r3, [r7, #12]
 800658e:	687b      	ldr	r3, [r7, #4]
 8006590:	681b      	ldr	r3, [r3, #0]
 8006592:	689b      	ldr	r3, [r3, #8]
 8006594:	60fb      	str	r3, [r7, #12]
 8006596:	687b      	ldr	r3, [r7, #4]
 8006598:	681b      	ldr	r3, [r3, #0]
 800659a:	681a      	ldr	r2, [r3, #0]
 800659c:	687b      	ldr	r3, [r7, #4]
 800659e:	681b      	ldr	r3, [r3, #0]
 80065a0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80065a4:	601a      	str	r2, [r3, #0]
 80065a6:	68fb      	ldr	r3, [r7, #12]
 80065a8:	69bb      	ldr	r3, [r7, #24]
 80065aa:	0a1b      	lsrs	r3, r3, #8
 80065ac:	f003 0301 	and.w	r3, r3, #1
 80065b0:	2b00      	cmp	r3, #0
 80065b2:	d00c      	beq.n	80065ce <HAL_SPI_IRQHandler+0x14a>
 80065b4:	687b      	ldr	r3, [r7, #4]
 80065b6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80065b8:	f043 0208 	orr.w	r2, r3, #8
 80065bc:	687b      	ldr	r3, [r7, #4]
 80065be:	655a      	str	r2, [r3, #84]	; 0x54
 80065c0:	2300      	movs	r3, #0
 80065c2:	60bb      	str	r3, [r7, #8]
 80065c4:	687b      	ldr	r3, [r7, #4]
 80065c6:	681b      	ldr	r3, [r3, #0]
 80065c8:	689b      	ldr	r3, [r3, #8]
 80065ca:	60bb      	str	r3, [r7, #8]
 80065cc:	68bb      	ldr	r3, [r7, #8]
 80065ce:	687b      	ldr	r3, [r7, #4]
 80065d0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80065d2:	2b00      	cmp	r3, #0
 80065d4:	d04f      	beq.n	8006676 <HAL_SPI_IRQHandler+0x1f2>
 80065d6:	687b      	ldr	r3, [r7, #4]
 80065d8:	681b      	ldr	r3, [r3, #0]
 80065da:	685a      	ldr	r2, [r3, #4]
 80065dc:	687b      	ldr	r3, [r7, #4]
 80065de:	681b      	ldr	r3, [r3, #0]
 80065e0:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 80065e4:	605a      	str	r2, [r3, #4]
 80065e6:	687b      	ldr	r3, [r7, #4]
 80065e8:	2201      	movs	r2, #1
 80065ea:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80065ee:	69fb      	ldr	r3, [r7, #28]
 80065f0:	f003 0302 	and.w	r3, r3, #2
 80065f4:	2b00      	cmp	r3, #0
 80065f6:	d104      	bne.n	8006602 <HAL_SPI_IRQHandler+0x17e>
 80065f8:	69fb      	ldr	r3, [r7, #28]
 80065fa:	f003 0301 	and.w	r3, r3, #1
 80065fe:	2b00      	cmp	r3, #0
 8006600:	d034      	beq.n	800666c <HAL_SPI_IRQHandler+0x1e8>
 8006602:	687b      	ldr	r3, [r7, #4]
 8006604:	681b      	ldr	r3, [r3, #0]
 8006606:	685a      	ldr	r2, [r3, #4]
 8006608:	687b      	ldr	r3, [r7, #4]
 800660a:	681b      	ldr	r3, [r3, #0]
 800660c:	f022 0203 	bic.w	r2, r2, #3
 8006610:	605a      	str	r2, [r3, #4]
 8006612:	687b      	ldr	r3, [r7, #4]
 8006614:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006616:	2b00      	cmp	r3, #0
 8006618:	d011      	beq.n	800663e <HAL_SPI_IRQHandler+0x1ba>
 800661a:	687b      	ldr	r3, [r7, #4]
 800661c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800661e:	4a18      	ldr	r2, [pc, #96]	; (8006680 <HAL_SPI_IRQHandler+0x1fc>)
 8006620:	651a      	str	r2, [r3, #80]	; 0x50
 8006622:	687b      	ldr	r3, [r7, #4]
 8006624:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006626:	4618      	mov	r0, r3
 8006628:	f7fd fa4a 	bl	8003ac0 <HAL_DMA_Abort_IT>
 800662c:	4603      	mov	r3, r0
 800662e:	2b00      	cmp	r3, #0
 8006630:	d005      	beq.n	800663e <HAL_SPI_IRQHandler+0x1ba>
 8006632:	687b      	ldr	r3, [r7, #4]
 8006634:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006636:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 800663a:	687b      	ldr	r3, [r7, #4]
 800663c:	655a      	str	r2, [r3, #84]	; 0x54
 800663e:	687b      	ldr	r3, [r7, #4]
 8006640:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8006642:	2b00      	cmp	r3, #0
 8006644:	d016      	beq.n	8006674 <HAL_SPI_IRQHandler+0x1f0>
 8006646:	687b      	ldr	r3, [r7, #4]
 8006648:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800664a:	4a0d      	ldr	r2, [pc, #52]	; (8006680 <HAL_SPI_IRQHandler+0x1fc>)
 800664c:	651a      	str	r2, [r3, #80]	; 0x50
 800664e:	687b      	ldr	r3, [r7, #4]
 8006650:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8006652:	4618      	mov	r0, r3
 8006654:	f7fd fa34 	bl	8003ac0 <HAL_DMA_Abort_IT>
 8006658:	4603      	mov	r3, r0
 800665a:	2b00      	cmp	r3, #0
 800665c:	d00a      	beq.n	8006674 <HAL_SPI_IRQHandler+0x1f0>
 800665e:	687b      	ldr	r3, [r7, #4]
 8006660:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006662:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8006666:	687b      	ldr	r3, [r7, #4]
 8006668:	655a      	str	r2, [r3, #84]	; 0x54
 800666a:	e003      	b.n	8006674 <HAL_SPI_IRQHandler+0x1f0>
 800666c:	6878      	ldr	r0, [r7, #4]
 800666e:	f000 f809 	bl	8006684 <HAL_SPI_ErrorCallback>
 8006672:	e000      	b.n	8006676 <HAL_SPI_IRQHandler+0x1f2>
 8006674:	bf00      	nop
 8006676:	bf00      	nop
 8006678:	3720      	adds	r7, #32
 800667a:	46bd      	mov	sp, r7
 800667c:	bd80      	pop	{r7, pc}
 800667e:	bf00      	nop
 8006680:	080066b5 	.word	0x080066b5

08006684 <HAL_SPI_ErrorCallback>:
 8006684:	b480      	push	{r7}
 8006686:	b083      	sub	sp, #12
 8006688:	af00      	add	r7, sp, #0
 800668a:	6078      	str	r0, [r7, #4]
 800668c:	bf00      	nop
 800668e:	370c      	adds	r7, #12
 8006690:	46bd      	mov	sp, r7
 8006692:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006696:	4770      	bx	lr

08006698 <HAL_SPI_GetState>:
 8006698:	b480      	push	{r7}
 800669a:	b083      	sub	sp, #12
 800669c:	af00      	add	r7, sp, #0
 800669e:	6078      	str	r0, [r7, #4]
 80066a0:	687b      	ldr	r3, [r7, #4]
 80066a2:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80066a6:	b2db      	uxtb	r3, r3
 80066a8:	4618      	mov	r0, r3
 80066aa:	370c      	adds	r7, #12
 80066ac:	46bd      	mov	sp, r7
 80066ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066b2:	4770      	bx	lr

080066b4 <SPI_DMAAbortOnError>:
 80066b4:	b580      	push	{r7, lr}
 80066b6:	b084      	sub	sp, #16
 80066b8:	af00      	add	r7, sp, #0
 80066ba:	6078      	str	r0, [r7, #4]
 80066bc:	687b      	ldr	r3, [r7, #4]
 80066be:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80066c0:	60fb      	str	r3, [r7, #12]
 80066c2:	68fb      	ldr	r3, [r7, #12]
 80066c4:	2200      	movs	r2, #0
 80066c6:	87da      	strh	r2, [r3, #62]	; 0x3e
 80066c8:	68fb      	ldr	r3, [r7, #12]
 80066ca:	2200      	movs	r2, #0
 80066cc:	86da      	strh	r2, [r3, #54]	; 0x36
 80066ce:	68f8      	ldr	r0, [r7, #12]
 80066d0:	f7ff ffd8 	bl	8006684 <HAL_SPI_ErrorCallback>
 80066d4:	bf00      	nop
 80066d6:	3710      	adds	r7, #16
 80066d8:	46bd      	mov	sp, r7
 80066da:	bd80      	pop	{r7, pc}

080066dc <SPI_WaitFlagStateUntilTimeout>:
 80066dc:	b580      	push	{r7, lr}
 80066de:	b088      	sub	sp, #32
 80066e0:	af00      	add	r7, sp, #0
 80066e2:	60f8      	str	r0, [r7, #12]
 80066e4:	60b9      	str	r1, [r7, #8]
 80066e6:	603b      	str	r3, [r7, #0]
 80066e8:	4613      	mov	r3, r2
 80066ea:	71fb      	strb	r3, [r7, #7]
 80066ec:	f7fc fbb2 	bl	8002e54 <HAL_GetTick>
 80066f0:	4602      	mov	r2, r0
 80066f2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80066f4:	1a9b      	subs	r3, r3, r2
 80066f6:	683a      	ldr	r2, [r7, #0]
 80066f8:	4413      	add	r3, r2
 80066fa:	61fb      	str	r3, [r7, #28]
 80066fc:	f7fc fbaa 	bl	8002e54 <HAL_GetTick>
 8006700:	61b8      	str	r0, [r7, #24]
 8006702:	4b39      	ldr	r3, [pc, #228]	; (80067e8 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8006704:	681b      	ldr	r3, [r3, #0]
 8006706:	015b      	lsls	r3, r3, #5
 8006708:	0d1b      	lsrs	r3, r3, #20
 800670a:	69fa      	ldr	r2, [r7, #28]
 800670c:	fb02 f303 	mul.w	r3, r2, r3
 8006710:	617b      	str	r3, [r7, #20]
 8006712:	e054      	b.n	80067be <SPI_WaitFlagStateUntilTimeout+0xe2>
 8006714:	683b      	ldr	r3, [r7, #0]
 8006716:	f1b3 3fff 	cmp.w	r3, #4294967295
 800671a:	d050      	beq.n	80067be <SPI_WaitFlagStateUntilTimeout+0xe2>
 800671c:	f7fc fb9a 	bl	8002e54 <HAL_GetTick>
 8006720:	4602      	mov	r2, r0
 8006722:	69bb      	ldr	r3, [r7, #24]
 8006724:	1ad3      	subs	r3, r2, r3
 8006726:	69fa      	ldr	r2, [r7, #28]
 8006728:	429a      	cmp	r2, r3
 800672a:	d902      	bls.n	8006732 <SPI_WaitFlagStateUntilTimeout+0x56>
 800672c:	69fb      	ldr	r3, [r7, #28]
 800672e:	2b00      	cmp	r3, #0
 8006730:	d13d      	bne.n	80067ae <SPI_WaitFlagStateUntilTimeout+0xd2>
 8006732:	68fb      	ldr	r3, [r7, #12]
 8006734:	681b      	ldr	r3, [r3, #0]
 8006736:	685a      	ldr	r2, [r3, #4]
 8006738:	68fb      	ldr	r3, [r7, #12]
 800673a:	681b      	ldr	r3, [r3, #0]
 800673c:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8006740:	605a      	str	r2, [r3, #4]
 8006742:	68fb      	ldr	r3, [r7, #12]
 8006744:	685b      	ldr	r3, [r3, #4]
 8006746:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800674a:	d111      	bne.n	8006770 <SPI_WaitFlagStateUntilTimeout+0x94>
 800674c:	68fb      	ldr	r3, [r7, #12]
 800674e:	689b      	ldr	r3, [r3, #8]
 8006750:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8006754:	d004      	beq.n	8006760 <SPI_WaitFlagStateUntilTimeout+0x84>
 8006756:	68fb      	ldr	r3, [r7, #12]
 8006758:	689b      	ldr	r3, [r3, #8]
 800675a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800675e:	d107      	bne.n	8006770 <SPI_WaitFlagStateUntilTimeout+0x94>
 8006760:	68fb      	ldr	r3, [r7, #12]
 8006762:	681b      	ldr	r3, [r3, #0]
 8006764:	681a      	ldr	r2, [r3, #0]
 8006766:	68fb      	ldr	r3, [r7, #12]
 8006768:	681b      	ldr	r3, [r3, #0]
 800676a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800676e:	601a      	str	r2, [r3, #0]
 8006770:	68fb      	ldr	r3, [r7, #12]
 8006772:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006774:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006778:	d10f      	bne.n	800679a <SPI_WaitFlagStateUntilTimeout+0xbe>
 800677a:	68fb      	ldr	r3, [r7, #12]
 800677c:	681b      	ldr	r3, [r3, #0]
 800677e:	681a      	ldr	r2, [r3, #0]
 8006780:	68fb      	ldr	r3, [r7, #12]
 8006782:	681b      	ldr	r3, [r3, #0]
 8006784:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8006788:	601a      	str	r2, [r3, #0]
 800678a:	68fb      	ldr	r3, [r7, #12]
 800678c:	681b      	ldr	r3, [r3, #0]
 800678e:	681a      	ldr	r2, [r3, #0]
 8006790:	68fb      	ldr	r3, [r7, #12]
 8006792:	681b      	ldr	r3, [r3, #0]
 8006794:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8006798:	601a      	str	r2, [r3, #0]
 800679a:	68fb      	ldr	r3, [r7, #12]
 800679c:	2201      	movs	r2, #1
 800679e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80067a2:	68fb      	ldr	r3, [r7, #12]
 80067a4:	2200      	movs	r2, #0
 80067a6:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80067aa:	2303      	movs	r3, #3
 80067ac:	e017      	b.n	80067de <SPI_WaitFlagStateUntilTimeout+0x102>
 80067ae:	697b      	ldr	r3, [r7, #20]
 80067b0:	2b00      	cmp	r3, #0
 80067b2:	d101      	bne.n	80067b8 <SPI_WaitFlagStateUntilTimeout+0xdc>
 80067b4:	2300      	movs	r3, #0
 80067b6:	61fb      	str	r3, [r7, #28]
 80067b8:	697b      	ldr	r3, [r7, #20]
 80067ba:	3b01      	subs	r3, #1
 80067bc:	617b      	str	r3, [r7, #20]
 80067be:	68fb      	ldr	r3, [r7, #12]
 80067c0:	681b      	ldr	r3, [r3, #0]
 80067c2:	689a      	ldr	r2, [r3, #8]
 80067c4:	68bb      	ldr	r3, [r7, #8]
 80067c6:	4013      	ands	r3, r2
 80067c8:	68ba      	ldr	r2, [r7, #8]
 80067ca:	429a      	cmp	r2, r3
 80067cc:	bf0c      	ite	eq
 80067ce:	2301      	moveq	r3, #1
 80067d0:	2300      	movne	r3, #0
 80067d2:	b2db      	uxtb	r3, r3
 80067d4:	461a      	mov	r2, r3
 80067d6:	79fb      	ldrb	r3, [r7, #7]
 80067d8:	429a      	cmp	r2, r3
 80067da:	d19b      	bne.n	8006714 <SPI_WaitFlagStateUntilTimeout+0x38>
 80067dc:	2300      	movs	r3, #0
 80067de:	4618      	mov	r0, r3
 80067e0:	3720      	adds	r7, #32
 80067e2:	46bd      	mov	sp, r7
 80067e4:	bd80      	pop	{r7, pc}
 80067e6:	bf00      	nop
 80067e8:	20000008 	.word	0x20000008

080067ec <SPI_EndRxTxTransaction>:
 80067ec:	b580      	push	{r7, lr}
 80067ee:	b088      	sub	sp, #32
 80067f0:	af02      	add	r7, sp, #8
 80067f2:	60f8      	str	r0, [r7, #12]
 80067f4:	60b9      	str	r1, [r7, #8]
 80067f6:	607a      	str	r2, [r7, #4]
 80067f8:	4b1b      	ldr	r3, [pc, #108]	; (8006868 <SPI_EndRxTxTransaction+0x7c>)
 80067fa:	681b      	ldr	r3, [r3, #0]
 80067fc:	4a1b      	ldr	r2, [pc, #108]	; (800686c <SPI_EndRxTxTransaction+0x80>)
 80067fe:	fba2 2303 	umull	r2, r3, r2, r3
 8006802:	0d5b      	lsrs	r3, r3, #21
 8006804:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8006808:	fb02 f303 	mul.w	r3, r2, r3
 800680c:	617b      	str	r3, [r7, #20]
 800680e:	68fb      	ldr	r3, [r7, #12]
 8006810:	685b      	ldr	r3, [r3, #4]
 8006812:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8006816:	d112      	bne.n	800683e <SPI_EndRxTxTransaction+0x52>
 8006818:	687b      	ldr	r3, [r7, #4]
 800681a:	9300      	str	r3, [sp, #0]
 800681c:	68bb      	ldr	r3, [r7, #8]
 800681e:	2200      	movs	r2, #0
 8006820:	2180      	movs	r1, #128	; 0x80
 8006822:	68f8      	ldr	r0, [r7, #12]
 8006824:	f7ff ff5a 	bl	80066dc <SPI_WaitFlagStateUntilTimeout>
 8006828:	4603      	mov	r3, r0
 800682a:	2b00      	cmp	r3, #0
 800682c:	d016      	beq.n	800685c <SPI_EndRxTxTransaction+0x70>
 800682e:	68fb      	ldr	r3, [r7, #12]
 8006830:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006832:	f043 0220 	orr.w	r2, r3, #32
 8006836:	68fb      	ldr	r3, [r7, #12]
 8006838:	655a      	str	r2, [r3, #84]	; 0x54
 800683a:	2303      	movs	r3, #3
 800683c:	e00f      	b.n	800685e <SPI_EndRxTxTransaction+0x72>
 800683e:	697b      	ldr	r3, [r7, #20]
 8006840:	2b00      	cmp	r3, #0
 8006842:	d00a      	beq.n	800685a <SPI_EndRxTxTransaction+0x6e>
 8006844:	697b      	ldr	r3, [r7, #20]
 8006846:	3b01      	subs	r3, #1
 8006848:	617b      	str	r3, [r7, #20]
 800684a:	68fb      	ldr	r3, [r7, #12]
 800684c:	681b      	ldr	r3, [r3, #0]
 800684e:	689b      	ldr	r3, [r3, #8]
 8006850:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006854:	2b80      	cmp	r3, #128	; 0x80
 8006856:	d0f2      	beq.n	800683e <SPI_EndRxTxTransaction+0x52>
 8006858:	e000      	b.n	800685c <SPI_EndRxTxTransaction+0x70>
 800685a:	bf00      	nop
 800685c:	2300      	movs	r3, #0
 800685e:	4618      	mov	r0, r3
 8006860:	3718      	adds	r7, #24
 8006862:	46bd      	mov	sp, r7
 8006864:	bd80      	pop	{r7, pc}
 8006866:	bf00      	nop
 8006868:	20000008 	.word	0x20000008
 800686c:	165e9f81 	.word	0x165e9f81

08006870 <HAL_TIM_Base_Init>:
 8006870:	b580      	push	{r7, lr}
 8006872:	b082      	sub	sp, #8
 8006874:	af00      	add	r7, sp, #0
 8006876:	6078      	str	r0, [r7, #4]
 8006878:	687b      	ldr	r3, [r7, #4]
 800687a:	2b00      	cmp	r3, #0
 800687c:	d101      	bne.n	8006882 <HAL_TIM_Base_Init+0x12>
 800687e:	2301      	movs	r3, #1
 8006880:	e041      	b.n	8006906 <HAL_TIM_Base_Init+0x96>
 8006882:	687b      	ldr	r3, [r7, #4]
 8006884:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006888:	b2db      	uxtb	r3, r3
 800688a:	2b00      	cmp	r3, #0
 800688c:	d106      	bne.n	800689c <HAL_TIM_Base_Init+0x2c>
 800688e:	687b      	ldr	r3, [r7, #4]
 8006890:	2200      	movs	r2, #0
 8006892:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006896:	6878      	ldr	r0, [r7, #4]
 8006898:	f7fb f9a0 	bl	8001bdc <HAL_TIM_Base_MspInit>
 800689c:	687b      	ldr	r3, [r7, #4]
 800689e:	2202      	movs	r2, #2
 80068a0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80068a4:	687b      	ldr	r3, [r7, #4]
 80068a6:	681a      	ldr	r2, [r3, #0]
 80068a8:	687b      	ldr	r3, [r7, #4]
 80068aa:	3304      	adds	r3, #4
 80068ac:	4619      	mov	r1, r3
 80068ae:	4610      	mov	r0, r2
 80068b0:	f000 fd40 	bl	8007334 <TIM_Base_SetConfig>
 80068b4:	687b      	ldr	r3, [r7, #4]
 80068b6:	2201      	movs	r2, #1
 80068b8:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80068bc:	687b      	ldr	r3, [r7, #4]
 80068be:	2201      	movs	r2, #1
 80068c0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80068c4:	687b      	ldr	r3, [r7, #4]
 80068c6:	2201      	movs	r2, #1
 80068c8:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80068cc:	687b      	ldr	r3, [r7, #4]
 80068ce:	2201      	movs	r2, #1
 80068d0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80068d4:	687b      	ldr	r3, [r7, #4]
 80068d6:	2201      	movs	r2, #1
 80068d8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80068dc:	687b      	ldr	r3, [r7, #4]
 80068de:	2201      	movs	r2, #1
 80068e0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80068e4:	687b      	ldr	r3, [r7, #4]
 80068e6:	2201      	movs	r2, #1
 80068e8:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80068ec:	687b      	ldr	r3, [r7, #4]
 80068ee:	2201      	movs	r2, #1
 80068f0:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80068f4:	687b      	ldr	r3, [r7, #4]
 80068f6:	2201      	movs	r2, #1
 80068f8:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80068fc:	687b      	ldr	r3, [r7, #4]
 80068fe:	2201      	movs	r2, #1
 8006900:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006904:	2300      	movs	r3, #0
 8006906:	4618      	mov	r0, r3
 8006908:	3708      	adds	r7, #8
 800690a:	46bd      	mov	sp, r7
 800690c:	bd80      	pop	{r7, pc}
	...

08006910 <HAL_TIM_Base_Start_IT>:
 8006910:	b480      	push	{r7}
 8006912:	b085      	sub	sp, #20
 8006914:	af00      	add	r7, sp, #0
 8006916:	6078      	str	r0, [r7, #4]
 8006918:	687b      	ldr	r3, [r7, #4]
 800691a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800691e:	b2db      	uxtb	r3, r3
 8006920:	2b01      	cmp	r3, #1
 8006922:	d001      	beq.n	8006928 <HAL_TIM_Base_Start_IT+0x18>
 8006924:	2301      	movs	r3, #1
 8006926:	e044      	b.n	80069b2 <HAL_TIM_Base_Start_IT+0xa2>
 8006928:	687b      	ldr	r3, [r7, #4]
 800692a:	2202      	movs	r2, #2
 800692c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006930:	687b      	ldr	r3, [r7, #4]
 8006932:	681b      	ldr	r3, [r3, #0]
 8006934:	68da      	ldr	r2, [r3, #12]
 8006936:	687b      	ldr	r3, [r7, #4]
 8006938:	681b      	ldr	r3, [r3, #0]
 800693a:	f042 0201 	orr.w	r2, r2, #1
 800693e:	60da      	str	r2, [r3, #12]
 8006940:	687b      	ldr	r3, [r7, #4]
 8006942:	681b      	ldr	r3, [r3, #0]
 8006944:	4a1e      	ldr	r2, [pc, #120]	; (80069c0 <HAL_TIM_Base_Start_IT+0xb0>)
 8006946:	4293      	cmp	r3, r2
 8006948:	d018      	beq.n	800697c <HAL_TIM_Base_Start_IT+0x6c>
 800694a:	687b      	ldr	r3, [r7, #4]
 800694c:	681b      	ldr	r3, [r3, #0]
 800694e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006952:	d013      	beq.n	800697c <HAL_TIM_Base_Start_IT+0x6c>
 8006954:	687b      	ldr	r3, [r7, #4]
 8006956:	681b      	ldr	r3, [r3, #0]
 8006958:	4a1a      	ldr	r2, [pc, #104]	; (80069c4 <HAL_TIM_Base_Start_IT+0xb4>)
 800695a:	4293      	cmp	r3, r2
 800695c:	d00e      	beq.n	800697c <HAL_TIM_Base_Start_IT+0x6c>
 800695e:	687b      	ldr	r3, [r7, #4]
 8006960:	681b      	ldr	r3, [r3, #0]
 8006962:	4a19      	ldr	r2, [pc, #100]	; (80069c8 <HAL_TIM_Base_Start_IT+0xb8>)
 8006964:	4293      	cmp	r3, r2
 8006966:	d009      	beq.n	800697c <HAL_TIM_Base_Start_IT+0x6c>
 8006968:	687b      	ldr	r3, [r7, #4]
 800696a:	681b      	ldr	r3, [r3, #0]
 800696c:	4a17      	ldr	r2, [pc, #92]	; (80069cc <HAL_TIM_Base_Start_IT+0xbc>)
 800696e:	4293      	cmp	r3, r2
 8006970:	d004      	beq.n	800697c <HAL_TIM_Base_Start_IT+0x6c>
 8006972:	687b      	ldr	r3, [r7, #4]
 8006974:	681b      	ldr	r3, [r3, #0]
 8006976:	4a16      	ldr	r2, [pc, #88]	; (80069d0 <HAL_TIM_Base_Start_IT+0xc0>)
 8006978:	4293      	cmp	r3, r2
 800697a:	d111      	bne.n	80069a0 <HAL_TIM_Base_Start_IT+0x90>
 800697c:	687b      	ldr	r3, [r7, #4]
 800697e:	681b      	ldr	r3, [r3, #0]
 8006980:	689b      	ldr	r3, [r3, #8]
 8006982:	f003 0307 	and.w	r3, r3, #7
 8006986:	60fb      	str	r3, [r7, #12]
 8006988:	68fb      	ldr	r3, [r7, #12]
 800698a:	2b06      	cmp	r3, #6
 800698c:	d010      	beq.n	80069b0 <HAL_TIM_Base_Start_IT+0xa0>
 800698e:	687b      	ldr	r3, [r7, #4]
 8006990:	681b      	ldr	r3, [r3, #0]
 8006992:	681a      	ldr	r2, [r3, #0]
 8006994:	687b      	ldr	r3, [r7, #4]
 8006996:	681b      	ldr	r3, [r3, #0]
 8006998:	f042 0201 	orr.w	r2, r2, #1
 800699c:	601a      	str	r2, [r3, #0]
 800699e:	e007      	b.n	80069b0 <HAL_TIM_Base_Start_IT+0xa0>
 80069a0:	687b      	ldr	r3, [r7, #4]
 80069a2:	681b      	ldr	r3, [r3, #0]
 80069a4:	681a      	ldr	r2, [r3, #0]
 80069a6:	687b      	ldr	r3, [r7, #4]
 80069a8:	681b      	ldr	r3, [r3, #0]
 80069aa:	f042 0201 	orr.w	r2, r2, #1
 80069ae:	601a      	str	r2, [r3, #0]
 80069b0:	2300      	movs	r3, #0
 80069b2:	4618      	mov	r0, r3
 80069b4:	3714      	adds	r7, #20
 80069b6:	46bd      	mov	sp, r7
 80069b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069bc:	4770      	bx	lr
 80069be:	bf00      	nop
 80069c0:	40010000 	.word	0x40010000
 80069c4:	40000400 	.word	0x40000400
 80069c8:	40000800 	.word	0x40000800
 80069cc:	40000c00 	.word	0x40000c00
 80069d0:	40014000 	.word	0x40014000

080069d4 <HAL_TIM_PWM_Init>:
 80069d4:	b580      	push	{r7, lr}
 80069d6:	b082      	sub	sp, #8
 80069d8:	af00      	add	r7, sp, #0
 80069da:	6078      	str	r0, [r7, #4]
 80069dc:	687b      	ldr	r3, [r7, #4]
 80069de:	2b00      	cmp	r3, #0
 80069e0:	d101      	bne.n	80069e6 <HAL_TIM_PWM_Init+0x12>
 80069e2:	2301      	movs	r3, #1
 80069e4:	e041      	b.n	8006a6a <HAL_TIM_PWM_Init+0x96>
 80069e6:	687b      	ldr	r3, [r7, #4]
 80069e8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80069ec:	b2db      	uxtb	r3, r3
 80069ee:	2b00      	cmp	r3, #0
 80069f0:	d106      	bne.n	8006a00 <HAL_TIM_PWM_Init+0x2c>
 80069f2:	687b      	ldr	r3, [r7, #4]
 80069f4:	2200      	movs	r2, #0
 80069f6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80069fa:	6878      	ldr	r0, [r7, #4]
 80069fc:	f000 f839 	bl	8006a72 <HAL_TIM_PWM_MspInit>
 8006a00:	687b      	ldr	r3, [r7, #4]
 8006a02:	2202      	movs	r2, #2
 8006a04:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006a08:	687b      	ldr	r3, [r7, #4]
 8006a0a:	681a      	ldr	r2, [r3, #0]
 8006a0c:	687b      	ldr	r3, [r7, #4]
 8006a0e:	3304      	adds	r3, #4
 8006a10:	4619      	mov	r1, r3
 8006a12:	4610      	mov	r0, r2
 8006a14:	f000 fc8e 	bl	8007334 <TIM_Base_SetConfig>
 8006a18:	687b      	ldr	r3, [r7, #4]
 8006a1a:	2201      	movs	r2, #1
 8006a1c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8006a20:	687b      	ldr	r3, [r7, #4]
 8006a22:	2201      	movs	r2, #1
 8006a24:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006a28:	687b      	ldr	r3, [r7, #4]
 8006a2a:	2201      	movs	r2, #1
 8006a2c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8006a30:	687b      	ldr	r3, [r7, #4]
 8006a32:	2201      	movs	r2, #1
 8006a34:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8006a38:	687b      	ldr	r3, [r7, #4]
 8006a3a:	2201      	movs	r2, #1
 8006a3c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006a40:	687b      	ldr	r3, [r7, #4]
 8006a42:	2201      	movs	r2, #1
 8006a44:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8006a48:	687b      	ldr	r3, [r7, #4]
 8006a4a:	2201      	movs	r2, #1
 8006a4c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8006a50:	687b      	ldr	r3, [r7, #4]
 8006a52:	2201      	movs	r2, #1
 8006a54:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8006a58:	687b      	ldr	r3, [r7, #4]
 8006a5a:	2201      	movs	r2, #1
 8006a5c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8006a60:	687b      	ldr	r3, [r7, #4]
 8006a62:	2201      	movs	r2, #1
 8006a64:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006a68:	2300      	movs	r3, #0
 8006a6a:	4618      	mov	r0, r3
 8006a6c:	3708      	adds	r7, #8
 8006a6e:	46bd      	mov	sp, r7
 8006a70:	bd80      	pop	{r7, pc}

08006a72 <HAL_TIM_PWM_MspInit>:
 8006a72:	b480      	push	{r7}
 8006a74:	b083      	sub	sp, #12
 8006a76:	af00      	add	r7, sp, #0
 8006a78:	6078      	str	r0, [r7, #4]
 8006a7a:	bf00      	nop
 8006a7c:	370c      	adds	r7, #12
 8006a7e:	46bd      	mov	sp, r7
 8006a80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a84:	4770      	bx	lr
	...

08006a88 <HAL_TIM_PWM_Start>:
 8006a88:	b580      	push	{r7, lr}
 8006a8a:	b084      	sub	sp, #16
 8006a8c:	af00      	add	r7, sp, #0
 8006a8e:	6078      	str	r0, [r7, #4]
 8006a90:	6039      	str	r1, [r7, #0]
 8006a92:	683b      	ldr	r3, [r7, #0]
 8006a94:	2b00      	cmp	r3, #0
 8006a96:	d109      	bne.n	8006aac <HAL_TIM_PWM_Start+0x24>
 8006a98:	687b      	ldr	r3, [r7, #4]
 8006a9a:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006a9e:	b2db      	uxtb	r3, r3
 8006aa0:	2b01      	cmp	r3, #1
 8006aa2:	bf14      	ite	ne
 8006aa4:	2301      	movne	r3, #1
 8006aa6:	2300      	moveq	r3, #0
 8006aa8:	b2db      	uxtb	r3, r3
 8006aaa:	e022      	b.n	8006af2 <HAL_TIM_PWM_Start+0x6a>
 8006aac:	683b      	ldr	r3, [r7, #0]
 8006aae:	2b04      	cmp	r3, #4
 8006ab0:	d109      	bne.n	8006ac6 <HAL_TIM_PWM_Start+0x3e>
 8006ab2:	687b      	ldr	r3, [r7, #4]
 8006ab4:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8006ab8:	b2db      	uxtb	r3, r3
 8006aba:	2b01      	cmp	r3, #1
 8006abc:	bf14      	ite	ne
 8006abe:	2301      	movne	r3, #1
 8006ac0:	2300      	moveq	r3, #0
 8006ac2:	b2db      	uxtb	r3, r3
 8006ac4:	e015      	b.n	8006af2 <HAL_TIM_PWM_Start+0x6a>
 8006ac6:	683b      	ldr	r3, [r7, #0]
 8006ac8:	2b08      	cmp	r3, #8
 8006aca:	d109      	bne.n	8006ae0 <HAL_TIM_PWM_Start+0x58>
 8006acc:	687b      	ldr	r3, [r7, #4]
 8006ace:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8006ad2:	b2db      	uxtb	r3, r3
 8006ad4:	2b01      	cmp	r3, #1
 8006ad6:	bf14      	ite	ne
 8006ad8:	2301      	movne	r3, #1
 8006ada:	2300      	moveq	r3, #0
 8006adc:	b2db      	uxtb	r3, r3
 8006ade:	e008      	b.n	8006af2 <HAL_TIM_PWM_Start+0x6a>
 8006ae0:	687b      	ldr	r3, [r7, #4]
 8006ae2:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8006ae6:	b2db      	uxtb	r3, r3
 8006ae8:	2b01      	cmp	r3, #1
 8006aea:	bf14      	ite	ne
 8006aec:	2301      	movne	r3, #1
 8006aee:	2300      	moveq	r3, #0
 8006af0:	b2db      	uxtb	r3, r3
 8006af2:	2b00      	cmp	r3, #0
 8006af4:	d001      	beq.n	8006afa <HAL_TIM_PWM_Start+0x72>
 8006af6:	2301      	movs	r3, #1
 8006af8:	e068      	b.n	8006bcc <HAL_TIM_PWM_Start+0x144>
 8006afa:	683b      	ldr	r3, [r7, #0]
 8006afc:	2b00      	cmp	r3, #0
 8006afe:	d104      	bne.n	8006b0a <HAL_TIM_PWM_Start+0x82>
 8006b00:	687b      	ldr	r3, [r7, #4]
 8006b02:	2202      	movs	r2, #2
 8006b04:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006b08:	e013      	b.n	8006b32 <HAL_TIM_PWM_Start+0xaa>
 8006b0a:	683b      	ldr	r3, [r7, #0]
 8006b0c:	2b04      	cmp	r3, #4
 8006b0e:	d104      	bne.n	8006b1a <HAL_TIM_PWM_Start+0x92>
 8006b10:	687b      	ldr	r3, [r7, #4]
 8006b12:	2202      	movs	r2, #2
 8006b14:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8006b18:	e00b      	b.n	8006b32 <HAL_TIM_PWM_Start+0xaa>
 8006b1a:	683b      	ldr	r3, [r7, #0]
 8006b1c:	2b08      	cmp	r3, #8
 8006b1e:	d104      	bne.n	8006b2a <HAL_TIM_PWM_Start+0xa2>
 8006b20:	687b      	ldr	r3, [r7, #4]
 8006b22:	2202      	movs	r2, #2
 8006b24:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8006b28:	e003      	b.n	8006b32 <HAL_TIM_PWM_Start+0xaa>
 8006b2a:	687b      	ldr	r3, [r7, #4]
 8006b2c:	2202      	movs	r2, #2
 8006b2e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006b32:	687b      	ldr	r3, [r7, #4]
 8006b34:	681b      	ldr	r3, [r3, #0]
 8006b36:	2201      	movs	r2, #1
 8006b38:	6839      	ldr	r1, [r7, #0]
 8006b3a:	4618      	mov	r0, r3
 8006b3c:	f000 ffbe 	bl	8007abc <TIM_CCxChannelCmd>
 8006b40:	687b      	ldr	r3, [r7, #4]
 8006b42:	681b      	ldr	r3, [r3, #0]
 8006b44:	4a23      	ldr	r2, [pc, #140]	; (8006bd4 <HAL_TIM_PWM_Start+0x14c>)
 8006b46:	4293      	cmp	r3, r2
 8006b48:	d107      	bne.n	8006b5a <HAL_TIM_PWM_Start+0xd2>
 8006b4a:	687b      	ldr	r3, [r7, #4]
 8006b4c:	681b      	ldr	r3, [r3, #0]
 8006b4e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006b50:	687b      	ldr	r3, [r7, #4]
 8006b52:	681b      	ldr	r3, [r3, #0]
 8006b54:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006b58:	645a      	str	r2, [r3, #68]	; 0x44
 8006b5a:	687b      	ldr	r3, [r7, #4]
 8006b5c:	681b      	ldr	r3, [r3, #0]
 8006b5e:	4a1d      	ldr	r2, [pc, #116]	; (8006bd4 <HAL_TIM_PWM_Start+0x14c>)
 8006b60:	4293      	cmp	r3, r2
 8006b62:	d018      	beq.n	8006b96 <HAL_TIM_PWM_Start+0x10e>
 8006b64:	687b      	ldr	r3, [r7, #4]
 8006b66:	681b      	ldr	r3, [r3, #0]
 8006b68:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006b6c:	d013      	beq.n	8006b96 <HAL_TIM_PWM_Start+0x10e>
 8006b6e:	687b      	ldr	r3, [r7, #4]
 8006b70:	681b      	ldr	r3, [r3, #0]
 8006b72:	4a19      	ldr	r2, [pc, #100]	; (8006bd8 <HAL_TIM_PWM_Start+0x150>)
 8006b74:	4293      	cmp	r3, r2
 8006b76:	d00e      	beq.n	8006b96 <HAL_TIM_PWM_Start+0x10e>
 8006b78:	687b      	ldr	r3, [r7, #4]
 8006b7a:	681b      	ldr	r3, [r3, #0]
 8006b7c:	4a17      	ldr	r2, [pc, #92]	; (8006bdc <HAL_TIM_PWM_Start+0x154>)
 8006b7e:	4293      	cmp	r3, r2
 8006b80:	d009      	beq.n	8006b96 <HAL_TIM_PWM_Start+0x10e>
 8006b82:	687b      	ldr	r3, [r7, #4]
 8006b84:	681b      	ldr	r3, [r3, #0]
 8006b86:	4a16      	ldr	r2, [pc, #88]	; (8006be0 <HAL_TIM_PWM_Start+0x158>)
 8006b88:	4293      	cmp	r3, r2
 8006b8a:	d004      	beq.n	8006b96 <HAL_TIM_PWM_Start+0x10e>
 8006b8c:	687b      	ldr	r3, [r7, #4]
 8006b8e:	681b      	ldr	r3, [r3, #0]
 8006b90:	4a14      	ldr	r2, [pc, #80]	; (8006be4 <HAL_TIM_PWM_Start+0x15c>)
 8006b92:	4293      	cmp	r3, r2
 8006b94:	d111      	bne.n	8006bba <HAL_TIM_PWM_Start+0x132>
 8006b96:	687b      	ldr	r3, [r7, #4]
 8006b98:	681b      	ldr	r3, [r3, #0]
 8006b9a:	689b      	ldr	r3, [r3, #8]
 8006b9c:	f003 0307 	and.w	r3, r3, #7
 8006ba0:	60fb      	str	r3, [r7, #12]
 8006ba2:	68fb      	ldr	r3, [r7, #12]
 8006ba4:	2b06      	cmp	r3, #6
 8006ba6:	d010      	beq.n	8006bca <HAL_TIM_PWM_Start+0x142>
 8006ba8:	687b      	ldr	r3, [r7, #4]
 8006baa:	681b      	ldr	r3, [r3, #0]
 8006bac:	681a      	ldr	r2, [r3, #0]
 8006bae:	687b      	ldr	r3, [r7, #4]
 8006bb0:	681b      	ldr	r3, [r3, #0]
 8006bb2:	f042 0201 	orr.w	r2, r2, #1
 8006bb6:	601a      	str	r2, [r3, #0]
 8006bb8:	e007      	b.n	8006bca <HAL_TIM_PWM_Start+0x142>
 8006bba:	687b      	ldr	r3, [r7, #4]
 8006bbc:	681b      	ldr	r3, [r3, #0]
 8006bbe:	681a      	ldr	r2, [r3, #0]
 8006bc0:	687b      	ldr	r3, [r7, #4]
 8006bc2:	681b      	ldr	r3, [r3, #0]
 8006bc4:	f042 0201 	orr.w	r2, r2, #1
 8006bc8:	601a      	str	r2, [r3, #0]
 8006bca:	2300      	movs	r3, #0
 8006bcc:	4618      	mov	r0, r3
 8006bce:	3710      	adds	r7, #16
 8006bd0:	46bd      	mov	sp, r7
 8006bd2:	bd80      	pop	{r7, pc}
 8006bd4:	40010000 	.word	0x40010000
 8006bd8:	40000400 	.word	0x40000400
 8006bdc:	40000800 	.word	0x40000800
 8006be0:	40000c00 	.word	0x40000c00
 8006be4:	40014000 	.word	0x40014000

08006be8 <HAL_TIM_IC_Init>:
 8006be8:	b580      	push	{r7, lr}
 8006bea:	b082      	sub	sp, #8
 8006bec:	af00      	add	r7, sp, #0
 8006bee:	6078      	str	r0, [r7, #4]
 8006bf0:	687b      	ldr	r3, [r7, #4]
 8006bf2:	2b00      	cmp	r3, #0
 8006bf4:	d101      	bne.n	8006bfa <HAL_TIM_IC_Init+0x12>
 8006bf6:	2301      	movs	r3, #1
 8006bf8:	e041      	b.n	8006c7e <HAL_TIM_IC_Init+0x96>
 8006bfa:	687b      	ldr	r3, [r7, #4]
 8006bfc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006c00:	b2db      	uxtb	r3, r3
 8006c02:	2b00      	cmp	r3, #0
 8006c04:	d106      	bne.n	8006c14 <HAL_TIM_IC_Init+0x2c>
 8006c06:	687b      	ldr	r3, [r7, #4]
 8006c08:	2200      	movs	r2, #0
 8006c0a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006c0e:	6878      	ldr	r0, [r7, #4]
 8006c10:	f7fb f820 	bl	8001c54 <HAL_TIM_IC_MspInit>
 8006c14:	687b      	ldr	r3, [r7, #4]
 8006c16:	2202      	movs	r2, #2
 8006c18:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006c1c:	687b      	ldr	r3, [r7, #4]
 8006c1e:	681a      	ldr	r2, [r3, #0]
 8006c20:	687b      	ldr	r3, [r7, #4]
 8006c22:	3304      	adds	r3, #4
 8006c24:	4619      	mov	r1, r3
 8006c26:	4610      	mov	r0, r2
 8006c28:	f000 fb84 	bl	8007334 <TIM_Base_SetConfig>
 8006c2c:	687b      	ldr	r3, [r7, #4]
 8006c2e:	2201      	movs	r2, #1
 8006c30:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8006c34:	687b      	ldr	r3, [r7, #4]
 8006c36:	2201      	movs	r2, #1
 8006c38:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006c3c:	687b      	ldr	r3, [r7, #4]
 8006c3e:	2201      	movs	r2, #1
 8006c40:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8006c44:	687b      	ldr	r3, [r7, #4]
 8006c46:	2201      	movs	r2, #1
 8006c48:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8006c4c:	687b      	ldr	r3, [r7, #4]
 8006c4e:	2201      	movs	r2, #1
 8006c50:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006c54:	687b      	ldr	r3, [r7, #4]
 8006c56:	2201      	movs	r2, #1
 8006c58:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8006c5c:	687b      	ldr	r3, [r7, #4]
 8006c5e:	2201      	movs	r2, #1
 8006c60:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8006c64:	687b      	ldr	r3, [r7, #4]
 8006c66:	2201      	movs	r2, #1
 8006c68:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8006c6c:	687b      	ldr	r3, [r7, #4]
 8006c6e:	2201      	movs	r2, #1
 8006c70:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8006c74:	687b      	ldr	r3, [r7, #4]
 8006c76:	2201      	movs	r2, #1
 8006c78:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006c7c:	2300      	movs	r3, #0
 8006c7e:	4618      	mov	r0, r3
 8006c80:	3708      	adds	r7, #8
 8006c82:	46bd      	mov	sp, r7
 8006c84:	bd80      	pop	{r7, pc}

08006c86 <HAL_TIM_IRQHandler>:
 8006c86:	b580      	push	{r7, lr}
 8006c88:	b082      	sub	sp, #8
 8006c8a:	af00      	add	r7, sp, #0
 8006c8c:	6078      	str	r0, [r7, #4]
 8006c8e:	687b      	ldr	r3, [r7, #4]
 8006c90:	681b      	ldr	r3, [r3, #0]
 8006c92:	691b      	ldr	r3, [r3, #16]
 8006c94:	f003 0302 	and.w	r3, r3, #2
 8006c98:	2b02      	cmp	r3, #2
 8006c9a:	d122      	bne.n	8006ce2 <HAL_TIM_IRQHandler+0x5c>
 8006c9c:	687b      	ldr	r3, [r7, #4]
 8006c9e:	681b      	ldr	r3, [r3, #0]
 8006ca0:	68db      	ldr	r3, [r3, #12]
 8006ca2:	f003 0302 	and.w	r3, r3, #2
 8006ca6:	2b02      	cmp	r3, #2
 8006ca8:	d11b      	bne.n	8006ce2 <HAL_TIM_IRQHandler+0x5c>
 8006caa:	687b      	ldr	r3, [r7, #4]
 8006cac:	681b      	ldr	r3, [r3, #0]
 8006cae:	f06f 0202 	mvn.w	r2, #2
 8006cb2:	611a      	str	r2, [r3, #16]
 8006cb4:	687b      	ldr	r3, [r7, #4]
 8006cb6:	2201      	movs	r2, #1
 8006cb8:	771a      	strb	r2, [r3, #28]
 8006cba:	687b      	ldr	r3, [r7, #4]
 8006cbc:	681b      	ldr	r3, [r3, #0]
 8006cbe:	699b      	ldr	r3, [r3, #24]
 8006cc0:	f003 0303 	and.w	r3, r3, #3
 8006cc4:	2b00      	cmp	r3, #0
 8006cc6:	d003      	beq.n	8006cd0 <HAL_TIM_IRQHandler+0x4a>
 8006cc8:	6878      	ldr	r0, [r7, #4]
 8006cca:	f000 fb14 	bl	80072f6 <HAL_TIM_IC_CaptureCallback>
 8006cce:	e005      	b.n	8006cdc <HAL_TIM_IRQHandler+0x56>
 8006cd0:	6878      	ldr	r0, [r7, #4]
 8006cd2:	f000 fb06 	bl	80072e2 <HAL_TIM_OC_DelayElapsedCallback>
 8006cd6:	6878      	ldr	r0, [r7, #4]
 8006cd8:	f000 fb17 	bl	800730a <HAL_TIM_PWM_PulseFinishedCallback>
 8006cdc:	687b      	ldr	r3, [r7, #4]
 8006cde:	2200      	movs	r2, #0
 8006ce0:	771a      	strb	r2, [r3, #28]
 8006ce2:	687b      	ldr	r3, [r7, #4]
 8006ce4:	681b      	ldr	r3, [r3, #0]
 8006ce6:	691b      	ldr	r3, [r3, #16]
 8006ce8:	f003 0304 	and.w	r3, r3, #4
 8006cec:	2b04      	cmp	r3, #4
 8006cee:	d122      	bne.n	8006d36 <HAL_TIM_IRQHandler+0xb0>
 8006cf0:	687b      	ldr	r3, [r7, #4]
 8006cf2:	681b      	ldr	r3, [r3, #0]
 8006cf4:	68db      	ldr	r3, [r3, #12]
 8006cf6:	f003 0304 	and.w	r3, r3, #4
 8006cfa:	2b04      	cmp	r3, #4
 8006cfc:	d11b      	bne.n	8006d36 <HAL_TIM_IRQHandler+0xb0>
 8006cfe:	687b      	ldr	r3, [r7, #4]
 8006d00:	681b      	ldr	r3, [r3, #0]
 8006d02:	f06f 0204 	mvn.w	r2, #4
 8006d06:	611a      	str	r2, [r3, #16]
 8006d08:	687b      	ldr	r3, [r7, #4]
 8006d0a:	2202      	movs	r2, #2
 8006d0c:	771a      	strb	r2, [r3, #28]
 8006d0e:	687b      	ldr	r3, [r7, #4]
 8006d10:	681b      	ldr	r3, [r3, #0]
 8006d12:	699b      	ldr	r3, [r3, #24]
 8006d14:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006d18:	2b00      	cmp	r3, #0
 8006d1a:	d003      	beq.n	8006d24 <HAL_TIM_IRQHandler+0x9e>
 8006d1c:	6878      	ldr	r0, [r7, #4]
 8006d1e:	f000 faea 	bl	80072f6 <HAL_TIM_IC_CaptureCallback>
 8006d22:	e005      	b.n	8006d30 <HAL_TIM_IRQHandler+0xaa>
 8006d24:	6878      	ldr	r0, [r7, #4]
 8006d26:	f000 fadc 	bl	80072e2 <HAL_TIM_OC_DelayElapsedCallback>
 8006d2a:	6878      	ldr	r0, [r7, #4]
 8006d2c:	f000 faed 	bl	800730a <HAL_TIM_PWM_PulseFinishedCallback>
 8006d30:	687b      	ldr	r3, [r7, #4]
 8006d32:	2200      	movs	r2, #0
 8006d34:	771a      	strb	r2, [r3, #28]
 8006d36:	687b      	ldr	r3, [r7, #4]
 8006d38:	681b      	ldr	r3, [r3, #0]
 8006d3a:	691b      	ldr	r3, [r3, #16]
 8006d3c:	f003 0308 	and.w	r3, r3, #8
 8006d40:	2b08      	cmp	r3, #8
 8006d42:	d122      	bne.n	8006d8a <HAL_TIM_IRQHandler+0x104>
 8006d44:	687b      	ldr	r3, [r7, #4]
 8006d46:	681b      	ldr	r3, [r3, #0]
 8006d48:	68db      	ldr	r3, [r3, #12]
 8006d4a:	f003 0308 	and.w	r3, r3, #8
 8006d4e:	2b08      	cmp	r3, #8
 8006d50:	d11b      	bne.n	8006d8a <HAL_TIM_IRQHandler+0x104>
 8006d52:	687b      	ldr	r3, [r7, #4]
 8006d54:	681b      	ldr	r3, [r3, #0]
 8006d56:	f06f 0208 	mvn.w	r2, #8
 8006d5a:	611a      	str	r2, [r3, #16]
 8006d5c:	687b      	ldr	r3, [r7, #4]
 8006d5e:	2204      	movs	r2, #4
 8006d60:	771a      	strb	r2, [r3, #28]
 8006d62:	687b      	ldr	r3, [r7, #4]
 8006d64:	681b      	ldr	r3, [r3, #0]
 8006d66:	69db      	ldr	r3, [r3, #28]
 8006d68:	f003 0303 	and.w	r3, r3, #3
 8006d6c:	2b00      	cmp	r3, #0
 8006d6e:	d003      	beq.n	8006d78 <HAL_TIM_IRQHandler+0xf2>
 8006d70:	6878      	ldr	r0, [r7, #4]
 8006d72:	f000 fac0 	bl	80072f6 <HAL_TIM_IC_CaptureCallback>
 8006d76:	e005      	b.n	8006d84 <HAL_TIM_IRQHandler+0xfe>
 8006d78:	6878      	ldr	r0, [r7, #4]
 8006d7a:	f000 fab2 	bl	80072e2 <HAL_TIM_OC_DelayElapsedCallback>
 8006d7e:	6878      	ldr	r0, [r7, #4]
 8006d80:	f000 fac3 	bl	800730a <HAL_TIM_PWM_PulseFinishedCallback>
 8006d84:	687b      	ldr	r3, [r7, #4]
 8006d86:	2200      	movs	r2, #0
 8006d88:	771a      	strb	r2, [r3, #28]
 8006d8a:	687b      	ldr	r3, [r7, #4]
 8006d8c:	681b      	ldr	r3, [r3, #0]
 8006d8e:	691b      	ldr	r3, [r3, #16]
 8006d90:	f003 0310 	and.w	r3, r3, #16
 8006d94:	2b10      	cmp	r3, #16
 8006d96:	d122      	bne.n	8006dde <HAL_TIM_IRQHandler+0x158>
 8006d98:	687b      	ldr	r3, [r7, #4]
 8006d9a:	681b      	ldr	r3, [r3, #0]
 8006d9c:	68db      	ldr	r3, [r3, #12]
 8006d9e:	f003 0310 	and.w	r3, r3, #16
 8006da2:	2b10      	cmp	r3, #16
 8006da4:	d11b      	bne.n	8006dde <HAL_TIM_IRQHandler+0x158>
 8006da6:	687b      	ldr	r3, [r7, #4]
 8006da8:	681b      	ldr	r3, [r3, #0]
 8006daa:	f06f 0210 	mvn.w	r2, #16
 8006dae:	611a      	str	r2, [r3, #16]
 8006db0:	687b      	ldr	r3, [r7, #4]
 8006db2:	2208      	movs	r2, #8
 8006db4:	771a      	strb	r2, [r3, #28]
 8006db6:	687b      	ldr	r3, [r7, #4]
 8006db8:	681b      	ldr	r3, [r3, #0]
 8006dba:	69db      	ldr	r3, [r3, #28]
 8006dbc:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006dc0:	2b00      	cmp	r3, #0
 8006dc2:	d003      	beq.n	8006dcc <HAL_TIM_IRQHandler+0x146>
 8006dc4:	6878      	ldr	r0, [r7, #4]
 8006dc6:	f000 fa96 	bl	80072f6 <HAL_TIM_IC_CaptureCallback>
 8006dca:	e005      	b.n	8006dd8 <HAL_TIM_IRQHandler+0x152>
 8006dcc:	6878      	ldr	r0, [r7, #4]
 8006dce:	f000 fa88 	bl	80072e2 <HAL_TIM_OC_DelayElapsedCallback>
 8006dd2:	6878      	ldr	r0, [r7, #4]
 8006dd4:	f000 fa99 	bl	800730a <HAL_TIM_PWM_PulseFinishedCallback>
 8006dd8:	687b      	ldr	r3, [r7, #4]
 8006dda:	2200      	movs	r2, #0
 8006ddc:	771a      	strb	r2, [r3, #28]
 8006dde:	687b      	ldr	r3, [r7, #4]
 8006de0:	681b      	ldr	r3, [r3, #0]
 8006de2:	691b      	ldr	r3, [r3, #16]
 8006de4:	f003 0301 	and.w	r3, r3, #1
 8006de8:	2b01      	cmp	r3, #1
 8006dea:	d10e      	bne.n	8006e0a <HAL_TIM_IRQHandler+0x184>
 8006dec:	687b      	ldr	r3, [r7, #4]
 8006dee:	681b      	ldr	r3, [r3, #0]
 8006df0:	68db      	ldr	r3, [r3, #12]
 8006df2:	f003 0301 	and.w	r3, r3, #1
 8006df6:	2b01      	cmp	r3, #1
 8006df8:	d107      	bne.n	8006e0a <HAL_TIM_IRQHandler+0x184>
 8006dfa:	687b      	ldr	r3, [r7, #4]
 8006dfc:	681b      	ldr	r3, [r3, #0]
 8006dfe:	f06f 0201 	mvn.w	r2, #1
 8006e02:	611a      	str	r2, [r3, #16]
 8006e04:	6878      	ldr	r0, [r7, #4]
 8006e06:	f7fa fd7d 	bl	8001904 <HAL_TIM_PeriodElapsedCallback>
 8006e0a:	687b      	ldr	r3, [r7, #4]
 8006e0c:	681b      	ldr	r3, [r3, #0]
 8006e0e:	691b      	ldr	r3, [r3, #16]
 8006e10:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006e14:	2b80      	cmp	r3, #128	; 0x80
 8006e16:	d10e      	bne.n	8006e36 <HAL_TIM_IRQHandler+0x1b0>
 8006e18:	687b      	ldr	r3, [r7, #4]
 8006e1a:	681b      	ldr	r3, [r3, #0]
 8006e1c:	68db      	ldr	r3, [r3, #12]
 8006e1e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006e22:	2b80      	cmp	r3, #128	; 0x80
 8006e24:	d107      	bne.n	8006e36 <HAL_TIM_IRQHandler+0x1b0>
 8006e26:	687b      	ldr	r3, [r7, #4]
 8006e28:	681b      	ldr	r3, [r3, #0]
 8006e2a:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8006e2e:	611a      	str	r2, [r3, #16]
 8006e30:	6878      	ldr	r0, [r7, #4]
 8006e32:	f000 fee1 	bl	8007bf8 <HAL_TIMEx_BreakCallback>
 8006e36:	687b      	ldr	r3, [r7, #4]
 8006e38:	681b      	ldr	r3, [r3, #0]
 8006e3a:	691b      	ldr	r3, [r3, #16]
 8006e3c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006e40:	2b40      	cmp	r3, #64	; 0x40
 8006e42:	d10e      	bne.n	8006e62 <HAL_TIM_IRQHandler+0x1dc>
 8006e44:	687b      	ldr	r3, [r7, #4]
 8006e46:	681b      	ldr	r3, [r3, #0]
 8006e48:	68db      	ldr	r3, [r3, #12]
 8006e4a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006e4e:	2b40      	cmp	r3, #64	; 0x40
 8006e50:	d107      	bne.n	8006e62 <HAL_TIM_IRQHandler+0x1dc>
 8006e52:	687b      	ldr	r3, [r7, #4]
 8006e54:	681b      	ldr	r3, [r3, #0]
 8006e56:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8006e5a:	611a      	str	r2, [r3, #16]
 8006e5c:	6878      	ldr	r0, [r7, #4]
 8006e5e:	f000 fa5e 	bl	800731e <HAL_TIM_TriggerCallback>
 8006e62:	687b      	ldr	r3, [r7, #4]
 8006e64:	681b      	ldr	r3, [r3, #0]
 8006e66:	691b      	ldr	r3, [r3, #16]
 8006e68:	f003 0320 	and.w	r3, r3, #32
 8006e6c:	2b20      	cmp	r3, #32
 8006e6e:	d10e      	bne.n	8006e8e <HAL_TIM_IRQHandler+0x208>
 8006e70:	687b      	ldr	r3, [r7, #4]
 8006e72:	681b      	ldr	r3, [r3, #0]
 8006e74:	68db      	ldr	r3, [r3, #12]
 8006e76:	f003 0320 	and.w	r3, r3, #32
 8006e7a:	2b20      	cmp	r3, #32
 8006e7c:	d107      	bne.n	8006e8e <HAL_TIM_IRQHandler+0x208>
 8006e7e:	687b      	ldr	r3, [r7, #4]
 8006e80:	681b      	ldr	r3, [r3, #0]
 8006e82:	f06f 0220 	mvn.w	r2, #32
 8006e86:	611a      	str	r2, [r3, #16]
 8006e88:	6878      	ldr	r0, [r7, #4]
 8006e8a:	f000 feab 	bl	8007be4 <HAL_TIMEx_CommutCallback>
 8006e8e:	bf00      	nop
 8006e90:	3708      	adds	r7, #8
 8006e92:	46bd      	mov	sp, r7
 8006e94:	bd80      	pop	{r7, pc}

08006e96 <HAL_TIM_IC_ConfigChannel>:
 8006e96:	b580      	push	{r7, lr}
 8006e98:	b086      	sub	sp, #24
 8006e9a:	af00      	add	r7, sp, #0
 8006e9c:	60f8      	str	r0, [r7, #12]
 8006e9e:	60b9      	str	r1, [r7, #8]
 8006ea0:	607a      	str	r2, [r7, #4]
 8006ea2:	2300      	movs	r3, #0
 8006ea4:	75fb      	strb	r3, [r7, #23]
 8006ea6:	68fb      	ldr	r3, [r7, #12]
 8006ea8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006eac:	2b01      	cmp	r3, #1
 8006eae:	d101      	bne.n	8006eb4 <HAL_TIM_IC_ConfigChannel+0x1e>
 8006eb0:	2302      	movs	r3, #2
 8006eb2:	e088      	b.n	8006fc6 <HAL_TIM_IC_ConfigChannel+0x130>
 8006eb4:	68fb      	ldr	r3, [r7, #12]
 8006eb6:	2201      	movs	r2, #1
 8006eb8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006ebc:	687b      	ldr	r3, [r7, #4]
 8006ebe:	2b00      	cmp	r3, #0
 8006ec0:	d11b      	bne.n	8006efa <HAL_TIM_IC_ConfigChannel+0x64>
 8006ec2:	68fb      	ldr	r3, [r7, #12]
 8006ec4:	6818      	ldr	r0, [r3, #0]
 8006ec6:	68bb      	ldr	r3, [r7, #8]
 8006ec8:	6819      	ldr	r1, [r3, #0]
 8006eca:	68bb      	ldr	r3, [r7, #8]
 8006ecc:	685a      	ldr	r2, [r3, #4]
 8006ece:	68bb      	ldr	r3, [r7, #8]
 8006ed0:	68db      	ldr	r3, [r3, #12]
 8006ed2:	f000 fc3b 	bl	800774c <TIM_TI1_SetConfig>
 8006ed6:	68fb      	ldr	r3, [r7, #12]
 8006ed8:	681b      	ldr	r3, [r3, #0]
 8006eda:	699a      	ldr	r2, [r3, #24]
 8006edc:	68fb      	ldr	r3, [r7, #12]
 8006ede:	681b      	ldr	r3, [r3, #0]
 8006ee0:	f022 020c 	bic.w	r2, r2, #12
 8006ee4:	619a      	str	r2, [r3, #24]
 8006ee6:	68fb      	ldr	r3, [r7, #12]
 8006ee8:	681b      	ldr	r3, [r3, #0]
 8006eea:	6999      	ldr	r1, [r3, #24]
 8006eec:	68bb      	ldr	r3, [r7, #8]
 8006eee:	689a      	ldr	r2, [r3, #8]
 8006ef0:	68fb      	ldr	r3, [r7, #12]
 8006ef2:	681b      	ldr	r3, [r3, #0]
 8006ef4:	430a      	orrs	r2, r1
 8006ef6:	619a      	str	r2, [r3, #24]
 8006ef8:	e060      	b.n	8006fbc <HAL_TIM_IC_ConfigChannel+0x126>
 8006efa:	687b      	ldr	r3, [r7, #4]
 8006efc:	2b04      	cmp	r3, #4
 8006efe:	d11c      	bne.n	8006f3a <HAL_TIM_IC_ConfigChannel+0xa4>
 8006f00:	68fb      	ldr	r3, [r7, #12]
 8006f02:	6818      	ldr	r0, [r3, #0]
 8006f04:	68bb      	ldr	r3, [r7, #8]
 8006f06:	6819      	ldr	r1, [r3, #0]
 8006f08:	68bb      	ldr	r3, [r7, #8]
 8006f0a:	685a      	ldr	r2, [r3, #4]
 8006f0c:	68bb      	ldr	r3, [r7, #8]
 8006f0e:	68db      	ldr	r3, [r3, #12]
 8006f10:	f000 fcb3 	bl	800787a <TIM_TI2_SetConfig>
 8006f14:	68fb      	ldr	r3, [r7, #12]
 8006f16:	681b      	ldr	r3, [r3, #0]
 8006f18:	699a      	ldr	r2, [r3, #24]
 8006f1a:	68fb      	ldr	r3, [r7, #12]
 8006f1c:	681b      	ldr	r3, [r3, #0]
 8006f1e:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8006f22:	619a      	str	r2, [r3, #24]
 8006f24:	68fb      	ldr	r3, [r7, #12]
 8006f26:	681b      	ldr	r3, [r3, #0]
 8006f28:	6999      	ldr	r1, [r3, #24]
 8006f2a:	68bb      	ldr	r3, [r7, #8]
 8006f2c:	689b      	ldr	r3, [r3, #8]
 8006f2e:	021a      	lsls	r2, r3, #8
 8006f30:	68fb      	ldr	r3, [r7, #12]
 8006f32:	681b      	ldr	r3, [r3, #0]
 8006f34:	430a      	orrs	r2, r1
 8006f36:	619a      	str	r2, [r3, #24]
 8006f38:	e040      	b.n	8006fbc <HAL_TIM_IC_ConfigChannel+0x126>
 8006f3a:	687b      	ldr	r3, [r7, #4]
 8006f3c:	2b08      	cmp	r3, #8
 8006f3e:	d11b      	bne.n	8006f78 <HAL_TIM_IC_ConfigChannel+0xe2>
 8006f40:	68fb      	ldr	r3, [r7, #12]
 8006f42:	6818      	ldr	r0, [r3, #0]
 8006f44:	68bb      	ldr	r3, [r7, #8]
 8006f46:	6819      	ldr	r1, [r3, #0]
 8006f48:	68bb      	ldr	r3, [r7, #8]
 8006f4a:	685a      	ldr	r2, [r3, #4]
 8006f4c:	68bb      	ldr	r3, [r7, #8]
 8006f4e:	68db      	ldr	r3, [r3, #12]
 8006f50:	f000 fd00 	bl	8007954 <TIM_TI3_SetConfig>
 8006f54:	68fb      	ldr	r3, [r7, #12]
 8006f56:	681b      	ldr	r3, [r3, #0]
 8006f58:	69da      	ldr	r2, [r3, #28]
 8006f5a:	68fb      	ldr	r3, [r7, #12]
 8006f5c:	681b      	ldr	r3, [r3, #0]
 8006f5e:	f022 020c 	bic.w	r2, r2, #12
 8006f62:	61da      	str	r2, [r3, #28]
 8006f64:	68fb      	ldr	r3, [r7, #12]
 8006f66:	681b      	ldr	r3, [r3, #0]
 8006f68:	69d9      	ldr	r1, [r3, #28]
 8006f6a:	68bb      	ldr	r3, [r7, #8]
 8006f6c:	689a      	ldr	r2, [r3, #8]
 8006f6e:	68fb      	ldr	r3, [r7, #12]
 8006f70:	681b      	ldr	r3, [r3, #0]
 8006f72:	430a      	orrs	r2, r1
 8006f74:	61da      	str	r2, [r3, #28]
 8006f76:	e021      	b.n	8006fbc <HAL_TIM_IC_ConfigChannel+0x126>
 8006f78:	687b      	ldr	r3, [r7, #4]
 8006f7a:	2b0c      	cmp	r3, #12
 8006f7c:	d11c      	bne.n	8006fb8 <HAL_TIM_IC_ConfigChannel+0x122>
 8006f7e:	68fb      	ldr	r3, [r7, #12]
 8006f80:	6818      	ldr	r0, [r3, #0]
 8006f82:	68bb      	ldr	r3, [r7, #8]
 8006f84:	6819      	ldr	r1, [r3, #0]
 8006f86:	68bb      	ldr	r3, [r7, #8]
 8006f88:	685a      	ldr	r2, [r3, #4]
 8006f8a:	68bb      	ldr	r3, [r7, #8]
 8006f8c:	68db      	ldr	r3, [r3, #12]
 8006f8e:	f000 fd1d 	bl	80079cc <TIM_TI4_SetConfig>
 8006f92:	68fb      	ldr	r3, [r7, #12]
 8006f94:	681b      	ldr	r3, [r3, #0]
 8006f96:	69da      	ldr	r2, [r3, #28]
 8006f98:	68fb      	ldr	r3, [r7, #12]
 8006f9a:	681b      	ldr	r3, [r3, #0]
 8006f9c:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8006fa0:	61da      	str	r2, [r3, #28]
 8006fa2:	68fb      	ldr	r3, [r7, #12]
 8006fa4:	681b      	ldr	r3, [r3, #0]
 8006fa6:	69d9      	ldr	r1, [r3, #28]
 8006fa8:	68bb      	ldr	r3, [r7, #8]
 8006faa:	689b      	ldr	r3, [r3, #8]
 8006fac:	021a      	lsls	r2, r3, #8
 8006fae:	68fb      	ldr	r3, [r7, #12]
 8006fb0:	681b      	ldr	r3, [r3, #0]
 8006fb2:	430a      	orrs	r2, r1
 8006fb4:	61da      	str	r2, [r3, #28]
 8006fb6:	e001      	b.n	8006fbc <HAL_TIM_IC_ConfigChannel+0x126>
 8006fb8:	2301      	movs	r3, #1
 8006fba:	75fb      	strb	r3, [r7, #23]
 8006fbc:	68fb      	ldr	r3, [r7, #12]
 8006fbe:	2200      	movs	r2, #0
 8006fc0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006fc4:	7dfb      	ldrb	r3, [r7, #23]
 8006fc6:	4618      	mov	r0, r3
 8006fc8:	3718      	adds	r7, #24
 8006fca:	46bd      	mov	sp, r7
 8006fcc:	bd80      	pop	{r7, pc}
	...

08006fd0 <HAL_TIM_PWM_ConfigChannel>:
 8006fd0:	b580      	push	{r7, lr}
 8006fd2:	b086      	sub	sp, #24
 8006fd4:	af00      	add	r7, sp, #0
 8006fd6:	60f8      	str	r0, [r7, #12]
 8006fd8:	60b9      	str	r1, [r7, #8]
 8006fda:	607a      	str	r2, [r7, #4]
 8006fdc:	2300      	movs	r3, #0
 8006fde:	75fb      	strb	r3, [r7, #23]
 8006fe0:	68fb      	ldr	r3, [r7, #12]
 8006fe2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006fe6:	2b01      	cmp	r3, #1
 8006fe8:	d101      	bne.n	8006fee <HAL_TIM_PWM_ConfigChannel+0x1e>
 8006fea:	2302      	movs	r3, #2
 8006fec:	e0ae      	b.n	800714c <HAL_TIM_PWM_ConfigChannel+0x17c>
 8006fee:	68fb      	ldr	r3, [r7, #12]
 8006ff0:	2201      	movs	r2, #1
 8006ff2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006ff6:	687b      	ldr	r3, [r7, #4]
 8006ff8:	2b0c      	cmp	r3, #12
 8006ffa:	f200 809f 	bhi.w	800713c <HAL_TIM_PWM_ConfigChannel+0x16c>
 8006ffe:	a201      	add	r2, pc, #4	; (adr r2, 8007004 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8007000:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007004:	08007039 	.word	0x08007039
 8007008:	0800713d 	.word	0x0800713d
 800700c:	0800713d 	.word	0x0800713d
 8007010:	0800713d 	.word	0x0800713d
 8007014:	08007079 	.word	0x08007079
 8007018:	0800713d 	.word	0x0800713d
 800701c:	0800713d 	.word	0x0800713d
 8007020:	0800713d 	.word	0x0800713d
 8007024:	080070bb 	.word	0x080070bb
 8007028:	0800713d 	.word	0x0800713d
 800702c:	0800713d 	.word	0x0800713d
 8007030:	0800713d 	.word	0x0800713d
 8007034:	080070fb 	.word	0x080070fb
 8007038:	68fb      	ldr	r3, [r7, #12]
 800703a:	681b      	ldr	r3, [r3, #0]
 800703c:	68b9      	ldr	r1, [r7, #8]
 800703e:	4618      	mov	r0, r3
 8007040:	f000 f9f8 	bl	8007434 <TIM_OC1_SetConfig>
 8007044:	68fb      	ldr	r3, [r7, #12]
 8007046:	681b      	ldr	r3, [r3, #0]
 8007048:	699a      	ldr	r2, [r3, #24]
 800704a:	68fb      	ldr	r3, [r7, #12]
 800704c:	681b      	ldr	r3, [r3, #0]
 800704e:	f042 0208 	orr.w	r2, r2, #8
 8007052:	619a      	str	r2, [r3, #24]
 8007054:	68fb      	ldr	r3, [r7, #12]
 8007056:	681b      	ldr	r3, [r3, #0]
 8007058:	699a      	ldr	r2, [r3, #24]
 800705a:	68fb      	ldr	r3, [r7, #12]
 800705c:	681b      	ldr	r3, [r3, #0]
 800705e:	f022 0204 	bic.w	r2, r2, #4
 8007062:	619a      	str	r2, [r3, #24]
 8007064:	68fb      	ldr	r3, [r7, #12]
 8007066:	681b      	ldr	r3, [r3, #0]
 8007068:	6999      	ldr	r1, [r3, #24]
 800706a:	68bb      	ldr	r3, [r7, #8]
 800706c:	691a      	ldr	r2, [r3, #16]
 800706e:	68fb      	ldr	r3, [r7, #12]
 8007070:	681b      	ldr	r3, [r3, #0]
 8007072:	430a      	orrs	r2, r1
 8007074:	619a      	str	r2, [r3, #24]
 8007076:	e064      	b.n	8007142 <HAL_TIM_PWM_ConfigChannel+0x172>
 8007078:	68fb      	ldr	r3, [r7, #12]
 800707a:	681b      	ldr	r3, [r3, #0]
 800707c:	68b9      	ldr	r1, [r7, #8]
 800707e:	4618      	mov	r0, r3
 8007080:	f000 fa3e 	bl	8007500 <TIM_OC2_SetConfig>
 8007084:	68fb      	ldr	r3, [r7, #12]
 8007086:	681b      	ldr	r3, [r3, #0]
 8007088:	699a      	ldr	r2, [r3, #24]
 800708a:	68fb      	ldr	r3, [r7, #12]
 800708c:	681b      	ldr	r3, [r3, #0]
 800708e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8007092:	619a      	str	r2, [r3, #24]
 8007094:	68fb      	ldr	r3, [r7, #12]
 8007096:	681b      	ldr	r3, [r3, #0]
 8007098:	699a      	ldr	r2, [r3, #24]
 800709a:	68fb      	ldr	r3, [r7, #12]
 800709c:	681b      	ldr	r3, [r3, #0]
 800709e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80070a2:	619a      	str	r2, [r3, #24]
 80070a4:	68fb      	ldr	r3, [r7, #12]
 80070a6:	681b      	ldr	r3, [r3, #0]
 80070a8:	6999      	ldr	r1, [r3, #24]
 80070aa:	68bb      	ldr	r3, [r7, #8]
 80070ac:	691b      	ldr	r3, [r3, #16]
 80070ae:	021a      	lsls	r2, r3, #8
 80070b0:	68fb      	ldr	r3, [r7, #12]
 80070b2:	681b      	ldr	r3, [r3, #0]
 80070b4:	430a      	orrs	r2, r1
 80070b6:	619a      	str	r2, [r3, #24]
 80070b8:	e043      	b.n	8007142 <HAL_TIM_PWM_ConfigChannel+0x172>
 80070ba:	68fb      	ldr	r3, [r7, #12]
 80070bc:	681b      	ldr	r3, [r3, #0]
 80070be:	68b9      	ldr	r1, [r7, #8]
 80070c0:	4618      	mov	r0, r3
 80070c2:	f000 fa89 	bl	80075d8 <TIM_OC3_SetConfig>
 80070c6:	68fb      	ldr	r3, [r7, #12]
 80070c8:	681b      	ldr	r3, [r3, #0]
 80070ca:	69da      	ldr	r2, [r3, #28]
 80070cc:	68fb      	ldr	r3, [r7, #12]
 80070ce:	681b      	ldr	r3, [r3, #0]
 80070d0:	f042 0208 	orr.w	r2, r2, #8
 80070d4:	61da      	str	r2, [r3, #28]
 80070d6:	68fb      	ldr	r3, [r7, #12]
 80070d8:	681b      	ldr	r3, [r3, #0]
 80070da:	69da      	ldr	r2, [r3, #28]
 80070dc:	68fb      	ldr	r3, [r7, #12]
 80070de:	681b      	ldr	r3, [r3, #0]
 80070e0:	f022 0204 	bic.w	r2, r2, #4
 80070e4:	61da      	str	r2, [r3, #28]
 80070e6:	68fb      	ldr	r3, [r7, #12]
 80070e8:	681b      	ldr	r3, [r3, #0]
 80070ea:	69d9      	ldr	r1, [r3, #28]
 80070ec:	68bb      	ldr	r3, [r7, #8]
 80070ee:	691a      	ldr	r2, [r3, #16]
 80070f0:	68fb      	ldr	r3, [r7, #12]
 80070f2:	681b      	ldr	r3, [r3, #0]
 80070f4:	430a      	orrs	r2, r1
 80070f6:	61da      	str	r2, [r3, #28]
 80070f8:	e023      	b.n	8007142 <HAL_TIM_PWM_ConfigChannel+0x172>
 80070fa:	68fb      	ldr	r3, [r7, #12]
 80070fc:	681b      	ldr	r3, [r3, #0]
 80070fe:	68b9      	ldr	r1, [r7, #8]
 8007100:	4618      	mov	r0, r3
 8007102:	f000 fad3 	bl	80076ac <TIM_OC4_SetConfig>
 8007106:	68fb      	ldr	r3, [r7, #12]
 8007108:	681b      	ldr	r3, [r3, #0]
 800710a:	69da      	ldr	r2, [r3, #28]
 800710c:	68fb      	ldr	r3, [r7, #12]
 800710e:	681b      	ldr	r3, [r3, #0]
 8007110:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8007114:	61da      	str	r2, [r3, #28]
 8007116:	68fb      	ldr	r3, [r7, #12]
 8007118:	681b      	ldr	r3, [r3, #0]
 800711a:	69da      	ldr	r2, [r3, #28]
 800711c:	68fb      	ldr	r3, [r7, #12]
 800711e:	681b      	ldr	r3, [r3, #0]
 8007120:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007124:	61da      	str	r2, [r3, #28]
 8007126:	68fb      	ldr	r3, [r7, #12]
 8007128:	681b      	ldr	r3, [r3, #0]
 800712a:	69d9      	ldr	r1, [r3, #28]
 800712c:	68bb      	ldr	r3, [r7, #8]
 800712e:	691b      	ldr	r3, [r3, #16]
 8007130:	021a      	lsls	r2, r3, #8
 8007132:	68fb      	ldr	r3, [r7, #12]
 8007134:	681b      	ldr	r3, [r3, #0]
 8007136:	430a      	orrs	r2, r1
 8007138:	61da      	str	r2, [r3, #28]
 800713a:	e002      	b.n	8007142 <HAL_TIM_PWM_ConfigChannel+0x172>
 800713c:	2301      	movs	r3, #1
 800713e:	75fb      	strb	r3, [r7, #23]
 8007140:	bf00      	nop
 8007142:	68fb      	ldr	r3, [r7, #12]
 8007144:	2200      	movs	r2, #0
 8007146:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800714a:	7dfb      	ldrb	r3, [r7, #23]
 800714c:	4618      	mov	r0, r3
 800714e:	3718      	adds	r7, #24
 8007150:	46bd      	mov	sp, r7
 8007152:	bd80      	pop	{r7, pc}

08007154 <HAL_TIM_ConfigClockSource>:
 8007154:	b580      	push	{r7, lr}
 8007156:	b084      	sub	sp, #16
 8007158:	af00      	add	r7, sp, #0
 800715a:	6078      	str	r0, [r7, #4]
 800715c:	6039      	str	r1, [r7, #0]
 800715e:	2300      	movs	r3, #0
 8007160:	73fb      	strb	r3, [r7, #15]
 8007162:	687b      	ldr	r3, [r7, #4]
 8007164:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007168:	2b01      	cmp	r3, #1
 800716a:	d101      	bne.n	8007170 <HAL_TIM_ConfigClockSource+0x1c>
 800716c:	2302      	movs	r3, #2
 800716e:	e0b4      	b.n	80072da <HAL_TIM_ConfigClockSource+0x186>
 8007170:	687b      	ldr	r3, [r7, #4]
 8007172:	2201      	movs	r2, #1
 8007174:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007178:	687b      	ldr	r3, [r7, #4]
 800717a:	2202      	movs	r2, #2
 800717c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007180:	687b      	ldr	r3, [r7, #4]
 8007182:	681b      	ldr	r3, [r3, #0]
 8007184:	689b      	ldr	r3, [r3, #8]
 8007186:	60bb      	str	r3, [r7, #8]
 8007188:	68bb      	ldr	r3, [r7, #8]
 800718a:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800718e:	60bb      	str	r3, [r7, #8]
 8007190:	68bb      	ldr	r3, [r7, #8]
 8007192:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8007196:	60bb      	str	r3, [r7, #8]
 8007198:	687b      	ldr	r3, [r7, #4]
 800719a:	681b      	ldr	r3, [r3, #0]
 800719c:	68ba      	ldr	r2, [r7, #8]
 800719e:	609a      	str	r2, [r3, #8]
 80071a0:	683b      	ldr	r3, [r7, #0]
 80071a2:	681b      	ldr	r3, [r3, #0]
 80071a4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80071a8:	d03e      	beq.n	8007228 <HAL_TIM_ConfigClockSource+0xd4>
 80071aa:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80071ae:	f200 8087 	bhi.w	80072c0 <HAL_TIM_ConfigClockSource+0x16c>
 80071b2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80071b6:	f000 8086 	beq.w	80072c6 <HAL_TIM_ConfigClockSource+0x172>
 80071ba:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80071be:	d87f      	bhi.n	80072c0 <HAL_TIM_ConfigClockSource+0x16c>
 80071c0:	2b70      	cmp	r3, #112	; 0x70
 80071c2:	d01a      	beq.n	80071fa <HAL_TIM_ConfigClockSource+0xa6>
 80071c4:	2b70      	cmp	r3, #112	; 0x70
 80071c6:	d87b      	bhi.n	80072c0 <HAL_TIM_ConfigClockSource+0x16c>
 80071c8:	2b60      	cmp	r3, #96	; 0x60
 80071ca:	d050      	beq.n	800726e <HAL_TIM_ConfigClockSource+0x11a>
 80071cc:	2b60      	cmp	r3, #96	; 0x60
 80071ce:	d877      	bhi.n	80072c0 <HAL_TIM_ConfigClockSource+0x16c>
 80071d0:	2b50      	cmp	r3, #80	; 0x50
 80071d2:	d03c      	beq.n	800724e <HAL_TIM_ConfigClockSource+0xfa>
 80071d4:	2b50      	cmp	r3, #80	; 0x50
 80071d6:	d873      	bhi.n	80072c0 <HAL_TIM_ConfigClockSource+0x16c>
 80071d8:	2b40      	cmp	r3, #64	; 0x40
 80071da:	d058      	beq.n	800728e <HAL_TIM_ConfigClockSource+0x13a>
 80071dc:	2b40      	cmp	r3, #64	; 0x40
 80071de:	d86f      	bhi.n	80072c0 <HAL_TIM_ConfigClockSource+0x16c>
 80071e0:	2b30      	cmp	r3, #48	; 0x30
 80071e2:	d064      	beq.n	80072ae <HAL_TIM_ConfigClockSource+0x15a>
 80071e4:	2b30      	cmp	r3, #48	; 0x30
 80071e6:	d86b      	bhi.n	80072c0 <HAL_TIM_ConfigClockSource+0x16c>
 80071e8:	2b20      	cmp	r3, #32
 80071ea:	d060      	beq.n	80072ae <HAL_TIM_ConfigClockSource+0x15a>
 80071ec:	2b20      	cmp	r3, #32
 80071ee:	d867      	bhi.n	80072c0 <HAL_TIM_ConfigClockSource+0x16c>
 80071f0:	2b00      	cmp	r3, #0
 80071f2:	d05c      	beq.n	80072ae <HAL_TIM_ConfigClockSource+0x15a>
 80071f4:	2b10      	cmp	r3, #16
 80071f6:	d05a      	beq.n	80072ae <HAL_TIM_ConfigClockSource+0x15a>
 80071f8:	e062      	b.n	80072c0 <HAL_TIM_ConfigClockSource+0x16c>
 80071fa:	687b      	ldr	r3, [r7, #4]
 80071fc:	6818      	ldr	r0, [r3, #0]
 80071fe:	683b      	ldr	r3, [r7, #0]
 8007200:	6899      	ldr	r1, [r3, #8]
 8007202:	683b      	ldr	r3, [r7, #0]
 8007204:	685a      	ldr	r2, [r3, #4]
 8007206:	683b      	ldr	r3, [r7, #0]
 8007208:	68db      	ldr	r3, [r3, #12]
 800720a:	f000 fc37 	bl	8007a7c <TIM_ETR_SetConfig>
 800720e:	687b      	ldr	r3, [r7, #4]
 8007210:	681b      	ldr	r3, [r3, #0]
 8007212:	689b      	ldr	r3, [r3, #8]
 8007214:	60bb      	str	r3, [r7, #8]
 8007216:	68bb      	ldr	r3, [r7, #8]
 8007218:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800721c:	60bb      	str	r3, [r7, #8]
 800721e:	687b      	ldr	r3, [r7, #4]
 8007220:	681b      	ldr	r3, [r3, #0]
 8007222:	68ba      	ldr	r2, [r7, #8]
 8007224:	609a      	str	r2, [r3, #8]
 8007226:	e04f      	b.n	80072c8 <HAL_TIM_ConfigClockSource+0x174>
 8007228:	687b      	ldr	r3, [r7, #4]
 800722a:	6818      	ldr	r0, [r3, #0]
 800722c:	683b      	ldr	r3, [r7, #0]
 800722e:	6899      	ldr	r1, [r3, #8]
 8007230:	683b      	ldr	r3, [r7, #0]
 8007232:	685a      	ldr	r2, [r3, #4]
 8007234:	683b      	ldr	r3, [r7, #0]
 8007236:	68db      	ldr	r3, [r3, #12]
 8007238:	f000 fc20 	bl	8007a7c <TIM_ETR_SetConfig>
 800723c:	687b      	ldr	r3, [r7, #4]
 800723e:	681b      	ldr	r3, [r3, #0]
 8007240:	689a      	ldr	r2, [r3, #8]
 8007242:	687b      	ldr	r3, [r7, #4]
 8007244:	681b      	ldr	r3, [r3, #0]
 8007246:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800724a:	609a      	str	r2, [r3, #8]
 800724c:	e03c      	b.n	80072c8 <HAL_TIM_ConfigClockSource+0x174>
 800724e:	687b      	ldr	r3, [r7, #4]
 8007250:	6818      	ldr	r0, [r3, #0]
 8007252:	683b      	ldr	r3, [r7, #0]
 8007254:	6859      	ldr	r1, [r3, #4]
 8007256:	683b      	ldr	r3, [r7, #0]
 8007258:	68db      	ldr	r3, [r3, #12]
 800725a:	461a      	mov	r2, r3
 800725c:	f000 fade 	bl	800781c <TIM_TI1_ConfigInputStage>
 8007260:	687b      	ldr	r3, [r7, #4]
 8007262:	681b      	ldr	r3, [r3, #0]
 8007264:	2150      	movs	r1, #80	; 0x50
 8007266:	4618      	mov	r0, r3
 8007268:	f000 fbed 	bl	8007a46 <TIM_ITRx_SetConfig>
 800726c:	e02c      	b.n	80072c8 <HAL_TIM_ConfigClockSource+0x174>
 800726e:	687b      	ldr	r3, [r7, #4]
 8007270:	6818      	ldr	r0, [r3, #0]
 8007272:	683b      	ldr	r3, [r7, #0]
 8007274:	6859      	ldr	r1, [r3, #4]
 8007276:	683b      	ldr	r3, [r7, #0]
 8007278:	68db      	ldr	r3, [r3, #12]
 800727a:	461a      	mov	r2, r3
 800727c:	f000 fb3a 	bl	80078f4 <TIM_TI2_ConfigInputStage>
 8007280:	687b      	ldr	r3, [r7, #4]
 8007282:	681b      	ldr	r3, [r3, #0]
 8007284:	2160      	movs	r1, #96	; 0x60
 8007286:	4618      	mov	r0, r3
 8007288:	f000 fbdd 	bl	8007a46 <TIM_ITRx_SetConfig>
 800728c:	e01c      	b.n	80072c8 <HAL_TIM_ConfigClockSource+0x174>
 800728e:	687b      	ldr	r3, [r7, #4]
 8007290:	6818      	ldr	r0, [r3, #0]
 8007292:	683b      	ldr	r3, [r7, #0]
 8007294:	6859      	ldr	r1, [r3, #4]
 8007296:	683b      	ldr	r3, [r7, #0]
 8007298:	68db      	ldr	r3, [r3, #12]
 800729a:	461a      	mov	r2, r3
 800729c:	f000 fabe 	bl	800781c <TIM_TI1_ConfigInputStage>
 80072a0:	687b      	ldr	r3, [r7, #4]
 80072a2:	681b      	ldr	r3, [r3, #0]
 80072a4:	2140      	movs	r1, #64	; 0x40
 80072a6:	4618      	mov	r0, r3
 80072a8:	f000 fbcd 	bl	8007a46 <TIM_ITRx_SetConfig>
 80072ac:	e00c      	b.n	80072c8 <HAL_TIM_ConfigClockSource+0x174>
 80072ae:	687b      	ldr	r3, [r7, #4]
 80072b0:	681a      	ldr	r2, [r3, #0]
 80072b2:	683b      	ldr	r3, [r7, #0]
 80072b4:	681b      	ldr	r3, [r3, #0]
 80072b6:	4619      	mov	r1, r3
 80072b8:	4610      	mov	r0, r2
 80072ba:	f000 fbc4 	bl	8007a46 <TIM_ITRx_SetConfig>
 80072be:	e003      	b.n	80072c8 <HAL_TIM_ConfigClockSource+0x174>
 80072c0:	2301      	movs	r3, #1
 80072c2:	73fb      	strb	r3, [r7, #15]
 80072c4:	e000      	b.n	80072c8 <HAL_TIM_ConfigClockSource+0x174>
 80072c6:	bf00      	nop
 80072c8:	687b      	ldr	r3, [r7, #4]
 80072ca:	2201      	movs	r2, #1
 80072cc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80072d0:	687b      	ldr	r3, [r7, #4]
 80072d2:	2200      	movs	r2, #0
 80072d4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80072d8:	7bfb      	ldrb	r3, [r7, #15]
 80072da:	4618      	mov	r0, r3
 80072dc:	3710      	adds	r7, #16
 80072de:	46bd      	mov	sp, r7
 80072e0:	bd80      	pop	{r7, pc}

080072e2 <HAL_TIM_OC_DelayElapsedCallback>:
 80072e2:	b480      	push	{r7}
 80072e4:	b083      	sub	sp, #12
 80072e6:	af00      	add	r7, sp, #0
 80072e8:	6078      	str	r0, [r7, #4]
 80072ea:	bf00      	nop
 80072ec:	370c      	adds	r7, #12
 80072ee:	46bd      	mov	sp, r7
 80072f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80072f4:	4770      	bx	lr

080072f6 <HAL_TIM_IC_CaptureCallback>:
 80072f6:	b480      	push	{r7}
 80072f8:	b083      	sub	sp, #12
 80072fa:	af00      	add	r7, sp, #0
 80072fc:	6078      	str	r0, [r7, #4]
 80072fe:	bf00      	nop
 8007300:	370c      	adds	r7, #12
 8007302:	46bd      	mov	sp, r7
 8007304:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007308:	4770      	bx	lr

0800730a <HAL_TIM_PWM_PulseFinishedCallback>:
 800730a:	b480      	push	{r7}
 800730c:	b083      	sub	sp, #12
 800730e:	af00      	add	r7, sp, #0
 8007310:	6078      	str	r0, [r7, #4]
 8007312:	bf00      	nop
 8007314:	370c      	adds	r7, #12
 8007316:	46bd      	mov	sp, r7
 8007318:	f85d 7b04 	ldr.w	r7, [sp], #4
 800731c:	4770      	bx	lr

0800731e <HAL_TIM_TriggerCallback>:
 800731e:	b480      	push	{r7}
 8007320:	b083      	sub	sp, #12
 8007322:	af00      	add	r7, sp, #0
 8007324:	6078      	str	r0, [r7, #4]
 8007326:	bf00      	nop
 8007328:	370c      	adds	r7, #12
 800732a:	46bd      	mov	sp, r7
 800732c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007330:	4770      	bx	lr
	...

08007334 <TIM_Base_SetConfig>:
 8007334:	b480      	push	{r7}
 8007336:	b085      	sub	sp, #20
 8007338:	af00      	add	r7, sp, #0
 800733a:	6078      	str	r0, [r7, #4]
 800733c:	6039      	str	r1, [r7, #0]
 800733e:	687b      	ldr	r3, [r7, #4]
 8007340:	681b      	ldr	r3, [r3, #0]
 8007342:	60fb      	str	r3, [r7, #12]
 8007344:	687b      	ldr	r3, [r7, #4]
 8007346:	4a34      	ldr	r2, [pc, #208]	; (8007418 <TIM_Base_SetConfig+0xe4>)
 8007348:	4293      	cmp	r3, r2
 800734a:	d00f      	beq.n	800736c <TIM_Base_SetConfig+0x38>
 800734c:	687b      	ldr	r3, [r7, #4]
 800734e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007352:	d00b      	beq.n	800736c <TIM_Base_SetConfig+0x38>
 8007354:	687b      	ldr	r3, [r7, #4]
 8007356:	4a31      	ldr	r2, [pc, #196]	; (800741c <TIM_Base_SetConfig+0xe8>)
 8007358:	4293      	cmp	r3, r2
 800735a:	d007      	beq.n	800736c <TIM_Base_SetConfig+0x38>
 800735c:	687b      	ldr	r3, [r7, #4]
 800735e:	4a30      	ldr	r2, [pc, #192]	; (8007420 <TIM_Base_SetConfig+0xec>)
 8007360:	4293      	cmp	r3, r2
 8007362:	d003      	beq.n	800736c <TIM_Base_SetConfig+0x38>
 8007364:	687b      	ldr	r3, [r7, #4]
 8007366:	4a2f      	ldr	r2, [pc, #188]	; (8007424 <TIM_Base_SetConfig+0xf0>)
 8007368:	4293      	cmp	r3, r2
 800736a:	d108      	bne.n	800737e <TIM_Base_SetConfig+0x4a>
 800736c:	68fb      	ldr	r3, [r7, #12]
 800736e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007372:	60fb      	str	r3, [r7, #12]
 8007374:	683b      	ldr	r3, [r7, #0]
 8007376:	685b      	ldr	r3, [r3, #4]
 8007378:	68fa      	ldr	r2, [r7, #12]
 800737a:	4313      	orrs	r3, r2
 800737c:	60fb      	str	r3, [r7, #12]
 800737e:	687b      	ldr	r3, [r7, #4]
 8007380:	4a25      	ldr	r2, [pc, #148]	; (8007418 <TIM_Base_SetConfig+0xe4>)
 8007382:	4293      	cmp	r3, r2
 8007384:	d01b      	beq.n	80073be <TIM_Base_SetConfig+0x8a>
 8007386:	687b      	ldr	r3, [r7, #4]
 8007388:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800738c:	d017      	beq.n	80073be <TIM_Base_SetConfig+0x8a>
 800738e:	687b      	ldr	r3, [r7, #4]
 8007390:	4a22      	ldr	r2, [pc, #136]	; (800741c <TIM_Base_SetConfig+0xe8>)
 8007392:	4293      	cmp	r3, r2
 8007394:	d013      	beq.n	80073be <TIM_Base_SetConfig+0x8a>
 8007396:	687b      	ldr	r3, [r7, #4]
 8007398:	4a21      	ldr	r2, [pc, #132]	; (8007420 <TIM_Base_SetConfig+0xec>)
 800739a:	4293      	cmp	r3, r2
 800739c:	d00f      	beq.n	80073be <TIM_Base_SetConfig+0x8a>
 800739e:	687b      	ldr	r3, [r7, #4]
 80073a0:	4a20      	ldr	r2, [pc, #128]	; (8007424 <TIM_Base_SetConfig+0xf0>)
 80073a2:	4293      	cmp	r3, r2
 80073a4:	d00b      	beq.n	80073be <TIM_Base_SetConfig+0x8a>
 80073a6:	687b      	ldr	r3, [r7, #4]
 80073a8:	4a1f      	ldr	r2, [pc, #124]	; (8007428 <TIM_Base_SetConfig+0xf4>)
 80073aa:	4293      	cmp	r3, r2
 80073ac:	d007      	beq.n	80073be <TIM_Base_SetConfig+0x8a>
 80073ae:	687b      	ldr	r3, [r7, #4]
 80073b0:	4a1e      	ldr	r2, [pc, #120]	; (800742c <TIM_Base_SetConfig+0xf8>)
 80073b2:	4293      	cmp	r3, r2
 80073b4:	d003      	beq.n	80073be <TIM_Base_SetConfig+0x8a>
 80073b6:	687b      	ldr	r3, [r7, #4]
 80073b8:	4a1d      	ldr	r2, [pc, #116]	; (8007430 <TIM_Base_SetConfig+0xfc>)
 80073ba:	4293      	cmp	r3, r2
 80073bc:	d108      	bne.n	80073d0 <TIM_Base_SetConfig+0x9c>
 80073be:	68fb      	ldr	r3, [r7, #12]
 80073c0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80073c4:	60fb      	str	r3, [r7, #12]
 80073c6:	683b      	ldr	r3, [r7, #0]
 80073c8:	68db      	ldr	r3, [r3, #12]
 80073ca:	68fa      	ldr	r2, [r7, #12]
 80073cc:	4313      	orrs	r3, r2
 80073ce:	60fb      	str	r3, [r7, #12]
 80073d0:	68fb      	ldr	r3, [r7, #12]
 80073d2:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80073d6:	683b      	ldr	r3, [r7, #0]
 80073d8:	695b      	ldr	r3, [r3, #20]
 80073da:	4313      	orrs	r3, r2
 80073dc:	60fb      	str	r3, [r7, #12]
 80073de:	687b      	ldr	r3, [r7, #4]
 80073e0:	68fa      	ldr	r2, [r7, #12]
 80073e2:	601a      	str	r2, [r3, #0]
 80073e4:	683b      	ldr	r3, [r7, #0]
 80073e6:	689a      	ldr	r2, [r3, #8]
 80073e8:	687b      	ldr	r3, [r7, #4]
 80073ea:	62da      	str	r2, [r3, #44]	; 0x2c
 80073ec:	683b      	ldr	r3, [r7, #0]
 80073ee:	681a      	ldr	r2, [r3, #0]
 80073f0:	687b      	ldr	r3, [r7, #4]
 80073f2:	629a      	str	r2, [r3, #40]	; 0x28
 80073f4:	687b      	ldr	r3, [r7, #4]
 80073f6:	4a08      	ldr	r2, [pc, #32]	; (8007418 <TIM_Base_SetConfig+0xe4>)
 80073f8:	4293      	cmp	r3, r2
 80073fa:	d103      	bne.n	8007404 <TIM_Base_SetConfig+0xd0>
 80073fc:	683b      	ldr	r3, [r7, #0]
 80073fe:	691a      	ldr	r2, [r3, #16]
 8007400:	687b      	ldr	r3, [r7, #4]
 8007402:	631a      	str	r2, [r3, #48]	; 0x30
 8007404:	687b      	ldr	r3, [r7, #4]
 8007406:	2201      	movs	r2, #1
 8007408:	615a      	str	r2, [r3, #20]
 800740a:	bf00      	nop
 800740c:	3714      	adds	r7, #20
 800740e:	46bd      	mov	sp, r7
 8007410:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007414:	4770      	bx	lr
 8007416:	bf00      	nop
 8007418:	40010000 	.word	0x40010000
 800741c:	40000400 	.word	0x40000400
 8007420:	40000800 	.word	0x40000800
 8007424:	40000c00 	.word	0x40000c00
 8007428:	40014000 	.word	0x40014000
 800742c:	40014400 	.word	0x40014400
 8007430:	40014800 	.word	0x40014800

08007434 <TIM_OC1_SetConfig>:
 8007434:	b480      	push	{r7}
 8007436:	b087      	sub	sp, #28
 8007438:	af00      	add	r7, sp, #0
 800743a:	6078      	str	r0, [r7, #4]
 800743c:	6039      	str	r1, [r7, #0]
 800743e:	687b      	ldr	r3, [r7, #4]
 8007440:	6a1b      	ldr	r3, [r3, #32]
 8007442:	f023 0201 	bic.w	r2, r3, #1
 8007446:	687b      	ldr	r3, [r7, #4]
 8007448:	621a      	str	r2, [r3, #32]
 800744a:	687b      	ldr	r3, [r7, #4]
 800744c:	6a1b      	ldr	r3, [r3, #32]
 800744e:	617b      	str	r3, [r7, #20]
 8007450:	687b      	ldr	r3, [r7, #4]
 8007452:	685b      	ldr	r3, [r3, #4]
 8007454:	613b      	str	r3, [r7, #16]
 8007456:	687b      	ldr	r3, [r7, #4]
 8007458:	699b      	ldr	r3, [r3, #24]
 800745a:	60fb      	str	r3, [r7, #12]
 800745c:	68fb      	ldr	r3, [r7, #12]
 800745e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007462:	60fb      	str	r3, [r7, #12]
 8007464:	68fb      	ldr	r3, [r7, #12]
 8007466:	f023 0303 	bic.w	r3, r3, #3
 800746a:	60fb      	str	r3, [r7, #12]
 800746c:	683b      	ldr	r3, [r7, #0]
 800746e:	681b      	ldr	r3, [r3, #0]
 8007470:	68fa      	ldr	r2, [r7, #12]
 8007472:	4313      	orrs	r3, r2
 8007474:	60fb      	str	r3, [r7, #12]
 8007476:	697b      	ldr	r3, [r7, #20]
 8007478:	f023 0302 	bic.w	r3, r3, #2
 800747c:	617b      	str	r3, [r7, #20]
 800747e:	683b      	ldr	r3, [r7, #0]
 8007480:	689b      	ldr	r3, [r3, #8]
 8007482:	697a      	ldr	r2, [r7, #20]
 8007484:	4313      	orrs	r3, r2
 8007486:	617b      	str	r3, [r7, #20]
 8007488:	687b      	ldr	r3, [r7, #4]
 800748a:	4a1c      	ldr	r2, [pc, #112]	; (80074fc <TIM_OC1_SetConfig+0xc8>)
 800748c:	4293      	cmp	r3, r2
 800748e:	d10c      	bne.n	80074aa <TIM_OC1_SetConfig+0x76>
 8007490:	697b      	ldr	r3, [r7, #20]
 8007492:	f023 0308 	bic.w	r3, r3, #8
 8007496:	617b      	str	r3, [r7, #20]
 8007498:	683b      	ldr	r3, [r7, #0]
 800749a:	68db      	ldr	r3, [r3, #12]
 800749c:	697a      	ldr	r2, [r7, #20]
 800749e:	4313      	orrs	r3, r2
 80074a0:	617b      	str	r3, [r7, #20]
 80074a2:	697b      	ldr	r3, [r7, #20]
 80074a4:	f023 0304 	bic.w	r3, r3, #4
 80074a8:	617b      	str	r3, [r7, #20]
 80074aa:	687b      	ldr	r3, [r7, #4]
 80074ac:	4a13      	ldr	r2, [pc, #76]	; (80074fc <TIM_OC1_SetConfig+0xc8>)
 80074ae:	4293      	cmp	r3, r2
 80074b0:	d111      	bne.n	80074d6 <TIM_OC1_SetConfig+0xa2>
 80074b2:	693b      	ldr	r3, [r7, #16]
 80074b4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80074b8:	613b      	str	r3, [r7, #16]
 80074ba:	693b      	ldr	r3, [r7, #16]
 80074bc:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80074c0:	613b      	str	r3, [r7, #16]
 80074c2:	683b      	ldr	r3, [r7, #0]
 80074c4:	695b      	ldr	r3, [r3, #20]
 80074c6:	693a      	ldr	r2, [r7, #16]
 80074c8:	4313      	orrs	r3, r2
 80074ca:	613b      	str	r3, [r7, #16]
 80074cc:	683b      	ldr	r3, [r7, #0]
 80074ce:	699b      	ldr	r3, [r3, #24]
 80074d0:	693a      	ldr	r2, [r7, #16]
 80074d2:	4313      	orrs	r3, r2
 80074d4:	613b      	str	r3, [r7, #16]
 80074d6:	687b      	ldr	r3, [r7, #4]
 80074d8:	693a      	ldr	r2, [r7, #16]
 80074da:	605a      	str	r2, [r3, #4]
 80074dc:	687b      	ldr	r3, [r7, #4]
 80074de:	68fa      	ldr	r2, [r7, #12]
 80074e0:	619a      	str	r2, [r3, #24]
 80074e2:	683b      	ldr	r3, [r7, #0]
 80074e4:	685a      	ldr	r2, [r3, #4]
 80074e6:	687b      	ldr	r3, [r7, #4]
 80074e8:	635a      	str	r2, [r3, #52]	; 0x34
 80074ea:	687b      	ldr	r3, [r7, #4]
 80074ec:	697a      	ldr	r2, [r7, #20]
 80074ee:	621a      	str	r2, [r3, #32]
 80074f0:	bf00      	nop
 80074f2:	371c      	adds	r7, #28
 80074f4:	46bd      	mov	sp, r7
 80074f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074fa:	4770      	bx	lr
 80074fc:	40010000 	.word	0x40010000

08007500 <TIM_OC2_SetConfig>:
 8007500:	b480      	push	{r7}
 8007502:	b087      	sub	sp, #28
 8007504:	af00      	add	r7, sp, #0
 8007506:	6078      	str	r0, [r7, #4]
 8007508:	6039      	str	r1, [r7, #0]
 800750a:	687b      	ldr	r3, [r7, #4]
 800750c:	6a1b      	ldr	r3, [r3, #32]
 800750e:	f023 0210 	bic.w	r2, r3, #16
 8007512:	687b      	ldr	r3, [r7, #4]
 8007514:	621a      	str	r2, [r3, #32]
 8007516:	687b      	ldr	r3, [r7, #4]
 8007518:	6a1b      	ldr	r3, [r3, #32]
 800751a:	617b      	str	r3, [r7, #20]
 800751c:	687b      	ldr	r3, [r7, #4]
 800751e:	685b      	ldr	r3, [r3, #4]
 8007520:	613b      	str	r3, [r7, #16]
 8007522:	687b      	ldr	r3, [r7, #4]
 8007524:	699b      	ldr	r3, [r3, #24]
 8007526:	60fb      	str	r3, [r7, #12]
 8007528:	68fb      	ldr	r3, [r7, #12]
 800752a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800752e:	60fb      	str	r3, [r7, #12]
 8007530:	68fb      	ldr	r3, [r7, #12]
 8007532:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8007536:	60fb      	str	r3, [r7, #12]
 8007538:	683b      	ldr	r3, [r7, #0]
 800753a:	681b      	ldr	r3, [r3, #0]
 800753c:	021b      	lsls	r3, r3, #8
 800753e:	68fa      	ldr	r2, [r7, #12]
 8007540:	4313      	orrs	r3, r2
 8007542:	60fb      	str	r3, [r7, #12]
 8007544:	697b      	ldr	r3, [r7, #20]
 8007546:	f023 0320 	bic.w	r3, r3, #32
 800754a:	617b      	str	r3, [r7, #20]
 800754c:	683b      	ldr	r3, [r7, #0]
 800754e:	689b      	ldr	r3, [r3, #8]
 8007550:	011b      	lsls	r3, r3, #4
 8007552:	697a      	ldr	r2, [r7, #20]
 8007554:	4313      	orrs	r3, r2
 8007556:	617b      	str	r3, [r7, #20]
 8007558:	687b      	ldr	r3, [r7, #4]
 800755a:	4a1e      	ldr	r2, [pc, #120]	; (80075d4 <TIM_OC2_SetConfig+0xd4>)
 800755c:	4293      	cmp	r3, r2
 800755e:	d10d      	bne.n	800757c <TIM_OC2_SetConfig+0x7c>
 8007560:	697b      	ldr	r3, [r7, #20]
 8007562:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8007566:	617b      	str	r3, [r7, #20]
 8007568:	683b      	ldr	r3, [r7, #0]
 800756a:	68db      	ldr	r3, [r3, #12]
 800756c:	011b      	lsls	r3, r3, #4
 800756e:	697a      	ldr	r2, [r7, #20]
 8007570:	4313      	orrs	r3, r2
 8007572:	617b      	str	r3, [r7, #20]
 8007574:	697b      	ldr	r3, [r7, #20]
 8007576:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800757a:	617b      	str	r3, [r7, #20]
 800757c:	687b      	ldr	r3, [r7, #4]
 800757e:	4a15      	ldr	r2, [pc, #84]	; (80075d4 <TIM_OC2_SetConfig+0xd4>)
 8007580:	4293      	cmp	r3, r2
 8007582:	d113      	bne.n	80075ac <TIM_OC2_SetConfig+0xac>
 8007584:	693b      	ldr	r3, [r7, #16]
 8007586:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800758a:	613b      	str	r3, [r7, #16]
 800758c:	693b      	ldr	r3, [r7, #16]
 800758e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8007592:	613b      	str	r3, [r7, #16]
 8007594:	683b      	ldr	r3, [r7, #0]
 8007596:	695b      	ldr	r3, [r3, #20]
 8007598:	009b      	lsls	r3, r3, #2
 800759a:	693a      	ldr	r2, [r7, #16]
 800759c:	4313      	orrs	r3, r2
 800759e:	613b      	str	r3, [r7, #16]
 80075a0:	683b      	ldr	r3, [r7, #0]
 80075a2:	699b      	ldr	r3, [r3, #24]
 80075a4:	009b      	lsls	r3, r3, #2
 80075a6:	693a      	ldr	r2, [r7, #16]
 80075a8:	4313      	orrs	r3, r2
 80075aa:	613b      	str	r3, [r7, #16]
 80075ac:	687b      	ldr	r3, [r7, #4]
 80075ae:	693a      	ldr	r2, [r7, #16]
 80075b0:	605a      	str	r2, [r3, #4]
 80075b2:	687b      	ldr	r3, [r7, #4]
 80075b4:	68fa      	ldr	r2, [r7, #12]
 80075b6:	619a      	str	r2, [r3, #24]
 80075b8:	683b      	ldr	r3, [r7, #0]
 80075ba:	685a      	ldr	r2, [r3, #4]
 80075bc:	687b      	ldr	r3, [r7, #4]
 80075be:	639a      	str	r2, [r3, #56]	; 0x38
 80075c0:	687b      	ldr	r3, [r7, #4]
 80075c2:	697a      	ldr	r2, [r7, #20]
 80075c4:	621a      	str	r2, [r3, #32]
 80075c6:	bf00      	nop
 80075c8:	371c      	adds	r7, #28
 80075ca:	46bd      	mov	sp, r7
 80075cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075d0:	4770      	bx	lr
 80075d2:	bf00      	nop
 80075d4:	40010000 	.word	0x40010000

080075d8 <TIM_OC3_SetConfig>:
 80075d8:	b480      	push	{r7}
 80075da:	b087      	sub	sp, #28
 80075dc:	af00      	add	r7, sp, #0
 80075de:	6078      	str	r0, [r7, #4]
 80075e0:	6039      	str	r1, [r7, #0]
 80075e2:	687b      	ldr	r3, [r7, #4]
 80075e4:	6a1b      	ldr	r3, [r3, #32]
 80075e6:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80075ea:	687b      	ldr	r3, [r7, #4]
 80075ec:	621a      	str	r2, [r3, #32]
 80075ee:	687b      	ldr	r3, [r7, #4]
 80075f0:	6a1b      	ldr	r3, [r3, #32]
 80075f2:	617b      	str	r3, [r7, #20]
 80075f4:	687b      	ldr	r3, [r7, #4]
 80075f6:	685b      	ldr	r3, [r3, #4]
 80075f8:	613b      	str	r3, [r7, #16]
 80075fa:	687b      	ldr	r3, [r7, #4]
 80075fc:	69db      	ldr	r3, [r3, #28]
 80075fe:	60fb      	str	r3, [r7, #12]
 8007600:	68fb      	ldr	r3, [r7, #12]
 8007602:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007606:	60fb      	str	r3, [r7, #12]
 8007608:	68fb      	ldr	r3, [r7, #12]
 800760a:	f023 0303 	bic.w	r3, r3, #3
 800760e:	60fb      	str	r3, [r7, #12]
 8007610:	683b      	ldr	r3, [r7, #0]
 8007612:	681b      	ldr	r3, [r3, #0]
 8007614:	68fa      	ldr	r2, [r7, #12]
 8007616:	4313      	orrs	r3, r2
 8007618:	60fb      	str	r3, [r7, #12]
 800761a:	697b      	ldr	r3, [r7, #20]
 800761c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8007620:	617b      	str	r3, [r7, #20]
 8007622:	683b      	ldr	r3, [r7, #0]
 8007624:	689b      	ldr	r3, [r3, #8]
 8007626:	021b      	lsls	r3, r3, #8
 8007628:	697a      	ldr	r2, [r7, #20]
 800762a:	4313      	orrs	r3, r2
 800762c:	617b      	str	r3, [r7, #20]
 800762e:	687b      	ldr	r3, [r7, #4]
 8007630:	4a1d      	ldr	r2, [pc, #116]	; (80076a8 <TIM_OC3_SetConfig+0xd0>)
 8007632:	4293      	cmp	r3, r2
 8007634:	d10d      	bne.n	8007652 <TIM_OC3_SetConfig+0x7a>
 8007636:	697b      	ldr	r3, [r7, #20]
 8007638:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800763c:	617b      	str	r3, [r7, #20]
 800763e:	683b      	ldr	r3, [r7, #0]
 8007640:	68db      	ldr	r3, [r3, #12]
 8007642:	021b      	lsls	r3, r3, #8
 8007644:	697a      	ldr	r2, [r7, #20]
 8007646:	4313      	orrs	r3, r2
 8007648:	617b      	str	r3, [r7, #20]
 800764a:	697b      	ldr	r3, [r7, #20]
 800764c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8007650:	617b      	str	r3, [r7, #20]
 8007652:	687b      	ldr	r3, [r7, #4]
 8007654:	4a14      	ldr	r2, [pc, #80]	; (80076a8 <TIM_OC3_SetConfig+0xd0>)
 8007656:	4293      	cmp	r3, r2
 8007658:	d113      	bne.n	8007682 <TIM_OC3_SetConfig+0xaa>
 800765a:	693b      	ldr	r3, [r7, #16]
 800765c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8007660:	613b      	str	r3, [r7, #16]
 8007662:	693b      	ldr	r3, [r7, #16]
 8007664:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8007668:	613b      	str	r3, [r7, #16]
 800766a:	683b      	ldr	r3, [r7, #0]
 800766c:	695b      	ldr	r3, [r3, #20]
 800766e:	011b      	lsls	r3, r3, #4
 8007670:	693a      	ldr	r2, [r7, #16]
 8007672:	4313      	orrs	r3, r2
 8007674:	613b      	str	r3, [r7, #16]
 8007676:	683b      	ldr	r3, [r7, #0]
 8007678:	699b      	ldr	r3, [r3, #24]
 800767a:	011b      	lsls	r3, r3, #4
 800767c:	693a      	ldr	r2, [r7, #16]
 800767e:	4313      	orrs	r3, r2
 8007680:	613b      	str	r3, [r7, #16]
 8007682:	687b      	ldr	r3, [r7, #4]
 8007684:	693a      	ldr	r2, [r7, #16]
 8007686:	605a      	str	r2, [r3, #4]
 8007688:	687b      	ldr	r3, [r7, #4]
 800768a:	68fa      	ldr	r2, [r7, #12]
 800768c:	61da      	str	r2, [r3, #28]
 800768e:	683b      	ldr	r3, [r7, #0]
 8007690:	685a      	ldr	r2, [r3, #4]
 8007692:	687b      	ldr	r3, [r7, #4]
 8007694:	63da      	str	r2, [r3, #60]	; 0x3c
 8007696:	687b      	ldr	r3, [r7, #4]
 8007698:	697a      	ldr	r2, [r7, #20]
 800769a:	621a      	str	r2, [r3, #32]
 800769c:	bf00      	nop
 800769e:	371c      	adds	r7, #28
 80076a0:	46bd      	mov	sp, r7
 80076a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076a6:	4770      	bx	lr
 80076a8:	40010000 	.word	0x40010000

080076ac <TIM_OC4_SetConfig>:
 80076ac:	b480      	push	{r7}
 80076ae:	b087      	sub	sp, #28
 80076b0:	af00      	add	r7, sp, #0
 80076b2:	6078      	str	r0, [r7, #4]
 80076b4:	6039      	str	r1, [r7, #0]
 80076b6:	687b      	ldr	r3, [r7, #4]
 80076b8:	6a1b      	ldr	r3, [r3, #32]
 80076ba:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 80076be:	687b      	ldr	r3, [r7, #4]
 80076c0:	621a      	str	r2, [r3, #32]
 80076c2:	687b      	ldr	r3, [r7, #4]
 80076c4:	6a1b      	ldr	r3, [r3, #32]
 80076c6:	613b      	str	r3, [r7, #16]
 80076c8:	687b      	ldr	r3, [r7, #4]
 80076ca:	685b      	ldr	r3, [r3, #4]
 80076cc:	617b      	str	r3, [r7, #20]
 80076ce:	687b      	ldr	r3, [r7, #4]
 80076d0:	69db      	ldr	r3, [r3, #28]
 80076d2:	60fb      	str	r3, [r7, #12]
 80076d4:	68fb      	ldr	r3, [r7, #12]
 80076d6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80076da:	60fb      	str	r3, [r7, #12]
 80076dc:	68fb      	ldr	r3, [r7, #12]
 80076de:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80076e2:	60fb      	str	r3, [r7, #12]
 80076e4:	683b      	ldr	r3, [r7, #0]
 80076e6:	681b      	ldr	r3, [r3, #0]
 80076e8:	021b      	lsls	r3, r3, #8
 80076ea:	68fa      	ldr	r2, [r7, #12]
 80076ec:	4313      	orrs	r3, r2
 80076ee:	60fb      	str	r3, [r7, #12]
 80076f0:	693b      	ldr	r3, [r7, #16]
 80076f2:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80076f6:	613b      	str	r3, [r7, #16]
 80076f8:	683b      	ldr	r3, [r7, #0]
 80076fa:	689b      	ldr	r3, [r3, #8]
 80076fc:	031b      	lsls	r3, r3, #12
 80076fe:	693a      	ldr	r2, [r7, #16]
 8007700:	4313      	orrs	r3, r2
 8007702:	613b      	str	r3, [r7, #16]
 8007704:	687b      	ldr	r3, [r7, #4]
 8007706:	4a10      	ldr	r2, [pc, #64]	; (8007748 <TIM_OC4_SetConfig+0x9c>)
 8007708:	4293      	cmp	r3, r2
 800770a:	d109      	bne.n	8007720 <TIM_OC4_SetConfig+0x74>
 800770c:	697b      	ldr	r3, [r7, #20]
 800770e:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8007712:	617b      	str	r3, [r7, #20]
 8007714:	683b      	ldr	r3, [r7, #0]
 8007716:	695b      	ldr	r3, [r3, #20]
 8007718:	019b      	lsls	r3, r3, #6
 800771a:	697a      	ldr	r2, [r7, #20]
 800771c:	4313      	orrs	r3, r2
 800771e:	617b      	str	r3, [r7, #20]
 8007720:	687b      	ldr	r3, [r7, #4]
 8007722:	697a      	ldr	r2, [r7, #20]
 8007724:	605a      	str	r2, [r3, #4]
 8007726:	687b      	ldr	r3, [r7, #4]
 8007728:	68fa      	ldr	r2, [r7, #12]
 800772a:	61da      	str	r2, [r3, #28]
 800772c:	683b      	ldr	r3, [r7, #0]
 800772e:	685a      	ldr	r2, [r3, #4]
 8007730:	687b      	ldr	r3, [r7, #4]
 8007732:	641a      	str	r2, [r3, #64]	; 0x40
 8007734:	687b      	ldr	r3, [r7, #4]
 8007736:	693a      	ldr	r2, [r7, #16]
 8007738:	621a      	str	r2, [r3, #32]
 800773a:	bf00      	nop
 800773c:	371c      	adds	r7, #28
 800773e:	46bd      	mov	sp, r7
 8007740:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007744:	4770      	bx	lr
 8007746:	bf00      	nop
 8007748:	40010000 	.word	0x40010000

0800774c <TIM_TI1_SetConfig>:
 800774c:	b480      	push	{r7}
 800774e:	b087      	sub	sp, #28
 8007750:	af00      	add	r7, sp, #0
 8007752:	60f8      	str	r0, [r7, #12]
 8007754:	60b9      	str	r1, [r7, #8]
 8007756:	607a      	str	r2, [r7, #4]
 8007758:	603b      	str	r3, [r7, #0]
 800775a:	68fb      	ldr	r3, [r7, #12]
 800775c:	6a1b      	ldr	r3, [r3, #32]
 800775e:	f023 0201 	bic.w	r2, r3, #1
 8007762:	68fb      	ldr	r3, [r7, #12]
 8007764:	621a      	str	r2, [r3, #32]
 8007766:	68fb      	ldr	r3, [r7, #12]
 8007768:	699b      	ldr	r3, [r3, #24]
 800776a:	617b      	str	r3, [r7, #20]
 800776c:	68fb      	ldr	r3, [r7, #12]
 800776e:	6a1b      	ldr	r3, [r3, #32]
 8007770:	613b      	str	r3, [r7, #16]
 8007772:	68fb      	ldr	r3, [r7, #12]
 8007774:	4a24      	ldr	r2, [pc, #144]	; (8007808 <TIM_TI1_SetConfig+0xbc>)
 8007776:	4293      	cmp	r3, r2
 8007778:	d013      	beq.n	80077a2 <TIM_TI1_SetConfig+0x56>
 800777a:	68fb      	ldr	r3, [r7, #12]
 800777c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007780:	d00f      	beq.n	80077a2 <TIM_TI1_SetConfig+0x56>
 8007782:	68fb      	ldr	r3, [r7, #12]
 8007784:	4a21      	ldr	r2, [pc, #132]	; (800780c <TIM_TI1_SetConfig+0xc0>)
 8007786:	4293      	cmp	r3, r2
 8007788:	d00b      	beq.n	80077a2 <TIM_TI1_SetConfig+0x56>
 800778a:	68fb      	ldr	r3, [r7, #12]
 800778c:	4a20      	ldr	r2, [pc, #128]	; (8007810 <TIM_TI1_SetConfig+0xc4>)
 800778e:	4293      	cmp	r3, r2
 8007790:	d007      	beq.n	80077a2 <TIM_TI1_SetConfig+0x56>
 8007792:	68fb      	ldr	r3, [r7, #12]
 8007794:	4a1f      	ldr	r2, [pc, #124]	; (8007814 <TIM_TI1_SetConfig+0xc8>)
 8007796:	4293      	cmp	r3, r2
 8007798:	d003      	beq.n	80077a2 <TIM_TI1_SetConfig+0x56>
 800779a:	68fb      	ldr	r3, [r7, #12]
 800779c:	4a1e      	ldr	r2, [pc, #120]	; (8007818 <TIM_TI1_SetConfig+0xcc>)
 800779e:	4293      	cmp	r3, r2
 80077a0:	d101      	bne.n	80077a6 <TIM_TI1_SetConfig+0x5a>
 80077a2:	2301      	movs	r3, #1
 80077a4:	e000      	b.n	80077a8 <TIM_TI1_SetConfig+0x5c>
 80077a6:	2300      	movs	r3, #0
 80077a8:	2b00      	cmp	r3, #0
 80077aa:	d008      	beq.n	80077be <TIM_TI1_SetConfig+0x72>
 80077ac:	697b      	ldr	r3, [r7, #20]
 80077ae:	f023 0303 	bic.w	r3, r3, #3
 80077b2:	617b      	str	r3, [r7, #20]
 80077b4:	697a      	ldr	r2, [r7, #20]
 80077b6:	687b      	ldr	r3, [r7, #4]
 80077b8:	4313      	orrs	r3, r2
 80077ba:	617b      	str	r3, [r7, #20]
 80077bc:	e003      	b.n	80077c6 <TIM_TI1_SetConfig+0x7a>
 80077be:	697b      	ldr	r3, [r7, #20]
 80077c0:	f043 0301 	orr.w	r3, r3, #1
 80077c4:	617b      	str	r3, [r7, #20]
 80077c6:	697b      	ldr	r3, [r7, #20]
 80077c8:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80077cc:	617b      	str	r3, [r7, #20]
 80077ce:	683b      	ldr	r3, [r7, #0]
 80077d0:	011b      	lsls	r3, r3, #4
 80077d2:	b2db      	uxtb	r3, r3
 80077d4:	697a      	ldr	r2, [r7, #20]
 80077d6:	4313      	orrs	r3, r2
 80077d8:	617b      	str	r3, [r7, #20]
 80077da:	693b      	ldr	r3, [r7, #16]
 80077dc:	f023 030a 	bic.w	r3, r3, #10
 80077e0:	613b      	str	r3, [r7, #16]
 80077e2:	68bb      	ldr	r3, [r7, #8]
 80077e4:	f003 030a 	and.w	r3, r3, #10
 80077e8:	693a      	ldr	r2, [r7, #16]
 80077ea:	4313      	orrs	r3, r2
 80077ec:	613b      	str	r3, [r7, #16]
 80077ee:	68fb      	ldr	r3, [r7, #12]
 80077f0:	697a      	ldr	r2, [r7, #20]
 80077f2:	619a      	str	r2, [r3, #24]
 80077f4:	68fb      	ldr	r3, [r7, #12]
 80077f6:	693a      	ldr	r2, [r7, #16]
 80077f8:	621a      	str	r2, [r3, #32]
 80077fa:	bf00      	nop
 80077fc:	371c      	adds	r7, #28
 80077fe:	46bd      	mov	sp, r7
 8007800:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007804:	4770      	bx	lr
 8007806:	bf00      	nop
 8007808:	40010000 	.word	0x40010000
 800780c:	40000400 	.word	0x40000400
 8007810:	40000800 	.word	0x40000800
 8007814:	40000c00 	.word	0x40000c00
 8007818:	40014000 	.word	0x40014000

0800781c <TIM_TI1_ConfigInputStage>:
 800781c:	b480      	push	{r7}
 800781e:	b087      	sub	sp, #28
 8007820:	af00      	add	r7, sp, #0
 8007822:	60f8      	str	r0, [r7, #12]
 8007824:	60b9      	str	r1, [r7, #8]
 8007826:	607a      	str	r2, [r7, #4]
 8007828:	68fb      	ldr	r3, [r7, #12]
 800782a:	6a1b      	ldr	r3, [r3, #32]
 800782c:	617b      	str	r3, [r7, #20]
 800782e:	68fb      	ldr	r3, [r7, #12]
 8007830:	6a1b      	ldr	r3, [r3, #32]
 8007832:	f023 0201 	bic.w	r2, r3, #1
 8007836:	68fb      	ldr	r3, [r7, #12]
 8007838:	621a      	str	r2, [r3, #32]
 800783a:	68fb      	ldr	r3, [r7, #12]
 800783c:	699b      	ldr	r3, [r3, #24]
 800783e:	613b      	str	r3, [r7, #16]
 8007840:	693b      	ldr	r3, [r7, #16]
 8007842:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8007846:	613b      	str	r3, [r7, #16]
 8007848:	687b      	ldr	r3, [r7, #4]
 800784a:	011b      	lsls	r3, r3, #4
 800784c:	693a      	ldr	r2, [r7, #16]
 800784e:	4313      	orrs	r3, r2
 8007850:	613b      	str	r3, [r7, #16]
 8007852:	697b      	ldr	r3, [r7, #20]
 8007854:	f023 030a 	bic.w	r3, r3, #10
 8007858:	617b      	str	r3, [r7, #20]
 800785a:	697a      	ldr	r2, [r7, #20]
 800785c:	68bb      	ldr	r3, [r7, #8]
 800785e:	4313      	orrs	r3, r2
 8007860:	617b      	str	r3, [r7, #20]
 8007862:	68fb      	ldr	r3, [r7, #12]
 8007864:	693a      	ldr	r2, [r7, #16]
 8007866:	619a      	str	r2, [r3, #24]
 8007868:	68fb      	ldr	r3, [r7, #12]
 800786a:	697a      	ldr	r2, [r7, #20]
 800786c:	621a      	str	r2, [r3, #32]
 800786e:	bf00      	nop
 8007870:	371c      	adds	r7, #28
 8007872:	46bd      	mov	sp, r7
 8007874:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007878:	4770      	bx	lr

0800787a <TIM_TI2_SetConfig>:
 800787a:	b480      	push	{r7}
 800787c:	b087      	sub	sp, #28
 800787e:	af00      	add	r7, sp, #0
 8007880:	60f8      	str	r0, [r7, #12]
 8007882:	60b9      	str	r1, [r7, #8]
 8007884:	607a      	str	r2, [r7, #4]
 8007886:	603b      	str	r3, [r7, #0]
 8007888:	68fb      	ldr	r3, [r7, #12]
 800788a:	6a1b      	ldr	r3, [r3, #32]
 800788c:	f023 0210 	bic.w	r2, r3, #16
 8007890:	68fb      	ldr	r3, [r7, #12]
 8007892:	621a      	str	r2, [r3, #32]
 8007894:	68fb      	ldr	r3, [r7, #12]
 8007896:	699b      	ldr	r3, [r3, #24]
 8007898:	617b      	str	r3, [r7, #20]
 800789a:	68fb      	ldr	r3, [r7, #12]
 800789c:	6a1b      	ldr	r3, [r3, #32]
 800789e:	613b      	str	r3, [r7, #16]
 80078a0:	697b      	ldr	r3, [r7, #20]
 80078a2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80078a6:	617b      	str	r3, [r7, #20]
 80078a8:	687b      	ldr	r3, [r7, #4]
 80078aa:	021b      	lsls	r3, r3, #8
 80078ac:	697a      	ldr	r2, [r7, #20]
 80078ae:	4313      	orrs	r3, r2
 80078b0:	617b      	str	r3, [r7, #20]
 80078b2:	697b      	ldr	r3, [r7, #20]
 80078b4:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 80078b8:	617b      	str	r3, [r7, #20]
 80078ba:	683b      	ldr	r3, [r7, #0]
 80078bc:	031b      	lsls	r3, r3, #12
 80078be:	b29b      	uxth	r3, r3
 80078c0:	697a      	ldr	r2, [r7, #20]
 80078c2:	4313      	orrs	r3, r2
 80078c4:	617b      	str	r3, [r7, #20]
 80078c6:	693b      	ldr	r3, [r7, #16]
 80078c8:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 80078cc:	613b      	str	r3, [r7, #16]
 80078ce:	68bb      	ldr	r3, [r7, #8]
 80078d0:	011b      	lsls	r3, r3, #4
 80078d2:	f003 03a0 	and.w	r3, r3, #160	; 0xa0
 80078d6:	693a      	ldr	r2, [r7, #16]
 80078d8:	4313      	orrs	r3, r2
 80078da:	613b      	str	r3, [r7, #16]
 80078dc:	68fb      	ldr	r3, [r7, #12]
 80078de:	697a      	ldr	r2, [r7, #20]
 80078e0:	619a      	str	r2, [r3, #24]
 80078e2:	68fb      	ldr	r3, [r7, #12]
 80078e4:	693a      	ldr	r2, [r7, #16]
 80078e6:	621a      	str	r2, [r3, #32]
 80078e8:	bf00      	nop
 80078ea:	371c      	adds	r7, #28
 80078ec:	46bd      	mov	sp, r7
 80078ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078f2:	4770      	bx	lr

080078f4 <TIM_TI2_ConfigInputStage>:
 80078f4:	b480      	push	{r7}
 80078f6:	b087      	sub	sp, #28
 80078f8:	af00      	add	r7, sp, #0
 80078fa:	60f8      	str	r0, [r7, #12]
 80078fc:	60b9      	str	r1, [r7, #8]
 80078fe:	607a      	str	r2, [r7, #4]
 8007900:	68fb      	ldr	r3, [r7, #12]
 8007902:	6a1b      	ldr	r3, [r3, #32]
 8007904:	f023 0210 	bic.w	r2, r3, #16
 8007908:	68fb      	ldr	r3, [r7, #12]
 800790a:	621a      	str	r2, [r3, #32]
 800790c:	68fb      	ldr	r3, [r7, #12]
 800790e:	699b      	ldr	r3, [r3, #24]
 8007910:	617b      	str	r3, [r7, #20]
 8007912:	68fb      	ldr	r3, [r7, #12]
 8007914:	6a1b      	ldr	r3, [r3, #32]
 8007916:	613b      	str	r3, [r7, #16]
 8007918:	697b      	ldr	r3, [r7, #20]
 800791a:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800791e:	617b      	str	r3, [r7, #20]
 8007920:	687b      	ldr	r3, [r7, #4]
 8007922:	031b      	lsls	r3, r3, #12
 8007924:	697a      	ldr	r2, [r7, #20]
 8007926:	4313      	orrs	r3, r2
 8007928:	617b      	str	r3, [r7, #20]
 800792a:	693b      	ldr	r3, [r7, #16]
 800792c:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8007930:	613b      	str	r3, [r7, #16]
 8007932:	68bb      	ldr	r3, [r7, #8]
 8007934:	011b      	lsls	r3, r3, #4
 8007936:	693a      	ldr	r2, [r7, #16]
 8007938:	4313      	orrs	r3, r2
 800793a:	613b      	str	r3, [r7, #16]
 800793c:	68fb      	ldr	r3, [r7, #12]
 800793e:	697a      	ldr	r2, [r7, #20]
 8007940:	619a      	str	r2, [r3, #24]
 8007942:	68fb      	ldr	r3, [r7, #12]
 8007944:	693a      	ldr	r2, [r7, #16]
 8007946:	621a      	str	r2, [r3, #32]
 8007948:	bf00      	nop
 800794a:	371c      	adds	r7, #28
 800794c:	46bd      	mov	sp, r7
 800794e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007952:	4770      	bx	lr

08007954 <TIM_TI3_SetConfig>:
 8007954:	b480      	push	{r7}
 8007956:	b087      	sub	sp, #28
 8007958:	af00      	add	r7, sp, #0
 800795a:	60f8      	str	r0, [r7, #12]
 800795c:	60b9      	str	r1, [r7, #8]
 800795e:	607a      	str	r2, [r7, #4]
 8007960:	603b      	str	r3, [r7, #0]
 8007962:	68fb      	ldr	r3, [r7, #12]
 8007964:	6a1b      	ldr	r3, [r3, #32]
 8007966:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800796a:	68fb      	ldr	r3, [r7, #12]
 800796c:	621a      	str	r2, [r3, #32]
 800796e:	68fb      	ldr	r3, [r7, #12]
 8007970:	69db      	ldr	r3, [r3, #28]
 8007972:	617b      	str	r3, [r7, #20]
 8007974:	68fb      	ldr	r3, [r7, #12]
 8007976:	6a1b      	ldr	r3, [r3, #32]
 8007978:	613b      	str	r3, [r7, #16]
 800797a:	697b      	ldr	r3, [r7, #20]
 800797c:	f023 0303 	bic.w	r3, r3, #3
 8007980:	617b      	str	r3, [r7, #20]
 8007982:	697a      	ldr	r2, [r7, #20]
 8007984:	687b      	ldr	r3, [r7, #4]
 8007986:	4313      	orrs	r3, r2
 8007988:	617b      	str	r3, [r7, #20]
 800798a:	697b      	ldr	r3, [r7, #20]
 800798c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8007990:	617b      	str	r3, [r7, #20]
 8007992:	683b      	ldr	r3, [r7, #0]
 8007994:	011b      	lsls	r3, r3, #4
 8007996:	b2db      	uxtb	r3, r3
 8007998:	697a      	ldr	r2, [r7, #20]
 800799a:	4313      	orrs	r3, r2
 800799c:	617b      	str	r3, [r7, #20]
 800799e:	693b      	ldr	r3, [r7, #16]
 80079a0:	f423 6320 	bic.w	r3, r3, #2560	; 0xa00
 80079a4:	613b      	str	r3, [r7, #16]
 80079a6:	68bb      	ldr	r3, [r7, #8]
 80079a8:	021b      	lsls	r3, r3, #8
 80079aa:	f403 6320 	and.w	r3, r3, #2560	; 0xa00
 80079ae:	693a      	ldr	r2, [r7, #16]
 80079b0:	4313      	orrs	r3, r2
 80079b2:	613b      	str	r3, [r7, #16]
 80079b4:	68fb      	ldr	r3, [r7, #12]
 80079b6:	697a      	ldr	r2, [r7, #20]
 80079b8:	61da      	str	r2, [r3, #28]
 80079ba:	68fb      	ldr	r3, [r7, #12]
 80079bc:	693a      	ldr	r2, [r7, #16]
 80079be:	621a      	str	r2, [r3, #32]
 80079c0:	bf00      	nop
 80079c2:	371c      	adds	r7, #28
 80079c4:	46bd      	mov	sp, r7
 80079c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079ca:	4770      	bx	lr

080079cc <TIM_TI4_SetConfig>:
 80079cc:	b480      	push	{r7}
 80079ce:	b087      	sub	sp, #28
 80079d0:	af00      	add	r7, sp, #0
 80079d2:	60f8      	str	r0, [r7, #12]
 80079d4:	60b9      	str	r1, [r7, #8]
 80079d6:	607a      	str	r2, [r7, #4]
 80079d8:	603b      	str	r3, [r7, #0]
 80079da:	68fb      	ldr	r3, [r7, #12]
 80079dc:	6a1b      	ldr	r3, [r3, #32]
 80079de:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 80079e2:	68fb      	ldr	r3, [r7, #12]
 80079e4:	621a      	str	r2, [r3, #32]
 80079e6:	68fb      	ldr	r3, [r7, #12]
 80079e8:	69db      	ldr	r3, [r3, #28]
 80079ea:	617b      	str	r3, [r7, #20]
 80079ec:	68fb      	ldr	r3, [r7, #12]
 80079ee:	6a1b      	ldr	r3, [r3, #32]
 80079f0:	613b      	str	r3, [r7, #16]
 80079f2:	697b      	ldr	r3, [r7, #20]
 80079f4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80079f8:	617b      	str	r3, [r7, #20]
 80079fa:	687b      	ldr	r3, [r7, #4]
 80079fc:	021b      	lsls	r3, r3, #8
 80079fe:	697a      	ldr	r2, [r7, #20]
 8007a00:	4313      	orrs	r3, r2
 8007a02:	617b      	str	r3, [r7, #20]
 8007a04:	697b      	ldr	r3, [r7, #20]
 8007a06:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8007a0a:	617b      	str	r3, [r7, #20]
 8007a0c:	683b      	ldr	r3, [r7, #0]
 8007a0e:	031b      	lsls	r3, r3, #12
 8007a10:	b29b      	uxth	r3, r3
 8007a12:	697a      	ldr	r2, [r7, #20]
 8007a14:	4313      	orrs	r3, r2
 8007a16:	617b      	str	r3, [r7, #20]
 8007a18:	693b      	ldr	r3, [r7, #16]
 8007a1a:	f423 4320 	bic.w	r3, r3, #40960	; 0xa000
 8007a1e:	613b      	str	r3, [r7, #16]
 8007a20:	68bb      	ldr	r3, [r7, #8]
 8007a22:	031b      	lsls	r3, r3, #12
 8007a24:	f403 4320 	and.w	r3, r3, #40960	; 0xa000
 8007a28:	693a      	ldr	r2, [r7, #16]
 8007a2a:	4313      	orrs	r3, r2
 8007a2c:	613b      	str	r3, [r7, #16]
 8007a2e:	68fb      	ldr	r3, [r7, #12]
 8007a30:	697a      	ldr	r2, [r7, #20]
 8007a32:	61da      	str	r2, [r3, #28]
 8007a34:	68fb      	ldr	r3, [r7, #12]
 8007a36:	693a      	ldr	r2, [r7, #16]
 8007a38:	621a      	str	r2, [r3, #32]
 8007a3a:	bf00      	nop
 8007a3c:	371c      	adds	r7, #28
 8007a3e:	46bd      	mov	sp, r7
 8007a40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a44:	4770      	bx	lr

08007a46 <TIM_ITRx_SetConfig>:
 8007a46:	b480      	push	{r7}
 8007a48:	b085      	sub	sp, #20
 8007a4a:	af00      	add	r7, sp, #0
 8007a4c:	6078      	str	r0, [r7, #4]
 8007a4e:	6039      	str	r1, [r7, #0]
 8007a50:	687b      	ldr	r3, [r7, #4]
 8007a52:	689b      	ldr	r3, [r3, #8]
 8007a54:	60fb      	str	r3, [r7, #12]
 8007a56:	68fb      	ldr	r3, [r7, #12]
 8007a58:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007a5c:	60fb      	str	r3, [r7, #12]
 8007a5e:	683a      	ldr	r2, [r7, #0]
 8007a60:	68fb      	ldr	r3, [r7, #12]
 8007a62:	4313      	orrs	r3, r2
 8007a64:	f043 0307 	orr.w	r3, r3, #7
 8007a68:	60fb      	str	r3, [r7, #12]
 8007a6a:	687b      	ldr	r3, [r7, #4]
 8007a6c:	68fa      	ldr	r2, [r7, #12]
 8007a6e:	609a      	str	r2, [r3, #8]
 8007a70:	bf00      	nop
 8007a72:	3714      	adds	r7, #20
 8007a74:	46bd      	mov	sp, r7
 8007a76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a7a:	4770      	bx	lr

08007a7c <TIM_ETR_SetConfig>:
 8007a7c:	b480      	push	{r7}
 8007a7e:	b087      	sub	sp, #28
 8007a80:	af00      	add	r7, sp, #0
 8007a82:	60f8      	str	r0, [r7, #12]
 8007a84:	60b9      	str	r1, [r7, #8]
 8007a86:	607a      	str	r2, [r7, #4]
 8007a88:	603b      	str	r3, [r7, #0]
 8007a8a:	68fb      	ldr	r3, [r7, #12]
 8007a8c:	689b      	ldr	r3, [r3, #8]
 8007a8e:	617b      	str	r3, [r7, #20]
 8007a90:	697b      	ldr	r3, [r7, #20]
 8007a92:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8007a96:	617b      	str	r3, [r7, #20]
 8007a98:	683b      	ldr	r3, [r7, #0]
 8007a9a:	021a      	lsls	r2, r3, #8
 8007a9c:	687b      	ldr	r3, [r7, #4]
 8007a9e:	431a      	orrs	r2, r3
 8007aa0:	68bb      	ldr	r3, [r7, #8]
 8007aa2:	4313      	orrs	r3, r2
 8007aa4:	697a      	ldr	r2, [r7, #20]
 8007aa6:	4313      	orrs	r3, r2
 8007aa8:	617b      	str	r3, [r7, #20]
 8007aaa:	68fb      	ldr	r3, [r7, #12]
 8007aac:	697a      	ldr	r2, [r7, #20]
 8007aae:	609a      	str	r2, [r3, #8]
 8007ab0:	bf00      	nop
 8007ab2:	371c      	adds	r7, #28
 8007ab4:	46bd      	mov	sp, r7
 8007ab6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007aba:	4770      	bx	lr

08007abc <TIM_CCxChannelCmd>:
 8007abc:	b480      	push	{r7}
 8007abe:	b087      	sub	sp, #28
 8007ac0:	af00      	add	r7, sp, #0
 8007ac2:	60f8      	str	r0, [r7, #12]
 8007ac4:	60b9      	str	r1, [r7, #8]
 8007ac6:	607a      	str	r2, [r7, #4]
 8007ac8:	68bb      	ldr	r3, [r7, #8]
 8007aca:	f003 031f 	and.w	r3, r3, #31
 8007ace:	2201      	movs	r2, #1
 8007ad0:	fa02 f303 	lsl.w	r3, r2, r3
 8007ad4:	617b      	str	r3, [r7, #20]
 8007ad6:	68fb      	ldr	r3, [r7, #12]
 8007ad8:	6a1a      	ldr	r2, [r3, #32]
 8007ada:	697b      	ldr	r3, [r7, #20]
 8007adc:	43db      	mvns	r3, r3
 8007ade:	401a      	ands	r2, r3
 8007ae0:	68fb      	ldr	r3, [r7, #12]
 8007ae2:	621a      	str	r2, [r3, #32]
 8007ae4:	68fb      	ldr	r3, [r7, #12]
 8007ae6:	6a1a      	ldr	r2, [r3, #32]
 8007ae8:	68bb      	ldr	r3, [r7, #8]
 8007aea:	f003 031f 	and.w	r3, r3, #31
 8007aee:	6879      	ldr	r1, [r7, #4]
 8007af0:	fa01 f303 	lsl.w	r3, r1, r3
 8007af4:	431a      	orrs	r2, r3
 8007af6:	68fb      	ldr	r3, [r7, #12]
 8007af8:	621a      	str	r2, [r3, #32]
 8007afa:	bf00      	nop
 8007afc:	371c      	adds	r7, #28
 8007afe:	46bd      	mov	sp, r7
 8007b00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b04:	4770      	bx	lr
	...

08007b08 <HAL_TIMEx_MasterConfigSynchronization>:
 8007b08:	b480      	push	{r7}
 8007b0a:	b085      	sub	sp, #20
 8007b0c:	af00      	add	r7, sp, #0
 8007b0e:	6078      	str	r0, [r7, #4]
 8007b10:	6039      	str	r1, [r7, #0]
 8007b12:	687b      	ldr	r3, [r7, #4]
 8007b14:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007b18:	2b01      	cmp	r3, #1
 8007b1a:	d101      	bne.n	8007b20 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8007b1c:	2302      	movs	r3, #2
 8007b1e:	e050      	b.n	8007bc2 <HAL_TIMEx_MasterConfigSynchronization+0xba>
 8007b20:	687b      	ldr	r3, [r7, #4]
 8007b22:	2201      	movs	r2, #1
 8007b24:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007b28:	687b      	ldr	r3, [r7, #4]
 8007b2a:	2202      	movs	r2, #2
 8007b2c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007b30:	687b      	ldr	r3, [r7, #4]
 8007b32:	681b      	ldr	r3, [r3, #0]
 8007b34:	685b      	ldr	r3, [r3, #4]
 8007b36:	60fb      	str	r3, [r7, #12]
 8007b38:	687b      	ldr	r3, [r7, #4]
 8007b3a:	681b      	ldr	r3, [r3, #0]
 8007b3c:	689b      	ldr	r3, [r3, #8]
 8007b3e:	60bb      	str	r3, [r7, #8]
 8007b40:	68fb      	ldr	r3, [r7, #12]
 8007b42:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007b46:	60fb      	str	r3, [r7, #12]
 8007b48:	683b      	ldr	r3, [r7, #0]
 8007b4a:	681b      	ldr	r3, [r3, #0]
 8007b4c:	68fa      	ldr	r2, [r7, #12]
 8007b4e:	4313      	orrs	r3, r2
 8007b50:	60fb      	str	r3, [r7, #12]
 8007b52:	687b      	ldr	r3, [r7, #4]
 8007b54:	681b      	ldr	r3, [r3, #0]
 8007b56:	68fa      	ldr	r2, [r7, #12]
 8007b58:	605a      	str	r2, [r3, #4]
 8007b5a:	687b      	ldr	r3, [r7, #4]
 8007b5c:	681b      	ldr	r3, [r3, #0]
 8007b5e:	4a1c      	ldr	r2, [pc, #112]	; (8007bd0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 8007b60:	4293      	cmp	r3, r2
 8007b62:	d018      	beq.n	8007b96 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8007b64:	687b      	ldr	r3, [r7, #4]
 8007b66:	681b      	ldr	r3, [r3, #0]
 8007b68:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007b6c:	d013      	beq.n	8007b96 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8007b6e:	687b      	ldr	r3, [r7, #4]
 8007b70:	681b      	ldr	r3, [r3, #0]
 8007b72:	4a18      	ldr	r2, [pc, #96]	; (8007bd4 <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 8007b74:	4293      	cmp	r3, r2
 8007b76:	d00e      	beq.n	8007b96 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8007b78:	687b      	ldr	r3, [r7, #4]
 8007b7a:	681b      	ldr	r3, [r3, #0]
 8007b7c:	4a16      	ldr	r2, [pc, #88]	; (8007bd8 <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 8007b7e:	4293      	cmp	r3, r2
 8007b80:	d009      	beq.n	8007b96 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8007b82:	687b      	ldr	r3, [r7, #4]
 8007b84:	681b      	ldr	r3, [r3, #0]
 8007b86:	4a15      	ldr	r2, [pc, #84]	; (8007bdc <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 8007b88:	4293      	cmp	r3, r2
 8007b8a:	d004      	beq.n	8007b96 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8007b8c:	687b      	ldr	r3, [r7, #4]
 8007b8e:	681b      	ldr	r3, [r3, #0]
 8007b90:	4a13      	ldr	r2, [pc, #76]	; (8007be0 <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 8007b92:	4293      	cmp	r3, r2
 8007b94:	d10c      	bne.n	8007bb0 <HAL_TIMEx_MasterConfigSynchronization+0xa8>
 8007b96:	68bb      	ldr	r3, [r7, #8]
 8007b98:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8007b9c:	60bb      	str	r3, [r7, #8]
 8007b9e:	683b      	ldr	r3, [r7, #0]
 8007ba0:	685b      	ldr	r3, [r3, #4]
 8007ba2:	68ba      	ldr	r2, [r7, #8]
 8007ba4:	4313      	orrs	r3, r2
 8007ba6:	60bb      	str	r3, [r7, #8]
 8007ba8:	687b      	ldr	r3, [r7, #4]
 8007baa:	681b      	ldr	r3, [r3, #0]
 8007bac:	68ba      	ldr	r2, [r7, #8]
 8007bae:	609a      	str	r2, [r3, #8]
 8007bb0:	687b      	ldr	r3, [r7, #4]
 8007bb2:	2201      	movs	r2, #1
 8007bb4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007bb8:	687b      	ldr	r3, [r7, #4]
 8007bba:	2200      	movs	r2, #0
 8007bbc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007bc0:	2300      	movs	r3, #0
 8007bc2:	4618      	mov	r0, r3
 8007bc4:	3714      	adds	r7, #20
 8007bc6:	46bd      	mov	sp, r7
 8007bc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007bcc:	4770      	bx	lr
 8007bce:	bf00      	nop
 8007bd0:	40010000 	.word	0x40010000
 8007bd4:	40000400 	.word	0x40000400
 8007bd8:	40000800 	.word	0x40000800
 8007bdc:	40000c00 	.word	0x40000c00
 8007be0:	40014000 	.word	0x40014000

08007be4 <HAL_TIMEx_CommutCallback>:
 8007be4:	b480      	push	{r7}
 8007be6:	b083      	sub	sp, #12
 8007be8:	af00      	add	r7, sp, #0
 8007bea:	6078      	str	r0, [r7, #4]
 8007bec:	bf00      	nop
 8007bee:	370c      	adds	r7, #12
 8007bf0:	46bd      	mov	sp, r7
 8007bf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007bf6:	4770      	bx	lr

08007bf8 <HAL_TIMEx_BreakCallback>:
 8007bf8:	b480      	push	{r7}
 8007bfa:	b083      	sub	sp, #12
 8007bfc:	af00      	add	r7, sp, #0
 8007bfe:	6078      	str	r0, [r7, #4]
 8007c00:	bf00      	nop
 8007c02:	370c      	adds	r7, #12
 8007c04:	46bd      	mov	sp, r7
 8007c06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c0a:	4770      	bx	lr

08007c0c <USB_CoreInit>:
 8007c0c:	b084      	sub	sp, #16
 8007c0e:	b580      	push	{r7, lr}
 8007c10:	b084      	sub	sp, #16
 8007c12:	af00      	add	r7, sp, #0
 8007c14:	6078      	str	r0, [r7, #4]
 8007c16:	f107 001c 	add.w	r0, r7, #28
 8007c1a:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8007c1e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007c20:	2b01      	cmp	r3, #1
 8007c22:	d122      	bne.n	8007c6a <USB_CoreInit+0x5e>
 8007c24:	687b      	ldr	r3, [r7, #4]
 8007c26:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007c28:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 8007c2c:	687b      	ldr	r3, [r7, #4]
 8007c2e:	639a      	str	r2, [r3, #56]	; 0x38
 8007c30:	687b      	ldr	r3, [r7, #4]
 8007c32:	68db      	ldr	r3, [r3, #12]
 8007c34:	f423 0384 	bic.w	r3, r3, #4325376	; 0x420000
 8007c38:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007c3c:	687a      	ldr	r2, [r7, #4]
 8007c3e:	60d3      	str	r3, [r2, #12]
 8007c40:	687b      	ldr	r3, [r7, #4]
 8007c42:	68db      	ldr	r3, [r3, #12]
 8007c44:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8007c48:	687b      	ldr	r3, [r7, #4]
 8007c4a:	60da      	str	r2, [r3, #12]
 8007c4c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8007c4e:	2b01      	cmp	r3, #1
 8007c50:	d105      	bne.n	8007c5e <USB_CoreInit+0x52>
 8007c52:	687b      	ldr	r3, [r7, #4]
 8007c54:	68db      	ldr	r3, [r3, #12]
 8007c56:	f443 1280 	orr.w	r2, r3, #1048576	; 0x100000
 8007c5a:	687b      	ldr	r3, [r7, #4]
 8007c5c:	60da      	str	r2, [r3, #12]
 8007c5e:	6878      	ldr	r0, [r7, #4]
 8007c60:	f001 fbee 	bl	8009440 <USB_CoreReset>
 8007c64:	4603      	mov	r3, r0
 8007c66:	73fb      	strb	r3, [r7, #15]
 8007c68:	e01a      	b.n	8007ca0 <USB_CoreInit+0x94>
 8007c6a:	687b      	ldr	r3, [r7, #4]
 8007c6c:	68db      	ldr	r3, [r3, #12]
 8007c6e:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8007c72:	687b      	ldr	r3, [r7, #4]
 8007c74:	60da      	str	r2, [r3, #12]
 8007c76:	6878      	ldr	r0, [r7, #4]
 8007c78:	f001 fbe2 	bl	8009440 <USB_CoreReset>
 8007c7c:	4603      	mov	r3, r0
 8007c7e:	73fb      	strb	r3, [r7, #15]
 8007c80:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8007c82:	2b00      	cmp	r3, #0
 8007c84:	d106      	bne.n	8007c94 <USB_CoreInit+0x88>
 8007c86:	687b      	ldr	r3, [r7, #4]
 8007c88:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007c8a:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 8007c8e:	687b      	ldr	r3, [r7, #4]
 8007c90:	639a      	str	r2, [r3, #56]	; 0x38
 8007c92:	e005      	b.n	8007ca0 <USB_CoreInit+0x94>
 8007c94:	687b      	ldr	r3, [r7, #4]
 8007c96:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007c98:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 8007c9c:	687b      	ldr	r3, [r7, #4]
 8007c9e:	639a      	str	r2, [r3, #56]	; 0x38
 8007ca0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007ca2:	2b01      	cmp	r3, #1
 8007ca4:	d10b      	bne.n	8007cbe <USB_CoreInit+0xb2>
 8007ca6:	687b      	ldr	r3, [r7, #4]
 8007ca8:	689b      	ldr	r3, [r3, #8]
 8007caa:	f043 0206 	orr.w	r2, r3, #6
 8007cae:	687b      	ldr	r3, [r7, #4]
 8007cb0:	609a      	str	r2, [r3, #8]
 8007cb2:	687b      	ldr	r3, [r7, #4]
 8007cb4:	689b      	ldr	r3, [r3, #8]
 8007cb6:	f043 0220 	orr.w	r2, r3, #32
 8007cba:	687b      	ldr	r3, [r7, #4]
 8007cbc:	609a      	str	r2, [r3, #8]
 8007cbe:	7bfb      	ldrb	r3, [r7, #15]
 8007cc0:	4618      	mov	r0, r3
 8007cc2:	3710      	adds	r7, #16
 8007cc4:	46bd      	mov	sp, r7
 8007cc6:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8007cca:	b004      	add	sp, #16
 8007ccc:	4770      	bx	lr
	...

08007cd0 <USB_SetTurnaroundTime>:
 8007cd0:	b480      	push	{r7}
 8007cd2:	b087      	sub	sp, #28
 8007cd4:	af00      	add	r7, sp, #0
 8007cd6:	60f8      	str	r0, [r7, #12]
 8007cd8:	60b9      	str	r1, [r7, #8]
 8007cda:	4613      	mov	r3, r2
 8007cdc:	71fb      	strb	r3, [r7, #7]
 8007cde:	79fb      	ldrb	r3, [r7, #7]
 8007ce0:	2b02      	cmp	r3, #2
 8007ce2:	d165      	bne.n	8007db0 <USB_SetTurnaroundTime+0xe0>
 8007ce4:	68bb      	ldr	r3, [r7, #8]
 8007ce6:	4a41      	ldr	r2, [pc, #260]	; (8007dec <USB_SetTurnaroundTime+0x11c>)
 8007ce8:	4293      	cmp	r3, r2
 8007cea:	d906      	bls.n	8007cfa <USB_SetTurnaroundTime+0x2a>
 8007cec:	68bb      	ldr	r3, [r7, #8]
 8007cee:	4a40      	ldr	r2, [pc, #256]	; (8007df0 <USB_SetTurnaroundTime+0x120>)
 8007cf0:	4293      	cmp	r3, r2
 8007cf2:	d202      	bcs.n	8007cfa <USB_SetTurnaroundTime+0x2a>
 8007cf4:	230f      	movs	r3, #15
 8007cf6:	617b      	str	r3, [r7, #20]
 8007cf8:	e062      	b.n	8007dc0 <USB_SetTurnaroundTime+0xf0>
 8007cfa:	68bb      	ldr	r3, [r7, #8]
 8007cfc:	4a3c      	ldr	r2, [pc, #240]	; (8007df0 <USB_SetTurnaroundTime+0x120>)
 8007cfe:	4293      	cmp	r3, r2
 8007d00:	d306      	bcc.n	8007d10 <USB_SetTurnaroundTime+0x40>
 8007d02:	68bb      	ldr	r3, [r7, #8]
 8007d04:	4a3b      	ldr	r2, [pc, #236]	; (8007df4 <USB_SetTurnaroundTime+0x124>)
 8007d06:	4293      	cmp	r3, r2
 8007d08:	d202      	bcs.n	8007d10 <USB_SetTurnaroundTime+0x40>
 8007d0a:	230e      	movs	r3, #14
 8007d0c:	617b      	str	r3, [r7, #20]
 8007d0e:	e057      	b.n	8007dc0 <USB_SetTurnaroundTime+0xf0>
 8007d10:	68bb      	ldr	r3, [r7, #8]
 8007d12:	4a38      	ldr	r2, [pc, #224]	; (8007df4 <USB_SetTurnaroundTime+0x124>)
 8007d14:	4293      	cmp	r3, r2
 8007d16:	d306      	bcc.n	8007d26 <USB_SetTurnaroundTime+0x56>
 8007d18:	68bb      	ldr	r3, [r7, #8]
 8007d1a:	4a37      	ldr	r2, [pc, #220]	; (8007df8 <USB_SetTurnaroundTime+0x128>)
 8007d1c:	4293      	cmp	r3, r2
 8007d1e:	d202      	bcs.n	8007d26 <USB_SetTurnaroundTime+0x56>
 8007d20:	230d      	movs	r3, #13
 8007d22:	617b      	str	r3, [r7, #20]
 8007d24:	e04c      	b.n	8007dc0 <USB_SetTurnaroundTime+0xf0>
 8007d26:	68bb      	ldr	r3, [r7, #8]
 8007d28:	4a33      	ldr	r2, [pc, #204]	; (8007df8 <USB_SetTurnaroundTime+0x128>)
 8007d2a:	4293      	cmp	r3, r2
 8007d2c:	d306      	bcc.n	8007d3c <USB_SetTurnaroundTime+0x6c>
 8007d2e:	68bb      	ldr	r3, [r7, #8]
 8007d30:	4a32      	ldr	r2, [pc, #200]	; (8007dfc <USB_SetTurnaroundTime+0x12c>)
 8007d32:	4293      	cmp	r3, r2
 8007d34:	d802      	bhi.n	8007d3c <USB_SetTurnaroundTime+0x6c>
 8007d36:	230c      	movs	r3, #12
 8007d38:	617b      	str	r3, [r7, #20]
 8007d3a:	e041      	b.n	8007dc0 <USB_SetTurnaroundTime+0xf0>
 8007d3c:	68bb      	ldr	r3, [r7, #8]
 8007d3e:	4a2f      	ldr	r2, [pc, #188]	; (8007dfc <USB_SetTurnaroundTime+0x12c>)
 8007d40:	4293      	cmp	r3, r2
 8007d42:	d906      	bls.n	8007d52 <USB_SetTurnaroundTime+0x82>
 8007d44:	68bb      	ldr	r3, [r7, #8]
 8007d46:	4a2e      	ldr	r2, [pc, #184]	; (8007e00 <USB_SetTurnaroundTime+0x130>)
 8007d48:	4293      	cmp	r3, r2
 8007d4a:	d802      	bhi.n	8007d52 <USB_SetTurnaroundTime+0x82>
 8007d4c:	230b      	movs	r3, #11
 8007d4e:	617b      	str	r3, [r7, #20]
 8007d50:	e036      	b.n	8007dc0 <USB_SetTurnaroundTime+0xf0>
 8007d52:	68bb      	ldr	r3, [r7, #8]
 8007d54:	4a2a      	ldr	r2, [pc, #168]	; (8007e00 <USB_SetTurnaroundTime+0x130>)
 8007d56:	4293      	cmp	r3, r2
 8007d58:	d906      	bls.n	8007d68 <USB_SetTurnaroundTime+0x98>
 8007d5a:	68bb      	ldr	r3, [r7, #8]
 8007d5c:	4a29      	ldr	r2, [pc, #164]	; (8007e04 <USB_SetTurnaroundTime+0x134>)
 8007d5e:	4293      	cmp	r3, r2
 8007d60:	d802      	bhi.n	8007d68 <USB_SetTurnaroundTime+0x98>
 8007d62:	230a      	movs	r3, #10
 8007d64:	617b      	str	r3, [r7, #20]
 8007d66:	e02b      	b.n	8007dc0 <USB_SetTurnaroundTime+0xf0>
 8007d68:	68bb      	ldr	r3, [r7, #8]
 8007d6a:	4a26      	ldr	r2, [pc, #152]	; (8007e04 <USB_SetTurnaroundTime+0x134>)
 8007d6c:	4293      	cmp	r3, r2
 8007d6e:	d906      	bls.n	8007d7e <USB_SetTurnaroundTime+0xae>
 8007d70:	68bb      	ldr	r3, [r7, #8]
 8007d72:	4a25      	ldr	r2, [pc, #148]	; (8007e08 <USB_SetTurnaroundTime+0x138>)
 8007d74:	4293      	cmp	r3, r2
 8007d76:	d202      	bcs.n	8007d7e <USB_SetTurnaroundTime+0xae>
 8007d78:	2309      	movs	r3, #9
 8007d7a:	617b      	str	r3, [r7, #20]
 8007d7c:	e020      	b.n	8007dc0 <USB_SetTurnaroundTime+0xf0>
 8007d7e:	68bb      	ldr	r3, [r7, #8]
 8007d80:	4a21      	ldr	r2, [pc, #132]	; (8007e08 <USB_SetTurnaroundTime+0x138>)
 8007d82:	4293      	cmp	r3, r2
 8007d84:	d306      	bcc.n	8007d94 <USB_SetTurnaroundTime+0xc4>
 8007d86:	68bb      	ldr	r3, [r7, #8]
 8007d88:	4a20      	ldr	r2, [pc, #128]	; (8007e0c <USB_SetTurnaroundTime+0x13c>)
 8007d8a:	4293      	cmp	r3, r2
 8007d8c:	d802      	bhi.n	8007d94 <USB_SetTurnaroundTime+0xc4>
 8007d8e:	2308      	movs	r3, #8
 8007d90:	617b      	str	r3, [r7, #20]
 8007d92:	e015      	b.n	8007dc0 <USB_SetTurnaroundTime+0xf0>
 8007d94:	68bb      	ldr	r3, [r7, #8]
 8007d96:	4a1d      	ldr	r2, [pc, #116]	; (8007e0c <USB_SetTurnaroundTime+0x13c>)
 8007d98:	4293      	cmp	r3, r2
 8007d9a:	d906      	bls.n	8007daa <USB_SetTurnaroundTime+0xda>
 8007d9c:	68bb      	ldr	r3, [r7, #8]
 8007d9e:	4a1c      	ldr	r2, [pc, #112]	; (8007e10 <USB_SetTurnaroundTime+0x140>)
 8007da0:	4293      	cmp	r3, r2
 8007da2:	d202      	bcs.n	8007daa <USB_SetTurnaroundTime+0xda>
 8007da4:	2307      	movs	r3, #7
 8007da6:	617b      	str	r3, [r7, #20]
 8007da8:	e00a      	b.n	8007dc0 <USB_SetTurnaroundTime+0xf0>
 8007daa:	2306      	movs	r3, #6
 8007dac:	617b      	str	r3, [r7, #20]
 8007dae:	e007      	b.n	8007dc0 <USB_SetTurnaroundTime+0xf0>
 8007db0:	79fb      	ldrb	r3, [r7, #7]
 8007db2:	2b00      	cmp	r3, #0
 8007db4:	d102      	bne.n	8007dbc <USB_SetTurnaroundTime+0xec>
 8007db6:	2309      	movs	r3, #9
 8007db8:	617b      	str	r3, [r7, #20]
 8007dba:	e001      	b.n	8007dc0 <USB_SetTurnaroundTime+0xf0>
 8007dbc:	2309      	movs	r3, #9
 8007dbe:	617b      	str	r3, [r7, #20]
 8007dc0:	68fb      	ldr	r3, [r7, #12]
 8007dc2:	68db      	ldr	r3, [r3, #12]
 8007dc4:	f423 5270 	bic.w	r2, r3, #15360	; 0x3c00
 8007dc8:	68fb      	ldr	r3, [r7, #12]
 8007dca:	60da      	str	r2, [r3, #12]
 8007dcc:	68fb      	ldr	r3, [r7, #12]
 8007dce:	68da      	ldr	r2, [r3, #12]
 8007dd0:	697b      	ldr	r3, [r7, #20]
 8007dd2:	029b      	lsls	r3, r3, #10
 8007dd4:	f403 5370 	and.w	r3, r3, #15360	; 0x3c00
 8007dd8:	431a      	orrs	r2, r3
 8007dda:	68fb      	ldr	r3, [r7, #12]
 8007ddc:	60da      	str	r2, [r3, #12]
 8007dde:	2300      	movs	r3, #0
 8007de0:	4618      	mov	r0, r3
 8007de2:	371c      	adds	r7, #28
 8007de4:	46bd      	mov	sp, r7
 8007de6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007dea:	4770      	bx	lr
 8007dec:	00d8acbf 	.word	0x00d8acbf
 8007df0:	00e4e1c0 	.word	0x00e4e1c0
 8007df4:	00f42400 	.word	0x00f42400
 8007df8:	01067380 	.word	0x01067380
 8007dfc:	011a499f 	.word	0x011a499f
 8007e00:	01312cff 	.word	0x01312cff
 8007e04:	014ca43f 	.word	0x014ca43f
 8007e08:	016e3600 	.word	0x016e3600
 8007e0c:	01a6ab1f 	.word	0x01a6ab1f
 8007e10:	01e84800 	.word	0x01e84800

08007e14 <USB_EnableGlobalInt>:
 8007e14:	b480      	push	{r7}
 8007e16:	b083      	sub	sp, #12
 8007e18:	af00      	add	r7, sp, #0
 8007e1a:	6078      	str	r0, [r7, #4]
 8007e1c:	687b      	ldr	r3, [r7, #4]
 8007e1e:	689b      	ldr	r3, [r3, #8]
 8007e20:	f043 0201 	orr.w	r2, r3, #1
 8007e24:	687b      	ldr	r3, [r7, #4]
 8007e26:	609a      	str	r2, [r3, #8]
 8007e28:	2300      	movs	r3, #0
 8007e2a:	4618      	mov	r0, r3
 8007e2c:	370c      	adds	r7, #12
 8007e2e:	46bd      	mov	sp, r7
 8007e30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e34:	4770      	bx	lr

08007e36 <USB_DisableGlobalInt>:
 8007e36:	b480      	push	{r7}
 8007e38:	b083      	sub	sp, #12
 8007e3a:	af00      	add	r7, sp, #0
 8007e3c:	6078      	str	r0, [r7, #4]
 8007e3e:	687b      	ldr	r3, [r7, #4]
 8007e40:	689b      	ldr	r3, [r3, #8]
 8007e42:	f023 0201 	bic.w	r2, r3, #1
 8007e46:	687b      	ldr	r3, [r7, #4]
 8007e48:	609a      	str	r2, [r3, #8]
 8007e4a:	2300      	movs	r3, #0
 8007e4c:	4618      	mov	r0, r3
 8007e4e:	370c      	adds	r7, #12
 8007e50:	46bd      	mov	sp, r7
 8007e52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e56:	4770      	bx	lr

08007e58 <USB_SetCurrentMode>:
 8007e58:	b580      	push	{r7, lr}
 8007e5a:	b084      	sub	sp, #16
 8007e5c:	af00      	add	r7, sp, #0
 8007e5e:	6078      	str	r0, [r7, #4]
 8007e60:	460b      	mov	r3, r1
 8007e62:	70fb      	strb	r3, [r7, #3]
 8007e64:	2300      	movs	r3, #0
 8007e66:	60fb      	str	r3, [r7, #12]
 8007e68:	687b      	ldr	r3, [r7, #4]
 8007e6a:	68db      	ldr	r3, [r3, #12]
 8007e6c:	f023 42c0 	bic.w	r2, r3, #1610612736	; 0x60000000
 8007e70:	687b      	ldr	r3, [r7, #4]
 8007e72:	60da      	str	r2, [r3, #12]
 8007e74:	78fb      	ldrb	r3, [r7, #3]
 8007e76:	2b01      	cmp	r3, #1
 8007e78:	d115      	bne.n	8007ea6 <USB_SetCurrentMode+0x4e>
 8007e7a:	687b      	ldr	r3, [r7, #4]
 8007e7c:	68db      	ldr	r3, [r3, #12]
 8007e7e:	f043 5200 	orr.w	r2, r3, #536870912	; 0x20000000
 8007e82:	687b      	ldr	r3, [r7, #4]
 8007e84:	60da      	str	r2, [r3, #12]
 8007e86:	2001      	movs	r0, #1
 8007e88:	f7fa fff0 	bl	8002e6c <HAL_Delay>
 8007e8c:	68fb      	ldr	r3, [r7, #12]
 8007e8e:	3301      	adds	r3, #1
 8007e90:	60fb      	str	r3, [r7, #12]
 8007e92:	6878      	ldr	r0, [r7, #4]
 8007e94:	f001 fa45 	bl	8009322 <USB_GetMode>
 8007e98:	4603      	mov	r3, r0
 8007e9a:	2b01      	cmp	r3, #1
 8007e9c:	d01e      	beq.n	8007edc <USB_SetCurrentMode+0x84>
 8007e9e:	68fb      	ldr	r3, [r7, #12]
 8007ea0:	2b31      	cmp	r3, #49	; 0x31
 8007ea2:	d9f0      	bls.n	8007e86 <USB_SetCurrentMode+0x2e>
 8007ea4:	e01a      	b.n	8007edc <USB_SetCurrentMode+0x84>
 8007ea6:	78fb      	ldrb	r3, [r7, #3]
 8007ea8:	2b00      	cmp	r3, #0
 8007eaa:	d115      	bne.n	8007ed8 <USB_SetCurrentMode+0x80>
 8007eac:	687b      	ldr	r3, [r7, #4]
 8007eae:	68db      	ldr	r3, [r3, #12]
 8007eb0:	f043 4280 	orr.w	r2, r3, #1073741824	; 0x40000000
 8007eb4:	687b      	ldr	r3, [r7, #4]
 8007eb6:	60da      	str	r2, [r3, #12]
 8007eb8:	2001      	movs	r0, #1
 8007eba:	f7fa ffd7 	bl	8002e6c <HAL_Delay>
 8007ebe:	68fb      	ldr	r3, [r7, #12]
 8007ec0:	3301      	adds	r3, #1
 8007ec2:	60fb      	str	r3, [r7, #12]
 8007ec4:	6878      	ldr	r0, [r7, #4]
 8007ec6:	f001 fa2c 	bl	8009322 <USB_GetMode>
 8007eca:	4603      	mov	r3, r0
 8007ecc:	2b00      	cmp	r3, #0
 8007ece:	d005      	beq.n	8007edc <USB_SetCurrentMode+0x84>
 8007ed0:	68fb      	ldr	r3, [r7, #12]
 8007ed2:	2b31      	cmp	r3, #49	; 0x31
 8007ed4:	d9f0      	bls.n	8007eb8 <USB_SetCurrentMode+0x60>
 8007ed6:	e001      	b.n	8007edc <USB_SetCurrentMode+0x84>
 8007ed8:	2301      	movs	r3, #1
 8007eda:	e005      	b.n	8007ee8 <USB_SetCurrentMode+0x90>
 8007edc:	68fb      	ldr	r3, [r7, #12]
 8007ede:	2b32      	cmp	r3, #50	; 0x32
 8007ee0:	d101      	bne.n	8007ee6 <USB_SetCurrentMode+0x8e>
 8007ee2:	2301      	movs	r3, #1
 8007ee4:	e000      	b.n	8007ee8 <USB_SetCurrentMode+0x90>
 8007ee6:	2300      	movs	r3, #0
 8007ee8:	4618      	mov	r0, r3
 8007eea:	3710      	adds	r7, #16
 8007eec:	46bd      	mov	sp, r7
 8007eee:	bd80      	pop	{r7, pc}

08007ef0 <USB_DevInit>:
 8007ef0:	b084      	sub	sp, #16
 8007ef2:	b580      	push	{r7, lr}
 8007ef4:	b086      	sub	sp, #24
 8007ef6:	af00      	add	r7, sp, #0
 8007ef8:	6078      	str	r0, [r7, #4]
 8007efa:	f107 0024 	add.w	r0, r7, #36	; 0x24
 8007efe:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8007f02:	2300      	movs	r3, #0
 8007f04:	75fb      	strb	r3, [r7, #23]
 8007f06:	687b      	ldr	r3, [r7, #4]
 8007f08:	60fb      	str	r3, [r7, #12]
 8007f0a:	2300      	movs	r3, #0
 8007f0c:	613b      	str	r3, [r7, #16]
 8007f0e:	e009      	b.n	8007f24 <USB_DevInit+0x34>
 8007f10:	687a      	ldr	r2, [r7, #4]
 8007f12:	693b      	ldr	r3, [r7, #16]
 8007f14:	3340      	adds	r3, #64	; 0x40
 8007f16:	009b      	lsls	r3, r3, #2
 8007f18:	4413      	add	r3, r2
 8007f1a:	2200      	movs	r2, #0
 8007f1c:	605a      	str	r2, [r3, #4]
 8007f1e:	693b      	ldr	r3, [r7, #16]
 8007f20:	3301      	adds	r3, #1
 8007f22:	613b      	str	r3, [r7, #16]
 8007f24:	693b      	ldr	r3, [r7, #16]
 8007f26:	2b0e      	cmp	r3, #14
 8007f28:	d9f2      	bls.n	8007f10 <USB_DevInit+0x20>
 8007f2a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8007f2c:	2b00      	cmp	r3, #0
 8007f2e:	d11c      	bne.n	8007f6a <USB_DevInit+0x7a>
 8007f30:	68fb      	ldr	r3, [r7, #12]
 8007f32:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8007f36:	685b      	ldr	r3, [r3, #4]
 8007f38:	68fa      	ldr	r2, [r7, #12]
 8007f3a:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8007f3e:	f043 0302 	orr.w	r3, r3, #2
 8007f42:	6053      	str	r3, [r2, #4]
 8007f44:	687b      	ldr	r3, [r7, #4]
 8007f46:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007f48:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 8007f4c:	687b      	ldr	r3, [r7, #4]
 8007f4e:	639a      	str	r2, [r3, #56]	; 0x38
 8007f50:	687b      	ldr	r3, [r7, #4]
 8007f52:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007f54:	f423 2200 	bic.w	r2, r3, #524288	; 0x80000
 8007f58:	687b      	ldr	r3, [r7, #4]
 8007f5a:	639a      	str	r2, [r3, #56]	; 0x38
 8007f5c:	687b      	ldr	r3, [r7, #4]
 8007f5e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007f60:	f423 2280 	bic.w	r2, r3, #262144	; 0x40000
 8007f64:	687b      	ldr	r3, [r7, #4]
 8007f66:	639a      	str	r2, [r3, #56]	; 0x38
 8007f68:	e00b      	b.n	8007f82 <USB_DevInit+0x92>
 8007f6a:	687b      	ldr	r3, [r7, #4]
 8007f6c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007f6e:	f423 1200 	bic.w	r2, r3, #2097152	; 0x200000
 8007f72:	687b      	ldr	r3, [r7, #4]
 8007f74:	639a      	str	r2, [r3, #56]	; 0x38
 8007f76:	687b      	ldr	r3, [r7, #4]
 8007f78:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007f7a:	f443 2200 	orr.w	r2, r3, #524288	; 0x80000
 8007f7e:	687b      	ldr	r3, [r7, #4]
 8007f80:	639a      	str	r2, [r3, #56]	; 0x38
 8007f82:	68fb      	ldr	r3, [r7, #12]
 8007f84:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 8007f88:	461a      	mov	r2, r3
 8007f8a:	2300      	movs	r3, #0
 8007f8c:	6013      	str	r3, [r2, #0]
 8007f8e:	68fb      	ldr	r3, [r7, #12]
 8007f90:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8007f94:	4619      	mov	r1, r3
 8007f96:	68fb      	ldr	r3, [r7, #12]
 8007f98:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8007f9c:	461a      	mov	r2, r3
 8007f9e:	680b      	ldr	r3, [r1, #0]
 8007fa0:	6013      	str	r3, [r2, #0]
 8007fa2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007fa4:	2b01      	cmp	r3, #1
 8007fa6:	d10c      	bne.n	8007fc2 <USB_DevInit+0xd2>
 8007fa8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007faa:	2b00      	cmp	r3, #0
 8007fac:	d104      	bne.n	8007fb8 <USB_DevInit+0xc8>
 8007fae:	2100      	movs	r1, #0
 8007fb0:	6878      	ldr	r0, [r7, #4]
 8007fb2:	f000 f965 	bl	8008280 <USB_SetDevSpeed>
 8007fb6:	e008      	b.n	8007fca <USB_DevInit+0xda>
 8007fb8:	2101      	movs	r1, #1
 8007fba:	6878      	ldr	r0, [r7, #4]
 8007fbc:	f000 f960 	bl	8008280 <USB_SetDevSpeed>
 8007fc0:	e003      	b.n	8007fca <USB_DevInit+0xda>
 8007fc2:	2103      	movs	r1, #3
 8007fc4:	6878      	ldr	r0, [r7, #4]
 8007fc6:	f000 f95b 	bl	8008280 <USB_SetDevSpeed>
 8007fca:	2110      	movs	r1, #16
 8007fcc:	6878      	ldr	r0, [r7, #4]
 8007fce:	f000 f8f3 	bl	80081b8 <USB_FlushTxFifo>
 8007fd2:	4603      	mov	r3, r0
 8007fd4:	2b00      	cmp	r3, #0
 8007fd6:	d001      	beq.n	8007fdc <USB_DevInit+0xec>
 8007fd8:	2301      	movs	r3, #1
 8007fda:	75fb      	strb	r3, [r7, #23]
 8007fdc:	6878      	ldr	r0, [r7, #4]
 8007fde:	f000 f91f 	bl	8008220 <USB_FlushRxFifo>
 8007fe2:	4603      	mov	r3, r0
 8007fe4:	2b00      	cmp	r3, #0
 8007fe6:	d001      	beq.n	8007fec <USB_DevInit+0xfc>
 8007fe8:	2301      	movs	r3, #1
 8007fea:	75fb      	strb	r3, [r7, #23]
 8007fec:	68fb      	ldr	r3, [r7, #12]
 8007fee:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8007ff2:	461a      	mov	r2, r3
 8007ff4:	2300      	movs	r3, #0
 8007ff6:	6113      	str	r3, [r2, #16]
 8007ff8:	68fb      	ldr	r3, [r7, #12]
 8007ffa:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8007ffe:	461a      	mov	r2, r3
 8008000:	2300      	movs	r3, #0
 8008002:	6153      	str	r3, [r2, #20]
 8008004:	68fb      	ldr	r3, [r7, #12]
 8008006:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800800a:	461a      	mov	r2, r3
 800800c:	2300      	movs	r3, #0
 800800e:	61d3      	str	r3, [r2, #28]
 8008010:	2300      	movs	r3, #0
 8008012:	613b      	str	r3, [r7, #16]
 8008014:	e043      	b.n	800809e <USB_DevInit+0x1ae>
 8008016:	693b      	ldr	r3, [r7, #16]
 8008018:	015a      	lsls	r2, r3, #5
 800801a:	68fb      	ldr	r3, [r7, #12]
 800801c:	4413      	add	r3, r2
 800801e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008022:	681b      	ldr	r3, [r3, #0]
 8008024:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8008028:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 800802c:	d118      	bne.n	8008060 <USB_DevInit+0x170>
 800802e:	693b      	ldr	r3, [r7, #16]
 8008030:	2b00      	cmp	r3, #0
 8008032:	d10a      	bne.n	800804a <USB_DevInit+0x15a>
 8008034:	693b      	ldr	r3, [r7, #16]
 8008036:	015a      	lsls	r2, r3, #5
 8008038:	68fb      	ldr	r3, [r7, #12]
 800803a:	4413      	add	r3, r2
 800803c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008040:	461a      	mov	r2, r3
 8008042:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8008046:	6013      	str	r3, [r2, #0]
 8008048:	e013      	b.n	8008072 <USB_DevInit+0x182>
 800804a:	693b      	ldr	r3, [r7, #16]
 800804c:	015a      	lsls	r2, r3, #5
 800804e:	68fb      	ldr	r3, [r7, #12]
 8008050:	4413      	add	r3, r2
 8008052:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008056:	461a      	mov	r2, r3
 8008058:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 800805c:	6013      	str	r3, [r2, #0]
 800805e:	e008      	b.n	8008072 <USB_DevInit+0x182>
 8008060:	693b      	ldr	r3, [r7, #16]
 8008062:	015a      	lsls	r2, r3, #5
 8008064:	68fb      	ldr	r3, [r7, #12]
 8008066:	4413      	add	r3, r2
 8008068:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800806c:	461a      	mov	r2, r3
 800806e:	2300      	movs	r3, #0
 8008070:	6013      	str	r3, [r2, #0]
 8008072:	693b      	ldr	r3, [r7, #16]
 8008074:	015a      	lsls	r2, r3, #5
 8008076:	68fb      	ldr	r3, [r7, #12]
 8008078:	4413      	add	r3, r2
 800807a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800807e:	461a      	mov	r2, r3
 8008080:	2300      	movs	r3, #0
 8008082:	6113      	str	r3, [r2, #16]
 8008084:	693b      	ldr	r3, [r7, #16]
 8008086:	015a      	lsls	r2, r3, #5
 8008088:	68fb      	ldr	r3, [r7, #12]
 800808a:	4413      	add	r3, r2
 800808c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008090:	461a      	mov	r2, r3
 8008092:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 8008096:	6093      	str	r3, [r2, #8]
 8008098:	693b      	ldr	r3, [r7, #16]
 800809a:	3301      	adds	r3, #1
 800809c:	613b      	str	r3, [r7, #16]
 800809e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80080a0:	693a      	ldr	r2, [r7, #16]
 80080a2:	429a      	cmp	r2, r3
 80080a4:	d3b7      	bcc.n	8008016 <USB_DevInit+0x126>
 80080a6:	2300      	movs	r3, #0
 80080a8:	613b      	str	r3, [r7, #16]
 80080aa:	e043      	b.n	8008134 <USB_DevInit+0x244>
 80080ac:	693b      	ldr	r3, [r7, #16]
 80080ae:	015a      	lsls	r2, r3, #5
 80080b0:	68fb      	ldr	r3, [r7, #12]
 80080b2:	4413      	add	r3, r2
 80080b4:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80080b8:	681b      	ldr	r3, [r3, #0]
 80080ba:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 80080be:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80080c2:	d118      	bne.n	80080f6 <USB_DevInit+0x206>
 80080c4:	693b      	ldr	r3, [r7, #16]
 80080c6:	2b00      	cmp	r3, #0
 80080c8:	d10a      	bne.n	80080e0 <USB_DevInit+0x1f0>
 80080ca:	693b      	ldr	r3, [r7, #16]
 80080cc:	015a      	lsls	r2, r3, #5
 80080ce:	68fb      	ldr	r3, [r7, #12]
 80080d0:	4413      	add	r3, r2
 80080d2:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80080d6:	461a      	mov	r2, r3
 80080d8:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80080dc:	6013      	str	r3, [r2, #0]
 80080de:	e013      	b.n	8008108 <USB_DevInit+0x218>
 80080e0:	693b      	ldr	r3, [r7, #16]
 80080e2:	015a      	lsls	r2, r3, #5
 80080e4:	68fb      	ldr	r3, [r7, #12]
 80080e6:	4413      	add	r3, r2
 80080e8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80080ec:	461a      	mov	r2, r3
 80080ee:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 80080f2:	6013      	str	r3, [r2, #0]
 80080f4:	e008      	b.n	8008108 <USB_DevInit+0x218>
 80080f6:	693b      	ldr	r3, [r7, #16]
 80080f8:	015a      	lsls	r2, r3, #5
 80080fa:	68fb      	ldr	r3, [r7, #12]
 80080fc:	4413      	add	r3, r2
 80080fe:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008102:	461a      	mov	r2, r3
 8008104:	2300      	movs	r3, #0
 8008106:	6013      	str	r3, [r2, #0]
 8008108:	693b      	ldr	r3, [r7, #16]
 800810a:	015a      	lsls	r2, r3, #5
 800810c:	68fb      	ldr	r3, [r7, #12]
 800810e:	4413      	add	r3, r2
 8008110:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008114:	461a      	mov	r2, r3
 8008116:	2300      	movs	r3, #0
 8008118:	6113      	str	r3, [r2, #16]
 800811a:	693b      	ldr	r3, [r7, #16]
 800811c:	015a      	lsls	r2, r3, #5
 800811e:	68fb      	ldr	r3, [r7, #12]
 8008120:	4413      	add	r3, r2
 8008122:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008126:	461a      	mov	r2, r3
 8008128:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 800812c:	6093      	str	r3, [r2, #8]
 800812e:	693b      	ldr	r3, [r7, #16]
 8008130:	3301      	adds	r3, #1
 8008132:	613b      	str	r3, [r7, #16]
 8008134:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008136:	693a      	ldr	r2, [r7, #16]
 8008138:	429a      	cmp	r2, r3
 800813a:	d3b7      	bcc.n	80080ac <USB_DevInit+0x1bc>
 800813c:	68fb      	ldr	r3, [r7, #12]
 800813e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8008142:	691b      	ldr	r3, [r3, #16]
 8008144:	68fa      	ldr	r2, [r7, #12]
 8008146:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 800814a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800814e:	6113      	str	r3, [r2, #16]
 8008150:	687b      	ldr	r3, [r7, #4]
 8008152:	2200      	movs	r2, #0
 8008154:	619a      	str	r2, [r3, #24]
 8008156:	687b      	ldr	r3, [r7, #4]
 8008158:	f06f 4280 	mvn.w	r2, #1073741824	; 0x40000000
 800815c:	615a      	str	r2, [r3, #20]
 800815e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008160:	2b00      	cmp	r3, #0
 8008162:	d105      	bne.n	8008170 <USB_DevInit+0x280>
 8008164:	687b      	ldr	r3, [r7, #4]
 8008166:	699b      	ldr	r3, [r3, #24]
 8008168:	f043 0210 	orr.w	r2, r3, #16
 800816c:	687b      	ldr	r3, [r7, #4]
 800816e:	619a      	str	r2, [r3, #24]
 8008170:	687b      	ldr	r3, [r7, #4]
 8008172:	699a      	ldr	r2, [r3, #24]
 8008174:	4b0f      	ldr	r3, [pc, #60]	; (80081b4 <USB_DevInit+0x2c4>)
 8008176:	4313      	orrs	r3, r2
 8008178:	687a      	ldr	r2, [r7, #4]
 800817a:	6193      	str	r3, [r2, #24]
 800817c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800817e:	2b00      	cmp	r3, #0
 8008180:	d005      	beq.n	800818e <USB_DevInit+0x29e>
 8008182:	687b      	ldr	r3, [r7, #4]
 8008184:	699b      	ldr	r3, [r3, #24]
 8008186:	f043 0208 	orr.w	r2, r3, #8
 800818a:	687b      	ldr	r3, [r7, #4]
 800818c:	619a      	str	r2, [r3, #24]
 800818e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8008190:	2b01      	cmp	r3, #1
 8008192:	d107      	bne.n	80081a4 <USB_DevInit+0x2b4>
 8008194:	687b      	ldr	r3, [r7, #4]
 8008196:	699b      	ldr	r3, [r3, #24]
 8008198:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800819c:	f043 0304 	orr.w	r3, r3, #4
 80081a0:	687a      	ldr	r2, [r7, #4]
 80081a2:	6193      	str	r3, [r2, #24]
 80081a4:	7dfb      	ldrb	r3, [r7, #23]
 80081a6:	4618      	mov	r0, r3
 80081a8:	3718      	adds	r7, #24
 80081aa:	46bd      	mov	sp, r7
 80081ac:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80081b0:	b004      	add	sp, #16
 80081b2:	4770      	bx	lr
 80081b4:	803c3800 	.word	0x803c3800

080081b8 <USB_FlushTxFifo>:
 80081b8:	b480      	push	{r7}
 80081ba:	b085      	sub	sp, #20
 80081bc:	af00      	add	r7, sp, #0
 80081be:	6078      	str	r0, [r7, #4]
 80081c0:	6039      	str	r1, [r7, #0]
 80081c2:	2300      	movs	r3, #0
 80081c4:	60fb      	str	r3, [r7, #12]
 80081c6:	68fb      	ldr	r3, [r7, #12]
 80081c8:	3301      	adds	r3, #1
 80081ca:	60fb      	str	r3, [r7, #12]
 80081cc:	68fb      	ldr	r3, [r7, #12]
 80081ce:	4a13      	ldr	r2, [pc, #76]	; (800821c <USB_FlushTxFifo+0x64>)
 80081d0:	4293      	cmp	r3, r2
 80081d2:	d901      	bls.n	80081d8 <USB_FlushTxFifo+0x20>
 80081d4:	2303      	movs	r3, #3
 80081d6:	e01b      	b.n	8008210 <USB_FlushTxFifo+0x58>
 80081d8:	687b      	ldr	r3, [r7, #4]
 80081da:	691b      	ldr	r3, [r3, #16]
 80081dc:	2b00      	cmp	r3, #0
 80081de:	daf2      	bge.n	80081c6 <USB_FlushTxFifo+0xe>
 80081e0:	2300      	movs	r3, #0
 80081e2:	60fb      	str	r3, [r7, #12]
 80081e4:	683b      	ldr	r3, [r7, #0]
 80081e6:	019b      	lsls	r3, r3, #6
 80081e8:	f043 0220 	orr.w	r2, r3, #32
 80081ec:	687b      	ldr	r3, [r7, #4]
 80081ee:	611a      	str	r2, [r3, #16]
 80081f0:	68fb      	ldr	r3, [r7, #12]
 80081f2:	3301      	adds	r3, #1
 80081f4:	60fb      	str	r3, [r7, #12]
 80081f6:	68fb      	ldr	r3, [r7, #12]
 80081f8:	4a08      	ldr	r2, [pc, #32]	; (800821c <USB_FlushTxFifo+0x64>)
 80081fa:	4293      	cmp	r3, r2
 80081fc:	d901      	bls.n	8008202 <USB_FlushTxFifo+0x4a>
 80081fe:	2303      	movs	r3, #3
 8008200:	e006      	b.n	8008210 <USB_FlushTxFifo+0x58>
 8008202:	687b      	ldr	r3, [r7, #4]
 8008204:	691b      	ldr	r3, [r3, #16]
 8008206:	f003 0320 	and.w	r3, r3, #32
 800820a:	2b20      	cmp	r3, #32
 800820c:	d0f0      	beq.n	80081f0 <USB_FlushTxFifo+0x38>
 800820e:	2300      	movs	r3, #0
 8008210:	4618      	mov	r0, r3
 8008212:	3714      	adds	r7, #20
 8008214:	46bd      	mov	sp, r7
 8008216:	f85d 7b04 	ldr.w	r7, [sp], #4
 800821a:	4770      	bx	lr
 800821c:	00030d40 	.word	0x00030d40

08008220 <USB_FlushRxFifo>:
 8008220:	b480      	push	{r7}
 8008222:	b085      	sub	sp, #20
 8008224:	af00      	add	r7, sp, #0
 8008226:	6078      	str	r0, [r7, #4]
 8008228:	2300      	movs	r3, #0
 800822a:	60fb      	str	r3, [r7, #12]
 800822c:	68fb      	ldr	r3, [r7, #12]
 800822e:	3301      	adds	r3, #1
 8008230:	60fb      	str	r3, [r7, #12]
 8008232:	68fb      	ldr	r3, [r7, #12]
 8008234:	4a11      	ldr	r2, [pc, #68]	; (800827c <USB_FlushRxFifo+0x5c>)
 8008236:	4293      	cmp	r3, r2
 8008238:	d901      	bls.n	800823e <USB_FlushRxFifo+0x1e>
 800823a:	2303      	movs	r3, #3
 800823c:	e018      	b.n	8008270 <USB_FlushRxFifo+0x50>
 800823e:	687b      	ldr	r3, [r7, #4]
 8008240:	691b      	ldr	r3, [r3, #16]
 8008242:	2b00      	cmp	r3, #0
 8008244:	daf2      	bge.n	800822c <USB_FlushRxFifo+0xc>
 8008246:	2300      	movs	r3, #0
 8008248:	60fb      	str	r3, [r7, #12]
 800824a:	687b      	ldr	r3, [r7, #4]
 800824c:	2210      	movs	r2, #16
 800824e:	611a      	str	r2, [r3, #16]
 8008250:	68fb      	ldr	r3, [r7, #12]
 8008252:	3301      	adds	r3, #1
 8008254:	60fb      	str	r3, [r7, #12]
 8008256:	68fb      	ldr	r3, [r7, #12]
 8008258:	4a08      	ldr	r2, [pc, #32]	; (800827c <USB_FlushRxFifo+0x5c>)
 800825a:	4293      	cmp	r3, r2
 800825c:	d901      	bls.n	8008262 <USB_FlushRxFifo+0x42>
 800825e:	2303      	movs	r3, #3
 8008260:	e006      	b.n	8008270 <USB_FlushRxFifo+0x50>
 8008262:	687b      	ldr	r3, [r7, #4]
 8008264:	691b      	ldr	r3, [r3, #16]
 8008266:	f003 0310 	and.w	r3, r3, #16
 800826a:	2b10      	cmp	r3, #16
 800826c:	d0f0      	beq.n	8008250 <USB_FlushRxFifo+0x30>
 800826e:	2300      	movs	r3, #0
 8008270:	4618      	mov	r0, r3
 8008272:	3714      	adds	r7, #20
 8008274:	46bd      	mov	sp, r7
 8008276:	f85d 7b04 	ldr.w	r7, [sp], #4
 800827a:	4770      	bx	lr
 800827c:	00030d40 	.word	0x00030d40

08008280 <USB_SetDevSpeed>:
 8008280:	b480      	push	{r7}
 8008282:	b085      	sub	sp, #20
 8008284:	af00      	add	r7, sp, #0
 8008286:	6078      	str	r0, [r7, #4]
 8008288:	460b      	mov	r3, r1
 800828a:	70fb      	strb	r3, [r7, #3]
 800828c:	687b      	ldr	r3, [r7, #4]
 800828e:	60fb      	str	r3, [r7, #12]
 8008290:	68fb      	ldr	r3, [r7, #12]
 8008292:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8008296:	681a      	ldr	r2, [r3, #0]
 8008298:	78fb      	ldrb	r3, [r7, #3]
 800829a:	68f9      	ldr	r1, [r7, #12]
 800829c:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 80082a0:	4313      	orrs	r3, r2
 80082a2:	600b      	str	r3, [r1, #0]
 80082a4:	2300      	movs	r3, #0
 80082a6:	4618      	mov	r0, r3
 80082a8:	3714      	adds	r7, #20
 80082aa:	46bd      	mov	sp, r7
 80082ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082b0:	4770      	bx	lr

080082b2 <USB_GetDevSpeed>:
 80082b2:	b480      	push	{r7}
 80082b4:	b087      	sub	sp, #28
 80082b6:	af00      	add	r7, sp, #0
 80082b8:	6078      	str	r0, [r7, #4]
 80082ba:	687b      	ldr	r3, [r7, #4]
 80082bc:	613b      	str	r3, [r7, #16]
 80082be:	693b      	ldr	r3, [r7, #16]
 80082c0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80082c4:	689b      	ldr	r3, [r3, #8]
 80082c6:	f003 0306 	and.w	r3, r3, #6
 80082ca:	60fb      	str	r3, [r7, #12]
 80082cc:	68fb      	ldr	r3, [r7, #12]
 80082ce:	2b00      	cmp	r3, #0
 80082d0:	d102      	bne.n	80082d8 <USB_GetDevSpeed+0x26>
 80082d2:	2300      	movs	r3, #0
 80082d4:	75fb      	strb	r3, [r7, #23]
 80082d6:	e00a      	b.n	80082ee <USB_GetDevSpeed+0x3c>
 80082d8:	68fb      	ldr	r3, [r7, #12]
 80082da:	2b02      	cmp	r3, #2
 80082dc:	d002      	beq.n	80082e4 <USB_GetDevSpeed+0x32>
 80082de:	68fb      	ldr	r3, [r7, #12]
 80082e0:	2b06      	cmp	r3, #6
 80082e2:	d102      	bne.n	80082ea <USB_GetDevSpeed+0x38>
 80082e4:	2302      	movs	r3, #2
 80082e6:	75fb      	strb	r3, [r7, #23]
 80082e8:	e001      	b.n	80082ee <USB_GetDevSpeed+0x3c>
 80082ea:	230f      	movs	r3, #15
 80082ec:	75fb      	strb	r3, [r7, #23]
 80082ee:	7dfb      	ldrb	r3, [r7, #23]
 80082f0:	4618      	mov	r0, r3
 80082f2:	371c      	adds	r7, #28
 80082f4:	46bd      	mov	sp, r7
 80082f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082fa:	4770      	bx	lr

080082fc <USB_ActivateEndpoint>:
 80082fc:	b480      	push	{r7}
 80082fe:	b085      	sub	sp, #20
 8008300:	af00      	add	r7, sp, #0
 8008302:	6078      	str	r0, [r7, #4]
 8008304:	6039      	str	r1, [r7, #0]
 8008306:	687b      	ldr	r3, [r7, #4]
 8008308:	60fb      	str	r3, [r7, #12]
 800830a:	683b      	ldr	r3, [r7, #0]
 800830c:	781b      	ldrb	r3, [r3, #0]
 800830e:	60bb      	str	r3, [r7, #8]
 8008310:	683b      	ldr	r3, [r7, #0]
 8008312:	785b      	ldrb	r3, [r3, #1]
 8008314:	2b01      	cmp	r3, #1
 8008316:	d13a      	bne.n	800838e <USB_ActivateEndpoint+0x92>
 8008318:	68fb      	ldr	r3, [r7, #12]
 800831a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800831e:	69da      	ldr	r2, [r3, #28]
 8008320:	683b      	ldr	r3, [r7, #0]
 8008322:	781b      	ldrb	r3, [r3, #0]
 8008324:	f003 030f 	and.w	r3, r3, #15
 8008328:	2101      	movs	r1, #1
 800832a:	fa01 f303 	lsl.w	r3, r1, r3
 800832e:	b29b      	uxth	r3, r3
 8008330:	68f9      	ldr	r1, [r7, #12]
 8008332:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8008336:	4313      	orrs	r3, r2
 8008338:	61cb      	str	r3, [r1, #28]
 800833a:	68bb      	ldr	r3, [r7, #8]
 800833c:	015a      	lsls	r2, r3, #5
 800833e:	68fb      	ldr	r3, [r7, #12]
 8008340:	4413      	add	r3, r2
 8008342:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008346:	681b      	ldr	r3, [r3, #0]
 8008348:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800834c:	2b00      	cmp	r3, #0
 800834e:	d155      	bne.n	80083fc <USB_ActivateEndpoint+0x100>
 8008350:	68bb      	ldr	r3, [r7, #8]
 8008352:	015a      	lsls	r2, r3, #5
 8008354:	68fb      	ldr	r3, [r7, #12]
 8008356:	4413      	add	r3, r2
 8008358:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800835c:	681a      	ldr	r2, [r3, #0]
 800835e:	683b      	ldr	r3, [r7, #0]
 8008360:	68db      	ldr	r3, [r3, #12]
 8008362:	f3c3 010a 	ubfx	r1, r3, #0, #11
 8008366:	683b      	ldr	r3, [r7, #0]
 8008368:	791b      	ldrb	r3, [r3, #4]
 800836a:	049b      	lsls	r3, r3, #18
 800836c:	4319      	orrs	r1, r3
 800836e:	68bb      	ldr	r3, [r7, #8]
 8008370:	059b      	lsls	r3, r3, #22
 8008372:	430b      	orrs	r3, r1
 8008374:	4313      	orrs	r3, r2
 8008376:	68ba      	ldr	r2, [r7, #8]
 8008378:	0151      	lsls	r1, r2, #5
 800837a:	68fa      	ldr	r2, [r7, #12]
 800837c:	440a      	add	r2, r1
 800837e:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8008382:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8008386:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800838a:	6013      	str	r3, [r2, #0]
 800838c:	e036      	b.n	80083fc <USB_ActivateEndpoint+0x100>
 800838e:	68fb      	ldr	r3, [r7, #12]
 8008390:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8008394:	69da      	ldr	r2, [r3, #28]
 8008396:	683b      	ldr	r3, [r7, #0]
 8008398:	781b      	ldrb	r3, [r3, #0]
 800839a:	f003 030f 	and.w	r3, r3, #15
 800839e:	2101      	movs	r1, #1
 80083a0:	fa01 f303 	lsl.w	r3, r1, r3
 80083a4:	041b      	lsls	r3, r3, #16
 80083a6:	68f9      	ldr	r1, [r7, #12]
 80083a8:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 80083ac:	4313      	orrs	r3, r2
 80083ae:	61cb      	str	r3, [r1, #28]
 80083b0:	68bb      	ldr	r3, [r7, #8]
 80083b2:	015a      	lsls	r2, r3, #5
 80083b4:	68fb      	ldr	r3, [r7, #12]
 80083b6:	4413      	add	r3, r2
 80083b8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80083bc:	681b      	ldr	r3, [r3, #0]
 80083be:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80083c2:	2b00      	cmp	r3, #0
 80083c4:	d11a      	bne.n	80083fc <USB_ActivateEndpoint+0x100>
 80083c6:	68bb      	ldr	r3, [r7, #8]
 80083c8:	015a      	lsls	r2, r3, #5
 80083ca:	68fb      	ldr	r3, [r7, #12]
 80083cc:	4413      	add	r3, r2
 80083ce:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80083d2:	681a      	ldr	r2, [r3, #0]
 80083d4:	683b      	ldr	r3, [r7, #0]
 80083d6:	68db      	ldr	r3, [r3, #12]
 80083d8:	f3c3 010a 	ubfx	r1, r3, #0, #11
 80083dc:	683b      	ldr	r3, [r7, #0]
 80083de:	791b      	ldrb	r3, [r3, #4]
 80083e0:	049b      	lsls	r3, r3, #18
 80083e2:	430b      	orrs	r3, r1
 80083e4:	4313      	orrs	r3, r2
 80083e6:	68ba      	ldr	r2, [r7, #8]
 80083e8:	0151      	lsls	r1, r2, #5
 80083ea:	68fa      	ldr	r2, [r7, #12]
 80083ec:	440a      	add	r2, r1
 80083ee:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80083f2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80083f6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80083fa:	6013      	str	r3, [r2, #0]
 80083fc:	2300      	movs	r3, #0
 80083fe:	4618      	mov	r0, r3
 8008400:	3714      	adds	r7, #20
 8008402:	46bd      	mov	sp, r7
 8008404:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008408:	4770      	bx	lr
	...

0800840c <USB_DeactivateEndpoint>:
 800840c:	b480      	push	{r7}
 800840e:	b085      	sub	sp, #20
 8008410:	af00      	add	r7, sp, #0
 8008412:	6078      	str	r0, [r7, #4]
 8008414:	6039      	str	r1, [r7, #0]
 8008416:	687b      	ldr	r3, [r7, #4]
 8008418:	60fb      	str	r3, [r7, #12]
 800841a:	683b      	ldr	r3, [r7, #0]
 800841c:	781b      	ldrb	r3, [r3, #0]
 800841e:	60bb      	str	r3, [r7, #8]
 8008420:	683b      	ldr	r3, [r7, #0]
 8008422:	785b      	ldrb	r3, [r3, #1]
 8008424:	2b01      	cmp	r3, #1
 8008426:	d161      	bne.n	80084ec <USB_DeactivateEndpoint+0xe0>
 8008428:	68bb      	ldr	r3, [r7, #8]
 800842a:	015a      	lsls	r2, r3, #5
 800842c:	68fb      	ldr	r3, [r7, #12]
 800842e:	4413      	add	r3, r2
 8008430:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008434:	681b      	ldr	r3, [r3, #0]
 8008436:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 800843a:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 800843e:	d11f      	bne.n	8008480 <USB_DeactivateEndpoint+0x74>
 8008440:	68bb      	ldr	r3, [r7, #8]
 8008442:	015a      	lsls	r2, r3, #5
 8008444:	68fb      	ldr	r3, [r7, #12]
 8008446:	4413      	add	r3, r2
 8008448:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800844c:	681b      	ldr	r3, [r3, #0]
 800844e:	68ba      	ldr	r2, [r7, #8]
 8008450:	0151      	lsls	r1, r2, #5
 8008452:	68fa      	ldr	r2, [r7, #12]
 8008454:	440a      	add	r2, r1
 8008456:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800845a:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 800845e:	6013      	str	r3, [r2, #0]
 8008460:	68bb      	ldr	r3, [r7, #8]
 8008462:	015a      	lsls	r2, r3, #5
 8008464:	68fb      	ldr	r3, [r7, #12]
 8008466:	4413      	add	r3, r2
 8008468:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800846c:	681b      	ldr	r3, [r3, #0]
 800846e:	68ba      	ldr	r2, [r7, #8]
 8008470:	0151      	lsls	r1, r2, #5
 8008472:	68fa      	ldr	r2, [r7, #12]
 8008474:	440a      	add	r2, r1
 8008476:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800847a:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800847e:	6013      	str	r3, [r2, #0]
 8008480:	68fb      	ldr	r3, [r7, #12]
 8008482:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8008486:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8008488:	683b      	ldr	r3, [r7, #0]
 800848a:	781b      	ldrb	r3, [r3, #0]
 800848c:	f003 030f 	and.w	r3, r3, #15
 8008490:	2101      	movs	r1, #1
 8008492:	fa01 f303 	lsl.w	r3, r1, r3
 8008496:	b29b      	uxth	r3, r3
 8008498:	43db      	mvns	r3, r3
 800849a:	68f9      	ldr	r1, [r7, #12]
 800849c:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 80084a0:	4013      	ands	r3, r2
 80084a2:	63cb      	str	r3, [r1, #60]	; 0x3c
 80084a4:	68fb      	ldr	r3, [r7, #12]
 80084a6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80084aa:	69da      	ldr	r2, [r3, #28]
 80084ac:	683b      	ldr	r3, [r7, #0]
 80084ae:	781b      	ldrb	r3, [r3, #0]
 80084b0:	f003 030f 	and.w	r3, r3, #15
 80084b4:	2101      	movs	r1, #1
 80084b6:	fa01 f303 	lsl.w	r3, r1, r3
 80084ba:	b29b      	uxth	r3, r3
 80084bc:	43db      	mvns	r3, r3
 80084be:	68f9      	ldr	r1, [r7, #12]
 80084c0:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 80084c4:	4013      	ands	r3, r2
 80084c6:	61cb      	str	r3, [r1, #28]
 80084c8:	68bb      	ldr	r3, [r7, #8]
 80084ca:	015a      	lsls	r2, r3, #5
 80084cc:	68fb      	ldr	r3, [r7, #12]
 80084ce:	4413      	add	r3, r2
 80084d0:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80084d4:	681a      	ldr	r2, [r3, #0]
 80084d6:	68bb      	ldr	r3, [r7, #8]
 80084d8:	0159      	lsls	r1, r3, #5
 80084da:	68fb      	ldr	r3, [r7, #12]
 80084dc:	440b      	add	r3, r1
 80084de:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80084e2:	4619      	mov	r1, r3
 80084e4:	4b35      	ldr	r3, [pc, #212]	; (80085bc <USB_DeactivateEndpoint+0x1b0>)
 80084e6:	4013      	ands	r3, r2
 80084e8:	600b      	str	r3, [r1, #0]
 80084ea:	e060      	b.n	80085ae <USB_DeactivateEndpoint+0x1a2>
 80084ec:	68bb      	ldr	r3, [r7, #8]
 80084ee:	015a      	lsls	r2, r3, #5
 80084f0:	68fb      	ldr	r3, [r7, #12]
 80084f2:	4413      	add	r3, r2
 80084f4:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80084f8:	681b      	ldr	r3, [r3, #0]
 80084fa:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 80084fe:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8008502:	d11f      	bne.n	8008544 <USB_DeactivateEndpoint+0x138>
 8008504:	68bb      	ldr	r3, [r7, #8]
 8008506:	015a      	lsls	r2, r3, #5
 8008508:	68fb      	ldr	r3, [r7, #12]
 800850a:	4413      	add	r3, r2
 800850c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008510:	681b      	ldr	r3, [r3, #0]
 8008512:	68ba      	ldr	r2, [r7, #8]
 8008514:	0151      	lsls	r1, r2, #5
 8008516:	68fa      	ldr	r2, [r7, #12]
 8008518:	440a      	add	r2, r1
 800851a:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800851e:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8008522:	6013      	str	r3, [r2, #0]
 8008524:	68bb      	ldr	r3, [r7, #8]
 8008526:	015a      	lsls	r2, r3, #5
 8008528:	68fb      	ldr	r3, [r7, #12]
 800852a:	4413      	add	r3, r2
 800852c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008530:	681b      	ldr	r3, [r3, #0]
 8008532:	68ba      	ldr	r2, [r7, #8]
 8008534:	0151      	lsls	r1, r2, #5
 8008536:	68fa      	ldr	r2, [r7, #12]
 8008538:	440a      	add	r2, r1
 800853a:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800853e:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8008542:	6013      	str	r3, [r2, #0]
 8008544:	68fb      	ldr	r3, [r7, #12]
 8008546:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800854a:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800854c:	683b      	ldr	r3, [r7, #0]
 800854e:	781b      	ldrb	r3, [r3, #0]
 8008550:	f003 030f 	and.w	r3, r3, #15
 8008554:	2101      	movs	r1, #1
 8008556:	fa01 f303 	lsl.w	r3, r1, r3
 800855a:	041b      	lsls	r3, r3, #16
 800855c:	43db      	mvns	r3, r3
 800855e:	68f9      	ldr	r1, [r7, #12]
 8008560:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8008564:	4013      	ands	r3, r2
 8008566:	63cb      	str	r3, [r1, #60]	; 0x3c
 8008568:	68fb      	ldr	r3, [r7, #12]
 800856a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800856e:	69da      	ldr	r2, [r3, #28]
 8008570:	683b      	ldr	r3, [r7, #0]
 8008572:	781b      	ldrb	r3, [r3, #0]
 8008574:	f003 030f 	and.w	r3, r3, #15
 8008578:	2101      	movs	r1, #1
 800857a:	fa01 f303 	lsl.w	r3, r1, r3
 800857e:	041b      	lsls	r3, r3, #16
 8008580:	43db      	mvns	r3, r3
 8008582:	68f9      	ldr	r1, [r7, #12]
 8008584:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8008588:	4013      	ands	r3, r2
 800858a:	61cb      	str	r3, [r1, #28]
 800858c:	68bb      	ldr	r3, [r7, #8]
 800858e:	015a      	lsls	r2, r3, #5
 8008590:	68fb      	ldr	r3, [r7, #12]
 8008592:	4413      	add	r3, r2
 8008594:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008598:	681a      	ldr	r2, [r3, #0]
 800859a:	68bb      	ldr	r3, [r7, #8]
 800859c:	0159      	lsls	r1, r3, #5
 800859e:	68fb      	ldr	r3, [r7, #12]
 80085a0:	440b      	add	r3, r1
 80085a2:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80085a6:	4619      	mov	r1, r3
 80085a8:	4b05      	ldr	r3, [pc, #20]	; (80085c0 <USB_DeactivateEndpoint+0x1b4>)
 80085aa:	4013      	ands	r3, r2
 80085ac:	600b      	str	r3, [r1, #0]
 80085ae:	2300      	movs	r3, #0
 80085b0:	4618      	mov	r0, r3
 80085b2:	3714      	adds	r7, #20
 80085b4:	46bd      	mov	sp, r7
 80085b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085ba:	4770      	bx	lr
 80085bc:	ec337800 	.word	0xec337800
 80085c0:	eff37800 	.word	0xeff37800

080085c4 <USB_EPStartXfer>:
 80085c4:	b580      	push	{r7, lr}
 80085c6:	b08a      	sub	sp, #40	; 0x28
 80085c8:	af02      	add	r7, sp, #8
 80085ca:	60f8      	str	r0, [r7, #12]
 80085cc:	60b9      	str	r1, [r7, #8]
 80085ce:	4613      	mov	r3, r2
 80085d0:	71fb      	strb	r3, [r7, #7]
 80085d2:	68fb      	ldr	r3, [r7, #12]
 80085d4:	61fb      	str	r3, [r7, #28]
 80085d6:	68bb      	ldr	r3, [r7, #8]
 80085d8:	781b      	ldrb	r3, [r3, #0]
 80085da:	61bb      	str	r3, [r7, #24]
 80085dc:	68bb      	ldr	r3, [r7, #8]
 80085de:	785b      	ldrb	r3, [r3, #1]
 80085e0:	2b01      	cmp	r3, #1
 80085e2:	f040 815c 	bne.w	800889e <USB_EPStartXfer+0x2da>
 80085e6:	68bb      	ldr	r3, [r7, #8]
 80085e8:	699b      	ldr	r3, [r3, #24]
 80085ea:	2b00      	cmp	r3, #0
 80085ec:	d132      	bne.n	8008654 <USB_EPStartXfer+0x90>
 80085ee:	69bb      	ldr	r3, [r7, #24]
 80085f0:	015a      	lsls	r2, r3, #5
 80085f2:	69fb      	ldr	r3, [r7, #28]
 80085f4:	4413      	add	r3, r2
 80085f6:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80085fa:	691b      	ldr	r3, [r3, #16]
 80085fc:	69ba      	ldr	r2, [r7, #24]
 80085fe:	0151      	lsls	r1, r2, #5
 8008600:	69fa      	ldr	r2, [r7, #28]
 8008602:	440a      	add	r2, r1
 8008604:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8008608:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 800860c:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 8008610:	6113      	str	r3, [r2, #16]
 8008612:	69bb      	ldr	r3, [r7, #24]
 8008614:	015a      	lsls	r2, r3, #5
 8008616:	69fb      	ldr	r3, [r7, #28]
 8008618:	4413      	add	r3, r2
 800861a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800861e:	691b      	ldr	r3, [r3, #16]
 8008620:	69ba      	ldr	r2, [r7, #24]
 8008622:	0151      	lsls	r1, r2, #5
 8008624:	69fa      	ldr	r2, [r7, #28]
 8008626:	440a      	add	r2, r1
 8008628:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800862c:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8008630:	6113      	str	r3, [r2, #16]
 8008632:	69bb      	ldr	r3, [r7, #24]
 8008634:	015a      	lsls	r2, r3, #5
 8008636:	69fb      	ldr	r3, [r7, #28]
 8008638:	4413      	add	r3, r2
 800863a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800863e:	691b      	ldr	r3, [r3, #16]
 8008640:	69ba      	ldr	r2, [r7, #24]
 8008642:	0151      	lsls	r1, r2, #5
 8008644:	69fa      	ldr	r2, [r7, #28]
 8008646:	440a      	add	r2, r1
 8008648:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800864c:	0cdb      	lsrs	r3, r3, #19
 800864e:	04db      	lsls	r3, r3, #19
 8008650:	6113      	str	r3, [r2, #16]
 8008652:	e074      	b.n	800873e <USB_EPStartXfer+0x17a>
 8008654:	69bb      	ldr	r3, [r7, #24]
 8008656:	015a      	lsls	r2, r3, #5
 8008658:	69fb      	ldr	r3, [r7, #28]
 800865a:	4413      	add	r3, r2
 800865c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008660:	691b      	ldr	r3, [r3, #16]
 8008662:	69ba      	ldr	r2, [r7, #24]
 8008664:	0151      	lsls	r1, r2, #5
 8008666:	69fa      	ldr	r2, [r7, #28]
 8008668:	440a      	add	r2, r1
 800866a:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800866e:	0cdb      	lsrs	r3, r3, #19
 8008670:	04db      	lsls	r3, r3, #19
 8008672:	6113      	str	r3, [r2, #16]
 8008674:	69bb      	ldr	r3, [r7, #24]
 8008676:	015a      	lsls	r2, r3, #5
 8008678:	69fb      	ldr	r3, [r7, #28]
 800867a:	4413      	add	r3, r2
 800867c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008680:	691b      	ldr	r3, [r3, #16]
 8008682:	69ba      	ldr	r2, [r7, #24]
 8008684:	0151      	lsls	r1, r2, #5
 8008686:	69fa      	ldr	r2, [r7, #28]
 8008688:	440a      	add	r2, r1
 800868a:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800868e:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 8008692:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 8008696:	6113      	str	r3, [r2, #16]
 8008698:	69bb      	ldr	r3, [r7, #24]
 800869a:	015a      	lsls	r2, r3, #5
 800869c:	69fb      	ldr	r3, [r7, #28]
 800869e:	4413      	add	r3, r2
 80086a0:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80086a4:	691a      	ldr	r2, [r3, #16]
 80086a6:	68bb      	ldr	r3, [r7, #8]
 80086a8:	6999      	ldr	r1, [r3, #24]
 80086aa:	68bb      	ldr	r3, [r7, #8]
 80086ac:	68db      	ldr	r3, [r3, #12]
 80086ae:	440b      	add	r3, r1
 80086b0:	1e59      	subs	r1, r3, #1
 80086b2:	68bb      	ldr	r3, [r7, #8]
 80086b4:	68db      	ldr	r3, [r3, #12]
 80086b6:	fbb1 f3f3 	udiv	r3, r1, r3
 80086ba:	04d9      	lsls	r1, r3, #19
 80086bc:	4b9d      	ldr	r3, [pc, #628]	; (8008934 <USB_EPStartXfer+0x370>)
 80086be:	400b      	ands	r3, r1
 80086c0:	69b9      	ldr	r1, [r7, #24]
 80086c2:	0148      	lsls	r0, r1, #5
 80086c4:	69f9      	ldr	r1, [r7, #28]
 80086c6:	4401      	add	r1, r0
 80086c8:	f501 6110 	add.w	r1, r1, #2304	; 0x900
 80086cc:	4313      	orrs	r3, r2
 80086ce:	610b      	str	r3, [r1, #16]
 80086d0:	69bb      	ldr	r3, [r7, #24]
 80086d2:	015a      	lsls	r2, r3, #5
 80086d4:	69fb      	ldr	r3, [r7, #28]
 80086d6:	4413      	add	r3, r2
 80086d8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80086dc:	691a      	ldr	r2, [r3, #16]
 80086de:	68bb      	ldr	r3, [r7, #8]
 80086e0:	699b      	ldr	r3, [r3, #24]
 80086e2:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80086e6:	69b9      	ldr	r1, [r7, #24]
 80086e8:	0148      	lsls	r0, r1, #5
 80086ea:	69f9      	ldr	r1, [r7, #28]
 80086ec:	4401      	add	r1, r0
 80086ee:	f501 6110 	add.w	r1, r1, #2304	; 0x900
 80086f2:	4313      	orrs	r3, r2
 80086f4:	610b      	str	r3, [r1, #16]
 80086f6:	68bb      	ldr	r3, [r7, #8]
 80086f8:	791b      	ldrb	r3, [r3, #4]
 80086fa:	2b01      	cmp	r3, #1
 80086fc:	d11f      	bne.n	800873e <USB_EPStartXfer+0x17a>
 80086fe:	69bb      	ldr	r3, [r7, #24]
 8008700:	015a      	lsls	r2, r3, #5
 8008702:	69fb      	ldr	r3, [r7, #28]
 8008704:	4413      	add	r3, r2
 8008706:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800870a:	691b      	ldr	r3, [r3, #16]
 800870c:	69ba      	ldr	r2, [r7, #24]
 800870e:	0151      	lsls	r1, r2, #5
 8008710:	69fa      	ldr	r2, [r7, #28]
 8008712:	440a      	add	r2, r1
 8008714:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8008718:	f023 43c0 	bic.w	r3, r3, #1610612736	; 0x60000000
 800871c:	6113      	str	r3, [r2, #16]
 800871e:	69bb      	ldr	r3, [r7, #24]
 8008720:	015a      	lsls	r2, r3, #5
 8008722:	69fb      	ldr	r3, [r7, #28]
 8008724:	4413      	add	r3, r2
 8008726:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800872a:	691b      	ldr	r3, [r3, #16]
 800872c:	69ba      	ldr	r2, [r7, #24]
 800872e:	0151      	lsls	r1, r2, #5
 8008730:	69fa      	ldr	r2, [r7, #28]
 8008732:	440a      	add	r2, r1
 8008734:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8008738:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 800873c:	6113      	str	r3, [r2, #16]
 800873e:	79fb      	ldrb	r3, [r7, #7]
 8008740:	2b01      	cmp	r3, #1
 8008742:	d14b      	bne.n	80087dc <USB_EPStartXfer+0x218>
 8008744:	68bb      	ldr	r3, [r7, #8]
 8008746:	695b      	ldr	r3, [r3, #20]
 8008748:	2b00      	cmp	r3, #0
 800874a:	d009      	beq.n	8008760 <USB_EPStartXfer+0x19c>
 800874c:	69bb      	ldr	r3, [r7, #24]
 800874e:	015a      	lsls	r2, r3, #5
 8008750:	69fb      	ldr	r3, [r7, #28]
 8008752:	4413      	add	r3, r2
 8008754:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008758:	461a      	mov	r2, r3
 800875a:	68bb      	ldr	r3, [r7, #8]
 800875c:	695b      	ldr	r3, [r3, #20]
 800875e:	6153      	str	r3, [r2, #20]
 8008760:	68bb      	ldr	r3, [r7, #8]
 8008762:	791b      	ldrb	r3, [r3, #4]
 8008764:	2b01      	cmp	r3, #1
 8008766:	d128      	bne.n	80087ba <USB_EPStartXfer+0x1f6>
 8008768:	69fb      	ldr	r3, [r7, #28]
 800876a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800876e:	689b      	ldr	r3, [r3, #8]
 8008770:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008774:	2b00      	cmp	r3, #0
 8008776:	d110      	bne.n	800879a <USB_EPStartXfer+0x1d6>
 8008778:	69bb      	ldr	r3, [r7, #24]
 800877a:	015a      	lsls	r2, r3, #5
 800877c:	69fb      	ldr	r3, [r7, #28]
 800877e:	4413      	add	r3, r2
 8008780:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008784:	681b      	ldr	r3, [r3, #0]
 8008786:	69ba      	ldr	r2, [r7, #24]
 8008788:	0151      	lsls	r1, r2, #5
 800878a:	69fa      	ldr	r2, [r7, #28]
 800878c:	440a      	add	r2, r1
 800878e:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8008792:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8008796:	6013      	str	r3, [r2, #0]
 8008798:	e00f      	b.n	80087ba <USB_EPStartXfer+0x1f6>
 800879a:	69bb      	ldr	r3, [r7, #24]
 800879c:	015a      	lsls	r2, r3, #5
 800879e:	69fb      	ldr	r3, [r7, #28]
 80087a0:	4413      	add	r3, r2
 80087a2:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80087a6:	681b      	ldr	r3, [r3, #0]
 80087a8:	69ba      	ldr	r2, [r7, #24]
 80087aa:	0151      	lsls	r1, r2, #5
 80087ac:	69fa      	ldr	r2, [r7, #28]
 80087ae:	440a      	add	r2, r1
 80087b0:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80087b4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80087b8:	6013      	str	r3, [r2, #0]
 80087ba:	69bb      	ldr	r3, [r7, #24]
 80087bc:	015a      	lsls	r2, r3, #5
 80087be:	69fb      	ldr	r3, [r7, #28]
 80087c0:	4413      	add	r3, r2
 80087c2:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80087c6:	681b      	ldr	r3, [r3, #0]
 80087c8:	69ba      	ldr	r2, [r7, #24]
 80087ca:	0151      	lsls	r1, r2, #5
 80087cc:	69fa      	ldr	r2, [r7, #28]
 80087ce:	440a      	add	r2, r1
 80087d0:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80087d4:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 80087d8:	6013      	str	r3, [r2, #0]
 80087da:	e133      	b.n	8008a44 <USB_EPStartXfer+0x480>
 80087dc:	69bb      	ldr	r3, [r7, #24]
 80087de:	015a      	lsls	r2, r3, #5
 80087e0:	69fb      	ldr	r3, [r7, #28]
 80087e2:	4413      	add	r3, r2
 80087e4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80087e8:	681b      	ldr	r3, [r3, #0]
 80087ea:	69ba      	ldr	r2, [r7, #24]
 80087ec:	0151      	lsls	r1, r2, #5
 80087ee:	69fa      	ldr	r2, [r7, #28]
 80087f0:	440a      	add	r2, r1
 80087f2:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80087f6:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 80087fa:	6013      	str	r3, [r2, #0]
 80087fc:	68bb      	ldr	r3, [r7, #8]
 80087fe:	791b      	ldrb	r3, [r3, #4]
 8008800:	2b01      	cmp	r3, #1
 8008802:	d015      	beq.n	8008830 <USB_EPStartXfer+0x26c>
 8008804:	68bb      	ldr	r3, [r7, #8]
 8008806:	699b      	ldr	r3, [r3, #24]
 8008808:	2b00      	cmp	r3, #0
 800880a:	f000 811b 	beq.w	8008a44 <USB_EPStartXfer+0x480>
 800880e:	69fb      	ldr	r3, [r7, #28]
 8008810:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8008814:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008816:	68bb      	ldr	r3, [r7, #8]
 8008818:	781b      	ldrb	r3, [r3, #0]
 800881a:	f003 030f 	and.w	r3, r3, #15
 800881e:	2101      	movs	r1, #1
 8008820:	fa01 f303 	lsl.w	r3, r1, r3
 8008824:	69f9      	ldr	r1, [r7, #28]
 8008826:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 800882a:	4313      	orrs	r3, r2
 800882c:	634b      	str	r3, [r1, #52]	; 0x34
 800882e:	e109      	b.n	8008a44 <USB_EPStartXfer+0x480>
 8008830:	69fb      	ldr	r3, [r7, #28]
 8008832:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8008836:	689b      	ldr	r3, [r3, #8]
 8008838:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800883c:	2b00      	cmp	r3, #0
 800883e:	d110      	bne.n	8008862 <USB_EPStartXfer+0x29e>
 8008840:	69bb      	ldr	r3, [r7, #24]
 8008842:	015a      	lsls	r2, r3, #5
 8008844:	69fb      	ldr	r3, [r7, #28]
 8008846:	4413      	add	r3, r2
 8008848:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800884c:	681b      	ldr	r3, [r3, #0]
 800884e:	69ba      	ldr	r2, [r7, #24]
 8008850:	0151      	lsls	r1, r2, #5
 8008852:	69fa      	ldr	r2, [r7, #28]
 8008854:	440a      	add	r2, r1
 8008856:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800885a:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 800885e:	6013      	str	r3, [r2, #0]
 8008860:	e00f      	b.n	8008882 <USB_EPStartXfer+0x2be>
 8008862:	69bb      	ldr	r3, [r7, #24]
 8008864:	015a      	lsls	r2, r3, #5
 8008866:	69fb      	ldr	r3, [r7, #28]
 8008868:	4413      	add	r3, r2
 800886a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800886e:	681b      	ldr	r3, [r3, #0]
 8008870:	69ba      	ldr	r2, [r7, #24]
 8008872:	0151      	lsls	r1, r2, #5
 8008874:	69fa      	ldr	r2, [r7, #28]
 8008876:	440a      	add	r2, r1
 8008878:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800887c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8008880:	6013      	str	r3, [r2, #0]
 8008882:	68bb      	ldr	r3, [r7, #8]
 8008884:	6919      	ldr	r1, [r3, #16]
 8008886:	68bb      	ldr	r3, [r7, #8]
 8008888:	781a      	ldrb	r2, [r3, #0]
 800888a:	68bb      	ldr	r3, [r7, #8]
 800888c:	699b      	ldr	r3, [r3, #24]
 800888e:	b298      	uxth	r0, r3
 8008890:	79fb      	ldrb	r3, [r7, #7]
 8008892:	9300      	str	r3, [sp, #0]
 8008894:	4603      	mov	r3, r0
 8008896:	68f8      	ldr	r0, [r7, #12]
 8008898:	f000 fade 	bl	8008e58 <USB_WritePacket>
 800889c:	e0d2      	b.n	8008a44 <USB_EPStartXfer+0x480>
 800889e:	69bb      	ldr	r3, [r7, #24]
 80088a0:	015a      	lsls	r2, r3, #5
 80088a2:	69fb      	ldr	r3, [r7, #28]
 80088a4:	4413      	add	r3, r2
 80088a6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80088aa:	691b      	ldr	r3, [r3, #16]
 80088ac:	69ba      	ldr	r2, [r7, #24]
 80088ae:	0151      	lsls	r1, r2, #5
 80088b0:	69fa      	ldr	r2, [r7, #28]
 80088b2:	440a      	add	r2, r1
 80088b4:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80088b8:	0cdb      	lsrs	r3, r3, #19
 80088ba:	04db      	lsls	r3, r3, #19
 80088bc:	6113      	str	r3, [r2, #16]
 80088be:	69bb      	ldr	r3, [r7, #24]
 80088c0:	015a      	lsls	r2, r3, #5
 80088c2:	69fb      	ldr	r3, [r7, #28]
 80088c4:	4413      	add	r3, r2
 80088c6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80088ca:	691b      	ldr	r3, [r3, #16]
 80088cc:	69ba      	ldr	r2, [r7, #24]
 80088ce:	0151      	lsls	r1, r2, #5
 80088d0:	69fa      	ldr	r2, [r7, #28]
 80088d2:	440a      	add	r2, r1
 80088d4:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80088d8:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 80088dc:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 80088e0:	6113      	str	r3, [r2, #16]
 80088e2:	68bb      	ldr	r3, [r7, #8]
 80088e4:	699b      	ldr	r3, [r3, #24]
 80088e6:	2b00      	cmp	r3, #0
 80088e8:	d126      	bne.n	8008938 <USB_EPStartXfer+0x374>
 80088ea:	69bb      	ldr	r3, [r7, #24]
 80088ec:	015a      	lsls	r2, r3, #5
 80088ee:	69fb      	ldr	r3, [r7, #28]
 80088f0:	4413      	add	r3, r2
 80088f2:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80088f6:	691a      	ldr	r2, [r3, #16]
 80088f8:	68bb      	ldr	r3, [r7, #8]
 80088fa:	68db      	ldr	r3, [r3, #12]
 80088fc:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8008900:	69b9      	ldr	r1, [r7, #24]
 8008902:	0148      	lsls	r0, r1, #5
 8008904:	69f9      	ldr	r1, [r7, #28]
 8008906:	4401      	add	r1, r0
 8008908:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 800890c:	4313      	orrs	r3, r2
 800890e:	610b      	str	r3, [r1, #16]
 8008910:	69bb      	ldr	r3, [r7, #24]
 8008912:	015a      	lsls	r2, r3, #5
 8008914:	69fb      	ldr	r3, [r7, #28]
 8008916:	4413      	add	r3, r2
 8008918:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800891c:	691b      	ldr	r3, [r3, #16]
 800891e:	69ba      	ldr	r2, [r7, #24]
 8008920:	0151      	lsls	r1, r2, #5
 8008922:	69fa      	ldr	r2, [r7, #28]
 8008924:	440a      	add	r2, r1
 8008926:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800892a:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800892e:	6113      	str	r3, [r2, #16]
 8008930:	e03a      	b.n	80089a8 <USB_EPStartXfer+0x3e4>
 8008932:	bf00      	nop
 8008934:	1ff80000 	.word	0x1ff80000
 8008938:	68bb      	ldr	r3, [r7, #8]
 800893a:	699a      	ldr	r2, [r3, #24]
 800893c:	68bb      	ldr	r3, [r7, #8]
 800893e:	68db      	ldr	r3, [r3, #12]
 8008940:	4413      	add	r3, r2
 8008942:	1e5a      	subs	r2, r3, #1
 8008944:	68bb      	ldr	r3, [r7, #8]
 8008946:	68db      	ldr	r3, [r3, #12]
 8008948:	fbb2 f3f3 	udiv	r3, r2, r3
 800894c:	82fb      	strh	r3, [r7, #22]
 800894e:	68bb      	ldr	r3, [r7, #8]
 8008950:	68db      	ldr	r3, [r3, #12]
 8008952:	8afa      	ldrh	r2, [r7, #22]
 8008954:	fb03 f202 	mul.w	r2, r3, r2
 8008958:	68bb      	ldr	r3, [r7, #8]
 800895a:	61da      	str	r2, [r3, #28]
 800895c:	69bb      	ldr	r3, [r7, #24]
 800895e:	015a      	lsls	r2, r3, #5
 8008960:	69fb      	ldr	r3, [r7, #28]
 8008962:	4413      	add	r3, r2
 8008964:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008968:	691a      	ldr	r2, [r3, #16]
 800896a:	8afb      	ldrh	r3, [r7, #22]
 800896c:	04d9      	lsls	r1, r3, #19
 800896e:	4b38      	ldr	r3, [pc, #224]	; (8008a50 <USB_EPStartXfer+0x48c>)
 8008970:	400b      	ands	r3, r1
 8008972:	69b9      	ldr	r1, [r7, #24]
 8008974:	0148      	lsls	r0, r1, #5
 8008976:	69f9      	ldr	r1, [r7, #28]
 8008978:	4401      	add	r1, r0
 800897a:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 800897e:	4313      	orrs	r3, r2
 8008980:	610b      	str	r3, [r1, #16]
 8008982:	69bb      	ldr	r3, [r7, #24]
 8008984:	015a      	lsls	r2, r3, #5
 8008986:	69fb      	ldr	r3, [r7, #28]
 8008988:	4413      	add	r3, r2
 800898a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800898e:	691a      	ldr	r2, [r3, #16]
 8008990:	68bb      	ldr	r3, [r7, #8]
 8008992:	69db      	ldr	r3, [r3, #28]
 8008994:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8008998:	69b9      	ldr	r1, [r7, #24]
 800899a:	0148      	lsls	r0, r1, #5
 800899c:	69f9      	ldr	r1, [r7, #28]
 800899e:	4401      	add	r1, r0
 80089a0:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 80089a4:	4313      	orrs	r3, r2
 80089a6:	610b      	str	r3, [r1, #16]
 80089a8:	79fb      	ldrb	r3, [r7, #7]
 80089aa:	2b01      	cmp	r3, #1
 80089ac:	d10d      	bne.n	80089ca <USB_EPStartXfer+0x406>
 80089ae:	68bb      	ldr	r3, [r7, #8]
 80089b0:	691b      	ldr	r3, [r3, #16]
 80089b2:	2b00      	cmp	r3, #0
 80089b4:	d009      	beq.n	80089ca <USB_EPStartXfer+0x406>
 80089b6:	68bb      	ldr	r3, [r7, #8]
 80089b8:	6919      	ldr	r1, [r3, #16]
 80089ba:	69bb      	ldr	r3, [r7, #24]
 80089bc:	015a      	lsls	r2, r3, #5
 80089be:	69fb      	ldr	r3, [r7, #28]
 80089c0:	4413      	add	r3, r2
 80089c2:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80089c6:	460a      	mov	r2, r1
 80089c8:	615a      	str	r2, [r3, #20]
 80089ca:	68bb      	ldr	r3, [r7, #8]
 80089cc:	791b      	ldrb	r3, [r3, #4]
 80089ce:	2b01      	cmp	r3, #1
 80089d0:	d128      	bne.n	8008a24 <USB_EPStartXfer+0x460>
 80089d2:	69fb      	ldr	r3, [r7, #28]
 80089d4:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80089d8:	689b      	ldr	r3, [r3, #8]
 80089da:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80089de:	2b00      	cmp	r3, #0
 80089e0:	d110      	bne.n	8008a04 <USB_EPStartXfer+0x440>
 80089e2:	69bb      	ldr	r3, [r7, #24]
 80089e4:	015a      	lsls	r2, r3, #5
 80089e6:	69fb      	ldr	r3, [r7, #28]
 80089e8:	4413      	add	r3, r2
 80089ea:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80089ee:	681b      	ldr	r3, [r3, #0]
 80089f0:	69ba      	ldr	r2, [r7, #24]
 80089f2:	0151      	lsls	r1, r2, #5
 80089f4:	69fa      	ldr	r2, [r7, #28]
 80089f6:	440a      	add	r2, r1
 80089f8:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80089fc:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8008a00:	6013      	str	r3, [r2, #0]
 8008a02:	e00f      	b.n	8008a24 <USB_EPStartXfer+0x460>
 8008a04:	69bb      	ldr	r3, [r7, #24]
 8008a06:	015a      	lsls	r2, r3, #5
 8008a08:	69fb      	ldr	r3, [r7, #28]
 8008a0a:	4413      	add	r3, r2
 8008a0c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008a10:	681b      	ldr	r3, [r3, #0]
 8008a12:	69ba      	ldr	r2, [r7, #24]
 8008a14:	0151      	lsls	r1, r2, #5
 8008a16:	69fa      	ldr	r2, [r7, #28]
 8008a18:	440a      	add	r2, r1
 8008a1a:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8008a1e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8008a22:	6013      	str	r3, [r2, #0]
 8008a24:	69bb      	ldr	r3, [r7, #24]
 8008a26:	015a      	lsls	r2, r3, #5
 8008a28:	69fb      	ldr	r3, [r7, #28]
 8008a2a:	4413      	add	r3, r2
 8008a2c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008a30:	681b      	ldr	r3, [r3, #0]
 8008a32:	69ba      	ldr	r2, [r7, #24]
 8008a34:	0151      	lsls	r1, r2, #5
 8008a36:	69fa      	ldr	r2, [r7, #28]
 8008a38:	440a      	add	r2, r1
 8008a3a:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8008a3e:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 8008a42:	6013      	str	r3, [r2, #0]
 8008a44:	2300      	movs	r3, #0
 8008a46:	4618      	mov	r0, r3
 8008a48:	3720      	adds	r7, #32
 8008a4a:	46bd      	mov	sp, r7
 8008a4c:	bd80      	pop	{r7, pc}
 8008a4e:	bf00      	nop
 8008a50:	1ff80000 	.word	0x1ff80000

08008a54 <USB_EP0StartXfer>:
 8008a54:	b480      	push	{r7}
 8008a56:	b087      	sub	sp, #28
 8008a58:	af00      	add	r7, sp, #0
 8008a5a:	60f8      	str	r0, [r7, #12]
 8008a5c:	60b9      	str	r1, [r7, #8]
 8008a5e:	4613      	mov	r3, r2
 8008a60:	71fb      	strb	r3, [r7, #7]
 8008a62:	68fb      	ldr	r3, [r7, #12]
 8008a64:	617b      	str	r3, [r7, #20]
 8008a66:	68bb      	ldr	r3, [r7, #8]
 8008a68:	781b      	ldrb	r3, [r3, #0]
 8008a6a:	613b      	str	r3, [r7, #16]
 8008a6c:	68bb      	ldr	r3, [r7, #8]
 8008a6e:	785b      	ldrb	r3, [r3, #1]
 8008a70:	2b01      	cmp	r3, #1
 8008a72:	f040 80ce 	bne.w	8008c12 <USB_EP0StartXfer+0x1be>
 8008a76:	68bb      	ldr	r3, [r7, #8]
 8008a78:	699b      	ldr	r3, [r3, #24]
 8008a7a:	2b00      	cmp	r3, #0
 8008a7c:	d132      	bne.n	8008ae4 <USB_EP0StartXfer+0x90>
 8008a7e:	693b      	ldr	r3, [r7, #16]
 8008a80:	015a      	lsls	r2, r3, #5
 8008a82:	697b      	ldr	r3, [r7, #20]
 8008a84:	4413      	add	r3, r2
 8008a86:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008a8a:	691b      	ldr	r3, [r3, #16]
 8008a8c:	693a      	ldr	r2, [r7, #16]
 8008a8e:	0151      	lsls	r1, r2, #5
 8008a90:	697a      	ldr	r2, [r7, #20]
 8008a92:	440a      	add	r2, r1
 8008a94:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8008a98:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 8008a9c:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 8008aa0:	6113      	str	r3, [r2, #16]
 8008aa2:	693b      	ldr	r3, [r7, #16]
 8008aa4:	015a      	lsls	r2, r3, #5
 8008aa6:	697b      	ldr	r3, [r7, #20]
 8008aa8:	4413      	add	r3, r2
 8008aaa:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008aae:	691b      	ldr	r3, [r3, #16]
 8008ab0:	693a      	ldr	r2, [r7, #16]
 8008ab2:	0151      	lsls	r1, r2, #5
 8008ab4:	697a      	ldr	r2, [r7, #20]
 8008ab6:	440a      	add	r2, r1
 8008ab8:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8008abc:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8008ac0:	6113      	str	r3, [r2, #16]
 8008ac2:	693b      	ldr	r3, [r7, #16]
 8008ac4:	015a      	lsls	r2, r3, #5
 8008ac6:	697b      	ldr	r3, [r7, #20]
 8008ac8:	4413      	add	r3, r2
 8008aca:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008ace:	691b      	ldr	r3, [r3, #16]
 8008ad0:	693a      	ldr	r2, [r7, #16]
 8008ad2:	0151      	lsls	r1, r2, #5
 8008ad4:	697a      	ldr	r2, [r7, #20]
 8008ad6:	440a      	add	r2, r1
 8008ad8:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8008adc:	0cdb      	lsrs	r3, r3, #19
 8008ade:	04db      	lsls	r3, r3, #19
 8008ae0:	6113      	str	r3, [r2, #16]
 8008ae2:	e04e      	b.n	8008b82 <USB_EP0StartXfer+0x12e>
 8008ae4:	693b      	ldr	r3, [r7, #16]
 8008ae6:	015a      	lsls	r2, r3, #5
 8008ae8:	697b      	ldr	r3, [r7, #20]
 8008aea:	4413      	add	r3, r2
 8008aec:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008af0:	691b      	ldr	r3, [r3, #16]
 8008af2:	693a      	ldr	r2, [r7, #16]
 8008af4:	0151      	lsls	r1, r2, #5
 8008af6:	697a      	ldr	r2, [r7, #20]
 8008af8:	440a      	add	r2, r1
 8008afa:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8008afe:	0cdb      	lsrs	r3, r3, #19
 8008b00:	04db      	lsls	r3, r3, #19
 8008b02:	6113      	str	r3, [r2, #16]
 8008b04:	693b      	ldr	r3, [r7, #16]
 8008b06:	015a      	lsls	r2, r3, #5
 8008b08:	697b      	ldr	r3, [r7, #20]
 8008b0a:	4413      	add	r3, r2
 8008b0c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008b10:	691b      	ldr	r3, [r3, #16]
 8008b12:	693a      	ldr	r2, [r7, #16]
 8008b14:	0151      	lsls	r1, r2, #5
 8008b16:	697a      	ldr	r2, [r7, #20]
 8008b18:	440a      	add	r2, r1
 8008b1a:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8008b1e:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 8008b22:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 8008b26:	6113      	str	r3, [r2, #16]
 8008b28:	68bb      	ldr	r3, [r7, #8]
 8008b2a:	699a      	ldr	r2, [r3, #24]
 8008b2c:	68bb      	ldr	r3, [r7, #8]
 8008b2e:	68db      	ldr	r3, [r3, #12]
 8008b30:	429a      	cmp	r2, r3
 8008b32:	d903      	bls.n	8008b3c <USB_EP0StartXfer+0xe8>
 8008b34:	68bb      	ldr	r3, [r7, #8]
 8008b36:	68da      	ldr	r2, [r3, #12]
 8008b38:	68bb      	ldr	r3, [r7, #8]
 8008b3a:	619a      	str	r2, [r3, #24]
 8008b3c:	693b      	ldr	r3, [r7, #16]
 8008b3e:	015a      	lsls	r2, r3, #5
 8008b40:	697b      	ldr	r3, [r7, #20]
 8008b42:	4413      	add	r3, r2
 8008b44:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008b48:	691b      	ldr	r3, [r3, #16]
 8008b4a:	693a      	ldr	r2, [r7, #16]
 8008b4c:	0151      	lsls	r1, r2, #5
 8008b4e:	697a      	ldr	r2, [r7, #20]
 8008b50:	440a      	add	r2, r1
 8008b52:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8008b56:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8008b5a:	6113      	str	r3, [r2, #16]
 8008b5c:	693b      	ldr	r3, [r7, #16]
 8008b5e:	015a      	lsls	r2, r3, #5
 8008b60:	697b      	ldr	r3, [r7, #20]
 8008b62:	4413      	add	r3, r2
 8008b64:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008b68:	691a      	ldr	r2, [r3, #16]
 8008b6a:	68bb      	ldr	r3, [r7, #8]
 8008b6c:	699b      	ldr	r3, [r3, #24]
 8008b6e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8008b72:	6939      	ldr	r1, [r7, #16]
 8008b74:	0148      	lsls	r0, r1, #5
 8008b76:	6979      	ldr	r1, [r7, #20]
 8008b78:	4401      	add	r1, r0
 8008b7a:	f501 6110 	add.w	r1, r1, #2304	; 0x900
 8008b7e:	4313      	orrs	r3, r2
 8008b80:	610b      	str	r3, [r1, #16]
 8008b82:	79fb      	ldrb	r3, [r7, #7]
 8008b84:	2b01      	cmp	r3, #1
 8008b86:	d11e      	bne.n	8008bc6 <USB_EP0StartXfer+0x172>
 8008b88:	68bb      	ldr	r3, [r7, #8]
 8008b8a:	695b      	ldr	r3, [r3, #20]
 8008b8c:	2b00      	cmp	r3, #0
 8008b8e:	d009      	beq.n	8008ba4 <USB_EP0StartXfer+0x150>
 8008b90:	693b      	ldr	r3, [r7, #16]
 8008b92:	015a      	lsls	r2, r3, #5
 8008b94:	697b      	ldr	r3, [r7, #20]
 8008b96:	4413      	add	r3, r2
 8008b98:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008b9c:	461a      	mov	r2, r3
 8008b9e:	68bb      	ldr	r3, [r7, #8]
 8008ba0:	695b      	ldr	r3, [r3, #20]
 8008ba2:	6153      	str	r3, [r2, #20]
 8008ba4:	693b      	ldr	r3, [r7, #16]
 8008ba6:	015a      	lsls	r2, r3, #5
 8008ba8:	697b      	ldr	r3, [r7, #20]
 8008baa:	4413      	add	r3, r2
 8008bac:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008bb0:	681b      	ldr	r3, [r3, #0]
 8008bb2:	693a      	ldr	r2, [r7, #16]
 8008bb4:	0151      	lsls	r1, r2, #5
 8008bb6:	697a      	ldr	r2, [r7, #20]
 8008bb8:	440a      	add	r2, r1
 8008bba:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8008bbe:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 8008bc2:	6013      	str	r3, [r2, #0]
 8008bc4:	e097      	b.n	8008cf6 <USB_EP0StartXfer+0x2a2>
 8008bc6:	693b      	ldr	r3, [r7, #16]
 8008bc8:	015a      	lsls	r2, r3, #5
 8008bca:	697b      	ldr	r3, [r7, #20]
 8008bcc:	4413      	add	r3, r2
 8008bce:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008bd2:	681b      	ldr	r3, [r3, #0]
 8008bd4:	693a      	ldr	r2, [r7, #16]
 8008bd6:	0151      	lsls	r1, r2, #5
 8008bd8:	697a      	ldr	r2, [r7, #20]
 8008bda:	440a      	add	r2, r1
 8008bdc:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8008be0:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 8008be4:	6013      	str	r3, [r2, #0]
 8008be6:	68bb      	ldr	r3, [r7, #8]
 8008be8:	699b      	ldr	r3, [r3, #24]
 8008bea:	2b00      	cmp	r3, #0
 8008bec:	f000 8083 	beq.w	8008cf6 <USB_EP0StartXfer+0x2a2>
 8008bf0:	697b      	ldr	r3, [r7, #20]
 8008bf2:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8008bf6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008bf8:	68bb      	ldr	r3, [r7, #8]
 8008bfa:	781b      	ldrb	r3, [r3, #0]
 8008bfc:	f003 030f 	and.w	r3, r3, #15
 8008c00:	2101      	movs	r1, #1
 8008c02:	fa01 f303 	lsl.w	r3, r1, r3
 8008c06:	6979      	ldr	r1, [r7, #20]
 8008c08:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8008c0c:	4313      	orrs	r3, r2
 8008c0e:	634b      	str	r3, [r1, #52]	; 0x34
 8008c10:	e071      	b.n	8008cf6 <USB_EP0StartXfer+0x2a2>
 8008c12:	693b      	ldr	r3, [r7, #16]
 8008c14:	015a      	lsls	r2, r3, #5
 8008c16:	697b      	ldr	r3, [r7, #20]
 8008c18:	4413      	add	r3, r2
 8008c1a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008c1e:	691b      	ldr	r3, [r3, #16]
 8008c20:	693a      	ldr	r2, [r7, #16]
 8008c22:	0151      	lsls	r1, r2, #5
 8008c24:	697a      	ldr	r2, [r7, #20]
 8008c26:	440a      	add	r2, r1
 8008c28:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8008c2c:	0cdb      	lsrs	r3, r3, #19
 8008c2e:	04db      	lsls	r3, r3, #19
 8008c30:	6113      	str	r3, [r2, #16]
 8008c32:	693b      	ldr	r3, [r7, #16]
 8008c34:	015a      	lsls	r2, r3, #5
 8008c36:	697b      	ldr	r3, [r7, #20]
 8008c38:	4413      	add	r3, r2
 8008c3a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008c3e:	691b      	ldr	r3, [r3, #16]
 8008c40:	693a      	ldr	r2, [r7, #16]
 8008c42:	0151      	lsls	r1, r2, #5
 8008c44:	697a      	ldr	r2, [r7, #20]
 8008c46:	440a      	add	r2, r1
 8008c48:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8008c4c:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 8008c50:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 8008c54:	6113      	str	r3, [r2, #16]
 8008c56:	68bb      	ldr	r3, [r7, #8]
 8008c58:	699b      	ldr	r3, [r3, #24]
 8008c5a:	2b00      	cmp	r3, #0
 8008c5c:	d003      	beq.n	8008c66 <USB_EP0StartXfer+0x212>
 8008c5e:	68bb      	ldr	r3, [r7, #8]
 8008c60:	68da      	ldr	r2, [r3, #12]
 8008c62:	68bb      	ldr	r3, [r7, #8]
 8008c64:	619a      	str	r2, [r3, #24]
 8008c66:	68bb      	ldr	r3, [r7, #8]
 8008c68:	68da      	ldr	r2, [r3, #12]
 8008c6a:	68bb      	ldr	r3, [r7, #8]
 8008c6c:	61da      	str	r2, [r3, #28]
 8008c6e:	693b      	ldr	r3, [r7, #16]
 8008c70:	015a      	lsls	r2, r3, #5
 8008c72:	697b      	ldr	r3, [r7, #20]
 8008c74:	4413      	add	r3, r2
 8008c76:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008c7a:	691b      	ldr	r3, [r3, #16]
 8008c7c:	693a      	ldr	r2, [r7, #16]
 8008c7e:	0151      	lsls	r1, r2, #5
 8008c80:	697a      	ldr	r2, [r7, #20]
 8008c82:	440a      	add	r2, r1
 8008c84:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8008c88:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8008c8c:	6113      	str	r3, [r2, #16]
 8008c8e:	693b      	ldr	r3, [r7, #16]
 8008c90:	015a      	lsls	r2, r3, #5
 8008c92:	697b      	ldr	r3, [r7, #20]
 8008c94:	4413      	add	r3, r2
 8008c96:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008c9a:	691a      	ldr	r2, [r3, #16]
 8008c9c:	68bb      	ldr	r3, [r7, #8]
 8008c9e:	69db      	ldr	r3, [r3, #28]
 8008ca0:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8008ca4:	6939      	ldr	r1, [r7, #16]
 8008ca6:	0148      	lsls	r0, r1, #5
 8008ca8:	6979      	ldr	r1, [r7, #20]
 8008caa:	4401      	add	r1, r0
 8008cac:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 8008cb0:	4313      	orrs	r3, r2
 8008cb2:	610b      	str	r3, [r1, #16]
 8008cb4:	79fb      	ldrb	r3, [r7, #7]
 8008cb6:	2b01      	cmp	r3, #1
 8008cb8:	d10d      	bne.n	8008cd6 <USB_EP0StartXfer+0x282>
 8008cba:	68bb      	ldr	r3, [r7, #8]
 8008cbc:	691b      	ldr	r3, [r3, #16]
 8008cbe:	2b00      	cmp	r3, #0
 8008cc0:	d009      	beq.n	8008cd6 <USB_EP0StartXfer+0x282>
 8008cc2:	68bb      	ldr	r3, [r7, #8]
 8008cc4:	6919      	ldr	r1, [r3, #16]
 8008cc6:	693b      	ldr	r3, [r7, #16]
 8008cc8:	015a      	lsls	r2, r3, #5
 8008cca:	697b      	ldr	r3, [r7, #20]
 8008ccc:	4413      	add	r3, r2
 8008cce:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008cd2:	460a      	mov	r2, r1
 8008cd4:	615a      	str	r2, [r3, #20]
 8008cd6:	693b      	ldr	r3, [r7, #16]
 8008cd8:	015a      	lsls	r2, r3, #5
 8008cda:	697b      	ldr	r3, [r7, #20]
 8008cdc:	4413      	add	r3, r2
 8008cde:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008ce2:	681b      	ldr	r3, [r3, #0]
 8008ce4:	693a      	ldr	r2, [r7, #16]
 8008ce6:	0151      	lsls	r1, r2, #5
 8008ce8:	697a      	ldr	r2, [r7, #20]
 8008cea:	440a      	add	r2, r1
 8008cec:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8008cf0:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 8008cf4:	6013      	str	r3, [r2, #0]
 8008cf6:	2300      	movs	r3, #0
 8008cf8:	4618      	mov	r0, r3
 8008cfa:	371c      	adds	r7, #28
 8008cfc:	46bd      	mov	sp, r7
 8008cfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d02:	4770      	bx	lr

08008d04 <USB_EPStopXfer>:
 8008d04:	b480      	push	{r7}
 8008d06:	b087      	sub	sp, #28
 8008d08:	af00      	add	r7, sp, #0
 8008d0a:	6078      	str	r0, [r7, #4]
 8008d0c:	6039      	str	r1, [r7, #0]
 8008d0e:	2300      	movs	r3, #0
 8008d10:	60fb      	str	r3, [r7, #12]
 8008d12:	2300      	movs	r3, #0
 8008d14:	75fb      	strb	r3, [r7, #23]
 8008d16:	687b      	ldr	r3, [r7, #4]
 8008d18:	613b      	str	r3, [r7, #16]
 8008d1a:	683b      	ldr	r3, [r7, #0]
 8008d1c:	785b      	ldrb	r3, [r3, #1]
 8008d1e:	2b01      	cmp	r3, #1
 8008d20:	d14a      	bne.n	8008db8 <USB_EPStopXfer+0xb4>
 8008d22:	683b      	ldr	r3, [r7, #0]
 8008d24:	781b      	ldrb	r3, [r3, #0]
 8008d26:	015a      	lsls	r2, r3, #5
 8008d28:	693b      	ldr	r3, [r7, #16]
 8008d2a:	4413      	add	r3, r2
 8008d2c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008d30:	681b      	ldr	r3, [r3, #0]
 8008d32:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8008d36:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8008d3a:	f040 8086 	bne.w	8008e4a <USB_EPStopXfer+0x146>
 8008d3e:	683b      	ldr	r3, [r7, #0]
 8008d40:	781b      	ldrb	r3, [r3, #0]
 8008d42:	015a      	lsls	r2, r3, #5
 8008d44:	693b      	ldr	r3, [r7, #16]
 8008d46:	4413      	add	r3, r2
 8008d48:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008d4c:	681b      	ldr	r3, [r3, #0]
 8008d4e:	683a      	ldr	r2, [r7, #0]
 8008d50:	7812      	ldrb	r2, [r2, #0]
 8008d52:	0151      	lsls	r1, r2, #5
 8008d54:	693a      	ldr	r2, [r7, #16]
 8008d56:	440a      	add	r2, r1
 8008d58:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8008d5c:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8008d60:	6013      	str	r3, [r2, #0]
 8008d62:	683b      	ldr	r3, [r7, #0]
 8008d64:	781b      	ldrb	r3, [r3, #0]
 8008d66:	015a      	lsls	r2, r3, #5
 8008d68:	693b      	ldr	r3, [r7, #16]
 8008d6a:	4413      	add	r3, r2
 8008d6c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008d70:	681b      	ldr	r3, [r3, #0]
 8008d72:	683a      	ldr	r2, [r7, #0]
 8008d74:	7812      	ldrb	r2, [r2, #0]
 8008d76:	0151      	lsls	r1, r2, #5
 8008d78:	693a      	ldr	r2, [r7, #16]
 8008d7a:	440a      	add	r2, r1
 8008d7c:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8008d80:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8008d84:	6013      	str	r3, [r2, #0]
 8008d86:	68fb      	ldr	r3, [r7, #12]
 8008d88:	3301      	adds	r3, #1
 8008d8a:	60fb      	str	r3, [r7, #12]
 8008d8c:	68fb      	ldr	r3, [r7, #12]
 8008d8e:	f242 7210 	movw	r2, #10000	; 0x2710
 8008d92:	4293      	cmp	r3, r2
 8008d94:	d902      	bls.n	8008d9c <USB_EPStopXfer+0x98>
 8008d96:	2301      	movs	r3, #1
 8008d98:	75fb      	strb	r3, [r7, #23]
 8008d9a:	e056      	b.n	8008e4a <USB_EPStopXfer+0x146>
 8008d9c:	683b      	ldr	r3, [r7, #0]
 8008d9e:	781b      	ldrb	r3, [r3, #0]
 8008da0:	015a      	lsls	r2, r3, #5
 8008da2:	693b      	ldr	r3, [r7, #16]
 8008da4:	4413      	add	r3, r2
 8008da6:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008daa:	681b      	ldr	r3, [r3, #0]
 8008dac:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8008db0:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8008db4:	d0e7      	beq.n	8008d86 <USB_EPStopXfer+0x82>
 8008db6:	e048      	b.n	8008e4a <USB_EPStopXfer+0x146>
 8008db8:	683b      	ldr	r3, [r7, #0]
 8008dba:	781b      	ldrb	r3, [r3, #0]
 8008dbc:	015a      	lsls	r2, r3, #5
 8008dbe:	693b      	ldr	r3, [r7, #16]
 8008dc0:	4413      	add	r3, r2
 8008dc2:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008dc6:	681b      	ldr	r3, [r3, #0]
 8008dc8:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8008dcc:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8008dd0:	d13b      	bne.n	8008e4a <USB_EPStopXfer+0x146>
 8008dd2:	683b      	ldr	r3, [r7, #0]
 8008dd4:	781b      	ldrb	r3, [r3, #0]
 8008dd6:	015a      	lsls	r2, r3, #5
 8008dd8:	693b      	ldr	r3, [r7, #16]
 8008dda:	4413      	add	r3, r2
 8008ddc:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008de0:	681b      	ldr	r3, [r3, #0]
 8008de2:	683a      	ldr	r2, [r7, #0]
 8008de4:	7812      	ldrb	r2, [r2, #0]
 8008de6:	0151      	lsls	r1, r2, #5
 8008de8:	693a      	ldr	r2, [r7, #16]
 8008dea:	440a      	add	r2, r1
 8008dec:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8008df0:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8008df4:	6013      	str	r3, [r2, #0]
 8008df6:	683b      	ldr	r3, [r7, #0]
 8008df8:	781b      	ldrb	r3, [r3, #0]
 8008dfa:	015a      	lsls	r2, r3, #5
 8008dfc:	693b      	ldr	r3, [r7, #16]
 8008dfe:	4413      	add	r3, r2
 8008e00:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008e04:	681b      	ldr	r3, [r3, #0]
 8008e06:	683a      	ldr	r2, [r7, #0]
 8008e08:	7812      	ldrb	r2, [r2, #0]
 8008e0a:	0151      	lsls	r1, r2, #5
 8008e0c:	693a      	ldr	r2, [r7, #16]
 8008e0e:	440a      	add	r2, r1
 8008e10:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8008e14:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8008e18:	6013      	str	r3, [r2, #0]
 8008e1a:	68fb      	ldr	r3, [r7, #12]
 8008e1c:	3301      	adds	r3, #1
 8008e1e:	60fb      	str	r3, [r7, #12]
 8008e20:	68fb      	ldr	r3, [r7, #12]
 8008e22:	f242 7210 	movw	r2, #10000	; 0x2710
 8008e26:	4293      	cmp	r3, r2
 8008e28:	d902      	bls.n	8008e30 <USB_EPStopXfer+0x12c>
 8008e2a:	2301      	movs	r3, #1
 8008e2c:	75fb      	strb	r3, [r7, #23]
 8008e2e:	e00c      	b.n	8008e4a <USB_EPStopXfer+0x146>
 8008e30:	683b      	ldr	r3, [r7, #0]
 8008e32:	781b      	ldrb	r3, [r3, #0]
 8008e34:	015a      	lsls	r2, r3, #5
 8008e36:	693b      	ldr	r3, [r7, #16]
 8008e38:	4413      	add	r3, r2
 8008e3a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008e3e:	681b      	ldr	r3, [r3, #0]
 8008e40:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8008e44:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8008e48:	d0e7      	beq.n	8008e1a <USB_EPStopXfer+0x116>
 8008e4a:	7dfb      	ldrb	r3, [r7, #23]
 8008e4c:	4618      	mov	r0, r3
 8008e4e:	371c      	adds	r7, #28
 8008e50:	46bd      	mov	sp, r7
 8008e52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e56:	4770      	bx	lr

08008e58 <USB_WritePacket>:
 8008e58:	b480      	push	{r7}
 8008e5a:	b089      	sub	sp, #36	; 0x24
 8008e5c:	af00      	add	r7, sp, #0
 8008e5e:	60f8      	str	r0, [r7, #12]
 8008e60:	60b9      	str	r1, [r7, #8]
 8008e62:	4611      	mov	r1, r2
 8008e64:	461a      	mov	r2, r3
 8008e66:	460b      	mov	r3, r1
 8008e68:	71fb      	strb	r3, [r7, #7]
 8008e6a:	4613      	mov	r3, r2
 8008e6c:	80bb      	strh	r3, [r7, #4]
 8008e6e:	68fb      	ldr	r3, [r7, #12]
 8008e70:	617b      	str	r3, [r7, #20]
 8008e72:	68bb      	ldr	r3, [r7, #8]
 8008e74:	61fb      	str	r3, [r7, #28]
 8008e76:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8008e7a:	2b00      	cmp	r3, #0
 8008e7c:	d123      	bne.n	8008ec6 <USB_WritePacket+0x6e>
 8008e7e:	88bb      	ldrh	r3, [r7, #4]
 8008e80:	3303      	adds	r3, #3
 8008e82:	089b      	lsrs	r3, r3, #2
 8008e84:	613b      	str	r3, [r7, #16]
 8008e86:	2300      	movs	r3, #0
 8008e88:	61bb      	str	r3, [r7, #24]
 8008e8a:	e018      	b.n	8008ebe <USB_WritePacket+0x66>
 8008e8c:	79fb      	ldrb	r3, [r7, #7]
 8008e8e:	031a      	lsls	r2, r3, #12
 8008e90:	697b      	ldr	r3, [r7, #20]
 8008e92:	4413      	add	r3, r2
 8008e94:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8008e98:	461a      	mov	r2, r3
 8008e9a:	69fb      	ldr	r3, [r7, #28]
 8008e9c:	681b      	ldr	r3, [r3, #0]
 8008e9e:	6013      	str	r3, [r2, #0]
 8008ea0:	69fb      	ldr	r3, [r7, #28]
 8008ea2:	3301      	adds	r3, #1
 8008ea4:	61fb      	str	r3, [r7, #28]
 8008ea6:	69fb      	ldr	r3, [r7, #28]
 8008ea8:	3301      	adds	r3, #1
 8008eaa:	61fb      	str	r3, [r7, #28]
 8008eac:	69fb      	ldr	r3, [r7, #28]
 8008eae:	3301      	adds	r3, #1
 8008eb0:	61fb      	str	r3, [r7, #28]
 8008eb2:	69fb      	ldr	r3, [r7, #28]
 8008eb4:	3301      	adds	r3, #1
 8008eb6:	61fb      	str	r3, [r7, #28]
 8008eb8:	69bb      	ldr	r3, [r7, #24]
 8008eba:	3301      	adds	r3, #1
 8008ebc:	61bb      	str	r3, [r7, #24]
 8008ebe:	69ba      	ldr	r2, [r7, #24]
 8008ec0:	693b      	ldr	r3, [r7, #16]
 8008ec2:	429a      	cmp	r2, r3
 8008ec4:	d3e2      	bcc.n	8008e8c <USB_WritePacket+0x34>
 8008ec6:	2300      	movs	r3, #0
 8008ec8:	4618      	mov	r0, r3
 8008eca:	3724      	adds	r7, #36	; 0x24
 8008ecc:	46bd      	mov	sp, r7
 8008ece:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ed2:	4770      	bx	lr

08008ed4 <USB_ReadPacket>:
 8008ed4:	b480      	push	{r7}
 8008ed6:	b08b      	sub	sp, #44	; 0x2c
 8008ed8:	af00      	add	r7, sp, #0
 8008eda:	60f8      	str	r0, [r7, #12]
 8008edc:	60b9      	str	r1, [r7, #8]
 8008ede:	4613      	mov	r3, r2
 8008ee0:	80fb      	strh	r3, [r7, #6]
 8008ee2:	68fb      	ldr	r3, [r7, #12]
 8008ee4:	61bb      	str	r3, [r7, #24]
 8008ee6:	68bb      	ldr	r3, [r7, #8]
 8008ee8:	627b      	str	r3, [r7, #36]	; 0x24
 8008eea:	88fb      	ldrh	r3, [r7, #6]
 8008eec:	089b      	lsrs	r3, r3, #2
 8008eee:	b29b      	uxth	r3, r3
 8008ef0:	617b      	str	r3, [r7, #20]
 8008ef2:	88fb      	ldrh	r3, [r7, #6]
 8008ef4:	f003 0303 	and.w	r3, r3, #3
 8008ef8:	83fb      	strh	r3, [r7, #30]
 8008efa:	2300      	movs	r3, #0
 8008efc:	623b      	str	r3, [r7, #32]
 8008efe:	e014      	b.n	8008f2a <USB_ReadPacket+0x56>
 8008f00:	69bb      	ldr	r3, [r7, #24]
 8008f02:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8008f06:	681a      	ldr	r2, [r3, #0]
 8008f08:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008f0a:	601a      	str	r2, [r3, #0]
 8008f0c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008f0e:	3301      	adds	r3, #1
 8008f10:	627b      	str	r3, [r7, #36]	; 0x24
 8008f12:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008f14:	3301      	adds	r3, #1
 8008f16:	627b      	str	r3, [r7, #36]	; 0x24
 8008f18:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008f1a:	3301      	adds	r3, #1
 8008f1c:	627b      	str	r3, [r7, #36]	; 0x24
 8008f1e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008f20:	3301      	adds	r3, #1
 8008f22:	627b      	str	r3, [r7, #36]	; 0x24
 8008f24:	6a3b      	ldr	r3, [r7, #32]
 8008f26:	3301      	adds	r3, #1
 8008f28:	623b      	str	r3, [r7, #32]
 8008f2a:	6a3a      	ldr	r2, [r7, #32]
 8008f2c:	697b      	ldr	r3, [r7, #20]
 8008f2e:	429a      	cmp	r2, r3
 8008f30:	d3e6      	bcc.n	8008f00 <USB_ReadPacket+0x2c>
 8008f32:	8bfb      	ldrh	r3, [r7, #30]
 8008f34:	2b00      	cmp	r3, #0
 8008f36:	d01e      	beq.n	8008f76 <USB_ReadPacket+0xa2>
 8008f38:	2300      	movs	r3, #0
 8008f3a:	623b      	str	r3, [r7, #32]
 8008f3c:	69bb      	ldr	r3, [r7, #24]
 8008f3e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8008f42:	461a      	mov	r2, r3
 8008f44:	f107 0310 	add.w	r3, r7, #16
 8008f48:	6812      	ldr	r2, [r2, #0]
 8008f4a:	601a      	str	r2, [r3, #0]
 8008f4c:	693a      	ldr	r2, [r7, #16]
 8008f4e:	6a3b      	ldr	r3, [r7, #32]
 8008f50:	b2db      	uxtb	r3, r3
 8008f52:	00db      	lsls	r3, r3, #3
 8008f54:	fa22 f303 	lsr.w	r3, r2, r3
 8008f58:	b2da      	uxtb	r2, r3
 8008f5a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008f5c:	701a      	strb	r2, [r3, #0]
 8008f5e:	6a3b      	ldr	r3, [r7, #32]
 8008f60:	3301      	adds	r3, #1
 8008f62:	623b      	str	r3, [r7, #32]
 8008f64:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008f66:	3301      	adds	r3, #1
 8008f68:	627b      	str	r3, [r7, #36]	; 0x24
 8008f6a:	8bfb      	ldrh	r3, [r7, #30]
 8008f6c:	3b01      	subs	r3, #1
 8008f6e:	83fb      	strh	r3, [r7, #30]
 8008f70:	8bfb      	ldrh	r3, [r7, #30]
 8008f72:	2b00      	cmp	r3, #0
 8008f74:	d1ea      	bne.n	8008f4c <USB_ReadPacket+0x78>
 8008f76:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008f78:	4618      	mov	r0, r3
 8008f7a:	372c      	adds	r7, #44	; 0x2c
 8008f7c:	46bd      	mov	sp, r7
 8008f7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f82:	4770      	bx	lr

08008f84 <USB_EPSetStall>:
 8008f84:	b480      	push	{r7}
 8008f86:	b085      	sub	sp, #20
 8008f88:	af00      	add	r7, sp, #0
 8008f8a:	6078      	str	r0, [r7, #4]
 8008f8c:	6039      	str	r1, [r7, #0]
 8008f8e:	687b      	ldr	r3, [r7, #4]
 8008f90:	60fb      	str	r3, [r7, #12]
 8008f92:	683b      	ldr	r3, [r7, #0]
 8008f94:	781b      	ldrb	r3, [r3, #0]
 8008f96:	60bb      	str	r3, [r7, #8]
 8008f98:	683b      	ldr	r3, [r7, #0]
 8008f9a:	785b      	ldrb	r3, [r3, #1]
 8008f9c:	2b01      	cmp	r3, #1
 8008f9e:	d12c      	bne.n	8008ffa <USB_EPSetStall+0x76>
 8008fa0:	68bb      	ldr	r3, [r7, #8]
 8008fa2:	015a      	lsls	r2, r3, #5
 8008fa4:	68fb      	ldr	r3, [r7, #12]
 8008fa6:	4413      	add	r3, r2
 8008fa8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008fac:	681b      	ldr	r3, [r3, #0]
 8008fae:	2b00      	cmp	r3, #0
 8008fb0:	db12      	blt.n	8008fd8 <USB_EPSetStall+0x54>
 8008fb2:	68bb      	ldr	r3, [r7, #8]
 8008fb4:	2b00      	cmp	r3, #0
 8008fb6:	d00f      	beq.n	8008fd8 <USB_EPSetStall+0x54>
 8008fb8:	68bb      	ldr	r3, [r7, #8]
 8008fba:	015a      	lsls	r2, r3, #5
 8008fbc:	68fb      	ldr	r3, [r7, #12]
 8008fbe:	4413      	add	r3, r2
 8008fc0:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008fc4:	681b      	ldr	r3, [r3, #0]
 8008fc6:	68ba      	ldr	r2, [r7, #8]
 8008fc8:	0151      	lsls	r1, r2, #5
 8008fca:	68fa      	ldr	r2, [r7, #12]
 8008fcc:	440a      	add	r2, r1
 8008fce:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8008fd2:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8008fd6:	6013      	str	r3, [r2, #0]
 8008fd8:	68bb      	ldr	r3, [r7, #8]
 8008fda:	015a      	lsls	r2, r3, #5
 8008fdc:	68fb      	ldr	r3, [r7, #12]
 8008fde:	4413      	add	r3, r2
 8008fe0:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008fe4:	681b      	ldr	r3, [r3, #0]
 8008fe6:	68ba      	ldr	r2, [r7, #8]
 8008fe8:	0151      	lsls	r1, r2, #5
 8008fea:	68fa      	ldr	r2, [r7, #12]
 8008fec:	440a      	add	r2, r1
 8008fee:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8008ff2:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8008ff6:	6013      	str	r3, [r2, #0]
 8008ff8:	e02b      	b.n	8009052 <USB_EPSetStall+0xce>
 8008ffa:	68bb      	ldr	r3, [r7, #8]
 8008ffc:	015a      	lsls	r2, r3, #5
 8008ffe:	68fb      	ldr	r3, [r7, #12]
 8009000:	4413      	add	r3, r2
 8009002:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8009006:	681b      	ldr	r3, [r3, #0]
 8009008:	2b00      	cmp	r3, #0
 800900a:	db12      	blt.n	8009032 <USB_EPSetStall+0xae>
 800900c:	68bb      	ldr	r3, [r7, #8]
 800900e:	2b00      	cmp	r3, #0
 8009010:	d00f      	beq.n	8009032 <USB_EPSetStall+0xae>
 8009012:	68bb      	ldr	r3, [r7, #8]
 8009014:	015a      	lsls	r2, r3, #5
 8009016:	68fb      	ldr	r3, [r7, #12]
 8009018:	4413      	add	r3, r2
 800901a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800901e:	681b      	ldr	r3, [r3, #0]
 8009020:	68ba      	ldr	r2, [r7, #8]
 8009022:	0151      	lsls	r1, r2, #5
 8009024:	68fa      	ldr	r2, [r7, #12]
 8009026:	440a      	add	r2, r1
 8009028:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800902c:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8009030:	6013      	str	r3, [r2, #0]
 8009032:	68bb      	ldr	r3, [r7, #8]
 8009034:	015a      	lsls	r2, r3, #5
 8009036:	68fb      	ldr	r3, [r7, #12]
 8009038:	4413      	add	r3, r2
 800903a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800903e:	681b      	ldr	r3, [r3, #0]
 8009040:	68ba      	ldr	r2, [r7, #8]
 8009042:	0151      	lsls	r1, r2, #5
 8009044:	68fa      	ldr	r2, [r7, #12]
 8009046:	440a      	add	r2, r1
 8009048:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800904c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8009050:	6013      	str	r3, [r2, #0]
 8009052:	2300      	movs	r3, #0
 8009054:	4618      	mov	r0, r3
 8009056:	3714      	adds	r7, #20
 8009058:	46bd      	mov	sp, r7
 800905a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800905e:	4770      	bx	lr

08009060 <USB_EPClearStall>:
 8009060:	b480      	push	{r7}
 8009062:	b085      	sub	sp, #20
 8009064:	af00      	add	r7, sp, #0
 8009066:	6078      	str	r0, [r7, #4]
 8009068:	6039      	str	r1, [r7, #0]
 800906a:	687b      	ldr	r3, [r7, #4]
 800906c:	60fb      	str	r3, [r7, #12]
 800906e:	683b      	ldr	r3, [r7, #0]
 8009070:	781b      	ldrb	r3, [r3, #0]
 8009072:	60bb      	str	r3, [r7, #8]
 8009074:	683b      	ldr	r3, [r7, #0]
 8009076:	785b      	ldrb	r3, [r3, #1]
 8009078:	2b01      	cmp	r3, #1
 800907a:	d128      	bne.n	80090ce <USB_EPClearStall+0x6e>
 800907c:	68bb      	ldr	r3, [r7, #8]
 800907e:	015a      	lsls	r2, r3, #5
 8009080:	68fb      	ldr	r3, [r7, #12]
 8009082:	4413      	add	r3, r2
 8009084:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8009088:	681b      	ldr	r3, [r3, #0]
 800908a:	68ba      	ldr	r2, [r7, #8]
 800908c:	0151      	lsls	r1, r2, #5
 800908e:	68fa      	ldr	r2, [r7, #12]
 8009090:	440a      	add	r2, r1
 8009092:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8009096:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800909a:	6013      	str	r3, [r2, #0]
 800909c:	683b      	ldr	r3, [r7, #0]
 800909e:	791b      	ldrb	r3, [r3, #4]
 80090a0:	2b03      	cmp	r3, #3
 80090a2:	d003      	beq.n	80090ac <USB_EPClearStall+0x4c>
 80090a4:	683b      	ldr	r3, [r7, #0]
 80090a6:	791b      	ldrb	r3, [r3, #4]
 80090a8:	2b02      	cmp	r3, #2
 80090aa:	d138      	bne.n	800911e <USB_EPClearStall+0xbe>
 80090ac:	68bb      	ldr	r3, [r7, #8]
 80090ae:	015a      	lsls	r2, r3, #5
 80090b0:	68fb      	ldr	r3, [r7, #12]
 80090b2:	4413      	add	r3, r2
 80090b4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80090b8:	681b      	ldr	r3, [r3, #0]
 80090ba:	68ba      	ldr	r2, [r7, #8]
 80090bc:	0151      	lsls	r1, r2, #5
 80090be:	68fa      	ldr	r2, [r7, #12]
 80090c0:	440a      	add	r2, r1
 80090c2:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80090c6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80090ca:	6013      	str	r3, [r2, #0]
 80090cc:	e027      	b.n	800911e <USB_EPClearStall+0xbe>
 80090ce:	68bb      	ldr	r3, [r7, #8]
 80090d0:	015a      	lsls	r2, r3, #5
 80090d2:	68fb      	ldr	r3, [r7, #12]
 80090d4:	4413      	add	r3, r2
 80090d6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80090da:	681b      	ldr	r3, [r3, #0]
 80090dc:	68ba      	ldr	r2, [r7, #8]
 80090de:	0151      	lsls	r1, r2, #5
 80090e0:	68fa      	ldr	r2, [r7, #12]
 80090e2:	440a      	add	r2, r1
 80090e4:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80090e8:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80090ec:	6013      	str	r3, [r2, #0]
 80090ee:	683b      	ldr	r3, [r7, #0]
 80090f0:	791b      	ldrb	r3, [r3, #4]
 80090f2:	2b03      	cmp	r3, #3
 80090f4:	d003      	beq.n	80090fe <USB_EPClearStall+0x9e>
 80090f6:	683b      	ldr	r3, [r7, #0]
 80090f8:	791b      	ldrb	r3, [r3, #4]
 80090fa:	2b02      	cmp	r3, #2
 80090fc:	d10f      	bne.n	800911e <USB_EPClearStall+0xbe>
 80090fe:	68bb      	ldr	r3, [r7, #8]
 8009100:	015a      	lsls	r2, r3, #5
 8009102:	68fb      	ldr	r3, [r7, #12]
 8009104:	4413      	add	r3, r2
 8009106:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800910a:	681b      	ldr	r3, [r3, #0]
 800910c:	68ba      	ldr	r2, [r7, #8]
 800910e:	0151      	lsls	r1, r2, #5
 8009110:	68fa      	ldr	r2, [r7, #12]
 8009112:	440a      	add	r2, r1
 8009114:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8009118:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800911c:	6013      	str	r3, [r2, #0]
 800911e:	2300      	movs	r3, #0
 8009120:	4618      	mov	r0, r3
 8009122:	3714      	adds	r7, #20
 8009124:	46bd      	mov	sp, r7
 8009126:	f85d 7b04 	ldr.w	r7, [sp], #4
 800912a:	4770      	bx	lr

0800912c <USB_SetDevAddress>:
 800912c:	b480      	push	{r7}
 800912e:	b085      	sub	sp, #20
 8009130:	af00      	add	r7, sp, #0
 8009132:	6078      	str	r0, [r7, #4]
 8009134:	460b      	mov	r3, r1
 8009136:	70fb      	strb	r3, [r7, #3]
 8009138:	687b      	ldr	r3, [r7, #4]
 800913a:	60fb      	str	r3, [r7, #12]
 800913c:	68fb      	ldr	r3, [r7, #12]
 800913e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009142:	681b      	ldr	r3, [r3, #0]
 8009144:	68fa      	ldr	r2, [r7, #12]
 8009146:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 800914a:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 800914e:	6013      	str	r3, [r2, #0]
 8009150:	68fb      	ldr	r3, [r7, #12]
 8009152:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009156:	681a      	ldr	r2, [r3, #0]
 8009158:	78fb      	ldrb	r3, [r7, #3]
 800915a:	011b      	lsls	r3, r3, #4
 800915c:	f403 63fe 	and.w	r3, r3, #2032	; 0x7f0
 8009160:	68f9      	ldr	r1, [r7, #12]
 8009162:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8009166:	4313      	orrs	r3, r2
 8009168:	600b      	str	r3, [r1, #0]
 800916a:	2300      	movs	r3, #0
 800916c:	4618      	mov	r0, r3
 800916e:	3714      	adds	r7, #20
 8009170:	46bd      	mov	sp, r7
 8009172:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009176:	4770      	bx	lr

08009178 <USB_DevConnect>:
 8009178:	b480      	push	{r7}
 800917a:	b085      	sub	sp, #20
 800917c:	af00      	add	r7, sp, #0
 800917e:	6078      	str	r0, [r7, #4]
 8009180:	687b      	ldr	r3, [r7, #4]
 8009182:	60fb      	str	r3, [r7, #12]
 8009184:	68fb      	ldr	r3, [r7, #12]
 8009186:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 800918a:	681b      	ldr	r3, [r3, #0]
 800918c:	68fa      	ldr	r2, [r7, #12]
 800918e:	f502 6260 	add.w	r2, r2, #3584	; 0xe00
 8009192:	f023 0303 	bic.w	r3, r3, #3
 8009196:	6013      	str	r3, [r2, #0]
 8009198:	68fb      	ldr	r3, [r7, #12]
 800919a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800919e:	685b      	ldr	r3, [r3, #4]
 80091a0:	68fa      	ldr	r2, [r7, #12]
 80091a2:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80091a6:	f023 0302 	bic.w	r3, r3, #2
 80091aa:	6053      	str	r3, [r2, #4]
 80091ac:	2300      	movs	r3, #0
 80091ae:	4618      	mov	r0, r3
 80091b0:	3714      	adds	r7, #20
 80091b2:	46bd      	mov	sp, r7
 80091b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091b8:	4770      	bx	lr

080091ba <USB_DevDisconnect>:
 80091ba:	b480      	push	{r7}
 80091bc:	b085      	sub	sp, #20
 80091be:	af00      	add	r7, sp, #0
 80091c0:	6078      	str	r0, [r7, #4]
 80091c2:	687b      	ldr	r3, [r7, #4]
 80091c4:	60fb      	str	r3, [r7, #12]
 80091c6:	68fb      	ldr	r3, [r7, #12]
 80091c8:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 80091cc:	681b      	ldr	r3, [r3, #0]
 80091ce:	68fa      	ldr	r2, [r7, #12]
 80091d0:	f502 6260 	add.w	r2, r2, #3584	; 0xe00
 80091d4:	f023 0303 	bic.w	r3, r3, #3
 80091d8:	6013      	str	r3, [r2, #0]
 80091da:	68fb      	ldr	r3, [r7, #12]
 80091dc:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80091e0:	685b      	ldr	r3, [r3, #4]
 80091e2:	68fa      	ldr	r2, [r7, #12]
 80091e4:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80091e8:	f043 0302 	orr.w	r3, r3, #2
 80091ec:	6053      	str	r3, [r2, #4]
 80091ee:	2300      	movs	r3, #0
 80091f0:	4618      	mov	r0, r3
 80091f2:	3714      	adds	r7, #20
 80091f4:	46bd      	mov	sp, r7
 80091f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091fa:	4770      	bx	lr

080091fc <USB_ReadInterrupts>:
 80091fc:	b480      	push	{r7}
 80091fe:	b085      	sub	sp, #20
 8009200:	af00      	add	r7, sp, #0
 8009202:	6078      	str	r0, [r7, #4]
 8009204:	687b      	ldr	r3, [r7, #4]
 8009206:	695b      	ldr	r3, [r3, #20]
 8009208:	60fb      	str	r3, [r7, #12]
 800920a:	687b      	ldr	r3, [r7, #4]
 800920c:	699b      	ldr	r3, [r3, #24]
 800920e:	68fa      	ldr	r2, [r7, #12]
 8009210:	4013      	ands	r3, r2
 8009212:	60fb      	str	r3, [r7, #12]
 8009214:	68fb      	ldr	r3, [r7, #12]
 8009216:	4618      	mov	r0, r3
 8009218:	3714      	adds	r7, #20
 800921a:	46bd      	mov	sp, r7
 800921c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009220:	4770      	bx	lr

08009222 <USB_ReadDevAllOutEpInterrupt>:
 8009222:	b480      	push	{r7}
 8009224:	b085      	sub	sp, #20
 8009226:	af00      	add	r7, sp, #0
 8009228:	6078      	str	r0, [r7, #4]
 800922a:	687b      	ldr	r3, [r7, #4]
 800922c:	60fb      	str	r3, [r7, #12]
 800922e:	68fb      	ldr	r3, [r7, #12]
 8009230:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009234:	699b      	ldr	r3, [r3, #24]
 8009236:	60bb      	str	r3, [r7, #8]
 8009238:	68fb      	ldr	r3, [r7, #12]
 800923a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800923e:	69db      	ldr	r3, [r3, #28]
 8009240:	68ba      	ldr	r2, [r7, #8]
 8009242:	4013      	ands	r3, r2
 8009244:	60bb      	str	r3, [r7, #8]
 8009246:	68bb      	ldr	r3, [r7, #8]
 8009248:	0c1b      	lsrs	r3, r3, #16
 800924a:	4618      	mov	r0, r3
 800924c:	3714      	adds	r7, #20
 800924e:	46bd      	mov	sp, r7
 8009250:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009254:	4770      	bx	lr

08009256 <USB_ReadDevAllInEpInterrupt>:
 8009256:	b480      	push	{r7}
 8009258:	b085      	sub	sp, #20
 800925a:	af00      	add	r7, sp, #0
 800925c:	6078      	str	r0, [r7, #4]
 800925e:	687b      	ldr	r3, [r7, #4]
 8009260:	60fb      	str	r3, [r7, #12]
 8009262:	68fb      	ldr	r3, [r7, #12]
 8009264:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009268:	699b      	ldr	r3, [r3, #24]
 800926a:	60bb      	str	r3, [r7, #8]
 800926c:	68fb      	ldr	r3, [r7, #12]
 800926e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009272:	69db      	ldr	r3, [r3, #28]
 8009274:	68ba      	ldr	r2, [r7, #8]
 8009276:	4013      	ands	r3, r2
 8009278:	60bb      	str	r3, [r7, #8]
 800927a:	68bb      	ldr	r3, [r7, #8]
 800927c:	b29b      	uxth	r3, r3
 800927e:	4618      	mov	r0, r3
 8009280:	3714      	adds	r7, #20
 8009282:	46bd      	mov	sp, r7
 8009284:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009288:	4770      	bx	lr

0800928a <USB_ReadDevOutEPInterrupt>:
 800928a:	b480      	push	{r7}
 800928c:	b085      	sub	sp, #20
 800928e:	af00      	add	r7, sp, #0
 8009290:	6078      	str	r0, [r7, #4]
 8009292:	460b      	mov	r3, r1
 8009294:	70fb      	strb	r3, [r7, #3]
 8009296:	687b      	ldr	r3, [r7, #4]
 8009298:	60fb      	str	r3, [r7, #12]
 800929a:	78fb      	ldrb	r3, [r7, #3]
 800929c:	015a      	lsls	r2, r3, #5
 800929e:	68fb      	ldr	r3, [r7, #12]
 80092a0:	4413      	add	r3, r2
 80092a2:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80092a6:	689b      	ldr	r3, [r3, #8]
 80092a8:	60bb      	str	r3, [r7, #8]
 80092aa:	68fb      	ldr	r3, [r7, #12]
 80092ac:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80092b0:	695b      	ldr	r3, [r3, #20]
 80092b2:	68ba      	ldr	r2, [r7, #8]
 80092b4:	4013      	ands	r3, r2
 80092b6:	60bb      	str	r3, [r7, #8]
 80092b8:	68bb      	ldr	r3, [r7, #8]
 80092ba:	4618      	mov	r0, r3
 80092bc:	3714      	adds	r7, #20
 80092be:	46bd      	mov	sp, r7
 80092c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092c4:	4770      	bx	lr

080092c6 <USB_ReadDevInEPInterrupt>:
 80092c6:	b480      	push	{r7}
 80092c8:	b087      	sub	sp, #28
 80092ca:	af00      	add	r7, sp, #0
 80092cc:	6078      	str	r0, [r7, #4]
 80092ce:	460b      	mov	r3, r1
 80092d0:	70fb      	strb	r3, [r7, #3]
 80092d2:	687b      	ldr	r3, [r7, #4]
 80092d4:	617b      	str	r3, [r7, #20]
 80092d6:	697b      	ldr	r3, [r7, #20]
 80092d8:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80092dc:	691b      	ldr	r3, [r3, #16]
 80092de:	613b      	str	r3, [r7, #16]
 80092e0:	697b      	ldr	r3, [r7, #20]
 80092e2:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80092e6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80092e8:	60fb      	str	r3, [r7, #12]
 80092ea:	78fb      	ldrb	r3, [r7, #3]
 80092ec:	f003 030f 	and.w	r3, r3, #15
 80092f0:	68fa      	ldr	r2, [r7, #12]
 80092f2:	fa22 f303 	lsr.w	r3, r2, r3
 80092f6:	01db      	lsls	r3, r3, #7
 80092f8:	b2db      	uxtb	r3, r3
 80092fa:	693a      	ldr	r2, [r7, #16]
 80092fc:	4313      	orrs	r3, r2
 80092fe:	613b      	str	r3, [r7, #16]
 8009300:	78fb      	ldrb	r3, [r7, #3]
 8009302:	015a      	lsls	r2, r3, #5
 8009304:	697b      	ldr	r3, [r7, #20]
 8009306:	4413      	add	r3, r2
 8009308:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800930c:	689b      	ldr	r3, [r3, #8]
 800930e:	693a      	ldr	r2, [r7, #16]
 8009310:	4013      	ands	r3, r2
 8009312:	60bb      	str	r3, [r7, #8]
 8009314:	68bb      	ldr	r3, [r7, #8]
 8009316:	4618      	mov	r0, r3
 8009318:	371c      	adds	r7, #28
 800931a:	46bd      	mov	sp, r7
 800931c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009320:	4770      	bx	lr

08009322 <USB_GetMode>:
 8009322:	b480      	push	{r7}
 8009324:	b083      	sub	sp, #12
 8009326:	af00      	add	r7, sp, #0
 8009328:	6078      	str	r0, [r7, #4]
 800932a:	687b      	ldr	r3, [r7, #4]
 800932c:	695b      	ldr	r3, [r3, #20]
 800932e:	f003 0301 	and.w	r3, r3, #1
 8009332:	4618      	mov	r0, r3
 8009334:	370c      	adds	r7, #12
 8009336:	46bd      	mov	sp, r7
 8009338:	f85d 7b04 	ldr.w	r7, [sp], #4
 800933c:	4770      	bx	lr

0800933e <USB_ActivateSetup>:
 800933e:	b480      	push	{r7}
 8009340:	b085      	sub	sp, #20
 8009342:	af00      	add	r7, sp, #0
 8009344:	6078      	str	r0, [r7, #4]
 8009346:	687b      	ldr	r3, [r7, #4]
 8009348:	60fb      	str	r3, [r7, #12]
 800934a:	68fb      	ldr	r3, [r7, #12]
 800934c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8009350:	681b      	ldr	r3, [r3, #0]
 8009352:	68fa      	ldr	r2, [r7, #12]
 8009354:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8009358:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800935c:	f023 0307 	bic.w	r3, r3, #7
 8009360:	6013      	str	r3, [r2, #0]
 8009362:	68fb      	ldr	r3, [r7, #12]
 8009364:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009368:	685b      	ldr	r3, [r3, #4]
 800936a:	68fa      	ldr	r2, [r7, #12]
 800936c:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8009370:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009374:	6053      	str	r3, [r2, #4]
 8009376:	2300      	movs	r3, #0
 8009378:	4618      	mov	r0, r3
 800937a:	3714      	adds	r7, #20
 800937c:	46bd      	mov	sp, r7
 800937e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009382:	4770      	bx	lr

08009384 <USB_EP0_OutStart>:
 8009384:	b480      	push	{r7}
 8009386:	b087      	sub	sp, #28
 8009388:	af00      	add	r7, sp, #0
 800938a:	60f8      	str	r0, [r7, #12]
 800938c:	460b      	mov	r3, r1
 800938e:	607a      	str	r2, [r7, #4]
 8009390:	72fb      	strb	r3, [r7, #11]
 8009392:	68fb      	ldr	r3, [r7, #12]
 8009394:	617b      	str	r3, [r7, #20]
 8009396:	68fb      	ldr	r3, [r7, #12]
 8009398:	333c      	adds	r3, #60	; 0x3c
 800939a:	3304      	adds	r3, #4
 800939c:	681b      	ldr	r3, [r3, #0]
 800939e:	613b      	str	r3, [r7, #16]
 80093a0:	693b      	ldr	r3, [r7, #16]
 80093a2:	4a26      	ldr	r2, [pc, #152]	; (800943c <USB_EP0_OutStart+0xb8>)
 80093a4:	4293      	cmp	r3, r2
 80093a6:	d90a      	bls.n	80093be <USB_EP0_OutStart+0x3a>
 80093a8:	697b      	ldr	r3, [r7, #20]
 80093aa:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80093ae:	681b      	ldr	r3, [r3, #0]
 80093b0:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 80093b4:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80093b8:	d101      	bne.n	80093be <USB_EP0_OutStart+0x3a>
 80093ba:	2300      	movs	r3, #0
 80093bc:	e037      	b.n	800942e <USB_EP0_OutStart+0xaa>
 80093be:	697b      	ldr	r3, [r7, #20]
 80093c0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80093c4:	461a      	mov	r2, r3
 80093c6:	2300      	movs	r3, #0
 80093c8:	6113      	str	r3, [r2, #16]
 80093ca:	697b      	ldr	r3, [r7, #20]
 80093cc:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80093d0:	691b      	ldr	r3, [r3, #16]
 80093d2:	697a      	ldr	r2, [r7, #20]
 80093d4:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80093d8:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 80093dc:	6113      	str	r3, [r2, #16]
 80093de:	697b      	ldr	r3, [r7, #20]
 80093e0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80093e4:	691b      	ldr	r3, [r3, #16]
 80093e6:	697a      	ldr	r2, [r7, #20]
 80093e8:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80093ec:	f043 0318 	orr.w	r3, r3, #24
 80093f0:	6113      	str	r3, [r2, #16]
 80093f2:	697b      	ldr	r3, [r7, #20]
 80093f4:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80093f8:	691b      	ldr	r3, [r3, #16]
 80093fa:	697a      	ldr	r2, [r7, #20]
 80093fc:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8009400:	f043 43c0 	orr.w	r3, r3, #1610612736	; 0x60000000
 8009404:	6113      	str	r3, [r2, #16]
 8009406:	7afb      	ldrb	r3, [r7, #11]
 8009408:	2b01      	cmp	r3, #1
 800940a:	d10f      	bne.n	800942c <USB_EP0_OutStart+0xa8>
 800940c:	697b      	ldr	r3, [r7, #20]
 800940e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8009412:	461a      	mov	r2, r3
 8009414:	687b      	ldr	r3, [r7, #4]
 8009416:	6153      	str	r3, [r2, #20]
 8009418:	697b      	ldr	r3, [r7, #20]
 800941a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800941e:	681b      	ldr	r3, [r3, #0]
 8009420:	697a      	ldr	r2, [r7, #20]
 8009422:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8009426:	f043 2380 	orr.w	r3, r3, #2147516416	; 0x80008000
 800942a:	6013      	str	r3, [r2, #0]
 800942c:	2300      	movs	r3, #0
 800942e:	4618      	mov	r0, r3
 8009430:	371c      	adds	r7, #28
 8009432:	46bd      	mov	sp, r7
 8009434:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009438:	4770      	bx	lr
 800943a:	bf00      	nop
 800943c:	4f54300a 	.word	0x4f54300a

08009440 <USB_CoreReset>:
 8009440:	b480      	push	{r7}
 8009442:	b085      	sub	sp, #20
 8009444:	af00      	add	r7, sp, #0
 8009446:	6078      	str	r0, [r7, #4]
 8009448:	2300      	movs	r3, #0
 800944a:	60fb      	str	r3, [r7, #12]
 800944c:	68fb      	ldr	r3, [r7, #12]
 800944e:	3301      	adds	r3, #1
 8009450:	60fb      	str	r3, [r7, #12]
 8009452:	68fb      	ldr	r3, [r7, #12]
 8009454:	4a13      	ldr	r2, [pc, #76]	; (80094a4 <USB_CoreReset+0x64>)
 8009456:	4293      	cmp	r3, r2
 8009458:	d901      	bls.n	800945e <USB_CoreReset+0x1e>
 800945a:	2303      	movs	r3, #3
 800945c:	e01b      	b.n	8009496 <USB_CoreReset+0x56>
 800945e:	687b      	ldr	r3, [r7, #4]
 8009460:	691b      	ldr	r3, [r3, #16]
 8009462:	2b00      	cmp	r3, #0
 8009464:	daf2      	bge.n	800944c <USB_CoreReset+0xc>
 8009466:	2300      	movs	r3, #0
 8009468:	60fb      	str	r3, [r7, #12]
 800946a:	687b      	ldr	r3, [r7, #4]
 800946c:	691b      	ldr	r3, [r3, #16]
 800946e:	f043 0201 	orr.w	r2, r3, #1
 8009472:	687b      	ldr	r3, [r7, #4]
 8009474:	611a      	str	r2, [r3, #16]
 8009476:	68fb      	ldr	r3, [r7, #12]
 8009478:	3301      	adds	r3, #1
 800947a:	60fb      	str	r3, [r7, #12]
 800947c:	68fb      	ldr	r3, [r7, #12]
 800947e:	4a09      	ldr	r2, [pc, #36]	; (80094a4 <USB_CoreReset+0x64>)
 8009480:	4293      	cmp	r3, r2
 8009482:	d901      	bls.n	8009488 <USB_CoreReset+0x48>
 8009484:	2303      	movs	r3, #3
 8009486:	e006      	b.n	8009496 <USB_CoreReset+0x56>
 8009488:	687b      	ldr	r3, [r7, #4]
 800948a:	691b      	ldr	r3, [r3, #16]
 800948c:	f003 0301 	and.w	r3, r3, #1
 8009490:	2b01      	cmp	r3, #1
 8009492:	d0f0      	beq.n	8009476 <USB_CoreReset+0x36>
 8009494:	2300      	movs	r3, #0
 8009496:	4618      	mov	r0, r3
 8009498:	3714      	adds	r7, #20
 800949a:	46bd      	mov	sp, r7
 800949c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094a0:	4770      	bx	lr
 80094a2:	bf00      	nop
 80094a4:	00030d40 	.word	0x00030d40

080094a8 <USBD_CDC_Init>:
  * @param  pdev: device instance
  * @param  cfgidx: Configuration index
  * @retval status
  */
static uint8_t USBD_CDC_Init(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 80094a8:	b580      	push	{r7, lr}
 80094aa:	b084      	sub	sp, #16
 80094ac:	af00      	add	r7, sp, #0
 80094ae:	6078      	str	r0, [r7, #4]
 80094b0:	460b      	mov	r3, r1
 80094b2:	70fb      	strb	r3, [r7, #3]
  UNUSED(cfgidx);
  USBD_CDC_HandleTypeDef *hcdc;

  hcdc = (USBD_CDC_HandleTypeDef *)USBD_malloc(sizeof(USBD_CDC_HandleTypeDef));
 80094b4:	f44f 7007 	mov.w	r0, #540	; 0x21c
 80094b8:	f003 f854 	bl	800c564 <USBD_static_malloc>
 80094bc:	60f8      	str	r0, [r7, #12]

  if (hcdc == NULL)
 80094be:	68fb      	ldr	r3, [r7, #12]
 80094c0:	2b00      	cmp	r3, #0
 80094c2:	d109      	bne.n	80094d8 <USBD_CDC_Init+0x30>
  {
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 80094c4:	687b      	ldr	r3, [r7, #4]
 80094c6:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 80094ca:	687b      	ldr	r3, [r7, #4]
 80094cc:	32b0      	adds	r2, #176	; 0xb0
 80094ce:	2100      	movs	r1, #0
 80094d0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    return (uint8_t)USBD_EMEM;
 80094d4:	2302      	movs	r3, #2
 80094d6:	e0d4      	b.n	8009682 <USBD_CDC_Init+0x1da>
  }

  (void)USBD_memset(hcdc, 0, sizeof(USBD_CDC_HandleTypeDef));
 80094d8:	f44f 7207 	mov.w	r2, #540	; 0x21c
 80094dc:	2100      	movs	r1, #0
 80094de:	68f8      	ldr	r0, [r7, #12]
 80094e0:	f004 f9e4 	bl	800d8ac <memset>

  pdev->pClassDataCmsit[pdev->classId] = (void *)hcdc;
 80094e4:	687b      	ldr	r3, [r7, #4]
 80094e6:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 80094ea:	687b      	ldr	r3, [r7, #4]
 80094ec:	32b0      	adds	r2, #176	; 0xb0
 80094ee:	68f9      	ldr	r1, [r7, #12]
 80094f0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  pdev->pClassData = pdev->pClassDataCmsit[pdev->classId];
 80094f4:	687b      	ldr	r3, [r7, #4]
 80094f6:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 80094fa:	687b      	ldr	r3, [r7, #4]
 80094fc:	32b0      	adds	r2, #176	; 0xb0
 80094fe:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8009502:	687b      	ldr	r3, [r7, #4]
 8009504:	f8c3 22bc 	str.w	r2, [r3, #700]	; 0x2bc
  CDCInEpAdd  = USBD_CoreGetEPAdd(pdev, USBD_EP_IN, USBD_EP_TYPE_BULK);
  CDCOutEpAdd = USBD_CoreGetEPAdd(pdev, USBD_EP_OUT, USBD_EP_TYPE_BULK);
  CDCCmdEpAdd = USBD_CoreGetEPAdd(pdev, USBD_EP_IN, USBD_EP_TYPE_INTR);
#endif /* USE_USBD_COMPOSITE */

  if (pdev->dev_speed == USBD_SPEED_HIGH)
 8009508:	687b      	ldr	r3, [r7, #4]
 800950a:	7c1b      	ldrb	r3, [r3, #16]
 800950c:	2b00      	cmp	r3, #0
 800950e:	d138      	bne.n	8009582 <USBD_CDC_Init+0xda>
  {
    /* Open EP IN */
    (void)USBD_LL_OpenEP(pdev, CDCInEpAdd, USBD_EP_TYPE_BULK,
 8009510:	4b5e      	ldr	r3, [pc, #376]	; (800968c <USBD_CDC_Init+0x1e4>)
 8009512:	7819      	ldrb	r1, [r3, #0]
 8009514:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009518:	2202      	movs	r2, #2
 800951a:	6878      	ldr	r0, [r7, #4]
 800951c:	f002 feff 	bl	800c31e <USBD_LL_OpenEP>
                         CDC_DATA_HS_IN_PACKET_SIZE);

    pdev->ep_in[CDCInEpAdd & 0xFU].is_used = 1U;
 8009520:	4b5a      	ldr	r3, [pc, #360]	; (800968c <USBD_CDC_Init+0x1e4>)
 8009522:	781b      	ldrb	r3, [r3, #0]
 8009524:	f003 020f 	and.w	r2, r3, #15
 8009528:	6879      	ldr	r1, [r7, #4]
 800952a:	4613      	mov	r3, r2
 800952c:	009b      	lsls	r3, r3, #2
 800952e:	4413      	add	r3, r2
 8009530:	009b      	lsls	r3, r3, #2
 8009532:	440b      	add	r3, r1
 8009534:	3324      	adds	r3, #36	; 0x24
 8009536:	2201      	movs	r2, #1
 8009538:	801a      	strh	r2, [r3, #0]

    /* Open EP OUT */
    (void)USBD_LL_OpenEP(pdev, CDCOutEpAdd, USBD_EP_TYPE_BULK,
 800953a:	4b55      	ldr	r3, [pc, #340]	; (8009690 <USBD_CDC_Init+0x1e8>)
 800953c:	7819      	ldrb	r1, [r3, #0]
 800953e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009542:	2202      	movs	r2, #2
 8009544:	6878      	ldr	r0, [r7, #4]
 8009546:	f002 feea 	bl	800c31e <USBD_LL_OpenEP>
                         CDC_DATA_HS_OUT_PACKET_SIZE);

    pdev->ep_out[CDCOutEpAdd & 0xFU].is_used = 1U;
 800954a:	4b51      	ldr	r3, [pc, #324]	; (8009690 <USBD_CDC_Init+0x1e8>)
 800954c:	781b      	ldrb	r3, [r3, #0]
 800954e:	f003 020f 	and.w	r2, r3, #15
 8009552:	6879      	ldr	r1, [r7, #4]
 8009554:	4613      	mov	r3, r2
 8009556:	009b      	lsls	r3, r3, #2
 8009558:	4413      	add	r3, r2
 800955a:	009b      	lsls	r3, r3, #2
 800955c:	440b      	add	r3, r1
 800955e:	f503 73b2 	add.w	r3, r3, #356	; 0x164
 8009562:	2201      	movs	r2, #1
 8009564:	801a      	strh	r2, [r3, #0]

    /* Set bInterval for CDC CMD Endpoint */
    pdev->ep_in[CDCCmdEpAdd & 0xFU].bInterval = CDC_HS_BINTERVAL;
 8009566:	4b4b      	ldr	r3, [pc, #300]	; (8009694 <USBD_CDC_Init+0x1ec>)
 8009568:	781b      	ldrb	r3, [r3, #0]
 800956a:	f003 020f 	and.w	r2, r3, #15
 800956e:	6879      	ldr	r1, [r7, #4]
 8009570:	4613      	mov	r3, r2
 8009572:	009b      	lsls	r3, r3, #2
 8009574:	4413      	add	r3, r2
 8009576:	009b      	lsls	r3, r3, #2
 8009578:	440b      	add	r3, r1
 800957a:	3326      	adds	r3, #38	; 0x26
 800957c:	2210      	movs	r2, #16
 800957e:	801a      	strh	r2, [r3, #0]
 8009580:	e035      	b.n	80095ee <USBD_CDC_Init+0x146>
  }
  else
  {
    /* Open EP IN */
    (void)USBD_LL_OpenEP(pdev, CDCInEpAdd, USBD_EP_TYPE_BULK,
 8009582:	4b42      	ldr	r3, [pc, #264]	; (800968c <USBD_CDC_Init+0x1e4>)
 8009584:	7819      	ldrb	r1, [r3, #0]
 8009586:	2340      	movs	r3, #64	; 0x40
 8009588:	2202      	movs	r2, #2
 800958a:	6878      	ldr	r0, [r7, #4]
 800958c:	f002 fec7 	bl	800c31e <USBD_LL_OpenEP>
                         CDC_DATA_FS_IN_PACKET_SIZE);

    pdev->ep_in[CDCInEpAdd & 0xFU].is_used = 1U;
 8009590:	4b3e      	ldr	r3, [pc, #248]	; (800968c <USBD_CDC_Init+0x1e4>)
 8009592:	781b      	ldrb	r3, [r3, #0]
 8009594:	f003 020f 	and.w	r2, r3, #15
 8009598:	6879      	ldr	r1, [r7, #4]
 800959a:	4613      	mov	r3, r2
 800959c:	009b      	lsls	r3, r3, #2
 800959e:	4413      	add	r3, r2
 80095a0:	009b      	lsls	r3, r3, #2
 80095a2:	440b      	add	r3, r1
 80095a4:	3324      	adds	r3, #36	; 0x24
 80095a6:	2201      	movs	r2, #1
 80095a8:	801a      	strh	r2, [r3, #0]

    /* Open EP OUT */
    (void)USBD_LL_OpenEP(pdev, CDCOutEpAdd, USBD_EP_TYPE_BULK,
 80095aa:	4b39      	ldr	r3, [pc, #228]	; (8009690 <USBD_CDC_Init+0x1e8>)
 80095ac:	7819      	ldrb	r1, [r3, #0]
 80095ae:	2340      	movs	r3, #64	; 0x40
 80095b0:	2202      	movs	r2, #2
 80095b2:	6878      	ldr	r0, [r7, #4]
 80095b4:	f002 feb3 	bl	800c31e <USBD_LL_OpenEP>
                         CDC_DATA_FS_OUT_PACKET_SIZE);

    pdev->ep_out[CDCOutEpAdd & 0xFU].is_used = 1U;
 80095b8:	4b35      	ldr	r3, [pc, #212]	; (8009690 <USBD_CDC_Init+0x1e8>)
 80095ba:	781b      	ldrb	r3, [r3, #0]
 80095bc:	f003 020f 	and.w	r2, r3, #15
 80095c0:	6879      	ldr	r1, [r7, #4]
 80095c2:	4613      	mov	r3, r2
 80095c4:	009b      	lsls	r3, r3, #2
 80095c6:	4413      	add	r3, r2
 80095c8:	009b      	lsls	r3, r3, #2
 80095ca:	440b      	add	r3, r1
 80095cc:	f503 73b2 	add.w	r3, r3, #356	; 0x164
 80095d0:	2201      	movs	r2, #1
 80095d2:	801a      	strh	r2, [r3, #0]

    /* Set bInterval for CMD Endpoint */
    pdev->ep_in[CDCCmdEpAdd & 0xFU].bInterval = CDC_FS_BINTERVAL;
 80095d4:	4b2f      	ldr	r3, [pc, #188]	; (8009694 <USBD_CDC_Init+0x1ec>)
 80095d6:	781b      	ldrb	r3, [r3, #0]
 80095d8:	f003 020f 	and.w	r2, r3, #15
 80095dc:	6879      	ldr	r1, [r7, #4]
 80095de:	4613      	mov	r3, r2
 80095e0:	009b      	lsls	r3, r3, #2
 80095e2:	4413      	add	r3, r2
 80095e4:	009b      	lsls	r3, r3, #2
 80095e6:	440b      	add	r3, r1
 80095e8:	3326      	adds	r3, #38	; 0x26
 80095ea:	2210      	movs	r2, #16
 80095ec:	801a      	strh	r2, [r3, #0]
  }

  /* Open Command IN EP */
  (void)USBD_LL_OpenEP(pdev, CDCCmdEpAdd, USBD_EP_TYPE_INTR, CDC_CMD_PACKET_SIZE);
 80095ee:	4b29      	ldr	r3, [pc, #164]	; (8009694 <USBD_CDC_Init+0x1ec>)
 80095f0:	7819      	ldrb	r1, [r3, #0]
 80095f2:	2308      	movs	r3, #8
 80095f4:	2203      	movs	r2, #3
 80095f6:	6878      	ldr	r0, [r7, #4]
 80095f8:	f002 fe91 	bl	800c31e <USBD_LL_OpenEP>
  pdev->ep_in[CDCCmdEpAdd & 0xFU].is_used = 1U;
 80095fc:	4b25      	ldr	r3, [pc, #148]	; (8009694 <USBD_CDC_Init+0x1ec>)
 80095fe:	781b      	ldrb	r3, [r3, #0]
 8009600:	f003 020f 	and.w	r2, r3, #15
 8009604:	6879      	ldr	r1, [r7, #4]
 8009606:	4613      	mov	r3, r2
 8009608:	009b      	lsls	r3, r3, #2
 800960a:	4413      	add	r3, r2
 800960c:	009b      	lsls	r3, r3, #2
 800960e:	440b      	add	r3, r1
 8009610:	3324      	adds	r3, #36	; 0x24
 8009612:	2201      	movs	r2, #1
 8009614:	801a      	strh	r2, [r3, #0]

  hcdc->RxBuffer = NULL;
 8009616:	68fb      	ldr	r3, [r7, #12]
 8009618:	2200      	movs	r2, #0
 800961a:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204

  /* Init  physical Interface components */
  ((USBD_CDC_ItfTypeDef *)pdev->pUserData[pdev->classId])->Init();
 800961e:	687b      	ldr	r3, [r7, #4]
 8009620:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8009624:	687a      	ldr	r2, [r7, #4]
 8009626:	33b0      	adds	r3, #176	; 0xb0
 8009628:	009b      	lsls	r3, r3, #2
 800962a:	4413      	add	r3, r2
 800962c:	685b      	ldr	r3, [r3, #4]
 800962e:	681b      	ldr	r3, [r3, #0]
 8009630:	4798      	blx	r3

  /* Init Xfer states */
  hcdc->TxState = 0U;
 8009632:	68fb      	ldr	r3, [r7, #12]
 8009634:	2200      	movs	r2, #0
 8009636:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
  hcdc->RxState = 0U;
 800963a:	68fb      	ldr	r3, [r7, #12]
 800963c:	2200      	movs	r2, #0
 800963e:	f8c3 2218 	str.w	r2, [r3, #536]	; 0x218

  if (hcdc->RxBuffer == NULL)
 8009642:	68fb      	ldr	r3, [r7, #12]
 8009644:	f8d3 3204 	ldr.w	r3, [r3, #516]	; 0x204
 8009648:	2b00      	cmp	r3, #0
 800964a:	d101      	bne.n	8009650 <USBD_CDC_Init+0x1a8>
  {
    return (uint8_t)USBD_EMEM;
 800964c:	2302      	movs	r3, #2
 800964e:	e018      	b.n	8009682 <USBD_CDC_Init+0x1da>
  }

  if (pdev->dev_speed == USBD_SPEED_HIGH)
 8009650:	687b      	ldr	r3, [r7, #4]
 8009652:	7c1b      	ldrb	r3, [r3, #16]
 8009654:	2b00      	cmp	r3, #0
 8009656:	d10a      	bne.n	800966e <USBD_CDC_Init+0x1c6>
  {
    /* Prepare Out endpoint to receive next packet */
    (void)USBD_LL_PrepareReceive(pdev, CDCOutEpAdd, hcdc->RxBuffer,
 8009658:	4b0d      	ldr	r3, [pc, #52]	; (8009690 <USBD_CDC_Init+0x1e8>)
 800965a:	7819      	ldrb	r1, [r3, #0]
 800965c:	68fb      	ldr	r3, [r7, #12]
 800965e:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8009662:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009666:	6878      	ldr	r0, [r7, #4]
 8009668:	f002 ff48 	bl	800c4fc <USBD_LL_PrepareReceive>
 800966c:	e008      	b.n	8009680 <USBD_CDC_Init+0x1d8>
                                 CDC_DATA_HS_OUT_PACKET_SIZE);
  }
  else
  {
    /* Prepare Out endpoint to receive next packet */
    (void)USBD_LL_PrepareReceive(pdev, CDCOutEpAdd, hcdc->RxBuffer,
 800966e:	4b08      	ldr	r3, [pc, #32]	; (8009690 <USBD_CDC_Init+0x1e8>)
 8009670:	7819      	ldrb	r1, [r3, #0]
 8009672:	68fb      	ldr	r3, [r7, #12]
 8009674:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8009678:	2340      	movs	r3, #64	; 0x40
 800967a:	6878      	ldr	r0, [r7, #4]
 800967c:	f002 ff3e 	bl	800c4fc <USBD_LL_PrepareReceive>
                                 CDC_DATA_FS_OUT_PACKET_SIZE);
  }

  return (uint8_t)USBD_OK;
 8009680:	2300      	movs	r3, #0
}
 8009682:	4618      	mov	r0, r3
 8009684:	3710      	adds	r7, #16
 8009686:	46bd      	mov	sp, r7
 8009688:	bd80      	pop	{r7, pc}
 800968a:	bf00      	nop
 800968c:	2000009b 	.word	0x2000009b
 8009690:	2000009c 	.word	0x2000009c
 8009694:	2000009d 	.word	0x2000009d

08009698 <USBD_CDC_DeInit>:
  * @param  pdev: device instance
  * @param  cfgidx: Configuration index
  * @retval status
  */
static uint8_t USBD_CDC_DeInit(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 8009698:	b580      	push	{r7, lr}
 800969a:	b082      	sub	sp, #8
 800969c:	af00      	add	r7, sp, #0
 800969e:	6078      	str	r0, [r7, #4]
 80096a0:	460b      	mov	r3, r1
 80096a2:	70fb      	strb	r3, [r7, #3]
  CDCOutEpAdd = USBD_CoreGetEPAdd(pdev, USBD_EP_OUT, USBD_EP_TYPE_BULK);
  CDCCmdEpAdd = USBD_CoreGetEPAdd(pdev, USBD_EP_IN, USBD_EP_TYPE_INTR);
#endif /* USE_USBD_COMPOSITE */

  /* Close EP IN */
  (void)USBD_LL_CloseEP(pdev, CDCInEpAdd);
 80096a4:	4b3a      	ldr	r3, [pc, #232]	; (8009790 <USBD_CDC_DeInit+0xf8>)
 80096a6:	781b      	ldrb	r3, [r3, #0]
 80096a8:	4619      	mov	r1, r3
 80096aa:	6878      	ldr	r0, [r7, #4]
 80096ac:	f002 fe5d 	bl	800c36a <USBD_LL_CloseEP>
  pdev->ep_in[CDCInEpAdd & 0xFU].is_used = 0U;
 80096b0:	4b37      	ldr	r3, [pc, #220]	; (8009790 <USBD_CDC_DeInit+0xf8>)
 80096b2:	781b      	ldrb	r3, [r3, #0]
 80096b4:	f003 020f 	and.w	r2, r3, #15
 80096b8:	6879      	ldr	r1, [r7, #4]
 80096ba:	4613      	mov	r3, r2
 80096bc:	009b      	lsls	r3, r3, #2
 80096be:	4413      	add	r3, r2
 80096c0:	009b      	lsls	r3, r3, #2
 80096c2:	440b      	add	r3, r1
 80096c4:	3324      	adds	r3, #36	; 0x24
 80096c6:	2200      	movs	r2, #0
 80096c8:	801a      	strh	r2, [r3, #0]

  /* Close EP OUT */
  (void)USBD_LL_CloseEP(pdev, CDCOutEpAdd);
 80096ca:	4b32      	ldr	r3, [pc, #200]	; (8009794 <USBD_CDC_DeInit+0xfc>)
 80096cc:	781b      	ldrb	r3, [r3, #0]
 80096ce:	4619      	mov	r1, r3
 80096d0:	6878      	ldr	r0, [r7, #4]
 80096d2:	f002 fe4a 	bl	800c36a <USBD_LL_CloseEP>
  pdev->ep_out[CDCOutEpAdd & 0xFU].is_used = 0U;
 80096d6:	4b2f      	ldr	r3, [pc, #188]	; (8009794 <USBD_CDC_DeInit+0xfc>)
 80096d8:	781b      	ldrb	r3, [r3, #0]
 80096da:	f003 020f 	and.w	r2, r3, #15
 80096de:	6879      	ldr	r1, [r7, #4]
 80096e0:	4613      	mov	r3, r2
 80096e2:	009b      	lsls	r3, r3, #2
 80096e4:	4413      	add	r3, r2
 80096e6:	009b      	lsls	r3, r3, #2
 80096e8:	440b      	add	r3, r1
 80096ea:	f503 73b2 	add.w	r3, r3, #356	; 0x164
 80096ee:	2200      	movs	r2, #0
 80096f0:	801a      	strh	r2, [r3, #0]

  /* Close Command IN EP */
  (void)USBD_LL_CloseEP(pdev, CDCCmdEpAdd);
 80096f2:	4b29      	ldr	r3, [pc, #164]	; (8009798 <USBD_CDC_DeInit+0x100>)
 80096f4:	781b      	ldrb	r3, [r3, #0]
 80096f6:	4619      	mov	r1, r3
 80096f8:	6878      	ldr	r0, [r7, #4]
 80096fa:	f002 fe36 	bl	800c36a <USBD_LL_CloseEP>
  pdev->ep_in[CDCCmdEpAdd & 0xFU].is_used = 0U;
 80096fe:	4b26      	ldr	r3, [pc, #152]	; (8009798 <USBD_CDC_DeInit+0x100>)
 8009700:	781b      	ldrb	r3, [r3, #0]
 8009702:	f003 020f 	and.w	r2, r3, #15
 8009706:	6879      	ldr	r1, [r7, #4]
 8009708:	4613      	mov	r3, r2
 800970a:	009b      	lsls	r3, r3, #2
 800970c:	4413      	add	r3, r2
 800970e:	009b      	lsls	r3, r3, #2
 8009710:	440b      	add	r3, r1
 8009712:	3324      	adds	r3, #36	; 0x24
 8009714:	2200      	movs	r2, #0
 8009716:	801a      	strh	r2, [r3, #0]
  pdev->ep_in[CDCCmdEpAdd & 0xFU].bInterval = 0U;
 8009718:	4b1f      	ldr	r3, [pc, #124]	; (8009798 <USBD_CDC_DeInit+0x100>)
 800971a:	781b      	ldrb	r3, [r3, #0]
 800971c:	f003 020f 	and.w	r2, r3, #15
 8009720:	6879      	ldr	r1, [r7, #4]
 8009722:	4613      	mov	r3, r2
 8009724:	009b      	lsls	r3, r3, #2
 8009726:	4413      	add	r3, r2
 8009728:	009b      	lsls	r3, r3, #2
 800972a:	440b      	add	r3, r1
 800972c:	3326      	adds	r3, #38	; 0x26
 800972e:	2200      	movs	r2, #0
 8009730:	801a      	strh	r2, [r3, #0]

  /* DeInit  physical Interface components */
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 8009732:	687b      	ldr	r3, [r7, #4]
 8009734:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8009738:	687b      	ldr	r3, [r7, #4]
 800973a:	32b0      	adds	r2, #176	; 0xb0
 800973c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009740:	2b00      	cmp	r3, #0
 8009742:	d01f      	beq.n	8009784 <USBD_CDC_DeInit+0xec>
  {
    ((USBD_CDC_ItfTypeDef *)pdev->pUserData[pdev->classId])->DeInit();
 8009744:	687b      	ldr	r3, [r7, #4]
 8009746:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 800974a:	687a      	ldr	r2, [r7, #4]
 800974c:	33b0      	adds	r3, #176	; 0xb0
 800974e:	009b      	lsls	r3, r3, #2
 8009750:	4413      	add	r3, r2
 8009752:	685b      	ldr	r3, [r3, #4]
 8009754:	685b      	ldr	r3, [r3, #4]
 8009756:	4798      	blx	r3
    (void)USBD_free(pdev->pClassDataCmsit[pdev->classId]);
 8009758:	687b      	ldr	r3, [r7, #4]
 800975a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800975e:	687b      	ldr	r3, [r7, #4]
 8009760:	32b0      	adds	r2, #176	; 0xb0
 8009762:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009766:	4618      	mov	r0, r3
 8009768:	f002 ff0a 	bl	800c580 <USBD_static_free>
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 800976c:	687b      	ldr	r3, [r7, #4]
 800976e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8009772:	687b      	ldr	r3, [r7, #4]
 8009774:	32b0      	adds	r2, #176	; 0xb0
 8009776:	2100      	movs	r1, #0
 8009778:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    pdev->pClassData = NULL;
 800977c:	687b      	ldr	r3, [r7, #4]
 800977e:	2200      	movs	r2, #0
 8009780:	f8c3 22bc 	str.w	r2, [r3, #700]	; 0x2bc
  }

  return (uint8_t)USBD_OK;
 8009784:	2300      	movs	r3, #0
}
 8009786:	4618      	mov	r0, r3
 8009788:	3708      	adds	r7, #8
 800978a:	46bd      	mov	sp, r7
 800978c:	bd80      	pop	{r7, pc}
 800978e:	bf00      	nop
 8009790:	2000009b 	.word	0x2000009b
 8009794:	2000009c 	.word	0x2000009c
 8009798:	2000009d 	.word	0x2000009d

0800979c <USBD_CDC_Setup>:
  * @param  req: usb requests
  * @retval status
  */
static uint8_t USBD_CDC_Setup(USBD_HandleTypeDef *pdev,
                              USBD_SetupReqTypedef *req)
{
 800979c:	b580      	push	{r7, lr}
 800979e:	b086      	sub	sp, #24
 80097a0:	af00      	add	r7, sp, #0
 80097a2:	6078      	str	r0, [r7, #4]
 80097a4:	6039      	str	r1, [r7, #0]
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 80097a6:	687b      	ldr	r3, [r7, #4]
 80097a8:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 80097ac:	687b      	ldr	r3, [r7, #4]
 80097ae:	32b0      	adds	r2, #176	; 0xb0
 80097b0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80097b4:	613b      	str	r3, [r7, #16]
  uint16_t len;
  uint8_t ifalt = 0U;
 80097b6:	2300      	movs	r3, #0
 80097b8:	737b      	strb	r3, [r7, #13]
  uint16_t status_info = 0U;
 80097ba:	2300      	movs	r3, #0
 80097bc:	817b      	strh	r3, [r7, #10]
  USBD_StatusTypeDef ret = USBD_OK;
 80097be:	2300      	movs	r3, #0
 80097c0:	75fb      	strb	r3, [r7, #23]

  if (hcdc == NULL)
 80097c2:	693b      	ldr	r3, [r7, #16]
 80097c4:	2b00      	cmp	r3, #0
 80097c6:	d101      	bne.n	80097cc <USBD_CDC_Setup+0x30>
  {
    return (uint8_t)USBD_FAIL;
 80097c8:	2303      	movs	r3, #3
 80097ca:	e0bf      	b.n	800994c <USBD_CDC_Setup+0x1b0>
  }

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 80097cc:	683b      	ldr	r3, [r7, #0]
 80097ce:	781b      	ldrb	r3, [r3, #0]
 80097d0:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80097d4:	2b00      	cmp	r3, #0
 80097d6:	d050      	beq.n	800987a <USBD_CDC_Setup+0xde>
 80097d8:	2b20      	cmp	r3, #32
 80097da:	f040 80af 	bne.w	800993c <USBD_CDC_Setup+0x1a0>
  {
    case USB_REQ_TYPE_CLASS:
      if (req->wLength != 0U)
 80097de:	683b      	ldr	r3, [r7, #0]
 80097e0:	88db      	ldrh	r3, [r3, #6]
 80097e2:	2b00      	cmp	r3, #0
 80097e4:	d03a      	beq.n	800985c <USBD_CDC_Setup+0xc0>
      {
        if ((req->bmRequest & 0x80U) != 0U)
 80097e6:	683b      	ldr	r3, [r7, #0]
 80097e8:	781b      	ldrb	r3, [r3, #0]
 80097ea:	b25b      	sxtb	r3, r3
 80097ec:	2b00      	cmp	r3, #0
 80097ee:	da1b      	bge.n	8009828 <USBD_CDC_Setup+0x8c>
        {
          ((USBD_CDC_ItfTypeDef *)pdev->pUserData[pdev->classId])->Control(req->bRequest,
 80097f0:	687b      	ldr	r3, [r7, #4]
 80097f2:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 80097f6:	687a      	ldr	r2, [r7, #4]
 80097f8:	33b0      	adds	r3, #176	; 0xb0
 80097fa:	009b      	lsls	r3, r3, #2
 80097fc:	4413      	add	r3, r2
 80097fe:	685b      	ldr	r3, [r3, #4]
 8009800:	689b      	ldr	r3, [r3, #8]
 8009802:	683a      	ldr	r2, [r7, #0]
 8009804:	7850      	ldrb	r0, [r2, #1]
                                                                           (uint8_t *)hcdc->data,
 8009806:	6939      	ldr	r1, [r7, #16]
          ((USBD_CDC_ItfTypeDef *)pdev->pUserData[pdev->classId])->Control(req->bRequest,
 8009808:	683a      	ldr	r2, [r7, #0]
 800980a:	88d2      	ldrh	r2, [r2, #6]
 800980c:	4798      	blx	r3
                                                                           req->wLength);

          len = MIN(CDC_REQ_MAX_DATA_SIZE, req->wLength);
 800980e:	683b      	ldr	r3, [r7, #0]
 8009810:	88db      	ldrh	r3, [r3, #6]
 8009812:	2b07      	cmp	r3, #7
 8009814:	bf28      	it	cs
 8009816:	2307      	movcs	r3, #7
 8009818:	81fb      	strh	r3, [r7, #14]
          (void)USBD_CtlSendData(pdev, (uint8_t *)hcdc->data, len);
 800981a:	693b      	ldr	r3, [r7, #16]
 800981c:	89fa      	ldrh	r2, [r7, #14]
 800981e:	4619      	mov	r1, r3
 8009820:	6878      	ldr	r0, [r7, #4]
 8009822:	f001 fd89 	bl	800b338 <USBD_CtlSendData>
      else
      {
        ((USBD_CDC_ItfTypeDef *)pdev->pUserData[pdev->classId])->Control(req->bRequest,
                                                                         (uint8_t *)req, 0U);
      }
      break;
 8009826:	e090      	b.n	800994a <USBD_CDC_Setup+0x1ae>
          hcdc->CmdOpCode = req->bRequest;
 8009828:	683b      	ldr	r3, [r7, #0]
 800982a:	785a      	ldrb	r2, [r3, #1]
 800982c:	693b      	ldr	r3, [r7, #16]
 800982e:	f883 2200 	strb.w	r2, [r3, #512]	; 0x200
          hcdc->CmdLength = (uint8_t)MIN(req->wLength, USB_MAX_EP0_SIZE);
 8009832:	683b      	ldr	r3, [r7, #0]
 8009834:	88db      	ldrh	r3, [r3, #6]
 8009836:	2b3f      	cmp	r3, #63	; 0x3f
 8009838:	d803      	bhi.n	8009842 <USBD_CDC_Setup+0xa6>
 800983a:	683b      	ldr	r3, [r7, #0]
 800983c:	88db      	ldrh	r3, [r3, #6]
 800983e:	b2da      	uxtb	r2, r3
 8009840:	e000      	b.n	8009844 <USBD_CDC_Setup+0xa8>
 8009842:	2240      	movs	r2, #64	; 0x40
 8009844:	693b      	ldr	r3, [r7, #16]
 8009846:	f883 2201 	strb.w	r2, [r3, #513]	; 0x201
          (void)USBD_CtlPrepareRx(pdev, (uint8_t *)hcdc->data, hcdc->CmdLength);
 800984a:	6939      	ldr	r1, [r7, #16]
 800984c:	693b      	ldr	r3, [r7, #16]
 800984e:	f893 3201 	ldrb.w	r3, [r3, #513]	; 0x201
 8009852:	461a      	mov	r2, r3
 8009854:	6878      	ldr	r0, [r7, #4]
 8009856:	f001 fd9b 	bl	800b390 <USBD_CtlPrepareRx>
      break;
 800985a:	e076      	b.n	800994a <USBD_CDC_Setup+0x1ae>
        ((USBD_CDC_ItfTypeDef *)pdev->pUserData[pdev->classId])->Control(req->bRequest,
 800985c:	687b      	ldr	r3, [r7, #4]
 800985e:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8009862:	687a      	ldr	r2, [r7, #4]
 8009864:	33b0      	adds	r3, #176	; 0xb0
 8009866:	009b      	lsls	r3, r3, #2
 8009868:	4413      	add	r3, r2
 800986a:	685b      	ldr	r3, [r3, #4]
 800986c:	689b      	ldr	r3, [r3, #8]
 800986e:	683a      	ldr	r2, [r7, #0]
 8009870:	7850      	ldrb	r0, [r2, #1]
 8009872:	2200      	movs	r2, #0
 8009874:	6839      	ldr	r1, [r7, #0]
 8009876:	4798      	blx	r3
      break;
 8009878:	e067      	b.n	800994a <USBD_CDC_Setup+0x1ae>

    case USB_REQ_TYPE_STANDARD:
      switch (req->bRequest)
 800987a:	683b      	ldr	r3, [r7, #0]
 800987c:	785b      	ldrb	r3, [r3, #1]
 800987e:	2b0b      	cmp	r3, #11
 8009880:	d851      	bhi.n	8009926 <USBD_CDC_Setup+0x18a>
 8009882:	a201      	add	r2, pc, #4	; (adr r2, 8009888 <USBD_CDC_Setup+0xec>)
 8009884:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009888:	080098b9 	.word	0x080098b9
 800988c:	08009935 	.word	0x08009935
 8009890:	08009927 	.word	0x08009927
 8009894:	08009927 	.word	0x08009927
 8009898:	08009927 	.word	0x08009927
 800989c:	08009927 	.word	0x08009927
 80098a0:	08009927 	.word	0x08009927
 80098a4:	08009927 	.word	0x08009927
 80098a8:	08009927 	.word	0x08009927
 80098ac:	08009927 	.word	0x08009927
 80098b0:	080098e3 	.word	0x080098e3
 80098b4:	0800990d 	.word	0x0800990d
      {
        case USB_REQ_GET_STATUS:
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80098b8:	687b      	ldr	r3, [r7, #4]
 80098ba:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 80098be:	b2db      	uxtb	r3, r3
 80098c0:	2b03      	cmp	r3, #3
 80098c2:	d107      	bne.n	80098d4 <USBD_CDC_Setup+0x138>
          {
            (void)USBD_CtlSendData(pdev, (uint8_t *)&status_info, 2U);
 80098c4:	f107 030a 	add.w	r3, r7, #10
 80098c8:	2202      	movs	r2, #2
 80098ca:	4619      	mov	r1, r3
 80098cc:	6878      	ldr	r0, [r7, #4]
 80098ce:	f001 fd33 	bl	800b338 <USBD_CtlSendData>
          else
          {
            USBD_CtlError(pdev, req);
            ret = USBD_FAIL;
          }
          break;
 80098d2:	e032      	b.n	800993a <USBD_CDC_Setup+0x19e>
            USBD_CtlError(pdev, req);
 80098d4:	6839      	ldr	r1, [r7, #0]
 80098d6:	6878      	ldr	r0, [r7, #4]
 80098d8:	f001 fcbd 	bl	800b256 <USBD_CtlError>
            ret = USBD_FAIL;
 80098dc:	2303      	movs	r3, #3
 80098de:	75fb      	strb	r3, [r7, #23]
          break;
 80098e0:	e02b      	b.n	800993a <USBD_CDC_Setup+0x19e>

        case USB_REQ_GET_INTERFACE:
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80098e2:	687b      	ldr	r3, [r7, #4]
 80098e4:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 80098e8:	b2db      	uxtb	r3, r3
 80098ea:	2b03      	cmp	r3, #3
 80098ec:	d107      	bne.n	80098fe <USBD_CDC_Setup+0x162>
          {
            (void)USBD_CtlSendData(pdev, &ifalt, 1U);
 80098ee:	f107 030d 	add.w	r3, r7, #13
 80098f2:	2201      	movs	r2, #1
 80098f4:	4619      	mov	r1, r3
 80098f6:	6878      	ldr	r0, [r7, #4]
 80098f8:	f001 fd1e 	bl	800b338 <USBD_CtlSendData>
          else
          {
            USBD_CtlError(pdev, req);
            ret = USBD_FAIL;
          }
          break;
 80098fc:	e01d      	b.n	800993a <USBD_CDC_Setup+0x19e>
            USBD_CtlError(pdev, req);
 80098fe:	6839      	ldr	r1, [r7, #0]
 8009900:	6878      	ldr	r0, [r7, #4]
 8009902:	f001 fca8 	bl	800b256 <USBD_CtlError>
            ret = USBD_FAIL;
 8009906:	2303      	movs	r3, #3
 8009908:	75fb      	strb	r3, [r7, #23]
          break;
 800990a:	e016      	b.n	800993a <USBD_CDC_Setup+0x19e>

        case USB_REQ_SET_INTERFACE:
          if (pdev->dev_state != USBD_STATE_CONFIGURED)
 800990c:	687b      	ldr	r3, [r7, #4]
 800990e:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8009912:	b2db      	uxtb	r3, r3
 8009914:	2b03      	cmp	r3, #3
 8009916:	d00f      	beq.n	8009938 <USBD_CDC_Setup+0x19c>
          {
            USBD_CtlError(pdev, req);
 8009918:	6839      	ldr	r1, [r7, #0]
 800991a:	6878      	ldr	r0, [r7, #4]
 800991c:	f001 fc9b 	bl	800b256 <USBD_CtlError>
            ret = USBD_FAIL;
 8009920:	2303      	movs	r3, #3
 8009922:	75fb      	strb	r3, [r7, #23]
          }
          break;
 8009924:	e008      	b.n	8009938 <USBD_CDC_Setup+0x19c>

        case USB_REQ_CLEAR_FEATURE:
          break;

        default:
          USBD_CtlError(pdev, req);
 8009926:	6839      	ldr	r1, [r7, #0]
 8009928:	6878      	ldr	r0, [r7, #4]
 800992a:	f001 fc94 	bl	800b256 <USBD_CtlError>
          ret = USBD_FAIL;
 800992e:	2303      	movs	r3, #3
 8009930:	75fb      	strb	r3, [r7, #23]
          break;
 8009932:	e002      	b.n	800993a <USBD_CDC_Setup+0x19e>
          break;
 8009934:	bf00      	nop
 8009936:	e008      	b.n	800994a <USBD_CDC_Setup+0x1ae>
          break;
 8009938:	bf00      	nop
      }
      break;
 800993a:	e006      	b.n	800994a <USBD_CDC_Setup+0x1ae>

    default:
      USBD_CtlError(pdev, req);
 800993c:	6839      	ldr	r1, [r7, #0]
 800993e:	6878      	ldr	r0, [r7, #4]
 8009940:	f001 fc89 	bl	800b256 <USBD_CtlError>
      ret = USBD_FAIL;
 8009944:	2303      	movs	r3, #3
 8009946:	75fb      	strb	r3, [r7, #23]
      break;
 8009948:	bf00      	nop
  }

  return (uint8_t)ret;
 800994a:	7dfb      	ldrb	r3, [r7, #23]
}
 800994c:	4618      	mov	r0, r3
 800994e:	3718      	adds	r7, #24
 8009950:	46bd      	mov	sp, r7
 8009952:	bd80      	pop	{r7, pc}

08009954 <USBD_CDC_DataIn>:
  * @param  pdev: device instance
  * @param  epnum: endpoint number
  * @retval status
  */
static uint8_t USBD_CDC_DataIn(USBD_HandleTypeDef *pdev, uint8_t epnum)
{
 8009954:	b580      	push	{r7, lr}
 8009956:	b084      	sub	sp, #16
 8009958:	af00      	add	r7, sp, #0
 800995a:	6078      	str	r0, [r7, #4]
 800995c:	460b      	mov	r3, r1
 800995e:	70fb      	strb	r3, [r7, #3]
  USBD_CDC_HandleTypeDef *hcdc;
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef *)pdev->pData;
 8009960:	687b      	ldr	r3, [r7, #4]
 8009962:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 8009966:	60fb      	str	r3, [r7, #12]

  if (pdev->pClassDataCmsit[pdev->classId] == NULL)
 8009968:	687b      	ldr	r3, [r7, #4]
 800996a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800996e:	687b      	ldr	r3, [r7, #4]
 8009970:	32b0      	adds	r2, #176	; 0xb0
 8009972:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009976:	2b00      	cmp	r3, #0
 8009978:	d101      	bne.n	800997e <USBD_CDC_DataIn+0x2a>
  {
    return (uint8_t)USBD_FAIL;
 800997a:	2303      	movs	r3, #3
 800997c:	e065      	b.n	8009a4a <USBD_CDC_DataIn+0xf6>
  }

  hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800997e:	687b      	ldr	r3, [r7, #4]
 8009980:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8009984:	687b      	ldr	r3, [r7, #4]
 8009986:	32b0      	adds	r2, #176	; 0xb0
 8009988:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800998c:	60bb      	str	r3, [r7, #8]

  if ((pdev->ep_in[epnum & 0xFU].total_length > 0U) &&
 800998e:	78fb      	ldrb	r3, [r7, #3]
 8009990:	f003 020f 	and.w	r2, r3, #15
 8009994:	6879      	ldr	r1, [r7, #4]
 8009996:	4613      	mov	r3, r2
 8009998:	009b      	lsls	r3, r3, #2
 800999a:	4413      	add	r3, r2
 800999c:	009b      	lsls	r3, r3, #2
 800999e:	440b      	add	r3, r1
 80099a0:	3318      	adds	r3, #24
 80099a2:	681b      	ldr	r3, [r3, #0]
 80099a4:	2b00      	cmp	r3, #0
 80099a6:	d02f      	beq.n	8009a08 <USBD_CDC_DataIn+0xb4>
      ((pdev->ep_in[epnum & 0xFU].total_length % hpcd->IN_ep[epnum & 0xFU].maxpacket) == 0U))
 80099a8:	78fb      	ldrb	r3, [r7, #3]
 80099aa:	f003 020f 	and.w	r2, r3, #15
 80099ae:	6879      	ldr	r1, [r7, #4]
 80099b0:	4613      	mov	r3, r2
 80099b2:	009b      	lsls	r3, r3, #2
 80099b4:	4413      	add	r3, r2
 80099b6:	009b      	lsls	r3, r3, #2
 80099b8:	440b      	add	r3, r1
 80099ba:	3318      	adds	r3, #24
 80099bc:	681a      	ldr	r2, [r3, #0]
 80099be:	78fb      	ldrb	r3, [r7, #3]
 80099c0:	f003 010f 	and.w	r1, r3, #15
 80099c4:	68f8      	ldr	r0, [r7, #12]
 80099c6:	460b      	mov	r3, r1
 80099c8:	00db      	lsls	r3, r3, #3
 80099ca:	440b      	add	r3, r1
 80099cc:	009b      	lsls	r3, r3, #2
 80099ce:	4403      	add	r3, r0
 80099d0:	3348      	adds	r3, #72	; 0x48
 80099d2:	681b      	ldr	r3, [r3, #0]
 80099d4:	fbb2 f1f3 	udiv	r1, r2, r3
 80099d8:	fb01 f303 	mul.w	r3, r1, r3
 80099dc:	1ad3      	subs	r3, r2, r3
  if ((pdev->ep_in[epnum & 0xFU].total_length > 0U) &&
 80099de:	2b00      	cmp	r3, #0
 80099e0:	d112      	bne.n	8009a08 <USBD_CDC_DataIn+0xb4>
  {
    /* Update the packet total length */
    pdev->ep_in[epnum & 0xFU].total_length = 0U;
 80099e2:	78fb      	ldrb	r3, [r7, #3]
 80099e4:	f003 020f 	and.w	r2, r3, #15
 80099e8:	6879      	ldr	r1, [r7, #4]
 80099ea:	4613      	mov	r3, r2
 80099ec:	009b      	lsls	r3, r3, #2
 80099ee:	4413      	add	r3, r2
 80099f0:	009b      	lsls	r3, r3, #2
 80099f2:	440b      	add	r3, r1
 80099f4:	3318      	adds	r3, #24
 80099f6:	2200      	movs	r2, #0
 80099f8:	601a      	str	r2, [r3, #0]

    /* Send ZLP */
    (void)USBD_LL_Transmit(pdev, epnum, NULL, 0U);
 80099fa:	78f9      	ldrb	r1, [r7, #3]
 80099fc:	2300      	movs	r3, #0
 80099fe:	2200      	movs	r2, #0
 8009a00:	6878      	ldr	r0, [r7, #4]
 8009a02:	f002 fd5a 	bl	800c4ba <USBD_LL_Transmit>
 8009a06:	e01f      	b.n	8009a48 <USBD_CDC_DataIn+0xf4>
  }
  else
  {
    hcdc->TxState = 0U;
 8009a08:	68bb      	ldr	r3, [r7, #8]
 8009a0a:	2200      	movs	r2, #0
 8009a0c:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214

    if (((USBD_CDC_ItfTypeDef *)pdev->pUserData[pdev->classId])->TransmitCplt != NULL)
 8009a10:	687b      	ldr	r3, [r7, #4]
 8009a12:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8009a16:	687a      	ldr	r2, [r7, #4]
 8009a18:	33b0      	adds	r3, #176	; 0xb0
 8009a1a:	009b      	lsls	r3, r3, #2
 8009a1c:	4413      	add	r3, r2
 8009a1e:	685b      	ldr	r3, [r3, #4]
 8009a20:	691b      	ldr	r3, [r3, #16]
 8009a22:	2b00      	cmp	r3, #0
 8009a24:	d010      	beq.n	8009a48 <USBD_CDC_DataIn+0xf4>
    {
      ((USBD_CDC_ItfTypeDef *)pdev->pUserData[pdev->classId])->TransmitCplt(hcdc->TxBuffer, &hcdc->TxLength, epnum);
 8009a26:	687b      	ldr	r3, [r7, #4]
 8009a28:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8009a2c:	687a      	ldr	r2, [r7, #4]
 8009a2e:	33b0      	adds	r3, #176	; 0xb0
 8009a30:	009b      	lsls	r3, r3, #2
 8009a32:	4413      	add	r3, r2
 8009a34:	685b      	ldr	r3, [r3, #4]
 8009a36:	691b      	ldr	r3, [r3, #16]
 8009a38:	68ba      	ldr	r2, [r7, #8]
 8009a3a:	f8d2 0208 	ldr.w	r0, [r2, #520]	; 0x208
 8009a3e:	68ba      	ldr	r2, [r7, #8]
 8009a40:	f502 7104 	add.w	r1, r2, #528	; 0x210
 8009a44:	78fa      	ldrb	r2, [r7, #3]
 8009a46:	4798      	blx	r3
    }
  }

  return (uint8_t)USBD_OK;
 8009a48:	2300      	movs	r3, #0
}
 8009a4a:	4618      	mov	r0, r3
 8009a4c:	3710      	adds	r7, #16
 8009a4e:	46bd      	mov	sp, r7
 8009a50:	bd80      	pop	{r7, pc}

08009a52 <USBD_CDC_DataOut>:
  * @param  pdev: device instance
  * @param  epnum: endpoint number
  * @retval status
  */
static uint8_t USBD_CDC_DataOut(USBD_HandleTypeDef *pdev, uint8_t epnum)
{
 8009a52:	b580      	push	{r7, lr}
 8009a54:	b084      	sub	sp, #16
 8009a56:	af00      	add	r7, sp, #0
 8009a58:	6078      	str	r0, [r7, #4]
 8009a5a:	460b      	mov	r3, r1
 8009a5c:	70fb      	strb	r3, [r7, #3]
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009a5e:	687b      	ldr	r3, [r7, #4]
 8009a60:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8009a64:	687b      	ldr	r3, [r7, #4]
 8009a66:	32b0      	adds	r2, #176	; 0xb0
 8009a68:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009a6c:	60fb      	str	r3, [r7, #12]

  if (pdev->pClassDataCmsit[pdev->classId] == NULL)
 8009a6e:	687b      	ldr	r3, [r7, #4]
 8009a70:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8009a74:	687b      	ldr	r3, [r7, #4]
 8009a76:	32b0      	adds	r2, #176	; 0xb0
 8009a78:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009a7c:	2b00      	cmp	r3, #0
 8009a7e:	d101      	bne.n	8009a84 <USBD_CDC_DataOut+0x32>
  {
    return (uint8_t)USBD_FAIL;
 8009a80:	2303      	movs	r3, #3
 8009a82:	e01a      	b.n	8009aba <USBD_CDC_DataOut+0x68>
  }

  /* Get the received data length */
  hcdc->RxLength = USBD_LL_GetRxDataSize(pdev, epnum);
 8009a84:	78fb      	ldrb	r3, [r7, #3]
 8009a86:	4619      	mov	r1, r3
 8009a88:	6878      	ldr	r0, [r7, #4]
 8009a8a:	f002 fd58 	bl	800c53e <USBD_LL_GetRxDataSize>
 8009a8e:	4602      	mov	r2, r0
 8009a90:	68fb      	ldr	r3, [r7, #12]
 8009a92:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c

  /* USB data will be immediately processed, this allow next USB traffic being
  NAKed till the end of the application Xfer */

  ((USBD_CDC_ItfTypeDef *)pdev->pUserData[pdev->classId])->Receive(hcdc->RxBuffer, &hcdc->RxLength);
 8009a96:	687b      	ldr	r3, [r7, #4]
 8009a98:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8009a9c:	687a      	ldr	r2, [r7, #4]
 8009a9e:	33b0      	adds	r3, #176	; 0xb0
 8009aa0:	009b      	lsls	r3, r3, #2
 8009aa2:	4413      	add	r3, r2
 8009aa4:	685b      	ldr	r3, [r3, #4]
 8009aa6:	68db      	ldr	r3, [r3, #12]
 8009aa8:	68fa      	ldr	r2, [r7, #12]
 8009aaa:	f8d2 0204 	ldr.w	r0, [r2, #516]	; 0x204
 8009aae:	68fa      	ldr	r2, [r7, #12]
 8009ab0:	f502 7203 	add.w	r2, r2, #524	; 0x20c
 8009ab4:	4611      	mov	r1, r2
 8009ab6:	4798      	blx	r3

  return (uint8_t)USBD_OK;
 8009ab8:	2300      	movs	r3, #0
}
 8009aba:	4618      	mov	r0, r3
 8009abc:	3710      	adds	r7, #16
 8009abe:	46bd      	mov	sp, r7
 8009ac0:	bd80      	pop	{r7, pc}

08009ac2 <USBD_CDC_EP0_RxReady>:
  *         Handle EP0 Rx Ready event
  * @param  pdev: device instance
  * @retval status
  */
static uint8_t USBD_CDC_EP0_RxReady(USBD_HandleTypeDef *pdev)
{
 8009ac2:	b580      	push	{r7, lr}
 8009ac4:	b084      	sub	sp, #16
 8009ac6:	af00      	add	r7, sp, #0
 8009ac8:	6078      	str	r0, [r7, #4]
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009aca:	687b      	ldr	r3, [r7, #4]
 8009acc:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8009ad0:	687b      	ldr	r3, [r7, #4]
 8009ad2:	32b0      	adds	r2, #176	; 0xb0
 8009ad4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009ad8:	60fb      	str	r3, [r7, #12]

  if (hcdc == NULL)
 8009ada:	68fb      	ldr	r3, [r7, #12]
 8009adc:	2b00      	cmp	r3, #0
 8009ade:	d101      	bne.n	8009ae4 <USBD_CDC_EP0_RxReady+0x22>
  {
    return (uint8_t)USBD_FAIL;
 8009ae0:	2303      	movs	r3, #3
 8009ae2:	e025      	b.n	8009b30 <USBD_CDC_EP0_RxReady+0x6e>
  }

  if ((pdev->pUserData[pdev->classId] != NULL) && (hcdc->CmdOpCode != 0xFFU))
 8009ae4:	687b      	ldr	r3, [r7, #4]
 8009ae6:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8009aea:	687a      	ldr	r2, [r7, #4]
 8009aec:	33b0      	adds	r3, #176	; 0xb0
 8009aee:	009b      	lsls	r3, r3, #2
 8009af0:	4413      	add	r3, r2
 8009af2:	685b      	ldr	r3, [r3, #4]
 8009af4:	2b00      	cmp	r3, #0
 8009af6:	d01a      	beq.n	8009b2e <USBD_CDC_EP0_RxReady+0x6c>
 8009af8:	68fb      	ldr	r3, [r7, #12]
 8009afa:	f893 3200 	ldrb.w	r3, [r3, #512]	; 0x200
 8009afe:	2bff      	cmp	r3, #255	; 0xff
 8009b00:	d015      	beq.n	8009b2e <USBD_CDC_EP0_RxReady+0x6c>
  {
    ((USBD_CDC_ItfTypeDef *)pdev->pUserData[pdev->classId])->Control(hcdc->CmdOpCode,
 8009b02:	687b      	ldr	r3, [r7, #4]
 8009b04:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8009b08:	687a      	ldr	r2, [r7, #4]
 8009b0a:	33b0      	adds	r3, #176	; 0xb0
 8009b0c:	009b      	lsls	r3, r3, #2
 8009b0e:	4413      	add	r3, r2
 8009b10:	685b      	ldr	r3, [r3, #4]
 8009b12:	689b      	ldr	r3, [r3, #8]
 8009b14:	68fa      	ldr	r2, [r7, #12]
 8009b16:	f892 0200 	ldrb.w	r0, [r2, #512]	; 0x200
                                                                     (uint8_t *)hcdc->data,
 8009b1a:	68f9      	ldr	r1, [r7, #12]
                                                                     (uint16_t)hcdc->CmdLength);
 8009b1c:	68fa      	ldr	r2, [r7, #12]
 8009b1e:	f892 2201 	ldrb.w	r2, [r2, #513]	; 0x201
    ((USBD_CDC_ItfTypeDef *)pdev->pUserData[pdev->classId])->Control(hcdc->CmdOpCode,
 8009b22:	b292      	uxth	r2, r2
 8009b24:	4798      	blx	r3
    hcdc->CmdOpCode = 0xFFU;
 8009b26:	68fb      	ldr	r3, [r7, #12]
 8009b28:	22ff      	movs	r2, #255	; 0xff
 8009b2a:	f883 2200 	strb.w	r2, [r3, #512]	; 0x200
  }

  return (uint8_t)USBD_OK;
 8009b2e:	2300      	movs	r3, #0
}
 8009b30:	4618      	mov	r0, r3
 8009b32:	3710      	adds	r7, #16
 8009b34:	46bd      	mov	sp, r7
 8009b36:	bd80      	pop	{r7, pc}

08009b38 <USBD_CDC_GetFSCfgDesc>:
  *         Return configuration descriptor
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_CDC_GetFSCfgDesc(uint16_t *length)
{
 8009b38:	b580      	push	{r7, lr}
 8009b3a:	b086      	sub	sp, #24
 8009b3c:	af00      	add	r7, sp, #0
 8009b3e:	6078      	str	r0, [r7, #4]
  USBD_EpDescTypeDef *pEpCmdDesc = USBD_GetEpDesc(USBD_CDC_CfgDesc, CDC_CMD_EP);
 8009b40:	2182      	movs	r1, #130	; 0x82
 8009b42:	4818      	ldr	r0, [pc, #96]	; (8009ba4 <USBD_CDC_GetFSCfgDesc+0x6c>)
 8009b44:	f000 fd4f 	bl	800a5e6 <USBD_GetEpDesc>
 8009b48:	6178      	str	r0, [r7, #20]
  USBD_EpDescTypeDef *pEpOutDesc = USBD_GetEpDesc(USBD_CDC_CfgDesc, CDC_OUT_EP);
 8009b4a:	2101      	movs	r1, #1
 8009b4c:	4815      	ldr	r0, [pc, #84]	; (8009ba4 <USBD_CDC_GetFSCfgDesc+0x6c>)
 8009b4e:	f000 fd4a 	bl	800a5e6 <USBD_GetEpDesc>
 8009b52:	6138      	str	r0, [r7, #16]
  USBD_EpDescTypeDef *pEpInDesc = USBD_GetEpDesc(USBD_CDC_CfgDesc, CDC_IN_EP);
 8009b54:	2181      	movs	r1, #129	; 0x81
 8009b56:	4813      	ldr	r0, [pc, #76]	; (8009ba4 <USBD_CDC_GetFSCfgDesc+0x6c>)
 8009b58:	f000 fd45 	bl	800a5e6 <USBD_GetEpDesc>
 8009b5c:	60f8      	str	r0, [r7, #12]

  if (pEpCmdDesc != NULL)
 8009b5e:	697b      	ldr	r3, [r7, #20]
 8009b60:	2b00      	cmp	r3, #0
 8009b62:	d002      	beq.n	8009b6a <USBD_CDC_GetFSCfgDesc+0x32>
  {
    pEpCmdDesc->bInterval = CDC_FS_BINTERVAL;
 8009b64:	697b      	ldr	r3, [r7, #20]
 8009b66:	2210      	movs	r2, #16
 8009b68:	719a      	strb	r2, [r3, #6]
  }

  if (pEpOutDesc != NULL)
 8009b6a:	693b      	ldr	r3, [r7, #16]
 8009b6c:	2b00      	cmp	r3, #0
 8009b6e:	d006      	beq.n	8009b7e <USBD_CDC_GetFSCfgDesc+0x46>
  {
    pEpOutDesc->wMaxPacketSize = CDC_DATA_FS_MAX_PACKET_SIZE;
 8009b70:	693b      	ldr	r3, [r7, #16]
 8009b72:	2200      	movs	r2, #0
 8009b74:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8009b78:	711a      	strb	r2, [r3, #4]
 8009b7a:	2200      	movs	r2, #0
 8009b7c:	715a      	strb	r2, [r3, #5]
  }

  if (pEpInDesc != NULL)
 8009b7e:	68fb      	ldr	r3, [r7, #12]
 8009b80:	2b00      	cmp	r3, #0
 8009b82:	d006      	beq.n	8009b92 <USBD_CDC_GetFSCfgDesc+0x5a>
  {
    pEpInDesc->wMaxPacketSize = CDC_DATA_FS_MAX_PACKET_SIZE;
 8009b84:	68fb      	ldr	r3, [r7, #12]
 8009b86:	2200      	movs	r2, #0
 8009b88:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8009b8c:	711a      	strb	r2, [r3, #4]
 8009b8e:	2200      	movs	r2, #0
 8009b90:	715a      	strb	r2, [r3, #5]
  }

  *length = (uint16_t)sizeof(USBD_CDC_CfgDesc);
 8009b92:	687b      	ldr	r3, [r7, #4]
 8009b94:	2243      	movs	r2, #67	; 0x43
 8009b96:	801a      	strh	r2, [r3, #0]
  return USBD_CDC_CfgDesc;
 8009b98:	4b02      	ldr	r3, [pc, #8]	; (8009ba4 <USBD_CDC_GetFSCfgDesc+0x6c>)
}
 8009b9a:	4618      	mov	r0, r3
 8009b9c:	3718      	adds	r7, #24
 8009b9e:	46bd      	mov	sp, r7
 8009ba0:	bd80      	pop	{r7, pc}
 8009ba2:	bf00      	nop
 8009ba4:	20000058 	.word	0x20000058

08009ba8 <USBD_CDC_GetHSCfgDesc>:
  *         Return configuration descriptor
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_CDC_GetHSCfgDesc(uint16_t *length)
{
 8009ba8:	b580      	push	{r7, lr}
 8009baa:	b086      	sub	sp, #24
 8009bac:	af00      	add	r7, sp, #0
 8009bae:	6078      	str	r0, [r7, #4]
  USBD_EpDescTypeDef *pEpCmdDesc = USBD_GetEpDesc(USBD_CDC_CfgDesc, CDC_CMD_EP);
 8009bb0:	2182      	movs	r1, #130	; 0x82
 8009bb2:	4818      	ldr	r0, [pc, #96]	; (8009c14 <USBD_CDC_GetHSCfgDesc+0x6c>)
 8009bb4:	f000 fd17 	bl	800a5e6 <USBD_GetEpDesc>
 8009bb8:	6178      	str	r0, [r7, #20]
  USBD_EpDescTypeDef *pEpOutDesc = USBD_GetEpDesc(USBD_CDC_CfgDesc, CDC_OUT_EP);
 8009bba:	2101      	movs	r1, #1
 8009bbc:	4815      	ldr	r0, [pc, #84]	; (8009c14 <USBD_CDC_GetHSCfgDesc+0x6c>)
 8009bbe:	f000 fd12 	bl	800a5e6 <USBD_GetEpDesc>
 8009bc2:	6138      	str	r0, [r7, #16]
  USBD_EpDescTypeDef *pEpInDesc = USBD_GetEpDesc(USBD_CDC_CfgDesc, CDC_IN_EP);
 8009bc4:	2181      	movs	r1, #129	; 0x81
 8009bc6:	4813      	ldr	r0, [pc, #76]	; (8009c14 <USBD_CDC_GetHSCfgDesc+0x6c>)
 8009bc8:	f000 fd0d 	bl	800a5e6 <USBD_GetEpDesc>
 8009bcc:	60f8      	str	r0, [r7, #12]

  if (pEpCmdDesc != NULL)
 8009bce:	697b      	ldr	r3, [r7, #20]
 8009bd0:	2b00      	cmp	r3, #0
 8009bd2:	d002      	beq.n	8009bda <USBD_CDC_GetHSCfgDesc+0x32>
  {
    pEpCmdDesc->bInterval = CDC_HS_BINTERVAL;
 8009bd4:	697b      	ldr	r3, [r7, #20]
 8009bd6:	2210      	movs	r2, #16
 8009bd8:	719a      	strb	r2, [r3, #6]
  }

  if (pEpOutDesc != NULL)
 8009bda:	693b      	ldr	r3, [r7, #16]
 8009bdc:	2b00      	cmp	r3, #0
 8009bde:	d006      	beq.n	8009bee <USBD_CDC_GetHSCfgDesc+0x46>
  {
    pEpOutDesc->wMaxPacketSize = CDC_DATA_HS_MAX_PACKET_SIZE;
 8009be0:	693b      	ldr	r3, [r7, #16]
 8009be2:	2200      	movs	r2, #0
 8009be4:	711a      	strb	r2, [r3, #4]
 8009be6:	2200      	movs	r2, #0
 8009be8:	f042 0202 	orr.w	r2, r2, #2
 8009bec:	715a      	strb	r2, [r3, #5]
  }

  if (pEpInDesc != NULL)
 8009bee:	68fb      	ldr	r3, [r7, #12]
 8009bf0:	2b00      	cmp	r3, #0
 8009bf2:	d006      	beq.n	8009c02 <USBD_CDC_GetHSCfgDesc+0x5a>
  {
    pEpInDesc->wMaxPacketSize = CDC_DATA_HS_MAX_PACKET_SIZE;
 8009bf4:	68fb      	ldr	r3, [r7, #12]
 8009bf6:	2200      	movs	r2, #0
 8009bf8:	711a      	strb	r2, [r3, #4]
 8009bfa:	2200      	movs	r2, #0
 8009bfc:	f042 0202 	orr.w	r2, r2, #2
 8009c00:	715a      	strb	r2, [r3, #5]
  }

  *length = (uint16_t)sizeof(USBD_CDC_CfgDesc);
 8009c02:	687b      	ldr	r3, [r7, #4]
 8009c04:	2243      	movs	r2, #67	; 0x43
 8009c06:	801a      	strh	r2, [r3, #0]
  return USBD_CDC_CfgDesc;
 8009c08:	4b02      	ldr	r3, [pc, #8]	; (8009c14 <USBD_CDC_GetHSCfgDesc+0x6c>)
}
 8009c0a:	4618      	mov	r0, r3
 8009c0c:	3718      	adds	r7, #24
 8009c0e:	46bd      	mov	sp, r7
 8009c10:	bd80      	pop	{r7, pc}
 8009c12:	bf00      	nop
 8009c14:	20000058 	.word	0x20000058

08009c18 <USBD_CDC_GetOtherSpeedCfgDesc>:
  *         Return configuration descriptor
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_CDC_GetOtherSpeedCfgDesc(uint16_t *length)
{
 8009c18:	b580      	push	{r7, lr}
 8009c1a:	b086      	sub	sp, #24
 8009c1c:	af00      	add	r7, sp, #0
 8009c1e:	6078      	str	r0, [r7, #4]
  USBD_EpDescTypeDef *pEpCmdDesc = USBD_GetEpDesc(USBD_CDC_CfgDesc, CDC_CMD_EP);
 8009c20:	2182      	movs	r1, #130	; 0x82
 8009c22:	4818      	ldr	r0, [pc, #96]	; (8009c84 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 8009c24:	f000 fcdf 	bl	800a5e6 <USBD_GetEpDesc>
 8009c28:	6178      	str	r0, [r7, #20]
  USBD_EpDescTypeDef *pEpOutDesc = USBD_GetEpDesc(USBD_CDC_CfgDesc, CDC_OUT_EP);
 8009c2a:	2101      	movs	r1, #1
 8009c2c:	4815      	ldr	r0, [pc, #84]	; (8009c84 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 8009c2e:	f000 fcda 	bl	800a5e6 <USBD_GetEpDesc>
 8009c32:	6138      	str	r0, [r7, #16]
  USBD_EpDescTypeDef *pEpInDesc = USBD_GetEpDesc(USBD_CDC_CfgDesc, CDC_IN_EP);
 8009c34:	2181      	movs	r1, #129	; 0x81
 8009c36:	4813      	ldr	r0, [pc, #76]	; (8009c84 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 8009c38:	f000 fcd5 	bl	800a5e6 <USBD_GetEpDesc>
 8009c3c:	60f8      	str	r0, [r7, #12]

  if (pEpCmdDesc != NULL)
 8009c3e:	697b      	ldr	r3, [r7, #20]
 8009c40:	2b00      	cmp	r3, #0
 8009c42:	d002      	beq.n	8009c4a <USBD_CDC_GetOtherSpeedCfgDesc+0x32>
  {
    pEpCmdDesc->bInterval = CDC_FS_BINTERVAL;
 8009c44:	697b      	ldr	r3, [r7, #20]
 8009c46:	2210      	movs	r2, #16
 8009c48:	719a      	strb	r2, [r3, #6]
  }

  if (pEpOutDesc != NULL)
 8009c4a:	693b      	ldr	r3, [r7, #16]
 8009c4c:	2b00      	cmp	r3, #0
 8009c4e:	d006      	beq.n	8009c5e <USBD_CDC_GetOtherSpeedCfgDesc+0x46>
  {
    pEpOutDesc->wMaxPacketSize = CDC_DATA_FS_MAX_PACKET_SIZE;
 8009c50:	693b      	ldr	r3, [r7, #16]
 8009c52:	2200      	movs	r2, #0
 8009c54:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8009c58:	711a      	strb	r2, [r3, #4]
 8009c5a:	2200      	movs	r2, #0
 8009c5c:	715a      	strb	r2, [r3, #5]
  }

  if (pEpInDesc != NULL)
 8009c5e:	68fb      	ldr	r3, [r7, #12]
 8009c60:	2b00      	cmp	r3, #0
 8009c62:	d006      	beq.n	8009c72 <USBD_CDC_GetOtherSpeedCfgDesc+0x5a>
  {
    pEpInDesc->wMaxPacketSize = CDC_DATA_FS_MAX_PACKET_SIZE;
 8009c64:	68fb      	ldr	r3, [r7, #12]
 8009c66:	2200      	movs	r2, #0
 8009c68:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8009c6c:	711a      	strb	r2, [r3, #4]
 8009c6e:	2200      	movs	r2, #0
 8009c70:	715a      	strb	r2, [r3, #5]
  }

  *length = (uint16_t)sizeof(USBD_CDC_CfgDesc);
 8009c72:	687b      	ldr	r3, [r7, #4]
 8009c74:	2243      	movs	r2, #67	; 0x43
 8009c76:	801a      	strh	r2, [r3, #0]
  return USBD_CDC_CfgDesc;
 8009c78:	4b02      	ldr	r3, [pc, #8]	; (8009c84 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
}
 8009c7a:	4618      	mov	r0, r3
 8009c7c:	3718      	adds	r7, #24
 8009c7e:	46bd      	mov	sp, r7
 8009c80:	bd80      	pop	{r7, pc}
 8009c82:	bf00      	nop
 8009c84:	20000058 	.word	0x20000058

08009c88 <USBD_CDC_GetDeviceQualifierDescriptor>:
  *         return Device Qualifier descriptor
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
uint8_t *USBD_CDC_GetDeviceQualifierDescriptor(uint16_t *length)
{
 8009c88:	b480      	push	{r7}
 8009c8a:	b083      	sub	sp, #12
 8009c8c:	af00      	add	r7, sp, #0
 8009c8e:	6078      	str	r0, [r7, #4]
  *length = (uint16_t)sizeof(USBD_CDC_DeviceQualifierDesc);
 8009c90:	687b      	ldr	r3, [r7, #4]
 8009c92:	220a      	movs	r2, #10
 8009c94:	801a      	strh	r2, [r3, #0]

  return USBD_CDC_DeviceQualifierDesc;
 8009c96:	4b03      	ldr	r3, [pc, #12]	; (8009ca4 <USBD_CDC_GetDeviceQualifierDescriptor+0x1c>)
}
 8009c98:	4618      	mov	r0, r3
 8009c9a:	370c      	adds	r7, #12
 8009c9c:	46bd      	mov	sp, r7
 8009c9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ca2:	4770      	bx	lr
 8009ca4:	20000014 	.word	0x20000014

08009ca8 <USBD_CDC_RegisterInterface>:
  * @param  fops: CD  Interface callback
  * @retval status
  */
uint8_t USBD_CDC_RegisterInterface(USBD_HandleTypeDef *pdev,
                                   USBD_CDC_ItfTypeDef *fops)
{
 8009ca8:	b480      	push	{r7}
 8009caa:	b083      	sub	sp, #12
 8009cac:	af00      	add	r7, sp, #0
 8009cae:	6078      	str	r0, [r7, #4]
 8009cb0:	6039      	str	r1, [r7, #0]
  if (fops == NULL)
 8009cb2:	683b      	ldr	r3, [r7, #0]
 8009cb4:	2b00      	cmp	r3, #0
 8009cb6:	d101      	bne.n	8009cbc <USBD_CDC_RegisterInterface+0x14>
  {
    return (uint8_t)USBD_FAIL;
 8009cb8:	2303      	movs	r3, #3
 8009cba:	e009      	b.n	8009cd0 <USBD_CDC_RegisterInterface+0x28>
  }

  pdev->pUserData[pdev->classId] = fops;
 8009cbc:	687b      	ldr	r3, [r7, #4]
 8009cbe:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8009cc2:	687a      	ldr	r2, [r7, #4]
 8009cc4:	33b0      	adds	r3, #176	; 0xb0
 8009cc6:	009b      	lsls	r3, r3, #2
 8009cc8:	4413      	add	r3, r2
 8009cca:	683a      	ldr	r2, [r7, #0]
 8009ccc:	605a      	str	r2, [r3, #4]

  return (uint8_t)USBD_OK;
 8009cce:	2300      	movs	r3, #0
}
 8009cd0:	4618      	mov	r0, r3
 8009cd2:	370c      	adds	r7, #12
 8009cd4:	46bd      	mov	sp, r7
 8009cd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cda:	4770      	bx	lr

08009cdc <USBD_CDC_SetTxBuffer>:
  * @param  length: Tx Buffer length
  * @retval status
  */
uint8_t USBD_CDC_SetTxBuffer(USBD_HandleTypeDef *pdev,
                             uint8_t *pbuff, uint32_t length)
{
 8009cdc:	b480      	push	{r7}
 8009cde:	b087      	sub	sp, #28
 8009ce0:	af00      	add	r7, sp, #0
 8009ce2:	60f8      	str	r0, [r7, #12]
 8009ce4:	60b9      	str	r1, [r7, #8]
 8009ce6:	607a      	str	r2, [r7, #4]
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009ce8:	68fb      	ldr	r3, [r7, #12]
 8009cea:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8009cee:	68fb      	ldr	r3, [r7, #12]
 8009cf0:	32b0      	adds	r2, #176	; 0xb0
 8009cf2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009cf6:	617b      	str	r3, [r7, #20]

  if (hcdc == NULL)
 8009cf8:	697b      	ldr	r3, [r7, #20]
 8009cfa:	2b00      	cmp	r3, #0
 8009cfc:	d101      	bne.n	8009d02 <USBD_CDC_SetTxBuffer+0x26>
  {
    return (uint8_t)USBD_FAIL;
 8009cfe:	2303      	movs	r3, #3
 8009d00:	e008      	b.n	8009d14 <USBD_CDC_SetTxBuffer+0x38>
  }

  hcdc->TxBuffer = pbuff;
 8009d02:	697b      	ldr	r3, [r7, #20]
 8009d04:	68ba      	ldr	r2, [r7, #8]
 8009d06:	f8c3 2208 	str.w	r2, [r3, #520]	; 0x208
  hcdc->TxLength = length;
 8009d0a:	697b      	ldr	r3, [r7, #20]
 8009d0c:	687a      	ldr	r2, [r7, #4]
 8009d0e:	f8c3 2210 	str.w	r2, [r3, #528]	; 0x210

  return (uint8_t)USBD_OK;
 8009d12:	2300      	movs	r3, #0
}
 8009d14:	4618      	mov	r0, r3
 8009d16:	371c      	adds	r7, #28
 8009d18:	46bd      	mov	sp, r7
 8009d1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d1e:	4770      	bx	lr

08009d20 <USBD_CDC_SetRxBuffer>:
  * @param  pdev: device instance
  * @param  pbuff: Rx Buffer
  * @retval status
  */
uint8_t USBD_CDC_SetRxBuffer(USBD_HandleTypeDef *pdev, uint8_t *pbuff)
{
 8009d20:	b480      	push	{r7}
 8009d22:	b085      	sub	sp, #20
 8009d24:	af00      	add	r7, sp, #0
 8009d26:	6078      	str	r0, [r7, #4]
 8009d28:	6039      	str	r1, [r7, #0]
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009d2a:	687b      	ldr	r3, [r7, #4]
 8009d2c:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8009d30:	687b      	ldr	r3, [r7, #4]
 8009d32:	32b0      	adds	r2, #176	; 0xb0
 8009d34:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009d38:	60fb      	str	r3, [r7, #12]

  if (hcdc == NULL)
 8009d3a:	68fb      	ldr	r3, [r7, #12]
 8009d3c:	2b00      	cmp	r3, #0
 8009d3e:	d101      	bne.n	8009d44 <USBD_CDC_SetRxBuffer+0x24>
  {
    return (uint8_t)USBD_FAIL;
 8009d40:	2303      	movs	r3, #3
 8009d42:	e004      	b.n	8009d4e <USBD_CDC_SetRxBuffer+0x2e>
  }

  hcdc->RxBuffer = pbuff;
 8009d44:	68fb      	ldr	r3, [r7, #12]
 8009d46:	683a      	ldr	r2, [r7, #0]
 8009d48:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204

  return (uint8_t)USBD_OK;
 8009d4c:	2300      	movs	r3, #0
}
 8009d4e:	4618      	mov	r0, r3
 8009d50:	3714      	adds	r7, #20
 8009d52:	46bd      	mov	sp, r7
 8009d54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d58:	4770      	bx	lr
	...

08009d5c <USBD_CDC_TransmitPacket>:
  *         Transmit packet on IN endpoint
  * @param  pdev: device instance
  * @retval status
  */
uint8_t USBD_CDC_TransmitPacket(USBD_HandleTypeDef *pdev)
{
 8009d5c:	b580      	push	{r7, lr}
 8009d5e:	b084      	sub	sp, #16
 8009d60:	af00      	add	r7, sp, #0
 8009d62:	6078      	str	r0, [r7, #4]
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009d64:	687b      	ldr	r3, [r7, #4]
 8009d66:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8009d6a:	687b      	ldr	r3, [r7, #4]
 8009d6c:	32b0      	adds	r2, #176	; 0xb0
 8009d6e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009d72:	60bb      	str	r3, [r7, #8]
  USBD_StatusTypeDef ret = USBD_BUSY;
 8009d74:	2301      	movs	r3, #1
 8009d76:	73fb      	strb	r3, [r7, #15]

#ifdef USE_USBD_COMPOSITE
  /* Get the Endpoints addresses allocated for this class instance */
  CDCInEpAdd  = USBD_CoreGetEPAdd(pdev, USBD_EP_IN, USBD_EP_TYPE_BULK);
#endif /* USE_USBD_COMPOSITE */
  if (pdev->pClassDataCmsit[pdev->classId] == NULL)
 8009d78:	687b      	ldr	r3, [r7, #4]
 8009d7a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8009d7e:	687b      	ldr	r3, [r7, #4]
 8009d80:	32b0      	adds	r2, #176	; 0xb0
 8009d82:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009d86:	2b00      	cmp	r3, #0
 8009d88:	d101      	bne.n	8009d8e <USBD_CDC_TransmitPacket+0x32>
  {
    return (uint8_t)USBD_FAIL;
 8009d8a:	2303      	movs	r3, #3
 8009d8c:	e025      	b.n	8009dda <USBD_CDC_TransmitPacket+0x7e>
  }

  if (hcdc->TxState == 0U)
 8009d8e:	68bb      	ldr	r3, [r7, #8]
 8009d90:	f8d3 3214 	ldr.w	r3, [r3, #532]	; 0x214
 8009d94:	2b00      	cmp	r3, #0
 8009d96:	d11f      	bne.n	8009dd8 <USBD_CDC_TransmitPacket+0x7c>
  {
    /* Tx Transfer in progress */
    hcdc->TxState = 1U;
 8009d98:	68bb      	ldr	r3, [r7, #8]
 8009d9a:	2201      	movs	r2, #1
 8009d9c:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214

    /* Update the packet total length */
    pdev->ep_in[CDCInEpAdd & 0xFU].total_length = hcdc->TxLength;
 8009da0:	4b10      	ldr	r3, [pc, #64]	; (8009de4 <USBD_CDC_TransmitPacket+0x88>)
 8009da2:	781b      	ldrb	r3, [r3, #0]
 8009da4:	f003 020f 	and.w	r2, r3, #15
 8009da8:	68bb      	ldr	r3, [r7, #8]
 8009daa:	f8d3 1210 	ldr.w	r1, [r3, #528]	; 0x210
 8009dae:	6878      	ldr	r0, [r7, #4]
 8009db0:	4613      	mov	r3, r2
 8009db2:	009b      	lsls	r3, r3, #2
 8009db4:	4413      	add	r3, r2
 8009db6:	009b      	lsls	r3, r3, #2
 8009db8:	4403      	add	r3, r0
 8009dba:	3318      	adds	r3, #24
 8009dbc:	6019      	str	r1, [r3, #0]

    /* Transmit next packet */
    (void)USBD_LL_Transmit(pdev, CDCInEpAdd, hcdc->TxBuffer, hcdc->TxLength);
 8009dbe:	4b09      	ldr	r3, [pc, #36]	; (8009de4 <USBD_CDC_TransmitPacket+0x88>)
 8009dc0:	7819      	ldrb	r1, [r3, #0]
 8009dc2:	68bb      	ldr	r3, [r7, #8]
 8009dc4:	f8d3 2208 	ldr.w	r2, [r3, #520]	; 0x208
 8009dc8:	68bb      	ldr	r3, [r7, #8]
 8009dca:	f8d3 3210 	ldr.w	r3, [r3, #528]	; 0x210
 8009dce:	6878      	ldr	r0, [r7, #4]
 8009dd0:	f002 fb73 	bl	800c4ba <USBD_LL_Transmit>

    ret = USBD_OK;
 8009dd4:	2300      	movs	r3, #0
 8009dd6:	73fb      	strb	r3, [r7, #15]
  }

  return (uint8_t)ret;
 8009dd8:	7bfb      	ldrb	r3, [r7, #15]
}
 8009dda:	4618      	mov	r0, r3
 8009ddc:	3710      	adds	r7, #16
 8009dde:	46bd      	mov	sp, r7
 8009de0:	bd80      	pop	{r7, pc}
 8009de2:	bf00      	nop
 8009de4:	2000009b 	.word	0x2000009b

08009de8 <USBD_CDC_ReceivePacket>:
  *         prepare OUT Endpoint for reception
  * @param  pdev: device instance
  * @retval status
  */
uint8_t USBD_CDC_ReceivePacket(USBD_HandleTypeDef *pdev)
{
 8009de8:	b580      	push	{r7, lr}
 8009dea:	b084      	sub	sp, #16
 8009dec:	af00      	add	r7, sp, #0
 8009dee:	6078      	str	r0, [r7, #4]
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009df0:	687b      	ldr	r3, [r7, #4]
 8009df2:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8009df6:	687b      	ldr	r3, [r7, #4]
 8009df8:	32b0      	adds	r2, #176	; 0xb0
 8009dfa:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009dfe:	60fb      	str	r3, [r7, #12]
#ifdef USE_USBD_COMPOSITE
  /* Get the Endpoints addresses allocated for this class instance */
  CDCOutEpAdd = USBD_CoreGetEPAdd(pdev, USBD_EP_OUT, USBD_EP_TYPE_BULK);
#endif /* USE_USBD_COMPOSITE */

  if (pdev->pClassDataCmsit[pdev->classId] == NULL)
 8009e00:	687b      	ldr	r3, [r7, #4]
 8009e02:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8009e06:	687b      	ldr	r3, [r7, #4]
 8009e08:	32b0      	adds	r2, #176	; 0xb0
 8009e0a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009e0e:	2b00      	cmp	r3, #0
 8009e10:	d101      	bne.n	8009e16 <USBD_CDC_ReceivePacket+0x2e>
  {
    return (uint8_t)USBD_FAIL;
 8009e12:	2303      	movs	r3, #3
 8009e14:	e018      	b.n	8009e48 <USBD_CDC_ReceivePacket+0x60>
  }

  if (pdev->dev_speed == USBD_SPEED_HIGH)
 8009e16:	687b      	ldr	r3, [r7, #4]
 8009e18:	7c1b      	ldrb	r3, [r3, #16]
 8009e1a:	2b00      	cmp	r3, #0
 8009e1c:	d10a      	bne.n	8009e34 <USBD_CDC_ReceivePacket+0x4c>
  {
    /* Prepare Out endpoint to receive next packet */
    (void)USBD_LL_PrepareReceive(pdev, CDCOutEpAdd, hcdc->RxBuffer,
 8009e1e:	4b0c      	ldr	r3, [pc, #48]	; (8009e50 <USBD_CDC_ReceivePacket+0x68>)
 8009e20:	7819      	ldrb	r1, [r3, #0]
 8009e22:	68fb      	ldr	r3, [r7, #12]
 8009e24:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8009e28:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009e2c:	6878      	ldr	r0, [r7, #4]
 8009e2e:	f002 fb65 	bl	800c4fc <USBD_LL_PrepareReceive>
 8009e32:	e008      	b.n	8009e46 <USBD_CDC_ReceivePacket+0x5e>
                                 CDC_DATA_HS_OUT_PACKET_SIZE);
  }
  else
  {
    /* Prepare Out endpoint to receive next packet */
    (void)USBD_LL_PrepareReceive(pdev, CDCOutEpAdd, hcdc->RxBuffer,
 8009e34:	4b06      	ldr	r3, [pc, #24]	; (8009e50 <USBD_CDC_ReceivePacket+0x68>)
 8009e36:	7819      	ldrb	r1, [r3, #0]
 8009e38:	68fb      	ldr	r3, [r7, #12]
 8009e3a:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8009e3e:	2340      	movs	r3, #64	; 0x40
 8009e40:	6878      	ldr	r0, [r7, #4]
 8009e42:	f002 fb5b 	bl	800c4fc <USBD_LL_PrepareReceive>
                                 CDC_DATA_FS_OUT_PACKET_SIZE);
  }

  return (uint8_t)USBD_OK;
 8009e46:	2300      	movs	r3, #0
}
 8009e48:	4618      	mov	r0, r3
 8009e4a:	3710      	adds	r7, #16
 8009e4c:	46bd      	mov	sp, r7
 8009e4e:	bd80      	pop	{r7, pc}
 8009e50:	2000009c 	.word	0x2000009c

08009e54 <USBD_Init>:
  * @param  id: Low level core index
  * @retval None
  */
USBD_StatusTypeDef USBD_Init(USBD_HandleTypeDef *pdev,
                             USBD_DescriptorsTypeDef *pdesc, uint8_t id)
{
 8009e54:	b580      	push	{r7, lr}
 8009e56:	b086      	sub	sp, #24
 8009e58:	af00      	add	r7, sp, #0
 8009e5a:	60f8      	str	r0, [r7, #12]
 8009e5c:	60b9      	str	r1, [r7, #8]
 8009e5e:	4613      	mov	r3, r2
 8009e60:	71fb      	strb	r3, [r7, #7]
  USBD_StatusTypeDef ret;

  /* Check whether the USB Host handle is valid */
  if (pdev == NULL)
 8009e62:	68fb      	ldr	r3, [r7, #12]
 8009e64:	2b00      	cmp	r3, #0
 8009e66:	d101      	bne.n	8009e6c <USBD_Init+0x18>
  {
#if (USBD_DEBUG_LEVEL > 1U)
    USBD_ErrLog("Invalid Device handle");
#endif /* (USBD_DEBUG_LEVEL > 1U) */
    return USBD_FAIL;
 8009e68:	2303      	movs	r3, #3
 8009e6a:	e01f      	b.n	8009eac <USBD_Init+0x58>
    pdev->NumClasses = 0;
    pdev->classId = 0;
  }
#else
  /* Unlink previous class*/
  pdev->pClass[0] = NULL;
 8009e6c:	68fb      	ldr	r3, [r7, #12]
 8009e6e:	2200      	movs	r2, #0
 8009e70:	f8c3 22b8 	str.w	r2, [r3, #696]	; 0x2b8
  pdev->pUserData[0] = NULL;
 8009e74:	68fb      	ldr	r3, [r7, #12]
 8009e76:	2200      	movs	r2, #0
 8009e78:	f8c3 22c4 	str.w	r2, [r3, #708]	; 0x2c4
#endif /* USE_USBD_COMPOSITE */

  pdev->pConfDesc = NULL;
 8009e7c:	68fb      	ldr	r3, [r7, #12]
 8009e7e:	2200      	movs	r2, #0
 8009e80:	f8c3 22d0 	str.w	r2, [r3, #720]	; 0x2d0

  /* Assign USBD Descriptors */
  if (pdesc != NULL)
 8009e84:	68bb      	ldr	r3, [r7, #8]
 8009e86:	2b00      	cmp	r3, #0
 8009e88:	d003      	beq.n	8009e92 <USBD_Init+0x3e>
  {
    pdev->pDesc = pdesc;
 8009e8a:	68fb      	ldr	r3, [r7, #12]
 8009e8c:	68ba      	ldr	r2, [r7, #8]
 8009e8e:	f8c3 22b4 	str.w	r2, [r3, #692]	; 0x2b4
  }

  /* Set Device initial State */
  pdev->dev_state = USBD_STATE_DEFAULT;
 8009e92:	68fb      	ldr	r3, [r7, #12]
 8009e94:	2201      	movs	r2, #1
 8009e96:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
  pdev->id = id;
 8009e9a:	68fb      	ldr	r3, [r7, #12]
 8009e9c:	79fa      	ldrb	r2, [r7, #7]
 8009e9e:	701a      	strb	r2, [r3, #0]

  /* Initialize low level driver */
  ret = USBD_LL_Init(pdev);
 8009ea0:	68f8      	ldr	r0, [r7, #12]
 8009ea2:	f002 f9d5 	bl	800c250 <USBD_LL_Init>
 8009ea6:	4603      	mov	r3, r0
 8009ea8:	75fb      	strb	r3, [r7, #23]

  return ret;
 8009eaa:	7dfb      	ldrb	r3, [r7, #23]
}
 8009eac:	4618      	mov	r0, r3
 8009eae:	3718      	adds	r7, #24
 8009eb0:	46bd      	mov	sp, r7
 8009eb2:	bd80      	pop	{r7, pc}

08009eb4 <USBD_RegisterClass>:
  * @param  pDevice : Device Handle
  * @param  pclass: Class handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_RegisterClass(USBD_HandleTypeDef *pdev, USBD_ClassTypeDef *pclass)
{
 8009eb4:	b580      	push	{r7, lr}
 8009eb6:	b084      	sub	sp, #16
 8009eb8:	af00      	add	r7, sp, #0
 8009eba:	6078      	str	r0, [r7, #4]
 8009ebc:	6039      	str	r1, [r7, #0]
  uint16_t len = 0U;
 8009ebe:	2300      	movs	r3, #0
 8009ec0:	81fb      	strh	r3, [r7, #14]

  if (pclass == NULL)
 8009ec2:	683b      	ldr	r3, [r7, #0]
 8009ec4:	2b00      	cmp	r3, #0
 8009ec6:	d101      	bne.n	8009ecc <USBD_RegisterClass+0x18>
  {
#if (USBD_DEBUG_LEVEL > 1U)
    USBD_ErrLog("Invalid Class handle");
#endif /* (USBD_DEBUG_LEVEL > 1U) */
    return USBD_FAIL;
 8009ec8:	2303      	movs	r3, #3
 8009eca:	e025      	b.n	8009f18 <USBD_RegisterClass+0x64>
  }

  /* link the class to the USB Device handle */
  pdev->pClass[0] = pclass;
 8009ecc:	687b      	ldr	r3, [r7, #4]
 8009ece:	683a      	ldr	r2, [r7, #0]
 8009ed0:	f8c3 22b8 	str.w	r2, [r3, #696]	; 0x2b8
  if (pdev->pClass[pdev->classId]->GetHSConfigDescriptor != NULL)
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetHSConfigDescriptor(&len);
  }
#else /* Default USE_USB_FS */
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
 8009ed4:	687b      	ldr	r3, [r7, #4]
 8009ed6:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8009eda:	687b      	ldr	r3, [r7, #4]
 8009edc:	32ae      	adds	r2, #174	; 0xae
 8009ede:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009ee2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009ee4:	2b00      	cmp	r3, #0
 8009ee6:	d00f      	beq.n	8009f08 <USBD_RegisterClass+0x54>
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetFSConfigDescriptor(&len);
 8009ee8:	687b      	ldr	r3, [r7, #4]
 8009eea:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8009eee:	687b      	ldr	r3, [r7, #4]
 8009ef0:	32ae      	adds	r2, #174	; 0xae
 8009ef2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009ef6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009ef8:	f107 020e 	add.w	r2, r7, #14
 8009efc:	4610      	mov	r0, r2
 8009efe:	4798      	blx	r3
 8009f00:	4602      	mov	r2, r0
 8009f02:	687b      	ldr	r3, [r7, #4]
 8009f04:	f8c3 22d0 	str.w	r2, [r3, #720]	; 0x2d0
  }
#endif /* USE_USB_FS */

  /* Increment the NumClasses */
  pdev->NumClasses ++;
 8009f08:	687b      	ldr	r3, [r7, #4]
 8009f0a:	f8d3 32d8 	ldr.w	r3, [r3, #728]	; 0x2d8
 8009f0e:	1c5a      	adds	r2, r3, #1
 8009f10:	687b      	ldr	r3, [r7, #4]
 8009f12:	f8c3 22d8 	str.w	r2, [r3, #728]	; 0x2d8

  return USBD_OK;
 8009f16:	2300      	movs	r3, #0
}
 8009f18:	4618      	mov	r0, r3
 8009f1a:	3710      	adds	r7, #16
 8009f1c:	46bd      	mov	sp, r7
 8009f1e:	bd80      	pop	{r7, pc}

08009f20 <USBD_Start>:
  *         Start the USB Device Core.
  * @param  pdev: Device Handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_Start(USBD_HandleTypeDef *pdev)
{
 8009f20:	b580      	push	{r7, lr}
 8009f22:	b082      	sub	sp, #8
 8009f24:	af00      	add	r7, sp, #0
 8009f26:	6078      	str	r0, [r7, #4]
#ifdef USE_USBD_COMPOSITE
  pdev->classId = 0U;
#endif /* USE_USBD_COMPOSITE */

  /* Start the low level driver  */
  return USBD_LL_Start(pdev);
 8009f28:	6878      	ldr	r0, [r7, #4]
 8009f2a:	f002 f9dd 	bl	800c2e8 <USBD_LL_Start>
 8009f2e:	4603      	mov	r3, r0
}
 8009f30:	4618      	mov	r0, r3
 8009f32:	3708      	adds	r7, #8
 8009f34:	46bd      	mov	sp, r7
 8009f36:	bd80      	pop	{r7, pc}

08009f38 <USBD_RunTestMode>:
  *         Launch test mode process
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_RunTestMode(USBD_HandleTypeDef *pdev)
{
 8009f38:	b480      	push	{r7}
 8009f3a:	b083      	sub	sp, #12
 8009f3c:	af00      	add	r7, sp, #0
 8009f3e:	6078      	str	r0, [r7, #4]
  return ret;
#else
  /* Prevent unused argument compilation warning */
  UNUSED(pdev);

  return USBD_OK;
 8009f40:	2300      	movs	r3, #0
#endif /* USBD_HS_TESTMODE_ENABLE */
}
 8009f42:	4618      	mov	r0, r3
 8009f44:	370c      	adds	r7, #12
 8009f46:	46bd      	mov	sp, r7
 8009f48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f4c:	4770      	bx	lr

08009f4e <USBD_SetClassConfig>:
  * @param  cfgidx: configuration index
  * @retval status
  */

USBD_StatusTypeDef USBD_SetClassConfig(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 8009f4e:	b580      	push	{r7, lr}
 8009f50:	b084      	sub	sp, #16
 8009f52:	af00      	add	r7, sp, #0
 8009f54:	6078      	str	r0, [r7, #4]
 8009f56:	460b      	mov	r3, r1
 8009f58:	70fb      	strb	r3, [r7, #3]
  USBD_StatusTypeDef ret = USBD_OK;
 8009f5a:	2300      	movs	r3, #0
 8009f5c:	73fb      	strb	r3, [r7, #15]
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
 8009f5e:	687b      	ldr	r3, [r7, #4]
 8009f60:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8009f64:	2b00      	cmp	r3, #0
 8009f66:	d009      	beq.n	8009f7c <USBD_SetClassConfig+0x2e>
  {
    /* Set configuration and Start the Class */
    ret = (USBD_StatusTypeDef)pdev->pClass[0]->Init(pdev, cfgidx);
 8009f68:	687b      	ldr	r3, [r7, #4]
 8009f6a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8009f6e:	681b      	ldr	r3, [r3, #0]
 8009f70:	78fa      	ldrb	r2, [r7, #3]
 8009f72:	4611      	mov	r1, r2
 8009f74:	6878      	ldr	r0, [r7, #4]
 8009f76:	4798      	blx	r3
 8009f78:	4603      	mov	r3, r0
 8009f7a:	73fb      	strb	r3, [r7, #15]
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
 8009f7c:	7bfb      	ldrb	r3, [r7, #15]
}
 8009f7e:	4618      	mov	r0, r3
 8009f80:	3710      	adds	r7, #16
 8009f82:	46bd      	mov	sp, r7
 8009f84:	bd80      	pop	{r7, pc}

08009f86 <USBD_ClrClassConfig>:
  * @param  pdev: device instance
  * @param  cfgidx: configuration index
  * @retval status: USBD_StatusTypeDef
  */
USBD_StatusTypeDef USBD_ClrClassConfig(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 8009f86:	b580      	push	{r7, lr}
 8009f88:	b084      	sub	sp, #16
 8009f8a:	af00      	add	r7, sp, #0
 8009f8c:	6078      	str	r0, [r7, #4]
 8009f8e:	460b      	mov	r3, r1
 8009f90:	70fb      	strb	r3, [r7, #3]
  USBD_StatusTypeDef ret = USBD_OK;
 8009f92:	2300      	movs	r3, #0
 8009f94:	73fb      	strb	r3, [r7, #15]
      }
    }
  }
#else
  /* Clear configuration  and De-initialize the Class process */
  if (pdev->pClass[0]->DeInit(pdev, cfgidx) != 0U)
 8009f96:	687b      	ldr	r3, [r7, #4]
 8009f98:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8009f9c:	685b      	ldr	r3, [r3, #4]
 8009f9e:	78fa      	ldrb	r2, [r7, #3]
 8009fa0:	4611      	mov	r1, r2
 8009fa2:	6878      	ldr	r0, [r7, #4]
 8009fa4:	4798      	blx	r3
 8009fa6:	4603      	mov	r3, r0
 8009fa8:	2b00      	cmp	r3, #0
 8009faa:	d001      	beq.n	8009fb0 <USBD_ClrClassConfig+0x2a>
  {
    ret = USBD_FAIL;
 8009fac:	2303      	movs	r3, #3
 8009fae:	73fb      	strb	r3, [r7, #15]
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
 8009fb0:	7bfb      	ldrb	r3, [r7, #15]
}
 8009fb2:	4618      	mov	r0, r3
 8009fb4:	3710      	adds	r7, #16
 8009fb6:	46bd      	mov	sp, r7
 8009fb8:	bd80      	pop	{r7, pc}

08009fba <USBD_LL_SetupStage>:
  *         Handle the setup stage
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetupStage(USBD_HandleTypeDef *pdev, uint8_t *psetup)
{
 8009fba:	b580      	push	{r7, lr}
 8009fbc:	b084      	sub	sp, #16
 8009fbe:	af00      	add	r7, sp, #0
 8009fc0:	6078      	str	r0, [r7, #4]
 8009fc2:	6039      	str	r1, [r7, #0]
  USBD_StatusTypeDef ret;

  USBD_ParseSetupRequest(&pdev->request, psetup);
 8009fc4:	687b      	ldr	r3, [r7, #4]
 8009fc6:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 8009fca:	6839      	ldr	r1, [r7, #0]
 8009fcc:	4618      	mov	r0, r3
 8009fce:	f001 f908 	bl	800b1e2 <USBD_ParseSetupRequest>

  pdev->ep0_state = USBD_EP0_SETUP;
 8009fd2:	687b      	ldr	r3, [r7, #4]
 8009fd4:	2201      	movs	r2, #1
 8009fd6:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294

  pdev->ep0_data_len = pdev->request.wLength;
 8009fda:	687b      	ldr	r3, [r7, #4]
 8009fdc:	f8b3 32b0 	ldrh.w	r3, [r3, #688]	; 0x2b0
 8009fe0:	461a      	mov	r2, r3
 8009fe2:	687b      	ldr	r3, [r7, #4]
 8009fe4:	f8c3 2298 	str.w	r2, [r3, #664]	; 0x298

  switch (pdev->request.bmRequest & 0x1FU)
 8009fe8:	687b      	ldr	r3, [r7, #4]
 8009fea:	f893 32aa 	ldrb.w	r3, [r3, #682]	; 0x2aa
 8009fee:	f003 031f 	and.w	r3, r3, #31
 8009ff2:	2b02      	cmp	r3, #2
 8009ff4:	d01a      	beq.n	800a02c <USBD_LL_SetupStage+0x72>
 8009ff6:	2b02      	cmp	r3, #2
 8009ff8:	d822      	bhi.n	800a040 <USBD_LL_SetupStage+0x86>
 8009ffa:	2b00      	cmp	r3, #0
 8009ffc:	d002      	beq.n	800a004 <USBD_LL_SetupStage+0x4a>
 8009ffe:	2b01      	cmp	r3, #1
 800a000:	d00a      	beq.n	800a018 <USBD_LL_SetupStage+0x5e>
 800a002:	e01d      	b.n	800a040 <USBD_LL_SetupStage+0x86>
  {
    case USB_REQ_RECIPIENT_DEVICE:
      ret = USBD_StdDevReq(pdev, &pdev->request);
 800a004:	687b      	ldr	r3, [r7, #4]
 800a006:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 800a00a:	4619      	mov	r1, r3
 800a00c:	6878      	ldr	r0, [r7, #4]
 800a00e:	f000 fb5f 	bl	800a6d0 <USBD_StdDevReq>
 800a012:	4603      	mov	r3, r0
 800a014:	73fb      	strb	r3, [r7, #15]
      break;
 800a016:	e020      	b.n	800a05a <USBD_LL_SetupStage+0xa0>

    case USB_REQ_RECIPIENT_INTERFACE:
      ret = USBD_StdItfReq(pdev, &pdev->request);
 800a018:	687b      	ldr	r3, [r7, #4]
 800a01a:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 800a01e:	4619      	mov	r1, r3
 800a020:	6878      	ldr	r0, [r7, #4]
 800a022:	f000 fbc7 	bl	800a7b4 <USBD_StdItfReq>
 800a026:	4603      	mov	r3, r0
 800a028:	73fb      	strb	r3, [r7, #15]
      break;
 800a02a:	e016      	b.n	800a05a <USBD_LL_SetupStage+0xa0>

    case USB_REQ_RECIPIENT_ENDPOINT:
      ret = USBD_StdEPReq(pdev, &pdev->request);
 800a02c:	687b      	ldr	r3, [r7, #4]
 800a02e:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 800a032:	4619      	mov	r1, r3
 800a034:	6878      	ldr	r0, [r7, #4]
 800a036:	f000 fc29 	bl	800a88c <USBD_StdEPReq>
 800a03a:	4603      	mov	r3, r0
 800a03c:	73fb      	strb	r3, [r7, #15]
      break;
 800a03e:	e00c      	b.n	800a05a <USBD_LL_SetupStage+0xa0>

    default:
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 800a040:	687b      	ldr	r3, [r7, #4]
 800a042:	f893 32aa 	ldrb.w	r3, [r3, #682]	; 0x2aa
 800a046:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800a04a:	b2db      	uxtb	r3, r3
 800a04c:	4619      	mov	r1, r3
 800a04e:	6878      	ldr	r0, [r7, #4]
 800a050:	f002 f9aa 	bl	800c3a8 <USBD_LL_StallEP>
 800a054:	4603      	mov	r3, r0
 800a056:	73fb      	strb	r3, [r7, #15]
      break;
 800a058:	bf00      	nop
  }

  return ret;
 800a05a:	7bfb      	ldrb	r3, [r7, #15]
}
 800a05c:	4618      	mov	r0, r3
 800a05e:	3710      	adds	r7, #16
 800a060:	46bd      	mov	sp, r7
 800a062:	bd80      	pop	{r7, pc}

0800a064 <USBD_LL_DataOutStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataOutStage(USBD_HandleTypeDef *pdev,
                                        uint8_t epnum, uint8_t *pdata)
{
 800a064:	b580      	push	{r7, lr}
 800a066:	b086      	sub	sp, #24
 800a068:	af00      	add	r7, sp, #0
 800a06a:	60f8      	str	r0, [r7, #12]
 800a06c:	460b      	mov	r3, r1
 800a06e:	607a      	str	r2, [r7, #4]
 800a070:	72fb      	strb	r3, [r7, #11]
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret = USBD_OK;
 800a072:	2300      	movs	r3, #0
 800a074:	75fb      	strb	r3, [r7, #23]
  uint8_t idx;

  if (epnum == 0U)
 800a076:	7afb      	ldrb	r3, [r7, #11]
 800a078:	2b00      	cmp	r3, #0
 800a07a:	d16e      	bne.n	800a15a <USBD_LL_DataOutStage+0xf6>
  {
    pep = &pdev->ep_out[0];
 800a07c:	68fb      	ldr	r3, [r7, #12]
 800a07e:	f503 73aa 	add.w	r3, r3, #340	; 0x154
 800a082:	613b      	str	r3, [r7, #16]

    if (pdev->ep0_state == USBD_EP0_DATA_OUT)
 800a084:	68fb      	ldr	r3, [r7, #12]
 800a086:	f8d3 3294 	ldr.w	r3, [r3, #660]	; 0x294
 800a08a:	2b03      	cmp	r3, #3
 800a08c:	f040 8098 	bne.w	800a1c0 <USBD_LL_DataOutStage+0x15c>
    {
      if (pep->rem_length > pep->maxpacket)
 800a090:	693b      	ldr	r3, [r7, #16]
 800a092:	689a      	ldr	r2, [r3, #8]
 800a094:	693b      	ldr	r3, [r7, #16]
 800a096:	68db      	ldr	r3, [r3, #12]
 800a098:	429a      	cmp	r2, r3
 800a09a:	d913      	bls.n	800a0c4 <USBD_LL_DataOutStage+0x60>
      {
        pep->rem_length -= pep->maxpacket;
 800a09c:	693b      	ldr	r3, [r7, #16]
 800a09e:	689a      	ldr	r2, [r3, #8]
 800a0a0:	693b      	ldr	r3, [r7, #16]
 800a0a2:	68db      	ldr	r3, [r3, #12]
 800a0a4:	1ad2      	subs	r2, r2, r3
 800a0a6:	693b      	ldr	r3, [r7, #16]
 800a0a8:	609a      	str	r2, [r3, #8]

        (void)USBD_CtlContinueRx(pdev, pdata, MIN(pep->rem_length, pep->maxpacket));
 800a0aa:	693b      	ldr	r3, [r7, #16]
 800a0ac:	68da      	ldr	r2, [r3, #12]
 800a0ae:	693b      	ldr	r3, [r7, #16]
 800a0b0:	689b      	ldr	r3, [r3, #8]
 800a0b2:	4293      	cmp	r3, r2
 800a0b4:	bf28      	it	cs
 800a0b6:	4613      	movcs	r3, r2
 800a0b8:	461a      	mov	r2, r3
 800a0ba:	6879      	ldr	r1, [r7, #4]
 800a0bc:	68f8      	ldr	r0, [r7, #12]
 800a0be:	f001 f984 	bl	800b3ca <USBD_CtlContinueRx>
 800a0c2:	e07d      	b.n	800a1c0 <USBD_LL_DataOutStage+0x15c>
      }
      else
      {
        /* Find the class ID relative to the current request */
        switch (pdev->request.bmRequest & 0x1FU)
 800a0c4:	68fb      	ldr	r3, [r7, #12]
 800a0c6:	f893 32aa 	ldrb.w	r3, [r3, #682]	; 0x2aa
 800a0ca:	f003 031f 	and.w	r3, r3, #31
 800a0ce:	2b02      	cmp	r3, #2
 800a0d0:	d014      	beq.n	800a0fc <USBD_LL_DataOutStage+0x98>
 800a0d2:	2b02      	cmp	r3, #2
 800a0d4:	d81d      	bhi.n	800a112 <USBD_LL_DataOutStage+0xae>
 800a0d6:	2b00      	cmp	r3, #0
 800a0d8:	d002      	beq.n	800a0e0 <USBD_LL_DataOutStage+0x7c>
 800a0da:	2b01      	cmp	r3, #1
 800a0dc:	d003      	beq.n	800a0e6 <USBD_LL_DataOutStage+0x82>
 800a0de:	e018      	b.n	800a112 <USBD_LL_DataOutStage+0xae>
        {
          case USB_REQ_RECIPIENT_DEVICE:
            /* Device requests must be managed by the first instantiated class
               (or duplicated by all classes for simplicity) */
            idx = 0U;
 800a0e0:	2300      	movs	r3, #0
 800a0e2:	75bb      	strb	r3, [r7, #22]
            break;
 800a0e4:	e018      	b.n	800a118 <USBD_LL_DataOutStage+0xb4>

          case USB_REQ_RECIPIENT_INTERFACE:
            idx = USBD_CoreFindIF(pdev, LOBYTE(pdev->request.wIndex));
 800a0e6:	68fb      	ldr	r3, [r7, #12]
 800a0e8:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	; 0x2ae
 800a0ec:	b2db      	uxtb	r3, r3
 800a0ee:	4619      	mov	r1, r3
 800a0f0:	68f8      	ldr	r0, [r7, #12]
 800a0f2:	f000 fa5e 	bl	800a5b2 <USBD_CoreFindIF>
 800a0f6:	4603      	mov	r3, r0
 800a0f8:	75bb      	strb	r3, [r7, #22]
            break;
 800a0fa:	e00d      	b.n	800a118 <USBD_LL_DataOutStage+0xb4>

          case USB_REQ_RECIPIENT_ENDPOINT:
            idx = USBD_CoreFindEP(pdev, LOBYTE(pdev->request.wIndex));
 800a0fc:	68fb      	ldr	r3, [r7, #12]
 800a0fe:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	; 0x2ae
 800a102:	b2db      	uxtb	r3, r3
 800a104:	4619      	mov	r1, r3
 800a106:	68f8      	ldr	r0, [r7, #12]
 800a108:	f000 fa60 	bl	800a5cc <USBD_CoreFindEP>
 800a10c:	4603      	mov	r3, r0
 800a10e:	75bb      	strb	r3, [r7, #22]
            break;
 800a110:	e002      	b.n	800a118 <USBD_LL_DataOutStage+0xb4>

          default:
            /* Back to the first class in case of doubt */
            idx = 0U;
 800a112:	2300      	movs	r3, #0
 800a114:	75bb      	strb	r3, [r7, #22]
            break;
 800a116:	bf00      	nop
        }

        if (idx < USBD_MAX_SUPPORTED_CLASS)
 800a118:	7dbb      	ldrb	r3, [r7, #22]
 800a11a:	2b00      	cmp	r3, #0
 800a11c:	d119      	bne.n	800a152 <USBD_LL_DataOutStage+0xee>
        {
          /* Setup the class ID and route the request to the relative class function */
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a11e:	68fb      	ldr	r3, [r7, #12]
 800a120:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800a124:	b2db      	uxtb	r3, r3
 800a126:	2b03      	cmp	r3, #3
 800a128:	d113      	bne.n	800a152 <USBD_LL_DataOutStage+0xee>
          {
            if (pdev->pClass[idx]->EP0_RxReady != NULL)
 800a12a:	7dba      	ldrb	r2, [r7, #22]
 800a12c:	68fb      	ldr	r3, [r7, #12]
 800a12e:	32ae      	adds	r2, #174	; 0xae
 800a130:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a134:	691b      	ldr	r3, [r3, #16]
 800a136:	2b00      	cmp	r3, #0
 800a138:	d00b      	beq.n	800a152 <USBD_LL_DataOutStage+0xee>
            {
              pdev->classId = idx;
 800a13a:	7dba      	ldrb	r2, [r7, #22]
 800a13c:	68fb      	ldr	r3, [r7, #12]
 800a13e:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
              pdev->pClass[idx]->EP0_RxReady(pdev);
 800a142:	7dba      	ldrb	r2, [r7, #22]
 800a144:	68fb      	ldr	r3, [r7, #12]
 800a146:	32ae      	adds	r2, #174	; 0xae
 800a148:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a14c:	691b      	ldr	r3, [r3, #16]
 800a14e:	68f8      	ldr	r0, [r7, #12]
 800a150:	4798      	blx	r3
            }
          }
        }

        (void)USBD_CtlSendStatus(pdev);
 800a152:	68f8      	ldr	r0, [r7, #12]
 800a154:	f001 f94a 	bl	800b3ec <USBD_CtlSendStatus>
 800a158:	e032      	b.n	800a1c0 <USBD_LL_DataOutStage+0x15c>
    }
  }
  else
  {
    /* Get the class index relative to this interface */
    idx = USBD_CoreFindEP(pdev, (epnum & 0x7FU));
 800a15a:	7afb      	ldrb	r3, [r7, #11]
 800a15c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a160:	b2db      	uxtb	r3, r3
 800a162:	4619      	mov	r1, r3
 800a164:	68f8      	ldr	r0, [r7, #12]
 800a166:	f000 fa31 	bl	800a5cc <USBD_CoreFindEP>
 800a16a:	4603      	mov	r3, r0
 800a16c:	75bb      	strb	r3, [r7, #22]

    if (((uint16_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 800a16e:	7dbb      	ldrb	r3, [r7, #22]
 800a170:	2bff      	cmp	r3, #255	; 0xff
 800a172:	d025      	beq.n	800a1c0 <USBD_LL_DataOutStage+0x15c>
 800a174:	7dbb      	ldrb	r3, [r7, #22]
 800a176:	2b00      	cmp	r3, #0
 800a178:	d122      	bne.n	800a1c0 <USBD_LL_DataOutStage+0x15c>
    {
      /* Call the class data out function to manage the request */
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a17a:	68fb      	ldr	r3, [r7, #12]
 800a17c:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800a180:	b2db      	uxtb	r3, r3
 800a182:	2b03      	cmp	r3, #3
 800a184:	d117      	bne.n	800a1b6 <USBD_LL_DataOutStage+0x152>
      {
        if (pdev->pClass[idx]->DataOut != NULL)
 800a186:	7dba      	ldrb	r2, [r7, #22]
 800a188:	68fb      	ldr	r3, [r7, #12]
 800a18a:	32ae      	adds	r2, #174	; 0xae
 800a18c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a190:	699b      	ldr	r3, [r3, #24]
 800a192:	2b00      	cmp	r3, #0
 800a194:	d00f      	beq.n	800a1b6 <USBD_LL_DataOutStage+0x152>
        {
          pdev->classId = idx;
 800a196:	7dba      	ldrb	r2, [r7, #22]
 800a198:	68fb      	ldr	r3, [r7, #12]
 800a19a:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataOut(pdev, epnum);
 800a19e:	7dba      	ldrb	r2, [r7, #22]
 800a1a0:	68fb      	ldr	r3, [r7, #12]
 800a1a2:	32ae      	adds	r2, #174	; 0xae
 800a1a4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a1a8:	699b      	ldr	r3, [r3, #24]
 800a1aa:	7afa      	ldrb	r2, [r7, #11]
 800a1ac:	4611      	mov	r1, r2
 800a1ae:	68f8      	ldr	r0, [r7, #12]
 800a1b0:	4798      	blx	r3
 800a1b2:	4603      	mov	r3, r0
 800a1b4:	75fb      	strb	r3, [r7, #23]
        }
      }
      if (ret != USBD_OK)
 800a1b6:	7dfb      	ldrb	r3, [r7, #23]
 800a1b8:	2b00      	cmp	r3, #0
 800a1ba:	d001      	beq.n	800a1c0 <USBD_LL_DataOutStage+0x15c>
      {
        return ret;
 800a1bc:	7dfb      	ldrb	r3, [r7, #23]
 800a1be:	e000      	b.n	800a1c2 <USBD_LL_DataOutStage+0x15e>
      }
    }
  }

  return USBD_OK;
 800a1c0:	2300      	movs	r3, #0
}
 800a1c2:	4618      	mov	r0, r3
 800a1c4:	3718      	adds	r7, #24
 800a1c6:	46bd      	mov	sp, r7
 800a1c8:	bd80      	pop	{r7, pc}

0800a1ca <USBD_LL_DataInStage>:
  * @param  epnum: endpoint index
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataInStage(USBD_HandleTypeDef *pdev,
                                       uint8_t epnum, uint8_t *pdata)
{
 800a1ca:	b580      	push	{r7, lr}
 800a1cc:	b086      	sub	sp, #24
 800a1ce:	af00      	add	r7, sp, #0
 800a1d0:	60f8      	str	r0, [r7, #12]
 800a1d2:	460b      	mov	r3, r1
 800a1d4:	607a      	str	r2, [r7, #4]
 800a1d6:	72fb      	strb	r3, [r7, #11]
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret;
  uint8_t idx;

  if (epnum == 0U)
 800a1d8:	7afb      	ldrb	r3, [r7, #11]
 800a1da:	2b00      	cmp	r3, #0
 800a1dc:	d16f      	bne.n	800a2be <USBD_LL_DataInStage+0xf4>
  {
    pep = &pdev->ep_in[0];
 800a1de:	68fb      	ldr	r3, [r7, #12]
 800a1e0:	3314      	adds	r3, #20
 800a1e2:	613b      	str	r3, [r7, #16]

    if (pdev->ep0_state == USBD_EP0_DATA_IN)
 800a1e4:	68fb      	ldr	r3, [r7, #12]
 800a1e6:	f8d3 3294 	ldr.w	r3, [r3, #660]	; 0x294
 800a1ea:	2b02      	cmp	r3, #2
 800a1ec:	d15a      	bne.n	800a2a4 <USBD_LL_DataInStage+0xda>
    {
      if (pep->rem_length > pep->maxpacket)
 800a1ee:	693b      	ldr	r3, [r7, #16]
 800a1f0:	689a      	ldr	r2, [r3, #8]
 800a1f2:	693b      	ldr	r3, [r7, #16]
 800a1f4:	68db      	ldr	r3, [r3, #12]
 800a1f6:	429a      	cmp	r2, r3
 800a1f8:	d914      	bls.n	800a224 <USBD_LL_DataInStage+0x5a>
      {
        pep->rem_length -= pep->maxpacket;
 800a1fa:	693b      	ldr	r3, [r7, #16]
 800a1fc:	689a      	ldr	r2, [r3, #8]
 800a1fe:	693b      	ldr	r3, [r7, #16]
 800a200:	68db      	ldr	r3, [r3, #12]
 800a202:	1ad2      	subs	r2, r2, r3
 800a204:	693b      	ldr	r3, [r7, #16]
 800a206:	609a      	str	r2, [r3, #8]

        (void)USBD_CtlContinueSendData(pdev, pdata, pep->rem_length);
 800a208:	693b      	ldr	r3, [r7, #16]
 800a20a:	689b      	ldr	r3, [r3, #8]
 800a20c:	461a      	mov	r2, r3
 800a20e:	6879      	ldr	r1, [r7, #4]
 800a210:	68f8      	ldr	r0, [r7, #12]
 800a212:	f001 f8ac 	bl	800b36e <USBD_CtlContinueSendData>

        /* Prepare endpoint for premature end of transfer */
        (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800a216:	2300      	movs	r3, #0
 800a218:	2200      	movs	r2, #0
 800a21a:	2100      	movs	r1, #0
 800a21c:	68f8      	ldr	r0, [r7, #12]
 800a21e:	f002 f96d 	bl	800c4fc <USBD_LL_PrepareReceive>
 800a222:	e03f      	b.n	800a2a4 <USBD_LL_DataInStage+0xda>
      }
      else
      {
        /* last packet is MPS multiple, so send ZLP packet */
        if ((pep->maxpacket == pep->rem_length) &&
 800a224:	693b      	ldr	r3, [r7, #16]
 800a226:	68da      	ldr	r2, [r3, #12]
 800a228:	693b      	ldr	r3, [r7, #16]
 800a22a:	689b      	ldr	r3, [r3, #8]
 800a22c:	429a      	cmp	r2, r3
 800a22e:	d11c      	bne.n	800a26a <USBD_LL_DataInStage+0xa0>
            (pep->total_length >= pep->maxpacket) &&
 800a230:	693b      	ldr	r3, [r7, #16]
 800a232:	685a      	ldr	r2, [r3, #4]
 800a234:	693b      	ldr	r3, [r7, #16]
 800a236:	68db      	ldr	r3, [r3, #12]
        if ((pep->maxpacket == pep->rem_length) &&
 800a238:	429a      	cmp	r2, r3
 800a23a:	d316      	bcc.n	800a26a <USBD_LL_DataInStage+0xa0>
            (pep->total_length < pdev->ep0_data_len))
 800a23c:	693b      	ldr	r3, [r7, #16]
 800a23e:	685a      	ldr	r2, [r3, #4]
 800a240:	68fb      	ldr	r3, [r7, #12]
 800a242:	f8d3 3298 	ldr.w	r3, [r3, #664]	; 0x298
            (pep->total_length >= pep->maxpacket) &&
 800a246:	429a      	cmp	r2, r3
 800a248:	d20f      	bcs.n	800a26a <USBD_LL_DataInStage+0xa0>
        {
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
 800a24a:	2200      	movs	r2, #0
 800a24c:	2100      	movs	r1, #0
 800a24e:	68f8      	ldr	r0, [r7, #12]
 800a250:	f001 f88d 	bl	800b36e <USBD_CtlContinueSendData>
          pdev->ep0_data_len = 0U;
 800a254:	68fb      	ldr	r3, [r7, #12]
 800a256:	2200      	movs	r2, #0
 800a258:	f8c3 2298 	str.w	r2, [r3, #664]	; 0x298

          /* Prepare endpoint for premature end of transfer */
          (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800a25c:	2300      	movs	r3, #0
 800a25e:	2200      	movs	r2, #0
 800a260:	2100      	movs	r1, #0
 800a262:	68f8      	ldr	r0, [r7, #12]
 800a264:	f002 f94a 	bl	800c4fc <USBD_LL_PrepareReceive>
 800a268:	e01c      	b.n	800a2a4 <USBD_LL_DataInStage+0xda>
        }
        else
        {
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a26a:	68fb      	ldr	r3, [r7, #12]
 800a26c:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800a270:	b2db      	uxtb	r3, r3
 800a272:	2b03      	cmp	r3, #3
 800a274:	d10f      	bne.n	800a296 <USBD_LL_DataInStage+0xcc>
          {
            if (pdev->pClass[0]->EP0_TxSent != NULL)
 800a276:	68fb      	ldr	r3, [r7, #12]
 800a278:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800a27c:	68db      	ldr	r3, [r3, #12]
 800a27e:	2b00      	cmp	r3, #0
 800a280:	d009      	beq.n	800a296 <USBD_LL_DataInStage+0xcc>
            {
              pdev->classId = 0U;
 800a282:	68fb      	ldr	r3, [r7, #12]
 800a284:	2200      	movs	r2, #0
 800a286:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
              pdev->pClass[0]->EP0_TxSent(pdev);
 800a28a:	68fb      	ldr	r3, [r7, #12]
 800a28c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800a290:	68db      	ldr	r3, [r3, #12]
 800a292:	68f8      	ldr	r0, [r7, #12]
 800a294:	4798      	blx	r3
            }
          }
          (void)USBD_LL_StallEP(pdev, 0x80U);
 800a296:	2180      	movs	r1, #128	; 0x80
 800a298:	68f8      	ldr	r0, [r7, #12]
 800a29a:	f002 f885 	bl	800c3a8 <USBD_LL_StallEP>
          (void)USBD_CtlReceiveStatus(pdev);
 800a29e:	68f8      	ldr	r0, [r7, #12]
 800a2a0:	f001 f8b7 	bl	800b412 <USBD_CtlReceiveStatus>
        (void)USBD_LL_StallEP(pdev, 0x80U);
      }
#endif
    }

    if (pdev->dev_test_mode != 0U)
 800a2a4:	68fb      	ldr	r3, [r7, #12]
 800a2a6:	f893 32a0 	ldrb.w	r3, [r3, #672]	; 0x2a0
 800a2aa:	2b00      	cmp	r3, #0
 800a2ac:	d03a      	beq.n	800a324 <USBD_LL_DataInStage+0x15a>
    {
      (void)USBD_RunTestMode(pdev);
 800a2ae:	68f8      	ldr	r0, [r7, #12]
 800a2b0:	f7ff fe42 	bl	8009f38 <USBD_RunTestMode>
      pdev->dev_test_mode = 0U;
 800a2b4:	68fb      	ldr	r3, [r7, #12]
 800a2b6:	2200      	movs	r2, #0
 800a2b8:	f883 22a0 	strb.w	r2, [r3, #672]	; 0x2a0
 800a2bc:	e032      	b.n	800a324 <USBD_LL_DataInStage+0x15a>
    }
  }
  else
  {
    /* Get the class index relative to this interface */
    idx = USBD_CoreFindEP(pdev, ((uint8_t)epnum | 0x80U));
 800a2be:	7afb      	ldrb	r3, [r7, #11]
 800a2c0:	f063 037f 	orn	r3, r3, #127	; 0x7f
 800a2c4:	b2db      	uxtb	r3, r3
 800a2c6:	4619      	mov	r1, r3
 800a2c8:	68f8      	ldr	r0, [r7, #12]
 800a2ca:	f000 f97f 	bl	800a5cc <USBD_CoreFindEP>
 800a2ce:	4603      	mov	r3, r0
 800a2d0:	75fb      	strb	r3, [r7, #23]

    if (((uint16_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 800a2d2:	7dfb      	ldrb	r3, [r7, #23]
 800a2d4:	2bff      	cmp	r3, #255	; 0xff
 800a2d6:	d025      	beq.n	800a324 <USBD_LL_DataInStage+0x15a>
 800a2d8:	7dfb      	ldrb	r3, [r7, #23]
 800a2da:	2b00      	cmp	r3, #0
 800a2dc:	d122      	bne.n	800a324 <USBD_LL_DataInStage+0x15a>
    {
      /* Call the class data out function to manage the request */
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a2de:	68fb      	ldr	r3, [r7, #12]
 800a2e0:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800a2e4:	b2db      	uxtb	r3, r3
 800a2e6:	2b03      	cmp	r3, #3
 800a2e8:	d11c      	bne.n	800a324 <USBD_LL_DataInStage+0x15a>
      {
        if (pdev->pClass[idx]->DataIn != NULL)
 800a2ea:	7dfa      	ldrb	r2, [r7, #23]
 800a2ec:	68fb      	ldr	r3, [r7, #12]
 800a2ee:	32ae      	adds	r2, #174	; 0xae
 800a2f0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a2f4:	695b      	ldr	r3, [r3, #20]
 800a2f6:	2b00      	cmp	r3, #0
 800a2f8:	d014      	beq.n	800a324 <USBD_LL_DataInStage+0x15a>
        {
          pdev->classId = idx;
 800a2fa:	7dfa      	ldrb	r2, [r7, #23]
 800a2fc:	68fb      	ldr	r3, [r7, #12]
 800a2fe:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataIn(pdev, epnum);
 800a302:	7dfa      	ldrb	r2, [r7, #23]
 800a304:	68fb      	ldr	r3, [r7, #12]
 800a306:	32ae      	adds	r2, #174	; 0xae
 800a308:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a30c:	695b      	ldr	r3, [r3, #20]
 800a30e:	7afa      	ldrb	r2, [r7, #11]
 800a310:	4611      	mov	r1, r2
 800a312:	68f8      	ldr	r0, [r7, #12]
 800a314:	4798      	blx	r3
 800a316:	4603      	mov	r3, r0
 800a318:	75bb      	strb	r3, [r7, #22]

          if (ret != USBD_OK)
 800a31a:	7dbb      	ldrb	r3, [r7, #22]
 800a31c:	2b00      	cmp	r3, #0
 800a31e:	d001      	beq.n	800a324 <USBD_LL_DataInStage+0x15a>
          {
            return ret;
 800a320:	7dbb      	ldrb	r3, [r7, #22]
 800a322:	e000      	b.n	800a326 <USBD_LL_DataInStage+0x15c>
        }
      }
    }
  }

  return USBD_OK;
 800a324:	2300      	movs	r3, #0
}
 800a326:	4618      	mov	r0, r3
 800a328:	3718      	adds	r7, #24
 800a32a:	46bd      	mov	sp, r7
 800a32c:	bd80      	pop	{r7, pc}

0800a32e <USBD_LL_Reset>:
  * @param  pdev: device instance
  * @retval status
  */

USBD_StatusTypeDef USBD_LL_Reset(USBD_HandleTypeDef *pdev)
{
 800a32e:	b580      	push	{r7, lr}
 800a330:	b084      	sub	sp, #16
 800a332:	af00      	add	r7, sp, #0
 800a334:	6078      	str	r0, [r7, #4]
  USBD_StatusTypeDef ret = USBD_OK;
 800a336:	2300      	movs	r3, #0
 800a338:	73fb      	strb	r3, [r7, #15]

  /* Upon Reset call user call back */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800a33a:	687b      	ldr	r3, [r7, #4]
 800a33c:	2201      	movs	r2, #1
 800a33e:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
  pdev->ep0_state = USBD_EP0_IDLE;
 800a342:	687b      	ldr	r3, [r7, #4]
 800a344:	2200      	movs	r2, #0
 800a346:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  pdev->dev_config = 0U;
 800a34a:	687b      	ldr	r3, [r7, #4]
 800a34c:	2200      	movs	r2, #0
 800a34e:	605a      	str	r2, [r3, #4]
  pdev->dev_remote_wakeup = 0U;
 800a350:	687b      	ldr	r3, [r7, #4]
 800a352:	2200      	movs	r2, #0
 800a354:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
  pdev->dev_test_mode = 0U;
 800a358:	687b      	ldr	r3, [r7, #4]
 800a35a:	2200      	movs	r2, #0
 800a35c:	f883 22a0 	strb.w	r2, [r3, #672]	; 0x2a0
      }
    }
  }
#else

  if (pdev->pClass[0] != NULL)
 800a360:	687b      	ldr	r3, [r7, #4]
 800a362:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800a366:	2b00      	cmp	r3, #0
 800a368:	d014      	beq.n	800a394 <USBD_LL_Reset+0x66>
  {
    if (pdev->pClass[0]->DeInit != NULL)
 800a36a:	687b      	ldr	r3, [r7, #4]
 800a36c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800a370:	685b      	ldr	r3, [r3, #4]
 800a372:	2b00      	cmp	r3, #0
 800a374:	d00e      	beq.n	800a394 <USBD_LL_Reset+0x66>
    {
      if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != USBD_OK)
 800a376:	687b      	ldr	r3, [r7, #4]
 800a378:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800a37c:	685b      	ldr	r3, [r3, #4]
 800a37e:	687a      	ldr	r2, [r7, #4]
 800a380:	6852      	ldr	r2, [r2, #4]
 800a382:	b2d2      	uxtb	r2, r2
 800a384:	4611      	mov	r1, r2
 800a386:	6878      	ldr	r0, [r7, #4]
 800a388:	4798      	blx	r3
 800a38a:	4603      	mov	r3, r0
 800a38c:	2b00      	cmp	r3, #0
 800a38e:	d001      	beq.n	800a394 <USBD_LL_Reset+0x66>
      {
        ret = USBD_FAIL;
 800a390:	2303      	movs	r3, #3
 800a392:	73fb      	strb	r3, [r7, #15]
    }
  }
#endif /* USE_USBD_COMPOSITE */

  /* Open EP0 OUT */
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800a394:	2340      	movs	r3, #64	; 0x40
 800a396:	2200      	movs	r2, #0
 800a398:	2100      	movs	r1, #0
 800a39a:	6878      	ldr	r0, [r7, #4]
 800a39c:	f001 ffbf 	bl	800c31e <USBD_LL_OpenEP>
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 800a3a0:	687b      	ldr	r3, [r7, #4]
 800a3a2:	2201      	movs	r2, #1
 800a3a4:	f8a3 2164 	strh.w	r2, [r3, #356]	; 0x164

  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 800a3a8:	687b      	ldr	r3, [r7, #4]
 800a3aa:	2240      	movs	r2, #64	; 0x40
 800a3ac:	f8c3 2160 	str.w	r2, [r3, #352]	; 0x160

  /* Open EP0 IN */
  (void)USBD_LL_OpenEP(pdev, 0x80U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800a3b0:	2340      	movs	r3, #64	; 0x40
 800a3b2:	2200      	movs	r2, #0
 800a3b4:	2180      	movs	r1, #128	; 0x80
 800a3b6:	6878      	ldr	r0, [r7, #4]
 800a3b8:	f001 ffb1 	bl	800c31e <USBD_LL_OpenEP>
  pdev->ep_in[0x80U & 0xFU].is_used = 1U;
 800a3bc:	687b      	ldr	r3, [r7, #4]
 800a3be:	2201      	movs	r2, #1
 800a3c0:	849a      	strh	r2, [r3, #36]	; 0x24

  pdev->ep_in[0].maxpacket = USB_MAX_EP0_SIZE;
 800a3c2:	687b      	ldr	r3, [r7, #4]
 800a3c4:	2240      	movs	r2, #64	; 0x40
 800a3c6:	621a      	str	r2, [r3, #32]

  return ret;
 800a3c8:	7bfb      	ldrb	r3, [r7, #15]
}
 800a3ca:	4618      	mov	r0, r3
 800a3cc:	3710      	adds	r7, #16
 800a3ce:	46bd      	mov	sp, r7
 800a3d0:	bd80      	pop	{r7, pc}

0800a3d2 <USBD_LL_SetSpeed>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetSpeed(USBD_HandleTypeDef *pdev,
                                    USBD_SpeedTypeDef speed)
{
 800a3d2:	b480      	push	{r7}
 800a3d4:	b083      	sub	sp, #12
 800a3d6:	af00      	add	r7, sp, #0
 800a3d8:	6078      	str	r0, [r7, #4]
 800a3da:	460b      	mov	r3, r1
 800a3dc:	70fb      	strb	r3, [r7, #3]
  pdev->dev_speed = speed;
 800a3de:	687b      	ldr	r3, [r7, #4]
 800a3e0:	78fa      	ldrb	r2, [r7, #3]
 800a3e2:	741a      	strb	r2, [r3, #16]

  return USBD_OK;
 800a3e4:	2300      	movs	r3, #0
}
 800a3e6:	4618      	mov	r0, r3
 800a3e8:	370c      	adds	r7, #12
 800a3ea:	46bd      	mov	sp, r7
 800a3ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3f0:	4770      	bx	lr

0800a3f2 <USBD_LL_Suspend>:
  * @param  pdev: device instance
  * @retval status
  */

USBD_StatusTypeDef USBD_LL_Suspend(USBD_HandleTypeDef *pdev)
{
 800a3f2:	b480      	push	{r7}
 800a3f4:	b083      	sub	sp, #12
 800a3f6:	af00      	add	r7, sp, #0
 800a3f8:	6078      	str	r0, [r7, #4]
  pdev->dev_old_state = pdev->dev_state;
 800a3fa:	687b      	ldr	r3, [r7, #4]
 800a3fc:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800a400:	b2da      	uxtb	r2, r3
 800a402:	687b      	ldr	r3, [r7, #4]
 800a404:	f883 229d 	strb.w	r2, [r3, #669]	; 0x29d
  pdev->dev_state = USBD_STATE_SUSPENDED;
 800a408:	687b      	ldr	r3, [r7, #4]
 800a40a:	2204      	movs	r2, #4
 800a40c:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c

  return USBD_OK;
 800a410:	2300      	movs	r3, #0
}
 800a412:	4618      	mov	r0, r3
 800a414:	370c      	adds	r7, #12
 800a416:	46bd      	mov	sp, r7
 800a418:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a41c:	4770      	bx	lr

0800a41e <USBD_LL_Resume>:
  * @param  pdev: device instance
  * @retval status
  */

USBD_StatusTypeDef USBD_LL_Resume(USBD_HandleTypeDef *pdev)
{
 800a41e:	b480      	push	{r7}
 800a420:	b083      	sub	sp, #12
 800a422:	af00      	add	r7, sp, #0
 800a424:	6078      	str	r0, [r7, #4]
  if (pdev->dev_state == USBD_STATE_SUSPENDED)
 800a426:	687b      	ldr	r3, [r7, #4]
 800a428:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800a42c:	b2db      	uxtb	r3, r3
 800a42e:	2b04      	cmp	r3, #4
 800a430:	d106      	bne.n	800a440 <USBD_LL_Resume+0x22>
  {
    pdev->dev_state = pdev->dev_old_state;
 800a432:	687b      	ldr	r3, [r7, #4]
 800a434:	f893 329d 	ldrb.w	r3, [r3, #669]	; 0x29d
 800a438:	b2da      	uxtb	r2, r3
 800a43a:	687b      	ldr	r3, [r7, #4]
 800a43c:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
  }

  return USBD_OK;
 800a440:	2300      	movs	r3, #0
}
 800a442:	4618      	mov	r0, r3
 800a444:	370c      	adds	r7, #12
 800a446:	46bd      	mov	sp, r7
 800a448:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a44c:	4770      	bx	lr

0800a44e <USBD_LL_SOF>:
  * @param  pdev: device instance
  * @retval status
  */

USBD_StatusTypeDef USBD_LL_SOF(USBD_HandleTypeDef *pdev)
{
 800a44e:	b580      	push	{r7, lr}
 800a450:	b082      	sub	sp, #8
 800a452:	af00      	add	r7, sp, #0
 800a454:	6078      	str	r0, [r7, #4]
  /* The SOF event can be distributed for all classes that support it */
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a456:	687b      	ldr	r3, [r7, #4]
 800a458:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800a45c:	b2db      	uxtb	r3, r3
 800a45e:	2b03      	cmp	r3, #3
 800a460:	d110      	bne.n	800a484 <USBD_LL_SOF+0x36>
          }
        }
      }
    }
#else
    if (pdev->pClass[0] != NULL)
 800a462:	687b      	ldr	r3, [r7, #4]
 800a464:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800a468:	2b00      	cmp	r3, #0
 800a46a:	d00b      	beq.n	800a484 <USBD_LL_SOF+0x36>
    {
      if (pdev->pClass[0]->SOF != NULL)
 800a46c:	687b      	ldr	r3, [r7, #4]
 800a46e:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800a472:	69db      	ldr	r3, [r3, #28]
 800a474:	2b00      	cmp	r3, #0
 800a476:	d005      	beq.n	800a484 <USBD_LL_SOF+0x36>
      {
        (void)pdev->pClass[0]->SOF(pdev);
 800a478:	687b      	ldr	r3, [r7, #4]
 800a47a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800a47e:	69db      	ldr	r3, [r3, #28]
 800a480:	6878      	ldr	r0, [r7, #4]
 800a482:	4798      	blx	r3
      }
    }
#endif /* USE_USBD_COMPOSITE */
  }

  return USBD_OK;
 800a484:	2300      	movs	r3, #0
}
 800a486:	4618      	mov	r0, r3
 800a488:	3708      	adds	r7, #8
 800a48a:	46bd      	mov	sp, r7
 800a48c:	bd80      	pop	{r7, pc}

0800a48e <USBD_LL_IsoINIncomplete>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoINIncomplete(USBD_HandleTypeDef *pdev,
                                           uint8_t epnum)
{
 800a48e:	b580      	push	{r7, lr}
 800a490:	b082      	sub	sp, #8
 800a492:	af00      	add	r7, sp, #0
 800a494:	6078      	str	r0, [r7, #4]
 800a496:	460b      	mov	r3, r1
 800a498:	70fb      	strb	r3, [r7, #3]
  if (pdev->pClass[pdev->classId] == NULL)
 800a49a:	687b      	ldr	r3, [r7, #4]
 800a49c:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800a4a0:	687b      	ldr	r3, [r7, #4]
 800a4a2:	32ae      	adds	r2, #174	; 0xae
 800a4a4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a4a8:	2b00      	cmp	r3, #0
 800a4aa:	d101      	bne.n	800a4b0 <USBD_LL_IsoINIncomplete+0x22>
  {
    return USBD_FAIL;
 800a4ac:	2303      	movs	r3, #3
 800a4ae:	e01c      	b.n	800a4ea <USBD_LL_IsoINIncomplete+0x5c>
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a4b0:	687b      	ldr	r3, [r7, #4]
 800a4b2:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800a4b6:	b2db      	uxtb	r3, r3
 800a4b8:	2b03      	cmp	r3, #3
 800a4ba:	d115      	bne.n	800a4e8 <USBD_LL_IsoINIncomplete+0x5a>
  {
    if (pdev->pClass[pdev->classId]->IsoINIncomplete != NULL)
 800a4bc:	687b      	ldr	r3, [r7, #4]
 800a4be:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800a4c2:	687b      	ldr	r3, [r7, #4]
 800a4c4:	32ae      	adds	r2, #174	; 0xae
 800a4c6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a4ca:	6a1b      	ldr	r3, [r3, #32]
 800a4cc:	2b00      	cmp	r3, #0
 800a4ce:	d00b      	beq.n	800a4e8 <USBD_LL_IsoINIncomplete+0x5a>
    {
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
 800a4d0:	687b      	ldr	r3, [r7, #4]
 800a4d2:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800a4d6:	687b      	ldr	r3, [r7, #4]
 800a4d8:	32ae      	adds	r2, #174	; 0xae
 800a4da:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a4de:	6a1b      	ldr	r3, [r3, #32]
 800a4e0:	78fa      	ldrb	r2, [r7, #3]
 800a4e2:	4611      	mov	r1, r2
 800a4e4:	6878      	ldr	r0, [r7, #4]
 800a4e6:	4798      	blx	r3
    }
  }

  return USBD_OK;
 800a4e8:	2300      	movs	r3, #0
}
 800a4ea:	4618      	mov	r0, r3
 800a4ec:	3708      	adds	r7, #8
 800a4ee:	46bd      	mov	sp, r7
 800a4f0:	bd80      	pop	{r7, pc}

0800a4f2 <USBD_LL_IsoOUTIncomplete>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoOUTIncomplete(USBD_HandleTypeDef *pdev,
                                            uint8_t epnum)
{
 800a4f2:	b580      	push	{r7, lr}
 800a4f4:	b082      	sub	sp, #8
 800a4f6:	af00      	add	r7, sp, #0
 800a4f8:	6078      	str	r0, [r7, #4]
 800a4fa:	460b      	mov	r3, r1
 800a4fc:	70fb      	strb	r3, [r7, #3]
  if (pdev->pClass[pdev->classId] == NULL)
 800a4fe:	687b      	ldr	r3, [r7, #4]
 800a500:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800a504:	687b      	ldr	r3, [r7, #4]
 800a506:	32ae      	adds	r2, #174	; 0xae
 800a508:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a50c:	2b00      	cmp	r3, #0
 800a50e:	d101      	bne.n	800a514 <USBD_LL_IsoOUTIncomplete+0x22>
  {
    return USBD_FAIL;
 800a510:	2303      	movs	r3, #3
 800a512:	e01c      	b.n	800a54e <USBD_LL_IsoOUTIncomplete+0x5c>
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a514:	687b      	ldr	r3, [r7, #4]
 800a516:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800a51a:	b2db      	uxtb	r3, r3
 800a51c:	2b03      	cmp	r3, #3
 800a51e:	d115      	bne.n	800a54c <USBD_LL_IsoOUTIncomplete+0x5a>
  {
    if (pdev->pClass[pdev->classId]->IsoOUTIncomplete != NULL)
 800a520:	687b      	ldr	r3, [r7, #4]
 800a522:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800a526:	687b      	ldr	r3, [r7, #4]
 800a528:	32ae      	adds	r2, #174	; 0xae
 800a52a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a52e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a530:	2b00      	cmp	r3, #0
 800a532:	d00b      	beq.n	800a54c <USBD_LL_IsoOUTIncomplete+0x5a>
    {
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
 800a534:	687b      	ldr	r3, [r7, #4]
 800a536:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800a53a:	687b      	ldr	r3, [r7, #4]
 800a53c:	32ae      	adds	r2, #174	; 0xae
 800a53e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a542:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a544:	78fa      	ldrb	r2, [r7, #3]
 800a546:	4611      	mov	r1, r2
 800a548:	6878      	ldr	r0, [r7, #4]
 800a54a:	4798      	blx	r3
    }
  }

  return USBD_OK;
 800a54c:	2300      	movs	r3, #0
}
 800a54e:	4618      	mov	r0, r3
 800a550:	3708      	adds	r7, #8
 800a552:	46bd      	mov	sp, r7
 800a554:	bd80      	pop	{r7, pc}

0800a556 <USBD_LL_DevConnected>:
  *         Handle device connection event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DevConnected(USBD_HandleTypeDef *pdev)
{
 800a556:	b480      	push	{r7}
 800a558:	b083      	sub	sp, #12
 800a55a:	af00      	add	r7, sp, #0
 800a55c:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument compilation warning */
  UNUSED(pdev);

  return USBD_OK;
 800a55e:	2300      	movs	r3, #0
}
 800a560:	4618      	mov	r0, r3
 800a562:	370c      	adds	r7, #12
 800a564:	46bd      	mov	sp, r7
 800a566:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a56a:	4770      	bx	lr

0800a56c <USBD_LL_DevDisconnected>:
  *         Handle device disconnection event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DevDisconnected(USBD_HandleTypeDef *pdev)
{
 800a56c:	b580      	push	{r7, lr}
 800a56e:	b084      	sub	sp, #16
 800a570:	af00      	add	r7, sp, #0
 800a572:	6078      	str	r0, [r7, #4]
  USBD_StatusTypeDef   ret = USBD_OK;
 800a574:	2300      	movs	r3, #0
 800a576:	73fb      	strb	r3, [r7, #15]

  /* Free Class Resources */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800a578:	687b      	ldr	r3, [r7, #4]
 800a57a:	2201      	movs	r2, #1
 800a57c:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
 800a580:	687b      	ldr	r3, [r7, #4]
 800a582:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800a586:	2b00      	cmp	r3, #0
 800a588:	d00e      	beq.n	800a5a8 <USBD_LL_DevDisconnected+0x3c>
  {
    if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != 0U)
 800a58a:	687b      	ldr	r3, [r7, #4]
 800a58c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800a590:	685b      	ldr	r3, [r3, #4]
 800a592:	687a      	ldr	r2, [r7, #4]
 800a594:	6852      	ldr	r2, [r2, #4]
 800a596:	b2d2      	uxtb	r2, r2
 800a598:	4611      	mov	r1, r2
 800a59a:	6878      	ldr	r0, [r7, #4]
 800a59c:	4798      	blx	r3
 800a59e:	4603      	mov	r3, r0
 800a5a0:	2b00      	cmp	r3, #0
 800a5a2:	d001      	beq.n	800a5a8 <USBD_LL_DevDisconnected+0x3c>
    {
      ret = USBD_FAIL;
 800a5a4:	2303      	movs	r3, #3
 800a5a6:	73fb      	strb	r3, [r7, #15]
    }
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
 800a5a8:	7bfb      	ldrb	r3, [r7, #15]
}
 800a5aa:	4618      	mov	r0, r3
 800a5ac:	3710      	adds	r7, #16
 800a5ae:	46bd      	mov	sp, r7
 800a5b0:	bd80      	pop	{r7, pc}

0800a5b2 <USBD_CoreFindIF>:
  * @param  pdev: device instance
  * @param  index : selected interface number
  * @retval index of the class using the selected interface number. OxFF if no class found.
  */
uint8_t USBD_CoreFindIF(USBD_HandleTypeDef *pdev, uint8_t index)
{
 800a5b2:	b480      	push	{r7}
 800a5b4:	b083      	sub	sp, #12
 800a5b6:	af00      	add	r7, sp, #0
 800a5b8:	6078      	str	r0, [r7, #4]
 800a5ba:	460b      	mov	r3, r1
 800a5bc:	70fb      	strb	r3, [r7, #3]
  return 0xFFU;
#else
  UNUSED(pdev);
  UNUSED(index);

  return 0x00U;
 800a5be:	2300      	movs	r3, #0
#endif /* USE_USBD_COMPOSITE */
}
 800a5c0:	4618      	mov	r0, r3
 800a5c2:	370c      	adds	r7, #12
 800a5c4:	46bd      	mov	sp, r7
 800a5c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5ca:	4770      	bx	lr

0800a5cc <USBD_CoreFindEP>:
  * @param  pdev: device instance
  * @param  index : selected endpoint number
  * @retval index of the class using the selected endpoint number. 0xFF if no class found.
  */
uint8_t USBD_CoreFindEP(USBD_HandleTypeDef *pdev, uint8_t index)
{
 800a5cc:	b480      	push	{r7}
 800a5ce:	b083      	sub	sp, #12
 800a5d0:	af00      	add	r7, sp, #0
 800a5d2:	6078      	str	r0, [r7, #4]
 800a5d4:	460b      	mov	r3, r1
 800a5d6:	70fb      	strb	r3, [r7, #3]
  return 0xFFU;
#else
  UNUSED(pdev);
  UNUSED(index);

  return 0x00U;
 800a5d8:	2300      	movs	r3, #0
#endif /* USE_USBD_COMPOSITE */
}
 800a5da:	4618      	mov	r0, r3
 800a5dc:	370c      	adds	r7, #12
 800a5de:	46bd      	mov	sp, r7
 800a5e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5e4:	4770      	bx	lr

0800a5e6 <USBD_GetEpDesc>:
  * @param  pConfDesc:  pointer to Bos descriptor
  * @param  EpAddr:  endpoint address
  * @retval pointer to video endpoint descriptor
  */
void *USBD_GetEpDesc(uint8_t *pConfDesc, uint8_t EpAddr)
{
 800a5e6:	b580      	push	{r7, lr}
 800a5e8:	b086      	sub	sp, #24
 800a5ea:	af00      	add	r7, sp, #0
 800a5ec:	6078      	str	r0, [r7, #4]
 800a5ee:	460b      	mov	r3, r1
 800a5f0:	70fb      	strb	r3, [r7, #3]
  USBD_DescHeaderTypeDef *pdesc = (USBD_DescHeaderTypeDef *)(void *)pConfDesc;
 800a5f2:	687b      	ldr	r3, [r7, #4]
 800a5f4:	617b      	str	r3, [r7, #20]
  USBD_ConfigDescTypeDef *desc = (USBD_ConfigDescTypeDef *)(void *)pConfDesc;
 800a5f6:	687b      	ldr	r3, [r7, #4]
 800a5f8:	60fb      	str	r3, [r7, #12]
  USBD_EpDescTypeDef *pEpDesc = NULL;
 800a5fa:	2300      	movs	r3, #0
 800a5fc:	613b      	str	r3, [r7, #16]
  uint16_t ptr;

  if (desc->wTotalLength > desc->bLength)
 800a5fe:	68fb      	ldr	r3, [r7, #12]
 800a600:	885b      	ldrh	r3, [r3, #2]
 800a602:	b29a      	uxth	r2, r3
 800a604:	68fb      	ldr	r3, [r7, #12]
 800a606:	781b      	ldrb	r3, [r3, #0]
 800a608:	b29b      	uxth	r3, r3
 800a60a:	429a      	cmp	r2, r3
 800a60c:	d920      	bls.n	800a650 <USBD_GetEpDesc+0x6a>
  {
    ptr = desc->bLength;
 800a60e:	68fb      	ldr	r3, [r7, #12]
 800a610:	781b      	ldrb	r3, [r3, #0]
 800a612:	b29b      	uxth	r3, r3
 800a614:	817b      	strh	r3, [r7, #10]

    while (ptr < desc->wTotalLength)
 800a616:	e013      	b.n	800a640 <USBD_GetEpDesc+0x5a>
    {
      pdesc = USBD_GetNextDesc((uint8_t *)pdesc, &ptr);
 800a618:	f107 030a 	add.w	r3, r7, #10
 800a61c:	4619      	mov	r1, r3
 800a61e:	6978      	ldr	r0, [r7, #20]
 800a620:	f000 f81b 	bl	800a65a <USBD_GetNextDesc>
 800a624:	6178      	str	r0, [r7, #20]

      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
 800a626:	697b      	ldr	r3, [r7, #20]
 800a628:	785b      	ldrb	r3, [r3, #1]
 800a62a:	2b05      	cmp	r3, #5
 800a62c:	d108      	bne.n	800a640 <USBD_GetEpDesc+0x5a>
      {
        pEpDesc = (USBD_EpDescTypeDef *)(void *)pdesc;
 800a62e:	697b      	ldr	r3, [r7, #20]
 800a630:	613b      	str	r3, [r7, #16]

        if (pEpDesc->bEndpointAddress == EpAddr)
 800a632:	693b      	ldr	r3, [r7, #16]
 800a634:	789b      	ldrb	r3, [r3, #2]
 800a636:	78fa      	ldrb	r2, [r7, #3]
 800a638:	429a      	cmp	r2, r3
 800a63a:	d008      	beq.n	800a64e <USBD_GetEpDesc+0x68>
        {
          break;
        }
        else
        {
          pEpDesc = NULL;
 800a63c:	2300      	movs	r3, #0
 800a63e:	613b      	str	r3, [r7, #16]
    while (ptr < desc->wTotalLength)
 800a640:	68fb      	ldr	r3, [r7, #12]
 800a642:	885b      	ldrh	r3, [r3, #2]
 800a644:	b29a      	uxth	r2, r3
 800a646:	897b      	ldrh	r3, [r7, #10]
 800a648:	429a      	cmp	r2, r3
 800a64a:	d8e5      	bhi.n	800a618 <USBD_GetEpDesc+0x32>
 800a64c:	e000      	b.n	800a650 <USBD_GetEpDesc+0x6a>
          break;
 800a64e:	bf00      	nop
        }
      }
    }
  }

  return (void *)pEpDesc;
 800a650:	693b      	ldr	r3, [r7, #16]
}
 800a652:	4618      	mov	r0, r3
 800a654:	3718      	adds	r7, #24
 800a656:	46bd      	mov	sp, r7
 800a658:	bd80      	pop	{r7, pc}

0800a65a <USBD_GetNextDesc>:
  * @param  buf: Buffer where the descriptor is available
  * @param  ptr: data pointer inside the descriptor
  * @retval next header
  */
USBD_DescHeaderTypeDef *USBD_GetNextDesc(uint8_t *pbuf, uint16_t *ptr)
{
 800a65a:	b480      	push	{r7}
 800a65c:	b085      	sub	sp, #20
 800a65e:	af00      	add	r7, sp, #0
 800a660:	6078      	str	r0, [r7, #4]
 800a662:	6039      	str	r1, [r7, #0]
  USBD_DescHeaderTypeDef *pnext = (USBD_DescHeaderTypeDef *)(void *)pbuf;
 800a664:	687b      	ldr	r3, [r7, #4]
 800a666:	60fb      	str	r3, [r7, #12]

  *ptr += pnext->bLength;
 800a668:	683b      	ldr	r3, [r7, #0]
 800a66a:	881a      	ldrh	r2, [r3, #0]
 800a66c:	68fb      	ldr	r3, [r7, #12]
 800a66e:	781b      	ldrb	r3, [r3, #0]
 800a670:	b29b      	uxth	r3, r3
 800a672:	4413      	add	r3, r2
 800a674:	b29a      	uxth	r2, r3
 800a676:	683b      	ldr	r3, [r7, #0]
 800a678:	801a      	strh	r2, [r3, #0]
  pnext = (USBD_DescHeaderTypeDef *)(void *)(pbuf + pnext->bLength);
 800a67a:	68fb      	ldr	r3, [r7, #12]
 800a67c:	781b      	ldrb	r3, [r3, #0]
 800a67e:	461a      	mov	r2, r3
 800a680:	687b      	ldr	r3, [r7, #4]
 800a682:	4413      	add	r3, r2
 800a684:	60fb      	str	r3, [r7, #12]

  return (pnext);
 800a686:	68fb      	ldr	r3, [r7, #12]
}
 800a688:	4618      	mov	r0, r3
 800a68a:	3714      	adds	r7, #20
 800a68c:	46bd      	mov	sp, r7
 800a68e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a692:	4770      	bx	lr

0800a694 <SWAPBYTE>:

/** @defgroup USBD_DEF_Exported_Macros
  * @{
  */
__STATIC_INLINE uint16_t SWAPBYTE(uint8_t *addr)
{
 800a694:	b480      	push	{r7}
 800a696:	b087      	sub	sp, #28
 800a698:	af00      	add	r7, sp, #0
 800a69a:	6078      	str	r0, [r7, #4]
  uint16_t _SwapVal, _Byte1, _Byte2;
  uint8_t *_pbuff = addr;
 800a69c:	687b      	ldr	r3, [r7, #4]
 800a69e:	617b      	str	r3, [r7, #20]

  _Byte1 = *(uint8_t *)_pbuff;
 800a6a0:	697b      	ldr	r3, [r7, #20]
 800a6a2:	781b      	ldrb	r3, [r3, #0]
 800a6a4:	827b      	strh	r3, [r7, #18]
  _pbuff++;
 800a6a6:	697b      	ldr	r3, [r7, #20]
 800a6a8:	3301      	adds	r3, #1
 800a6aa:	617b      	str	r3, [r7, #20]
  _Byte2 = *(uint8_t *)_pbuff;
 800a6ac:	697b      	ldr	r3, [r7, #20]
 800a6ae:	781b      	ldrb	r3, [r3, #0]
 800a6b0:	823b      	strh	r3, [r7, #16]

  _SwapVal = (_Byte2 << 8) | _Byte1;
 800a6b2:	8a3b      	ldrh	r3, [r7, #16]
 800a6b4:	021b      	lsls	r3, r3, #8
 800a6b6:	b21a      	sxth	r2, r3
 800a6b8:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 800a6bc:	4313      	orrs	r3, r2
 800a6be:	b21b      	sxth	r3, r3
 800a6c0:	81fb      	strh	r3, [r7, #14]

  return _SwapVal;
 800a6c2:	89fb      	ldrh	r3, [r7, #14]
}
 800a6c4:	4618      	mov	r0, r3
 800a6c6:	371c      	adds	r7, #28
 800a6c8:	46bd      	mov	sp, r7
 800a6ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6ce:	4770      	bx	lr

0800a6d0 <USBD_StdDevReq>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
USBD_StatusTypeDef USBD_StdDevReq(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800a6d0:	b580      	push	{r7, lr}
 800a6d2:	b084      	sub	sp, #16
 800a6d4:	af00      	add	r7, sp, #0
 800a6d6:	6078      	str	r0, [r7, #4]
 800a6d8:	6039      	str	r1, [r7, #0]
  USBD_StatusTypeDef ret = USBD_OK;
 800a6da:	2300      	movs	r3, #0
 800a6dc:	73fb      	strb	r3, [r7, #15]

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800a6de:	683b      	ldr	r3, [r7, #0]
 800a6e0:	781b      	ldrb	r3, [r3, #0]
 800a6e2:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800a6e6:	2b40      	cmp	r3, #64	; 0x40
 800a6e8:	d005      	beq.n	800a6f6 <USBD_StdDevReq+0x26>
 800a6ea:	2b40      	cmp	r3, #64	; 0x40
 800a6ec:	d857      	bhi.n	800a79e <USBD_StdDevReq+0xce>
 800a6ee:	2b00      	cmp	r3, #0
 800a6f0:	d00f      	beq.n	800a712 <USBD_StdDevReq+0x42>
 800a6f2:	2b20      	cmp	r3, #32
 800a6f4:	d153      	bne.n	800a79e <USBD_StdDevReq+0xce>
  {
    case USB_REQ_TYPE_CLASS:
    case USB_REQ_TYPE_VENDOR:
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
 800a6f6:	687b      	ldr	r3, [r7, #4]
 800a6f8:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800a6fc:	687b      	ldr	r3, [r7, #4]
 800a6fe:	32ae      	adds	r2, #174	; 0xae
 800a700:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a704:	689b      	ldr	r3, [r3, #8]
 800a706:	6839      	ldr	r1, [r7, #0]
 800a708:	6878      	ldr	r0, [r7, #4]
 800a70a:	4798      	blx	r3
 800a70c:	4603      	mov	r3, r0
 800a70e:	73fb      	strb	r3, [r7, #15]
      break;
 800a710:	e04a      	b.n	800a7a8 <USBD_StdDevReq+0xd8>

    case USB_REQ_TYPE_STANDARD:
      switch (req->bRequest)
 800a712:	683b      	ldr	r3, [r7, #0]
 800a714:	785b      	ldrb	r3, [r3, #1]
 800a716:	2b09      	cmp	r3, #9
 800a718:	d83b      	bhi.n	800a792 <USBD_StdDevReq+0xc2>
 800a71a:	a201      	add	r2, pc, #4	; (adr r2, 800a720 <USBD_StdDevReq+0x50>)
 800a71c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a720:	0800a775 	.word	0x0800a775
 800a724:	0800a789 	.word	0x0800a789
 800a728:	0800a793 	.word	0x0800a793
 800a72c:	0800a77f 	.word	0x0800a77f
 800a730:	0800a793 	.word	0x0800a793
 800a734:	0800a753 	.word	0x0800a753
 800a738:	0800a749 	.word	0x0800a749
 800a73c:	0800a793 	.word	0x0800a793
 800a740:	0800a76b 	.word	0x0800a76b
 800a744:	0800a75d 	.word	0x0800a75d
      {
        case USB_REQ_GET_DESCRIPTOR:
          USBD_GetDescriptor(pdev, req);
 800a748:	6839      	ldr	r1, [r7, #0]
 800a74a:	6878      	ldr	r0, [r7, #4]
 800a74c:	f000 fa3c 	bl	800abc8 <USBD_GetDescriptor>
          break;
 800a750:	e024      	b.n	800a79c <USBD_StdDevReq+0xcc>

        case USB_REQ_SET_ADDRESS:
          USBD_SetAddress(pdev, req);
 800a752:	6839      	ldr	r1, [r7, #0]
 800a754:	6878      	ldr	r0, [r7, #4]
 800a756:	f000 fba1 	bl	800ae9c <USBD_SetAddress>
          break;
 800a75a:	e01f      	b.n	800a79c <USBD_StdDevReq+0xcc>

        case USB_REQ_SET_CONFIGURATION:
          ret = USBD_SetConfig(pdev, req);
 800a75c:	6839      	ldr	r1, [r7, #0]
 800a75e:	6878      	ldr	r0, [r7, #4]
 800a760:	f000 fbe0 	bl	800af24 <USBD_SetConfig>
 800a764:	4603      	mov	r3, r0
 800a766:	73fb      	strb	r3, [r7, #15]
          break;
 800a768:	e018      	b.n	800a79c <USBD_StdDevReq+0xcc>

        case USB_REQ_GET_CONFIGURATION:
          USBD_GetConfig(pdev, req);
 800a76a:	6839      	ldr	r1, [r7, #0]
 800a76c:	6878      	ldr	r0, [r7, #4]
 800a76e:	f000 fc83 	bl	800b078 <USBD_GetConfig>
          break;
 800a772:	e013      	b.n	800a79c <USBD_StdDevReq+0xcc>

        case USB_REQ_GET_STATUS:
          USBD_GetStatus(pdev, req);
 800a774:	6839      	ldr	r1, [r7, #0]
 800a776:	6878      	ldr	r0, [r7, #4]
 800a778:	f000 fcb4 	bl	800b0e4 <USBD_GetStatus>
          break;
 800a77c:	e00e      	b.n	800a79c <USBD_StdDevReq+0xcc>

        case USB_REQ_SET_FEATURE:
          USBD_SetFeature(pdev, req);
 800a77e:	6839      	ldr	r1, [r7, #0]
 800a780:	6878      	ldr	r0, [r7, #4]
 800a782:	f000 fce3 	bl	800b14c <USBD_SetFeature>
          break;
 800a786:	e009      	b.n	800a79c <USBD_StdDevReq+0xcc>

        case USB_REQ_CLEAR_FEATURE:
          USBD_ClrFeature(pdev, req);
 800a788:	6839      	ldr	r1, [r7, #0]
 800a78a:	6878      	ldr	r0, [r7, #4]
 800a78c:	f000 fd07 	bl	800b19e <USBD_ClrFeature>
          break;
 800a790:	e004      	b.n	800a79c <USBD_StdDevReq+0xcc>

        default:
          USBD_CtlError(pdev, req);
 800a792:	6839      	ldr	r1, [r7, #0]
 800a794:	6878      	ldr	r0, [r7, #4]
 800a796:	f000 fd5e 	bl	800b256 <USBD_CtlError>
          break;
 800a79a:	bf00      	nop
      }
      break;
 800a79c:	e004      	b.n	800a7a8 <USBD_StdDevReq+0xd8>

    default:
      USBD_CtlError(pdev, req);
 800a79e:	6839      	ldr	r1, [r7, #0]
 800a7a0:	6878      	ldr	r0, [r7, #4]
 800a7a2:	f000 fd58 	bl	800b256 <USBD_CtlError>
      break;
 800a7a6:	bf00      	nop
  }

  return ret;
 800a7a8:	7bfb      	ldrb	r3, [r7, #15]
}
 800a7aa:	4618      	mov	r0, r3
 800a7ac:	3710      	adds	r7, #16
 800a7ae:	46bd      	mov	sp, r7
 800a7b0:	bd80      	pop	{r7, pc}
 800a7b2:	bf00      	nop

0800a7b4 <USBD_StdItfReq>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
USBD_StatusTypeDef USBD_StdItfReq(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800a7b4:	b580      	push	{r7, lr}
 800a7b6:	b084      	sub	sp, #16
 800a7b8:	af00      	add	r7, sp, #0
 800a7ba:	6078      	str	r0, [r7, #4]
 800a7bc:	6039      	str	r1, [r7, #0]
  USBD_StatusTypeDef ret = USBD_OK;
 800a7be:	2300      	movs	r3, #0
 800a7c0:	73fb      	strb	r3, [r7, #15]
  uint8_t idx;

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800a7c2:	683b      	ldr	r3, [r7, #0]
 800a7c4:	781b      	ldrb	r3, [r3, #0]
 800a7c6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800a7ca:	2b40      	cmp	r3, #64	; 0x40
 800a7cc:	d005      	beq.n	800a7da <USBD_StdItfReq+0x26>
 800a7ce:	2b40      	cmp	r3, #64	; 0x40
 800a7d0:	d852      	bhi.n	800a878 <USBD_StdItfReq+0xc4>
 800a7d2:	2b00      	cmp	r3, #0
 800a7d4:	d001      	beq.n	800a7da <USBD_StdItfReq+0x26>
 800a7d6:	2b20      	cmp	r3, #32
 800a7d8:	d14e      	bne.n	800a878 <USBD_StdItfReq+0xc4>
  {
    case USB_REQ_TYPE_CLASS:
    case USB_REQ_TYPE_VENDOR:
    case USB_REQ_TYPE_STANDARD:
      switch (pdev->dev_state)
 800a7da:	687b      	ldr	r3, [r7, #4]
 800a7dc:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800a7e0:	b2db      	uxtb	r3, r3
 800a7e2:	3b01      	subs	r3, #1
 800a7e4:	2b02      	cmp	r3, #2
 800a7e6:	d840      	bhi.n	800a86a <USBD_StdItfReq+0xb6>
      {
        case USBD_STATE_DEFAULT:
        case USBD_STATE_ADDRESSED:
        case USBD_STATE_CONFIGURED:

          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 800a7e8:	683b      	ldr	r3, [r7, #0]
 800a7ea:	889b      	ldrh	r3, [r3, #4]
 800a7ec:	b2db      	uxtb	r3, r3
 800a7ee:	2b01      	cmp	r3, #1
 800a7f0:	d836      	bhi.n	800a860 <USBD_StdItfReq+0xac>
          {
            /* Get the class index relative to this interface */
            idx = USBD_CoreFindIF(pdev, LOBYTE(req->wIndex));
 800a7f2:	683b      	ldr	r3, [r7, #0]
 800a7f4:	889b      	ldrh	r3, [r3, #4]
 800a7f6:	b2db      	uxtb	r3, r3
 800a7f8:	4619      	mov	r1, r3
 800a7fa:	6878      	ldr	r0, [r7, #4]
 800a7fc:	f7ff fed9 	bl	800a5b2 <USBD_CoreFindIF>
 800a800:	4603      	mov	r3, r0
 800a802:	73bb      	strb	r3, [r7, #14]
            if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 800a804:	7bbb      	ldrb	r3, [r7, #14]
 800a806:	2bff      	cmp	r3, #255	; 0xff
 800a808:	d01d      	beq.n	800a846 <USBD_StdItfReq+0x92>
 800a80a:	7bbb      	ldrb	r3, [r7, #14]
 800a80c:	2b00      	cmp	r3, #0
 800a80e:	d11a      	bne.n	800a846 <USBD_StdItfReq+0x92>
            {
              /* Call the class data out function to manage the request */
              if (pdev->pClass[idx]->Setup != NULL)
 800a810:	7bba      	ldrb	r2, [r7, #14]
 800a812:	687b      	ldr	r3, [r7, #4]
 800a814:	32ae      	adds	r2, #174	; 0xae
 800a816:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a81a:	689b      	ldr	r3, [r3, #8]
 800a81c:	2b00      	cmp	r3, #0
 800a81e:	d00f      	beq.n	800a840 <USBD_StdItfReq+0x8c>
              {
                pdev->classId = idx;
 800a820:	7bba      	ldrb	r2, [r7, #14]
 800a822:	687b      	ldr	r3, [r7, #4]
 800a824:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
                ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 800a828:	7bba      	ldrb	r2, [r7, #14]
 800a82a:	687b      	ldr	r3, [r7, #4]
 800a82c:	32ae      	adds	r2, #174	; 0xae
 800a82e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a832:	689b      	ldr	r3, [r3, #8]
 800a834:	6839      	ldr	r1, [r7, #0]
 800a836:	6878      	ldr	r0, [r7, #4]
 800a838:	4798      	blx	r3
 800a83a:	4603      	mov	r3, r0
 800a83c:	73fb      	strb	r3, [r7, #15]
              if (pdev->pClass[idx]->Setup != NULL)
 800a83e:	e004      	b.n	800a84a <USBD_StdItfReq+0x96>
              }
              else
              {
                /* should never reach this condition */
                ret = USBD_FAIL;
 800a840:	2303      	movs	r3, #3
 800a842:	73fb      	strb	r3, [r7, #15]
              if (pdev->pClass[idx]->Setup != NULL)
 800a844:	e001      	b.n	800a84a <USBD_StdItfReq+0x96>
              }
            }
            else
            {
              /* No relative interface found */
              ret = USBD_FAIL;
 800a846:	2303      	movs	r3, #3
 800a848:	73fb      	strb	r3, [r7, #15]
            }

            if ((req->wLength == 0U) && (ret == USBD_OK))
 800a84a:	683b      	ldr	r3, [r7, #0]
 800a84c:	88db      	ldrh	r3, [r3, #6]
 800a84e:	2b00      	cmp	r3, #0
 800a850:	d110      	bne.n	800a874 <USBD_StdItfReq+0xc0>
 800a852:	7bfb      	ldrb	r3, [r7, #15]
 800a854:	2b00      	cmp	r3, #0
 800a856:	d10d      	bne.n	800a874 <USBD_StdItfReq+0xc0>
            {
              (void)USBD_CtlSendStatus(pdev);
 800a858:	6878      	ldr	r0, [r7, #4]
 800a85a:	f000 fdc7 	bl	800b3ec <USBD_CtlSendStatus>
          }
          else
          {
            USBD_CtlError(pdev, req);
          }
          break;
 800a85e:	e009      	b.n	800a874 <USBD_StdItfReq+0xc0>
            USBD_CtlError(pdev, req);
 800a860:	6839      	ldr	r1, [r7, #0]
 800a862:	6878      	ldr	r0, [r7, #4]
 800a864:	f000 fcf7 	bl	800b256 <USBD_CtlError>
          break;
 800a868:	e004      	b.n	800a874 <USBD_StdItfReq+0xc0>

        default:
          USBD_CtlError(pdev, req);
 800a86a:	6839      	ldr	r1, [r7, #0]
 800a86c:	6878      	ldr	r0, [r7, #4]
 800a86e:	f000 fcf2 	bl	800b256 <USBD_CtlError>
          break;
 800a872:	e000      	b.n	800a876 <USBD_StdItfReq+0xc2>
          break;
 800a874:	bf00      	nop
      }
      break;
 800a876:	e004      	b.n	800a882 <USBD_StdItfReq+0xce>

    default:
      USBD_CtlError(pdev, req);
 800a878:	6839      	ldr	r1, [r7, #0]
 800a87a:	6878      	ldr	r0, [r7, #4]
 800a87c:	f000 fceb 	bl	800b256 <USBD_CtlError>
      break;
 800a880:	bf00      	nop
  }

  return ret;
 800a882:	7bfb      	ldrb	r3, [r7, #15]
}
 800a884:	4618      	mov	r0, r3
 800a886:	3710      	adds	r7, #16
 800a888:	46bd      	mov	sp, r7
 800a88a:	bd80      	pop	{r7, pc}

0800a88c <USBD_StdEPReq>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
USBD_StatusTypeDef USBD_StdEPReq(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800a88c:	b580      	push	{r7, lr}
 800a88e:	b084      	sub	sp, #16
 800a890:	af00      	add	r7, sp, #0
 800a892:	6078      	str	r0, [r7, #4]
 800a894:	6039      	str	r1, [r7, #0]
  USBD_EndpointTypeDef *pep;
  uint8_t ep_addr;
  uint8_t idx;
  USBD_StatusTypeDef ret = USBD_OK;
 800a896:	2300      	movs	r3, #0
 800a898:	73fb      	strb	r3, [r7, #15]

  ep_addr = LOBYTE(req->wIndex);
 800a89a:	683b      	ldr	r3, [r7, #0]
 800a89c:	889b      	ldrh	r3, [r3, #4]
 800a89e:	73bb      	strb	r3, [r7, #14]

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800a8a0:	683b      	ldr	r3, [r7, #0]
 800a8a2:	781b      	ldrb	r3, [r3, #0]
 800a8a4:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800a8a8:	2b40      	cmp	r3, #64	; 0x40
 800a8aa:	d007      	beq.n	800a8bc <USBD_StdEPReq+0x30>
 800a8ac:	2b40      	cmp	r3, #64	; 0x40
 800a8ae:	f200 817f 	bhi.w	800abb0 <USBD_StdEPReq+0x324>
 800a8b2:	2b00      	cmp	r3, #0
 800a8b4:	d02a      	beq.n	800a90c <USBD_StdEPReq+0x80>
 800a8b6:	2b20      	cmp	r3, #32
 800a8b8:	f040 817a 	bne.w	800abb0 <USBD_StdEPReq+0x324>
  {
    case USB_REQ_TYPE_CLASS:
    case USB_REQ_TYPE_VENDOR:
      /* Get the class index relative to this endpoint */
      idx = USBD_CoreFindEP(pdev, ep_addr);
 800a8bc:	7bbb      	ldrb	r3, [r7, #14]
 800a8be:	4619      	mov	r1, r3
 800a8c0:	6878      	ldr	r0, [r7, #4]
 800a8c2:	f7ff fe83 	bl	800a5cc <USBD_CoreFindEP>
 800a8c6:	4603      	mov	r3, r0
 800a8c8:	737b      	strb	r3, [r7, #13]
      if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 800a8ca:	7b7b      	ldrb	r3, [r7, #13]
 800a8cc:	2bff      	cmp	r3, #255	; 0xff
 800a8ce:	f000 8174 	beq.w	800abba <USBD_StdEPReq+0x32e>
 800a8d2:	7b7b      	ldrb	r3, [r7, #13]
 800a8d4:	2b00      	cmp	r3, #0
 800a8d6:	f040 8170 	bne.w	800abba <USBD_StdEPReq+0x32e>
      {
        pdev->classId = idx;
 800a8da:	7b7a      	ldrb	r2, [r7, #13]
 800a8dc:	687b      	ldr	r3, [r7, #4]
 800a8de:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
        /* Call the class data out function to manage the request */
        if (pdev->pClass[idx]->Setup != NULL)
 800a8e2:	7b7a      	ldrb	r2, [r7, #13]
 800a8e4:	687b      	ldr	r3, [r7, #4]
 800a8e6:	32ae      	adds	r2, #174	; 0xae
 800a8e8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a8ec:	689b      	ldr	r3, [r3, #8]
 800a8ee:	2b00      	cmp	r3, #0
 800a8f0:	f000 8163 	beq.w	800abba <USBD_StdEPReq+0x32e>
        {
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->Setup(pdev, req);
 800a8f4:	7b7a      	ldrb	r2, [r7, #13]
 800a8f6:	687b      	ldr	r3, [r7, #4]
 800a8f8:	32ae      	adds	r2, #174	; 0xae
 800a8fa:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a8fe:	689b      	ldr	r3, [r3, #8]
 800a900:	6839      	ldr	r1, [r7, #0]
 800a902:	6878      	ldr	r0, [r7, #4]
 800a904:	4798      	blx	r3
 800a906:	4603      	mov	r3, r0
 800a908:	73fb      	strb	r3, [r7, #15]
        }
      }
      break;
 800a90a:	e156      	b.n	800abba <USBD_StdEPReq+0x32e>

    case USB_REQ_TYPE_STANDARD:
      switch (req->bRequest)
 800a90c:	683b      	ldr	r3, [r7, #0]
 800a90e:	785b      	ldrb	r3, [r3, #1]
 800a910:	2b03      	cmp	r3, #3
 800a912:	d008      	beq.n	800a926 <USBD_StdEPReq+0x9a>
 800a914:	2b03      	cmp	r3, #3
 800a916:	f300 8145 	bgt.w	800aba4 <USBD_StdEPReq+0x318>
 800a91a:	2b00      	cmp	r3, #0
 800a91c:	f000 809b 	beq.w	800aa56 <USBD_StdEPReq+0x1ca>
 800a920:	2b01      	cmp	r3, #1
 800a922:	d03c      	beq.n	800a99e <USBD_StdEPReq+0x112>
 800a924:	e13e      	b.n	800aba4 <USBD_StdEPReq+0x318>
      {
        case USB_REQ_SET_FEATURE:
          switch (pdev->dev_state)
 800a926:	687b      	ldr	r3, [r7, #4]
 800a928:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800a92c:	b2db      	uxtb	r3, r3
 800a92e:	2b02      	cmp	r3, #2
 800a930:	d002      	beq.n	800a938 <USBD_StdEPReq+0xac>
 800a932:	2b03      	cmp	r3, #3
 800a934:	d016      	beq.n	800a964 <USBD_StdEPReq+0xd8>
 800a936:	e02c      	b.n	800a992 <USBD_StdEPReq+0x106>
          {
            case USBD_STATE_ADDRESSED:
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 800a938:	7bbb      	ldrb	r3, [r7, #14]
 800a93a:	2b00      	cmp	r3, #0
 800a93c:	d00d      	beq.n	800a95a <USBD_StdEPReq+0xce>
 800a93e:	7bbb      	ldrb	r3, [r7, #14]
 800a940:	2b80      	cmp	r3, #128	; 0x80
 800a942:	d00a      	beq.n	800a95a <USBD_StdEPReq+0xce>
              {
                (void)USBD_LL_StallEP(pdev, ep_addr);
 800a944:	7bbb      	ldrb	r3, [r7, #14]
 800a946:	4619      	mov	r1, r3
 800a948:	6878      	ldr	r0, [r7, #4]
 800a94a:	f001 fd2d 	bl	800c3a8 <USBD_LL_StallEP>
                (void)USBD_LL_StallEP(pdev, 0x80U);
 800a94e:	2180      	movs	r1, #128	; 0x80
 800a950:	6878      	ldr	r0, [r7, #4]
 800a952:	f001 fd29 	bl	800c3a8 <USBD_LL_StallEP>
 800a956:	bf00      	nop
              }
              else
              {
                USBD_CtlError(pdev, req);
              }
              break;
 800a958:	e020      	b.n	800a99c <USBD_StdEPReq+0x110>
                USBD_CtlError(pdev, req);
 800a95a:	6839      	ldr	r1, [r7, #0]
 800a95c:	6878      	ldr	r0, [r7, #4]
 800a95e:	f000 fc7a 	bl	800b256 <USBD_CtlError>
              break;
 800a962:	e01b      	b.n	800a99c <USBD_StdEPReq+0x110>

            case USBD_STATE_CONFIGURED:
              if (req->wValue == USB_FEATURE_EP_HALT)
 800a964:	683b      	ldr	r3, [r7, #0]
 800a966:	885b      	ldrh	r3, [r3, #2]
 800a968:	2b00      	cmp	r3, #0
 800a96a:	d10e      	bne.n	800a98a <USBD_StdEPReq+0xfe>
              {
                if ((ep_addr != 0x00U) && (ep_addr != 0x80U) && (req->wLength == 0x00U))
 800a96c:	7bbb      	ldrb	r3, [r7, #14]
 800a96e:	2b00      	cmp	r3, #0
 800a970:	d00b      	beq.n	800a98a <USBD_StdEPReq+0xfe>
 800a972:	7bbb      	ldrb	r3, [r7, #14]
 800a974:	2b80      	cmp	r3, #128	; 0x80
 800a976:	d008      	beq.n	800a98a <USBD_StdEPReq+0xfe>
 800a978:	683b      	ldr	r3, [r7, #0]
 800a97a:	88db      	ldrh	r3, [r3, #6]
 800a97c:	2b00      	cmp	r3, #0
 800a97e:	d104      	bne.n	800a98a <USBD_StdEPReq+0xfe>
                {
                  (void)USBD_LL_StallEP(pdev, ep_addr);
 800a980:	7bbb      	ldrb	r3, [r7, #14]
 800a982:	4619      	mov	r1, r3
 800a984:	6878      	ldr	r0, [r7, #4]
 800a986:	f001 fd0f 	bl	800c3a8 <USBD_LL_StallEP>
                }
              }
              (void)USBD_CtlSendStatus(pdev);
 800a98a:	6878      	ldr	r0, [r7, #4]
 800a98c:	f000 fd2e 	bl	800b3ec <USBD_CtlSendStatus>

              break;
 800a990:	e004      	b.n	800a99c <USBD_StdEPReq+0x110>

            default:
              USBD_CtlError(pdev, req);
 800a992:	6839      	ldr	r1, [r7, #0]
 800a994:	6878      	ldr	r0, [r7, #4]
 800a996:	f000 fc5e 	bl	800b256 <USBD_CtlError>
              break;
 800a99a:	bf00      	nop
          }
          break;
 800a99c:	e107      	b.n	800abae <USBD_StdEPReq+0x322>

        case USB_REQ_CLEAR_FEATURE:

          switch (pdev->dev_state)
 800a99e:	687b      	ldr	r3, [r7, #4]
 800a9a0:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800a9a4:	b2db      	uxtb	r3, r3
 800a9a6:	2b02      	cmp	r3, #2
 800a9a8:	d002      	beq.n	800a9b0 <USBD_StdEPReq+0x124>
 800a9aa:	2b03      	cmp	r3, #3
 800a9ac:	d016      	beq.n	800a9dc <USBD_StdEPReq+0x150>
 800a9ae:	e04b      	b.n	800aa48 <USBD_StdEPReq+0x1bc>
          {
            case USBD_STATE_ADDRESSED:
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 800a9b0:	7bbb      	ldrb	r3, [r7, #14]
 800a9b2:	2b00      	cmp	r3, #0
 800a9b4:	d00d      	beq.n	800a9d2 <USBD_StdEPReq+0x146>
 800a9b6:	7bbb      	ldrb	r3, [r7, #14]
 800a9b8:	2b80      	cmp	r3, #128	; 0x80
 800a9ba:	d00a      	beq.n	800a9d2 <USBD_StdEPReq+0x146>
              {
                (void)USBD_LL_StallEP(pdev, ep_addr);
 800a9bc:	7bbb      	ldrb	r3, [r7, #14]
 800a9be:	4619      	mov	r1, r3
 800a9c0:	6878      	ldr	r0, [r7, #4]
 800a9c2:	f001 fcf1 	bl	800c3a8 <USBD_LL_StallEP>
                (void)USBD_LL_StallEP(pdev, 0x80U);
 800a9c6:	2180      	movs	r1, #128	; 0x80
 800a9c8:	6878      	ldr	r0, [r7, #4]
 800a9ca:	f001 fced 	bl	800c3a8 <USBD_LL_StallEP>
 800a9ce:	bf00      	nop
              }
              else
              {
                USBD_CtlError(pdev, req);
              }
              break;
 800a9d0:	e040      	b.n	800aa54 <USBD_StdEPReq+0x1c8>
                USBD_CtlError(pdev, req);
 800a9d2:	6839      	ldr	r1, [r7, #0]
 800a9d4:	6878      	ldr	r0, [r7, #4]
 800a9d6:	f000 fc3e 	bl	800b256 <USBD_CtlError>
              break;
 800a9da:	e03b      	b.n	800aa54 <USBD_StdEPReq+0x1c8>

            case USBD_STATE_CONFIGURED:
              if (req->wValue == USB_FEATURE_EP_HALT)
 800a9dc:	683b      	ldr	r3, [r7, #0]
 800a9de:	885b      	ldrh	r3, [r3, #2]
 800a9e0:	2b00      	cmp	r3, #0
 800a9e2:	d136      	bne.n	800aa52 <USBD_StdEPReq+0x1c6>
              {
                if ((ep_addr & 0x7FU) != 0x00U)
 800a9e4:	7bbb      	ldrb	r3, [r7, #14]
 800a9e6:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a9ea:	2b00      	cmp	r3, #0
 800a9ec:	d004      	beq.n	800a9f8 <USBD_StdEPReq+0x16c>
                {
                  (void)USBD_LL_ClearStallEP(pdev, ep_addr);
 800a9ee:	7bbb      	ldrb	r3, [r7, #14]
 800a9f0:	4619      	mov	r1, r3
 800a9f2:	6878      	ldr	r0, [r7, #4]
 800a9f4:	f001 fcf7 	bl	800c3e6 <USBD_LL_ClearStallEP>
                }
                (void)USBD_CtlSendStatus(pdev);
 800a9f8:	6878      	ldr	r0, [r7, #4]
 800a9fa:	f000 fcf7 	bl	800b3ec <USBD_CtlSendStatus>

                /* Get the class index relative to this interface */
                idx = USBD_CoreFindEP(pdev, ep_addr);
 800a9fe:	7bbb      	ldrb	r3, [r7, #14]
 800aa00:	4619      	mov	r1, r3
 800aa02:	6878      	ldr	r0, [r7, #4]
 800aa04:	f7ff fde2 	bl	800a5cc <USBD_CoreFindEP>
 800aa08:	4603      	mov	r3, r0
 800aa0a:	737b      	strb	r3, [r7, #13]
                if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 800aa0c:	7b7b      	ldrb	r3, [r7, #13]
 800aa0e:	2bff      	cmp	r3, #255	; 0xff
 800aa10:	d01f      	beq.n	800aa52 <USBD_StdEPReq+0x1c6>
 800aa12:	7b7b      	ldrb	r3, [r7, #13]
 800aa14:	2b00      	cmp	r3, #0
 800aa16:	d11c      	bne.n	800aa52 <USBD_StdEPReq+0x1c6>
                {
                  pdev->classId = idx;
 800aa18:	7b7a      	ldrb	r2, [r7, #13]
 800aa1a:	687b      	ldr	r3, [r7, #4]
 800aa1c:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
                  /* Call the class data out function to manage the request */
                  if (pdev->pClass[idx]->Setup != NULL)
 800aa20:	7b7a      	ldrb	r2, [r7, #13]
 800aa22:	687b      	ldr	r3, [r7, #4]
 800aa24:	32ae      	adds	r2, #174	; 0xae
 800aa26:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800aa2a:	689b      	ldr	r3, [r3, #8]
 800aa2c:	2b00      	cmp	r3, #0
 800aa2e:	d010      	beq.n	800aa52 <USBD_StdEPReq+0x1c6>
                  {
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 800aa30:	7b7a      	ldrb	r2, [r7, #13]
 800aa32:	687b      	ldr	r3, [r7, #4]
 800aa34:	32ae      	adds	r2, #174	; 0xae
 800aa36:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800aa3a:	689b      	ldr	r3, [r3, #8]
 800aa3c:	6839      	ldr	r1, [r7, #0]
 800aa3e:	6878      	ldr	r0, [r7, #4]
 800aa40:	4798      	blx	r3
 800aa42:	4603      	mov	r3, r0
 800aa44:	73fb      	strb	r3, [r7, #15]
                  }
                }
              }
              break;
 800aa46:	e004      	b.n	800aa52 <USBD_StdEPReq+0x1c6>

            default:
              USBD_CtlError(pdev, req);
 800aa48:	6839      	ldr	r1, [r7, #0]
 800aa4a:	6878      	ldr	r0, [r7, #4]
 800aa4c:	f000 fc03 	bl	800b256 <USBD_CtlError>
              break;
 800aa50:	e000      	b.n	800aa54 <USBD_StdEPReq+0x1c8>
              break;
 800aa52:	bf00      	nop
          }
          break;
 800aa54:	e0ab      	b.n	800abae <USBD_StdEPReq+0x322>

        case USB_REQ_GET_STATUS:
          switch (pdev->dev_state)
 800aa56:	687b      	ldr	r3, [r7, #4]
 800aa58:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800aa5c:	b2db      	uxtb	r3, r3
 800aa5e:	2b02      	cmp	r3, #2
 800aa60:	d002      	beq.n	800aa68 <USBD_StdEPReq+0x1dc>
 800aa62:	2b03      	cmp	r3, #3
 800aa64:	d032      	beq.n	800aacc <USBD_StdEPReq+0x240>
 800aa66:	e097      	b.n	800ab98 <USBD_StdEPReq+0x30c>
          {
            case USBD_STATE_ADDRESSED:
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 800aa68:	7bbb      	ldrb	r3, [r7, #14]
 800aa6a:	2b00      	cmp	r3, #0
 800aa6c:	d007      	beq.n	800aa7e <USBD_StdEPReq+0x1f2>
 800aa6e:	7bbb      	ldrb	r3, [r7, #14]
 800aa70:	2b80      	cmp	r3, #128	; 0x80
 800aa72:	d004      	beq.n	800aa7e <USBD_StdEPReq+0x1f2>
              {
                USBD_CtlError(pdev, req);
 800aa74:	6839      	ldr	r1, [r7, #0]
 800aa76:	6878      	ldr	r0, [r7, #4]
 800aa78:	f000 fbed 	bl	800b256 <USBD_CtlError>
                break;
 800aa7c:	e091      	b.n	800aba2 <USBD_StdEPReq+0x316>
              }
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800aa7e:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800aa82:	2b00      	cmp	r3, #0
 800aa84:	da0b      	bge.n	800aa9e <USBD_StdEPReq+0x212>
 800aa86:	7bbb      	ldrb	r3, [r7, #14]
 800aa88:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800aa8c:	4613      	mov	r3, r2
 800aa8e:	009b      	lsls	r3, r3, #2
 800aa90:	4413      	add	r3, r2
 800aa92:	009b      	lsls	r3, r3, #2
 800aa94:	3310      	adds	r3, #16
 800aa96:	687a      	ldr	r2, [r7, #4]
 800aa98:	4413      	add	r3, r2
 800aa9a:	3304      	adds	r3, #4
 800aa9c:	e00b      	b.n	800aab6 <USBD_StdEPReq+0x22a>
                    &pdev->ep_out[ep_addr & 0x7FU];
 800aa9e:	7bbb      	ldrb	r3, [r7, #14]
 800aaa0:	f003 027f 	and.w	r2, r3, #127	; 0x7f
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800aaa4:	4613      	mov	r3, r2
 800aaa6:	009b      	lsls	r3, r3, #2
 800aaa8:	4413      	add	r3, r2
 800aaaa:	009b      	lsls	r3, r3, #2
 800aaac:	f503 73a8 	add.w	r3, r3, #336	; 0x150
 800aab0:	687a      	ldr	r2, [r7, #4]
 800aab2:	4413      	add	r3, r2
 800aab4:	3304      	adds	r3, #4
 800aab6:	60bb      	str	r3, [r7, #8]

              pep->status = 0x0000U;
 800aab8:	68bb      	ldr	r3, [r7, #8]
 800aaba:	2200      	movs	r2, #0
 800aabc:	601a      	str	r2, [r3, #0]

              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 800aabe:	68bb      	ldr	r3, [r7, #8]
 800aac0:	2202      	movs	r2, #2
 800aac2:	4619      	mov	r1, r3
 800aac4:	6878      	ldr	r0, [r7, #4]
 800aac6:	f000 fc37 	bl	800b338 <USBD_CtlSendData>
              break;
 800aaca:	e06a      	b.n	800aba2 <USBD_StdEPReq+0x316>

            case USBD_STATE_CONFIGURED:
              if ((ep_addr & 0x80U) == 0x80U)
 800aacc:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800aad0:	2b00      	cmp	r3, #0
 800aad2:	da11      	bge.n	800aaf8 <USBD_StdEPReq+0x26c>
              {
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 800aad4:	7bbb      	ldrb	r3, [r7, #14]
 800aad6:	f003 020f 	and.w	r2, r3, #15
 800aada:	6879      	ldr	r1, [r7, #4]
 800aadc:	4613      	mov	r3, r2
 800aade:	009b      	lsls	r3, r3, #2
 800aae0:	4413      	add	r3, r2
 800aae2:	009b      	lsls	r3, r3, #2
 800aae4:	440b      	add	r3, r1
 800aae6:	3324      	adds	r3, #36	; 0x24
 800aae8:	881b      	ldrh	r3, [r3, #0]
 800aaea:	2b00      	cmp	r3, #0
 800aaec:	d117      	bne.n	800ab1e <USBD_StdEPReq+0x292>
                {
                  USBD_CtlError(pdev, req);
 800aaee:	6839      	ldr	r1, [r7, #0]
 800aaf0:	6878      	ldr	r0, [r7, #4]
 800aaf2:	f000 fbb0 	bl	800b256 <USBD_CtlError>
                  break;
 800aaf6:	e054      	b.n	800aba2 <USBD_StdEPReq+0x316>
                }
              }
              else
              {
                if (pdev->ep_out[ep_addr & 0xFU].is_used == 0U)
 800aaf8:	7bbb      	ldrb	r3, [r7, #14]
 800aafa:	f003 020f 	and.w	r2, r3, #15
 800aafe:	6879      	ldr	r1, [r7, #4]
 800ab00:	4613      	mov	r3, r2
 800ab02:	009b      	lsls	r3, r3, #2
 800ab04:	4413      	add	r3, r2
 800ab06:	009b      	lsls	r3, r3, #2
 800ab08:	440b      	add	r3, r1
 800ab0a:	f503 73b2 	add.w	r3, r3, #356	; 0x164
 800ab0e:	881b      	ldrh	r3, [r3, #0]
 800ab10:	2b00      	cmp	r3, #0
 800ab12:	d104      	bne.n	800ab1e <USBD_StdEPReq+0x292>
                {
                  USBD_CtlError(pdev, req);
 800ab14:	6839      	ldr	r1, [r7, #0]
 800ab16:	6878      	ldr	r0, [r7, #4]
 800ab18:	f000 fb9d 	bl	800b256 <USBD_CtlError>
                  break;
 800ab1c:	e041      	b.n	800aba2 <USBD_StdEPReq+0x316>
                }
              }

              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800ab1e:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800ab22:	2b00      	cmp	r3, #0
 800ab24:	da0b      	bge.n	800ab3e <USBD_StdEPReq+0x2b2>
 800ab26:	7bbb      	ldrb	r3, [r7, #14]
 800ab28:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800ab2c:	4613      	mov	r3, r2
 800ab2e:	009b      	lsls	r3, r3, #2
 800ab30:	4413      	add	r3, r2
 800ab32:	009b      	lsls	r3, r3, #2
 800ab34:	3310      	adds	r3, #16
 800ab36:	687a      	ldr	r2, [r7, #4]
 800ab38:	4413      	add	r3, r2
 800ab3a:	3304      	adds	r3, #4
 800ab3c:	e00b      	b.n	800ab56 <USBD_StdEPReq+0x2ca>
                    &pdev->ep_out[ep_addr & 0x7FU];
 800ab3e:	7bbb      	ldrb	r3, [r7, #14]
 800ab40:	f003 027f 	and.w	r2, r3, #127	; 0x7f
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800ab44:	4613      	mov	r3, r2
 800ab46:	009b      	lsls	r3, r3, #2
 800ab48:	4413      	add	r3, r2
 800ab4a:	009b      	lsls	r3, r3, #2
 800ab4c:	f503 73a8 	add.w	r3, r3, #336	; 0x150
 800ab50:	687a      	ldr	r2, [r7, #4]
 800ab52:	4413      	add	r3, r2
 800ab54:	3304      	adds	r3, #4
 800ab56:	60bb      	str	r3, [r7, #8]

              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 800ab58:	7bbb      	ldrb	r3, [r7, #14]
 800ab5a:	2b00      	cmp	r3, #0
 800ab5c:	d002      	beq.n	800ab64 <USBD_StdEPReq+0x2d8>
 800ab5e:	7bbb      	ldrb	r3, [r7, #14]
 800ab60:	2b80      	cmp	r3, #128	; 0x80
 800ab62:	d103      	bne.n	800ab6c <USBD_StdEPReq+0x2e0>
              {
                pep->status = 0x0000U;
 800ab64:	68bb      	ldr	r3, [r7, #8]
 800ab66:	2200      	movs	r2, #0
 800ab68:	601a      	str	r2, [r3, #0]
 800ab6a:	e00e      	b.n	800ab8a <USBD_StdEPReq+0x2fe>
              }
              else if (USBD_LL_IsStallEP(pdev, ep_addr) != 0U)
 800ab6c:	7bbb      	ldrb	r3, [r7, #14]
 800ab6e:	4619      	mov	r1, r3
 800ab70:	6878      	ldr	r0, [r7, #4]
 800ab72:	f001 fc57 	bl	800c424 <USBD_LL_IsStallEP>
 800ab76:	4603      	mov	r3, r0
 800ab78:	2b00      	cmp	r3, #0
 800ab7a:	d003      	beq.n	800ab84 <USBD_StdEPReq+0x2f8>
              {
                pep->status = 0x0001U;
 800ab7c:	68bb      	ldr	r3, [r7, #8]
 800ab7e:	2201      	movs	r2, #1
 800ab80:	601a      	str	r2, [r3, #0]
 800ab82:	e002      	b.n	800ab8a <USBD_StdEPReq+0x2fe>
              }
              else
              {
                pep->status = 0x0000U;
 800ab84:	68bb      	ldr	r3, [r7, #8]
 800ab86:	2200      	movs	r2, #0
 800ab88:	601a      	str	r2, [r3, #0]
              }

              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 800ab8a:	68bb      	ldr	r3, [r7, #8]
 800ab8c:	2202      	movs	r2, #2
 800ab8e:	4619      	mov	r1, r3
 800ab90:	6878      	ldr	r0, [r7, #4]
 800ab92:	f000 fbd1 	bl	800b338 <USBD_CtlSendData>
              break;
 800ab96:	e004      	b.n	800aba2 <USBD_StdEPReq+0x316>

            default:
              USBD_CtlError(pdev, req);
 800ab98:	6839      	ldr	r1, [r7, #0]
 800ab9a:	6878      	ldr	r0, [r7, #4]
 800ab9c:	f000 fb5b 	bl	800b256 <USBD_CtlError>
              break;
 800aba0:	bf00      	nop
          }
          break;
 800aba2:	e004      	b.n	800abae <USBD_StdEPReq+0x322>

        default:
          USBD_CtlError(pdev, req);
 800aba4:	6839      	ldr	r1, [r7, #0]
 800aba6:	6878      	ldr	r0, [r7, #4]
 800aba8:	f000 fb55 	bl	800b256 <USBD_CtlError>
          break;
 800abac:	bf00      	nop
      }
      break;
 800abae:	e005      	b.n	800abbc <USBD_StdEPReq+0x330>

    default:
      USBD_CtlError(pdev, req);
 800abb0:	6839      	ldr	r1, [r7, #0]
 800abb2:	6878      	ldr	r0, [r7, #4]
 800abb4:	f000 fb4f 	bl	800b256 <USBD_CtlError>
      break;
 800abb8:	e000      	b.n	800abbc <USBD_StdEPReq+0x330>
      break;
 800abba:	bf00      	nop
  }

  return ret;
 800abbc:	7bfb      	ldrb	r3, [r7, #15]
}
 800abbe:	4618      	mov	r0, r3
 800abc0:	3710      	adds	r7, #16
 800abc2:	46bd      	mov	sp, r7
 800abc4:	bd80      	pop	{r7, pc}
	...

0800abc8 <USBD_GetDescriptor>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
static void USBD_GetDescriptor(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800abc8:	b580      	push	{r7, lr}
 800abca:	b084      	sub	sp, #16
 800abcc:	af00      	add	r7, sp, #0
 800abce:	6078      	str	r0, [r7, #4]
 800abd0:	6039      	str	r1, [r7, #0]
  uint16_t len = 0U;
 800abd2:	2300      	movs	r3, #0
 800abd4:	813b      	strh	r3, [r7, #8]
  uint8_t *pbuf = NULL;
 800abd6:	2300      	movs	r3, #0
 800abd8:	60fb      	str	r3, [r7, #12]
  uint8_t err = 0U;
 800abda:	2300      	movs	r3, #0
 800abdc:	72fb      	strb	r3, [r7, #11]

  switch (req->wValue >> 8)
 800abde:	683b      	ldr	r3, [r7, #0]
 800abe0:	885b      	ldrh	r3, [r3, #2]
 800abe2:	0a1b      	lsrs	r3, r3, #8
 800abe4:	b29b      	uxth	r3, r3
 800abe6:	3b01      	subs	r3, #1
 800abe8:	2b06      	cmp	r3, #6
 800abea:	f200 8128 	bhi.w	800ae3e <USBD_GetDescriptor+0x276>
 800abee:	a201      	add	r2, pc, #4	; (adr r2, 800abf4 <USBD_GetDescriptor+0x2c>)
 800abf0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800abf4:	0800ac11 	.word	0x0800ac11
 800abf8:	0800ac29 	.word	0x0800ac29
 800abfc:	0800ac69 	.word	0x0800ac69
 800ac00:	0800ae3f 	.word	0x0800ae3f
 800ac04:	0800ae3f 	.word	0x0800ae3f
 800ac08:	0800addf 	.word	0x0800addf
 800ac0c:	0800ae0b 	.word	0x0800ae0b
        err++;
      }
      break;
#endif /* (USBD_LPM_ENABLED == 1U) || (USBD_CLASS_BOS_ENABLED == 1U) */
    case USB_DESC_TYPE_DEVICE:
      pbuf = pdev->pDesc->GetDeviceDescriptor(pdev->dev_speed, &len);
 800ac10:	687b      	ldr	r3, [r7, #4]
 800ac12:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800ac16:	681b      	ldr	r3, [r3, #0]
 800ac18:	687a      	ldr	r2, [r7, #4]
 800ac1a:	7c12      	ldrb	r2, [r2, #16]
 800ac1c:	f107 0108 	add.w	r1, r7, #8
 800ac20:	4610      	mov	r0, r2
 800ac22:	4798      	blx	r3
 800ac24:	60f8      	str	r0, [r7, #12]
      break;
 800ac26:	e112      	b.n	800ae4e <USBD_GetDescriptor+0x286>

    case USB_DESC_TYPE_CONFIGURATION:
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800ac28:	687b      	ldr	r3, [r7, #4]
 800ac2a:	7c1b      	ldrb	r3, [r3, #16]
 800ac2c:	2b00      	cmp	r3, #0
 800ac2e:	d10d      	bne.n	800ac4c <USBD_GetDescriptor+0x84>
          pbuf   = (uint8_t *)USBD_CMPSIT.GetHSConfigDescriptor(&len);
        }
        else
#endif /* USE_USBD_COMPOSITE */
        {
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
 800ac30:	687b      	ldr	r3, [r7, #4]
 800ac32:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800ac36:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ac38:	f107 0208 	add.w	r2, r7, #8
 800ac3c:	4610      	mov	r0, r2
 800ac3e:	4798      	blx	r3
 800ac40:	60f8      	str	r0, [r7, #12]
        }
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 800ac42:	68fb      	ldr	r3, [r7, #12]
 800ac44:	3301      	adds	r3, #1
 800ac46:	2202      	movs	r2, #2
 800ac48:	701a      	strb	r2, [r3, #0]
        {
          pbuf   = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
        }
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
      }
      break;
 800ac4a:	e100      	b.n	800ae4e <USBD_GetDescriptor+0x286>
          pbuf   = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
 800ac4c:	687b      	ldr	r3, [r7, #4]
 800ac4e:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800ac52:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ac54:	f107 0208 	add.w	r2, r7, #8
 800ac58:	4610      	mov	r0, r2
 800ac5a:	4798      	blx	r3
 800ac5c:	60f8      	str	r0, [r7, #12]
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 800ac5e:	68fb      	ldr	r3, [r7, #12]
 800ac60:	3301      	adds	r3, #1
 800ac62:	2202      	movs	r2, #2
 800ac64:	701a      	strb	r2, [r3, #0]
      break;
 800ac66:	e0f2      	b.n	800ae4e <USBD_GetDescriptor+0x286>

    case USB_DESC_TYPE_STRING:
      switch ((uint8_t)(req->wValue))
 800ac68:	683b      	ldr	r3, [r7, #0]
 800ac6a:	885b      	ldrh	r3, [r3, #2]
 800ac6c:	b2db      	uxtb	r3, r3
 800ac6e:	2b05      	cmp	r3, #5
 800ac70:	f200 80ac 	bhi.w	800adcc <USBD_GetDescriptor+0x204>
 800ac74:	a201      	add	r2, pc, #4	; (adr r2, 800ac7c <USBD_GetDescriptor+0xb4>)
 800ac76:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800ac7a:	bf00      	nop
 800ac7c:	0800ac95 	.word	0x0800ac95
 800ac80:	0800acc9 	.word	0x0800acc9
 800ac84:	0800acfd 	.word	0x0800acfd
 800ac88:	0800ad31 	.word	0x0800ad31
 800ac8c:	0800ad65 	.word	0x0800ad65
 800ac90:	0800ad99 	.word	0x0800ad99
      {
        case USBD_IDX_LANGID_STR:
          if (pdev->pDesc->GetLangIDStrDescriptor != NULL)
 800ac94:	687b      	ldr	r3, [r7, #4]
 800ac96:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800ac9a:	685b      	ldr	r3, [r3, #4]
 800ac9c:	2b00      	cmp	r3, #0
 800ac9e:	d00b      	beq.n	800acb8 <USBD_GetDescriptor+0xf0>
          {
            pbuf = pdev->pDesc->GetLangIDStrDescriptor(pdev->dev_speed, &len);
 800aca0:	687b      	ldr	r3, [r7, #4]
 800aca2:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800aca6:	685b      	ldr	r3, [r3, #4]
 800aca8:	687a      	ldr	r2, [r7, #4]
 800acaa:	7c12      	ldrb	r2, [r2, #16]
 800acac:	f107 0108 	add.w	r1, r7, #8
 800acb0:	4610      	mov	r0, r2
 800acb2:	4798      	blx	r3
 800acb4:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 800acb6:	e091      	b.n	800addc <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 800acb8:	6839      	ldr	r1, [r7, #0]
 800acba:	6878      	ldr	r0, [r7, #4]
 800acbc:	f000 facb 	bl	800b256 <USBD_CtlError>
            err++;
 800acc0:	7afb      	ldrb	r3, [r7, #11]
 800acc2:	3301      	adds	r3, #1
 800acc4:	72fb      	strb	r3, [r7, #11]
          break;
 800acc6:	e089      	b.n	800addc <USBD_GetDescriptor+0x214>

        case USBD_IDX_MFC_STR:
          if (pdev->pDesc->GetManufacturerStrDescriptor != NULL)
 800acc8:	687b      	ldr	r3, [r7, #4]
 800acca:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800acce:	689b      	ldr	r3, [r3, #8]
 800acd0:	2b00      	cmp	r3, #0
 800acd2:	d00b      	beq.n	800acec <USBD_GetDescriptor+0x124>
          {
            pbuf = pdev->pDesc->GetManufacturerStrDescriptor(pdev->dev_speed, &len);
 800acd4:	687b      	ldr	r3, [r7, #4]
 800acd6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800acda:	689b      	ldr	r3, [r3, #8]
 800acdc:	687a      	ldr	r2, [r7, #4]
 800acde:	7c12      	ldrb	r2, [r2, #16]
 800ace0:	f107 0108 	add.w	r1, r7, #8
 800ace4:	4610      	mov	r0, r2
 800ace6:	4798      	blx	r3
 800ace8:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 800acea:	e077      	b.n	800addc <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 800acec:	6839      	ldr	r1, [r7, #0]
 800acee:	6878      	ldr	r0, [r7, #4]
 800acf0:	f000 fab1 	bl	800b256 <USBD_CtlError>
            err++;
 800acf4:	7afb      	ldrb	r3, [r7, #11]
 800acf6:	3301      	adds	r3, #1
 800acf8:	72fb      	strb	r3, [r7, #11]
          break;
 800acfa:	e06f      	b.n	800addc <USBD_GetDescriptor+0x214>

        case USBD_IDX_PRODUCT_STR:
          if (pdev->pDesc->GetProductStrDescriptor != NULL)
 800acfc:	687b      	ldr	r3, [r7, #4]
 800acfe:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800ad02:	68db      	ldr	r3, [r3, #12]
 800ad04:	2b00      	cmp	r3, #0
 800ad06:	d00b      	beq.n	800ad20 <USBD_GetDescriptor+0x158>
          {
            pbuf = pdev->pDesc->GetProductStrDescriptor(pdev->dev_speed, &len);
 800ad08:	687b      	ldr	r3, [r7, #4]
 800ad0a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800ad0e:	68db      	ldr	r3, [r3, #12]
 800ad10:	687a      	ldr	r2, [r7, #4]
 800ad12:	7c12      	ldrb	r2, [r2, #16]
 800ad14:	f107 0108 	add.w	r1, r7, #8
 800ad18:	4610      	mov	r0, r2
 800ad1a:	4798      	blx	r3
 800ad1c:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 800ad1e:	e05d      	b.n	800addc <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 800ad20:	6839      	ldr	r1, [r7, #0]
 800ad22:	6878      	ldr	r0, [r7, #4]
 800ad24:	f000 fa97 	bl	800b256 <USBD_CtlError>
            err++;
 800ad28:	7afb      	ldrb	r3, [r7, #11]
 800ad2a:	3301      	adds	r3, #1
 800ad2c:	72fb      	strb	r3, [r7, #11]
          break;
 800ad2e:	e055      	b.n	800addc <USBD_GetDescriptor+0x214>

        case USBD_IDX_SERIAL_STR:
          if (pdev->pDesc->GetSerialStrDescriptor != NULL)
 800ad30:	687b      	ldr	r3, [r7, #4]
 800ad32:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800ad36:	691b      	ldr	r3, [r3, #16]
 800ad38:	2b00      	cmp	r3, #0
 800ad3a:	d00b      	beq.n	800ad54 <USBD_GetDescriptor+0x18c>
          {
            pbuf = pdev->pDesc->GetSerialStrDescriptor(pdev->dev_speed, &len);
 800ad3c:	687b      	ldr	r3, [r7, #4]
 800ad3e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800ad42:	691b      	ldr	r3, [r3, #16]
 800ad44:	687a      	ldr	r2, [r7, #4]
 800ad46:	7c12      	ldrb	r2, [r2, #16]
 800ad48:	f107 0108 	add.w	r1, r7, #8
 800ad4c:	4610      	mov	r0, r2
 800ad4e:	4798      	blx	r3
 800ad50:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 800ad52:	e043      	b.n	800addc <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 800ad54:	6839      	ldr	r1, [r7, #0]
 800ad56:	6878      	ldr	r0, [r7, #4]
 800ad58:	f000 fa7d 	bl	800b256 <USBD_CtlError>
            err++;
 800ad5c:	7afb      	ldrb	r3, [r7, #11]
 800ad5e:	3301      	adds	r3, #1
 800ad60:	72fb      	strb	r3, [r7, #11]
          break;
 800ad62:	e03b      	b.n	800addc <USBD_GetDescriptor+0x214>

        case USBD_IDX_CONFIG_STR:
          if (pdev->pDesc->GetConfigurationStrDescriptor != NULL)
 800ad64:	687b      	ldr	r3, [r7, #4]
 800ad66:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800ad6a:	695b      	ldr	r3, [r3, #20]
 800ad6c:	2b00      	cmp	r3, #0
 800ad6e:	d00b      	beq.n	800ad88 <USBD_GetDescriptor+0x1c0>
          {
            pbuf = pdev->pDesc->GetConfigurationStrDescriptor(pdev->dev_speed, &len);
 800ad70:	687b      	ldr	r3, [r7, #4]
 800ad72:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800ad76:	695b      	ldr	r3, [r3, #20]
 800ad78:	687a      	ldr	r2, [r7, #4]
 800ad7a:	7c12      	ldrb	r2, [r2, #16]
 800ad7c:	f107 0108 	add.w	r1, r7, #8
 800ad80:	4610      	mov	r0, r2
 800ad82:	4798      	blx	r3
 800ad84:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 800ad86:	e029      	b.n	800addc <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 800ad88:	6839      	ldr	r1, [r7, #0]
 800ad8a:	6878      	ldr	r0, [r7, #4]
 800ad8c:	f000 fa63 	bl	800b256 <USBD_CtlError>
            err++;
 800ad90:	7afb      	ldrb	r3, [r7, #11]
 800ad92:	3301      	adds	r3, #1
 800ad94:	72fb      	strb	r3, [r7, #11]
          break;
 800ad96:	e021      	b.n	800addc <USBD_GetDescriptor+0x214>

        case USBD_IDX_INTERFACE_STR:
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 800ad98:	687b      	ldr	r3, [r7, #4]
 800ad9a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800ad9e:	699b      	ldr	r3, [r3, #24]
 800ada0:	2b00      	cmp	r3, #0
 800ada2:	d00b      	beq.n	800adbc <USBD_GetDescriptor+0x1f4>
          {
            pbuf = pdev->pDesc->GetInterfaceStrDescriptor(pdev->dev_speed, &len);
 800ada4:	687b      	ldr	r3, [r7, #4]
 800ada6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800adaa:	699b      	ldr	r3, [r3, #24]
 800adac:	687a      	ldr	r2, [r7, #4]
 800adae:	7c12      	ldrb	r2, [r2, #16]
 800adb0:	f107 0108 	add.w	r1, r7, #8
 800adb4:	4610      	mov	r0, r2
 800adb6:	4798      	blx	r3
 800adb8:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 800adba:	e00f      	b.n	800addc <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 800adbc:	6839      	ldr	r1, [r7, #0]
 800adbe:	6878      	ldr	r0, [r7, #4]
 800adc0:	f000 fa49 	bl	800b256 <USBD_CtlError>
            err++;
 800adc4:	7afb      	ldrb	r3, [r7, #11]
 800adc6:	3301      	adds	r3, #1
 800adc8:	72fb      	strb	r3, [r7, #11]
          break;
 800adca:	e007      	b.n	800addc <USBD_GetDescriptor+0x214>
            err++;
          }
#endif /* USBD_SUPPORT_USER_STRING_DESC  */

#if ((USBD_CLASS_USER_STRING_DESC == 0U) && (USBD_SUPPORT_USER_STRING_DESC == 0U))
          USBD_CtlError(pdev, req);
 800adcc:	6839      	ldr	r1, [r7, #0]
 800adce:	6878      	ldr	r0, [r7, #4]
 800add0:	f000 fa41 	bl	800b256 <USBD_CtlError>
          err++;
 800add4:	7afb      	ldrb	r3, [r7, #11]
 800add6:	3301      	adds	r3, #1
 800add8:	72fb      	strb	r3, [r7, #11]
#endif /* (USBD_CLASS_USER_STRING_DESC == 0U) && (USBD_SUPPORT_USER_STRING_DESC == 0U) */
          break;
 800adda:	bf00      	nop
      }
      break;
 800addc:	e037      	b.n	800ae4e <USBD_GetDescriptor+0x286>

    case USB_DESC_TYPE_DEVICE_QUALIFIER:
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800adde:	687b      	ldr	r3, [r7, #4]
 800ade0:	7c1b      	ldrb	r3, [r3, #16]
 800ade2:	2b00      	cmp	r3, #0
 800ade4:	d109      	bne.n	800adfa <USBD_GetDescriptor+0x232>
          pbuf = (uint8_t *)USBD_CMPSIT.GetDeviceQualifierDescriptor(&len);
        }
        else
#endif /* USE_USBD_COMPOSITE */
        {
          pbuf = (uint8_t *)pdev->pClass[0]->GetDeviceQualifierDescriptor(&len);
 800ade6:	687b      	ldr	r3, [r7, #4]
 800ade8:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800adec:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800adee:	f107 0208 	add.w	r2, r7, #8
 800adf2:	4610      	mov	r0, r2
 800adf4:	4798      	blx	r3
 800adf6:	60f8      	str	r0, [r7, #12]
      else
      {
        USBD_CtlError(pdev, req);
        err++;
      }
      break;
 800adf8:	e029      	b.n	800ae4e <USBD_GetDescriptor+0x286>
        USBD_CtlError(pdev, req);
 800adfa:	6839      	ldr	r1, [r7, #0]
 800adfc:	6878      	ldr	r0, [r7, #4]
 800adfe:	f000 fa2a 	bl	800b256 <USBD_CtlError>
        err++;
 800ae02:	7afb      	ldrb	r3, [r7, #11]
 800ae04:	3301      	adds	r3, #1
 800ae06:	72fb      	strb	r3, [r7, #11]
      break;
 800ae08:	e021      	b.n	800ae4e <USBD_GetDescriptor+0x286>

    case USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION:
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800ae0a:	687b      	ldr	r3, [r7, #4]
 800ae0c:	7c1b      	ldrb	r3, [r3, #16]
 800ae0e:	2b00      	cmp	r3, #0
 800ae10:	d10d      	bne.n	800ae2e <USBD_GetDescriptor+0x266>
          pbuf = (uint8_t *)USBD_CMPSIT.GetOtherSpeedConfigDescriptor(&len);
        }
        else
#endif /* USE_USBD_COMPOSITE */
        {
          pbuf = (uint8_t *)pdev->pClass[0]->GetOtherSpeedConfigDescriptor(&len);
 800ae12:	687b      	ldr	r3, [r7, #4]
 800ae14:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800ae18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ae1a:	f107 0208 	add.w	r2, r7, #8
 800ae1e:	4610      	mov	r0, r2
 800ae20:	4798      	blx	r3
 800ae22:	60f8      	str	r0, [r7, #12]
        }
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 800ae24:	68fb      	ldr	r3, [r7, #12]
 800ae26:	3301      	adds	r3, #1
 800ae28:	2207      	movs	r2, #7
 800ae2a:	701a      	strb	r2, [r3, #0]
      else
      {
        USBD_CtlError(pdev, req);
        err++;
      }
      break;
 800ae2c:	e00f      	b.n	800ae4e <USBD_GetDescriptor+0x286>
        USBD_CtlError(pdev, req);
 800ae2e:	6839      	ldr	r1, [r7, #0]
 800ae30:	6878      	ldr	r0, [r7, #4]
 800ae32:	f000 fa10 	bl	800b256 <USBD_CtlError>
        err++;
 800ae36:	7afb      	ldrb	r3, [r7, #11]
 800ae38:	3301      	adds	r3, #1
 800ae3a:	72fb      	strb	r3, [r7, #11]
      break;
 800ae3c:	e007      	b.n	800ae4e <USBD_GetDescriptor+0x286>

    default:
      USBD_CtlError(pdev, req);
 800ae3e:	6839      	ldr	r1, [r7, #0]
 800ae40:	6878      	ldr	r0, [r7, #4]
 800ae42:	f000 fa08 	bl	800b256 <USBD_CtlError>
      err++;
 800ae46:	7afb      	ldrb	r3, [r7, #11]
 800ae48:	3301      	adds	r3, #1
 800ae4a:	72fb      	strb	r3, [r7, #11]
      break;
 800ae4c:	bf00      	nop
  }

  if (err != 0U)
 800ae4e:	7afb      	ldrb	r3, [r7, #11]
 800ae50:	2b00      	cmp	r3, #0
 800ae52:	d11e      	bne.n	800ae92 <USBD_GetDescriptor+0x2ca>
  {
    return;
  }

  if (req->wLength != 0U)
 800ae54:	683b      	ldr	r3, [r7, #0]
 800ae56:	88db      	ldrh	r3, [r3, #6]
 800ae58:	2b00      	cmp	r3, #0
 800ae5a:	d016      	beq.n	800ae8a <USBD_GetDescriptor+0x2c2>
  {
    if (len != 0U)
 800ae5c:	893b      	ldrh	r3, [r7, #8]
 800ae5e:	2b00      	cmp	r3, #0
 800ae60:	d00e      	beq.n	800ae80 <USBD_GetDescriptor+0x2b8>
    {
      len = MIN(len, req->wLength);
 800ae62:	683b      	ldr	r3, [r7, #0]
 800ae64:	88da      	ldrh	r2, [r3, #6]
 800ae66:	893b      	ldrh	r3, [r7, #8]
 800ae68:	4293      	cmp	r3, r2
 800ae6a:	bf28      	it	cs
 800ae6c:	4613      	movcs	r3, r2
 800ae6e:	b29b      	uxth	r3, r3
 800ae70:	813b      	strh	r3, [r7, #8]
      (void)USBD_CtlSendData(pdev, pbuf, len);
 800ae72:	893b      	ldrh	r3, [r7, #8]
 800ae74:	461a      	mov	r2, r3
 800ae76:	68f9      	ldr	r1, [r7, #12]
 800ae78:	6878      	ldr	r0, [r7, #4]
 800ae7a:	f000 fa5d 	bl	800b338 <USBD_CtlSendData>
 800ae7e:	e009      	b.n	800ae94 <USBD_GetDescriptor+0x2cc>
    }
    else
    {
      USBD_CtlError(pdev, req);
 800ae80:	6839      	ldr	r1, [r7, #0]
 800ae82:	6878      	ldr	r0, [r7, #4]
 800ae84:	f000 f9e7 	bl	800b256 <USBD_CtlError>
 800ae88:	e004      	b.n	800ae94 <USBD_GetDescriptor+0x2cc>
    }
  }
  else
  {
    (void)USBD_CtlSendStatus(pdev);
 800ae8a:	6878      	ldr	r0, [r7, #4]
 800ae8c:	f000 faae 	bl	800b3ec <USBD_CtlSendStatus>
 800ae90:	e000      	b.n	800ae94 <USBD_GetDescriptor+0x2cc>
    return;
 800ae92:	bf00      	nop
  }
}
 800ae94:	3710      	adds	r7, #16
 800ae96:	46bd      	mov	sp, r7
 800ae98:	bd80      	pop	{r7, pc}
 800ae9a:	bf00      	nop

0800ae9c <USBD_SetAddress>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
static void USBD_SetAddress(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800ae9c:	b580      	push	{r7, lr}
 800ae9e:	b084      	sub	sp, #16
 800aea0:	af00      	add	r7, sp, #0
 800aea2:	6078      	str	r0, [r7, #4]
 800aea4:	6039      	str	r1, [r7, #0]
  uint8_t  dev_addr;

  if ((req->wIndex == 0U) && (req->wLength == 0U) && (req->wValue < 128U))
 800aea6:	683b      	ldr	r3, [r7, #0]
 800aea8:	889b      	ldrh	r3, [r3, #4]
 800aeaa:	2b00      	cmp	r3, #0
 800aeac:	d131      	bne.n	800af12 <USBD_SetAddress+0x76>
 800aeae:	683b      	ldr	r3, [r7, #0]
 800aeb0:	88db      	ldrh	r3, [r3, #6]
 800aeb2:	2b00      	cmp	r3, #0
 800aeb4:	d12d      	bne.n	800af12 <USBD_SetAddress+0x76>
 800aeb6:	683b      	ldr	r3, [r7, #0]
 800aeb8:	885b      	ldrh	r3, [r3, #2]
 800aeba:	2b7f      	cmp	r3, #127	; 0x7f
 800aebc:	d829      	bhi.n	800af12 <USBD_SetAddress+0x76>
  {
    dev_addr = (uint8_t)(req->wValue) & 0x7FU;
 800aebe:	683b      	ldr	r3, [r7, #0]
 800aec0:	885b      	ldrh	r3, [r3, #2]
 800aec2:	b2db      	uxtb	r3, r3
 800aec4:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800aec8:	73fb      	strb	r3, [r7, #15]

    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800aeca:	687b      	ldr	r3, [r7, #4]
 800aecc:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800aed0:	b2db      	uxtb	r3, r3
 800aed2:	2b03      	cmp	r3, #3
 800aed4:	d104      	bne.n	800aee0 <USBD_SetAddress+0x44>
    {
      USBD_CtlError(pdev, req);
 800aed6:	6839      	ldr	r1, [r7, #0]
 800aed8:	6878      	ldr	r0, [r7, #4]
 800aeda:	f000 f9bc 	bl	800b256 <USBD_CtlError>
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800aede:	e01d      	b.n	800af1c <USBD_SetAddress+0x80>
    }
    else
    {
      pdev->dev_address = dev_addr;
 800aee0:	687b      	ldr	r3, [r7, #4]
 800aee2:	7bfa      	ldrb	r2, [r7, #15]
 800aee4:	f883 229e 	strb.w	r2, [r3, #670]	; 0x29e
      (void)USBD_LL_SetUSBAddress(pdev, dev_addr);
 800aee8:	7bfb      	ldrb	r3, [r7, #15]
 800aeea:	4619      	mov	r1, r3
 800aeec:	6878      	ldr	r0, [r7, #4]
 800aeee:	f001 fac5 	bl	800c47c <USBD_LL_SetUSBAddress>
      (void)USBD_CtlSendStatus(pdev);
 800aef2:	6878      	ldr	r0, [r7, #4]
 800aef4:	f000 fa7a 	bl	800b3ec <USBD_CtlSendStatus>

      if (dev_addr != 0U)
 800aef8:	7bfb      	ldrb	r3, [r7, #15]
 800aefa:	2b00      	cmp	r3, #0
 800aefc:	d004      	beq.n	800af08 <USBD_SetAddress+0x6c>
      {
        pdev->dev_state = USBD_STATE_ADDRESSED;
 800aefe:	687b      	ldr	r3, [r7, #4]
 800af00:	2202      	movs	r2, #2
 800af02:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800af06:	e009      	b.n	800af1c <USBD_SetAddress+0x80>
      }
      else
      {
        pdev->dev_state = USBD_STATE_DEFAULT;
 800af08:	687b      	ldr	r3, [r7, #4]
 800af0a:	2201      	movs	r2, #1
 800af0c:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800af10:	e004      	b.n	800af1c <USBD_SetAddress+0x80>
      }
    }
  }
  else
  {
    USBD_CtlError(pdev, req);
 800af12:	6839      	ldr	r1, [r7, #0]
 800af14:	6878      	ldr	r0, [r7, #4]
 800af16:	f000 f99e 	bl	800b256 <USBD_CtlError>
  }
}
 800af1a:	bf00      	nop
 800af1c:	bf00      	nop
 800af1e:	3710      	adds	r7, #16
 800af20:	46bd      	mov	sp, r7
 800af22:	bd80      	pop	{r7, pc}

0800af24 <USBD_SetConfig>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
static USBD_StatusTypeDef USBD_SetConfig(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800af24:	b580      	push	{r7, lr}
 800af26:	b084      	sub	sp, #16
 800af28:	af00      	add	r7, sp, #0
 800af2a:	6078      	str	r0, [r7, #4]
 800af2c:	6039      	str	r1, [r7, #0]
  USBD_StatusTypeDef ret = USBD_OK;
 800af2e:	2300      	movs	r3, #0
 800af30:	73fb      	strb	r3, [r7, #15]
  static uint8_t cfgidx;

  cfgidx = (uint8_t)(req->wValue);
 800af32:	683b      	ldr	r3, [r7, #0]
 800af34:	885b      	ldrh	r3, [r3, #2]
 800af36:	b2da      	uxtb	r2, r3
 800af38:	4b4e      	ldr	r3, [pc, #312]	; (800b074 <USBD_SetConfig+0x150>)
 800af3a:	701a      	strb	r2, [r3, #0]

  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 800af3c:	4b4d      	ldr	r3, [pc, #308]	; (800b074 <USBD_SetConfig+0x150>)
 800af3e:	781b      	ldrb	r3, [r3, #0]
 800af40:	2b01      	cmp	r3, #1
 800af42:	d905      	bls.n	800af50 <USBD_SetConfig+0x2c>
  {
    USBD_CtlError(pdev, req);
 800af44:	6839      	ldr	r1, [r7, #0]
 800af46:	6878      	ldr	r0, [r7, #4]
 800af48:	f000 f985 	bl	800b256 <USBD_CtlError>
    return USBD_FAIL;
 800af4c:	2303      	movs	r3, #3
 800af4e:	e08c      	b.n	800b06a <USBD_SetConfig+0x146>
  }

  switch (pdev->dev_state)
 800af50:	687b      	ldr	r3, [r7, #4]
 800af52:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800af56:	b2db      	uxtb	r3, r3
 800af58:	2b02      	cmp	r3, #2
 800af5a:	d002      	beq.n	800af62 <USBD_SetConfig+0x3e>
 800af5c:	2b03      	cmp	r3, #3
 800af5e:	d029      	beq.n	800afb4 <USBD_SetConfig+0x90>
 800af60:	e075      	b.n	800b04e <USBD_SetConfig+0x12a>
  {
    case USBD_STATE_ADDRESSED:
      if (cfgidx != 0U)
 800af62:	4b44      	ldr	r3, [pc, #272]	; (800b074 <USBD_SetConfig+0x150>)
 800af64:	781b      	ldrb	r3, [r3, #0]
 800af66:	2b00      	cmp	r3, #0
 800af68:	d020      	beq.n	800afac <USBD_SetConfig+0x88>
      {
        pdev->dev_config = cfgidx;
 800af6a:	4b42      	ldr	r3, [pc, #264]	; (800b074 <USBD_SetConfig+0x150>)
 800af6c:	781b      	ldrb	r3, [r3, #0]
 800af6e:	461a      	mov	r2, r3
 800af70:	687b      	ldr	r3, [r7, #4]
 800af72:	605a      	str	r2, [r3, #4]

        ret = USBD_SetClassConfig(pdev, cfgidx);
 800af74:	4b3f      	ldr	r3, [pc, #252]	; (800b074 <USBD_SetConfig+0x150>)
 800af76:	781b      	ldrb	r3, [r3, #0]
 800af78:	4619      	mov	r1, r3
 800af7a:	6878      	ldr	r0, [r7, #4]
 800af7c:	f7fe ffe7 	bl	8009f4e <USBD_SetClassConfig>
 800af80:	4603      	mov	r3, r0
 800af82:	73fb      	strb	r3, [r7, #15]

        if (ret != USBD_OK)
 800af84:	7bfb      	ldrb	r3, [r7, #15]
 800af86:	2b00      	cmp	r3, #0
 800af88:	d008      	beq.n	800af9c <USBD_SetConfig+0x78>
        {
          USBD_CtlError(pdev, req);
 800af8a:	6839      	ldr	r1, [r7, #0]
 800af8c:	6878      	ldr	r0, [r7, #4]
 800af8e:	f000 f962 	bl	800b256 <USBD_CtlError>
          pdev->dev_state = USBD_STATE_ADDRESSED;
 800af92:	687b      	ldr	r3, [r7, #4]
 800af94:	2202      	movs	r2, #2
 800af96:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
      }
      else
      {
        (void)USBD_CtlSendStatus(pdev);
      }
      break;
 800af9a:	e065      	b.n	800b068 <USBD_SetConfig+0x144>
          (void)USBD_CtlSendStatus(pdev);
 800af9c:	6878      	ldr	r0, [r7, #4]
 800af9e:	f000 fa25 	bl	800b3ec <USBD_CtlSendStatus>
          pdev->dev_state = USBD_STATE_CONFIGURED;
 800afa2:	687b      	ldr	r3, [r7, #4]
 800afa4:	2203      	movs	r2, #3
 800afa6:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
      break;
 800afaa:	e05d      	b.n	800b068 <USBD_SetConfig+0x144>
        (void)USBD_CtlSendStatus(pdev);
 800afac:	6878      	ldr	r0, [r7, #4]
 800afae:	f000 fa1d 	bl	800b3ec <USBD_CtlSendStatus>
      break;
 800afb2:	e059      	b.n	800b068 <USBD_SetConfig+0x144>

    case USBD_STATE_CONFIGURED:
      if (cfgidx == 0U)
 800afb4:	4b2f      	ldr	r3, [pc, #188]	; (800b074 <USBD_SetConfig+0x150>)
 800afb6:	781b      	ldrb	r3, [r3, #0]
 800afb8:	2b00      	cmp	r3, #0
 800afba:	d112      	bne.n	800afe2 <USBD_SetConfig+0xbe>
      {
        pdev->dev_state = USBD_STATE_ADDRESSED;
 800afbc:	687b      	ldr	r3, [r7, #4]
 800afbe:	2202      	movs	r2, #2
 800afc0:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
        pdev->dev_config = cfgidx;
 800afc4:	4b2b      	ldr	r3, [pc, #172]	; (800b074 <USBD_SetConfig+0x150>)
 800afc6:	781b      	ldrb	r3, [r3, #0]
 800afc8:	461a      	mov	r2, r3
 800afca:	687b      	ldr	r3, [r7, #4]
 800afcc:	605a      	str	r2, [r3, #4]
        (void)USBD_ClrClassConfig(pdev, cfgidx);
 800afce:	4b29      	ldr	r3, [pc, #164]	; (800b074 <USBD_SetConfig+0x150>)
 800afd0:	781b      	ldrb	r3, [r3, #0]
 800afd2:	4619      	mov	r1, r3
 800afd4:	6878      	ldr	r0, [r7, #4]
 800afd6:	f7fe ffd6 	bl	8009f86 <USBD_ClrClassConfig>
        (void)USBD_CtlSendStatus(pdev);
 800afda:	6878      	ldr	r0, [r7, #4]
 800afdc:	f000 fa06 	bl	800b3ec <USBD_CtlSendStatus>
      }
      else
      {
        (void)USBD_CtlSendStatus(pdev);
      }
      break;
 800afe0:	e042      	b.n	800b068 <USBD_SetConfig+0x144>
      else if (cfgidx != pdev->dev_config)
 800afe2:	4b24      	ldr	r3, [pc, #144]	; (800b074 <USBD_SetConfig+0x150>)
 800afe4:	781b      	ldrb	r3, [r3, #0]
 800afe6:	461a      	mov	r2, r3
 800afe8:	687b      	ldr	r3, [r7, #4]
 800afea:	685b      	ldr	r3, [r3, #4]
 800afec:	429a      	cmp	r2, r3
 800afee:	d02a      	beq.n	800b046 <USBD_SetConfig+0x122>
        (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 800aff0:	687b      	ldr	r3, [r7, #4]
 800aff2:	685b      	ldr	r3, [r3, #4]
 800aff4:	b2db      	uxtb	r3, r3
 800aff6:	4619      	mov	r1, r3
 800aff8:	6878      	ldr	r0, [r7, #4]
 800affa:	f7fe ffc4 	bl	8009f86 <USBD_ClrClassConfig>
        pdev->dev_config = cfgidx;
 800affe:	4b1d      	ldr	r3, [pc, #116]	; (800b074 <USBD_SetConfig+0x150>)
 800b000:	781b      	ldrb	r3, [r3, #0]
 800b002:	461a      	mov	r2, r3
 800b004:	687b      	ldr	r3, [r7, #4]
 800b006:	605a      	str	r2, [r3, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
 800b008:	4b1a      	ldr	r3, [pc, #104]	; (800b074 <USBD_SetConfig+0x150>)
 800b00a:	781b      	ldrb	r3, [r3, #0]
 800b00c:	4619      	mov	r1, r3
 800b00e:	6878      	ldr	r0, [r7, #4]
 800b010:	f7fe ff9d 	bl	8009f4e <USBD_SetClassConfig>
 800b014:	4603      	mov	r3, r0
 800b016:	73fb      	strb	r3, [r7, #15]
        if (ret != USBD_OK)
 800b018:	7bfb      	ldrb	r3, [r7, #15]
 800b01a:	2b00      	cmp	r3, #0
 800b01c:	d00f      	beq.n	800b03e <USBD_SetConfig+0x11a>
          USBD_CtlError(pdev, req);
 800b01e:	6839      	ldr	r1, [r7, #0]
 800b020:	6878      	ldr	r0, [r7, #4]
 800b022:	f000 f918 	bl	800b256 <USBD_CtlError>
          (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 800b026:	687b      	ldr	r3, [r7, #4]
 800b028:	685b      	ldr	r3, [r3, #4]
 800b02a:	b2db      	uxtb	r3, r3
 800b02c:	4619      	mov	r1, r3
 800b02e:	6878      	ldr	r0, [r7, #4]
 800b030:	f7fe ffa9 	bl	8009f86 <USBD_ClrClassConfig>
          pdev->dev_state = USBD_STATE_ADDRESSED;
 800b034:	687b      	ldr	r3, [r7, #4]
 800b036:	2202      	movs	r2, #2
 800b038:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
      break;
 800b03c:	e014      	b.n	800b068 <USBD_SetConfig+0x144>
          (void)USBD_CtlSendStatus(pdev);
 800b03e:	6878      	ldr	r0, [r7, #4]
 800b040:	f000 f9d4 	bl	800b3ec <USBD_CtlSendStatus>
      break;
 800b044:	e010      	b.n	800b068 <USBD_SetConfig+0x144>
        (void)USBD_CtlSendStatus(pdev);
 800b046:	6878      	ldr	r0, [r7, #4]
 800b048:	f000 f9d0 	bl	800b3ec <USBD_CtlSendStatus>
      break;
 800b04c:	e00c      	b.n	800b068 <USBD_SetConfig+0x144>

    default:
      USBD_CtlError(pdev, req);
 800b04e:	6839      	ldr	r1, [r7, #0]
 800b050:	6878      	ldr	r0, [r7, #4]
 800b052:	f000 f900 	bl	800b256 <USBD_CtlError>
      (void)USBD_ClrClassConfig(pdev, cfgidx);
 800b056:	4b07      	ldr	r3, [pc, #28]	; (800b074 <USBD_SetConfig+0x150>)
 800b058:	781b      	ldrb	r3, [r3, #0]
 800b05a:	4619      	mov	r1, r3
 800b05c:	6878      	ldr	r0, [r7, #4]
 800b05e:	f7fe ff92 	bl	8009f86 <USBD_ClrClassConfig>
      ret = USBD_FAIL;
 800b062:	2303      	movs	r3, #3
 800b064:	73fb      	strb	r3, [r7, #15]
      break;
 800b066:	bf00      	nop
  }

  return ret;
 800b068:	7bfb      	ldrb	r3, [r7, #15]
}
 800b06a:	4618      	mov	r0, r3
 800b06c:	3710      	adds	r7, #16
 800b06e:	46bd      	mov	sp, r7
 800b070:	bd80      	pop	{r7, pc}
 800b072:	bf00      	nop
 800b074:	200005a8 	.word	0x200005a8

0800b078 <USBD_GetConfig>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
static void USBD_GetConfig(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800b078:	b580      	push	{r7, lr}
 800b07a:	b082      	sub	sp, #8
 800b07c:	af00      	add	r7, sp, #0
 800b07e:	6078      	str	r0, [r7, #4]
 800b080:	6039      	str	r1, [r7, #0]
  if (req->wLength != 1U)
 800b082:	683b      	ldr	r3, [r7, #0]
 800b084:	88db      	ldrh	r3, [r3, #6]
 800b086:	2b01      	cmp	r3, #1
 800b088:	d004      	beq.n	800b094 <USBD_GetConfig+0x1c>
  {
    USBD_CtlError(pdev, req);
 800b08a:	6839      	ldr	r1, [r7, #0]
 800b08c:	6878      	ldr	r0, [r7, #4]
 800b08e:	f000 f8e2 	bl	800b256 <USBD_CtlError>
      default:
        USBD_CtlError(pdev, req);
        break;
    }
  }
}
 800b092:	e023      	b.n	800b0dc <USBD_GetConfig+0x64>
    switch (pdev->dev_state)
 800b094:	687b      	ldr	r3, [r7, #4]
 800b096:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800b09a:	b2db      	uxtb	r3, r3
 800b09c:	2b02      	cmp	r3, #2
 800b09e:	dc02      	bgt.n	800b0a6 <USBD_GetConfig+0x2e>
 800b0a0:	2b00      	cmp	r3, #0
 800b0a2:	dc03      	bgt.n	800b0ac <USBD_GetConfig+0x34>
 800b0a4:	e015      	b.n	800b0d2 <USBD_GetConfig+0x5a>
 800b0a6:	2b03      	cmp	r3, #3
 800b0a8:	d00b      	beq.n	800b0c2 <USBD_GetConfig+0x4a>
 800b0aa:	e012      	b.n	800b0d2 <USBD_GetConfig+0x5a>
        pdev->dev_default_config = 0U;
 800b0ac:	687b      	ldr	r3, [r7, #4]
 800b0ae:	2200      	movs	r2, #0
 800b0b0:	609a      	str	r2, [r3, #8]
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_default_config, 1U);
 800b0b2:	687b      	ldr	r3, [r7, #4]
 800b0b4:	3308      	adds	r3, #8
 800b0b6:	2201      	movs	r2, #1
 800b0b8:	4619      	mov	r1, r3
 800b0ba:	6878      	ldr	r0, [r7, #4]
 800b0bc:	f000 f93c 	bl	800b338 <USBD_CtlSendData>
        break;
 800b0c0:	e00c      	b.n	800b0dc <USBD_GetConfig+0x64>
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config, 1U);
 800b0c2:	687b      	ldr	r3, [r7, #4]
 800b0c4:	3304      	adds	r3, #4
 800b0c6:	2201      	movs	r2, #1
 800b0c8:	4619      	mov	r1, r3
 800b0ca:	6878      	ldr	r0, [r7, #4]
 800b0cc:	f000 f934 	bl	800b338 <USBD_CtlSendData>
        break;
 800b0d0:	e004      	b.n	800b0dc <USBD_GetConfig+0x64>
        USBD_CtlError(pdev, req);
 800b0d2:	6839      	ldr	r1, [r7, #0]
 800b0d4:	6878      	ldr	r0, [r7, #4]
 800b0d6:	f000 f8be 	bl	800b256 <USBD_CtlError>
        break;
 800b0da:	bf00      	nop
}
 800b0dc:	bf00      	nop
 800b0de:	3708      	adds	r7, #8
 800b0e0:	46bd      	mov	sp, r7
 800b0e2:	bd80      	pop	{r7, pc}

0800b0e4 <USBD_GetStatus>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
static void USBD_GetStatus(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800b0e4:	b580      	push	{r7, lr}
 800b0e6:	b082      	sub	sp, #8
 800b0e8:	af00      	add	r7, sp, #0
 800b0ea:	6078      	str	r0, [r7, #4]
 800b0ec:	6039      	str	r1, [r7, #0]
  switch (pdev->dev_state)
 800b0ee:	687b      	ldr	r3, [r7, #4]
 800b0f0:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800b0f4:	b2db      	uxtb	r3, r3
 800b0f6:	3b01      	subs	r3, #1
 800b0f8:	2b02      	cmp	r3, #2
 800b0fa:	d81e      	bhi.n	800b13a <USBD_GetStatus+0x56>
  {
    case USBD_STATE_DEFAULT:
    case USBD_STATE_ADDRESSED:
    case USBD_STATE_CONFIGURED:
      if (req->wLength != 0x2U)
 800b0fc:	683b      	ldr	r3, [r7, #0]
 800b0fe:	88db      	ldrh	r3, [r3, #6]
 800b100:	2b02      	cmp	r3, #2
 800b102:	d004      	beq.n	800b10e <USBD_GetStatus+0x2a>
      {
        USBD_CtlError(pdev, req);
 800b104:	6839      	ldr	r1, [r7, #0]
 800b106:	6878      	ldr	r0, [r7, #4]
 800b108:	f000 f8a5 	bl	800b256 <USBD_CtlError>
        break;
 800b10c:	e01a      	b.n	800b144 <USBD_GetStatus+0x60>
      }

#if (USBD_SELF_POWERED == 1U)
      pdev->dev_config_status = USB_CONFIG_SELF_POWERED;
 800b10e:	687b      	ldr	r3, [r7, #4]
 800b110:	2201      	movs	r2, #1
 800b112:	60da      	str	r2, [r3, #12]
#else
      pdev->dev_config_status = 0U;
#endif /* USBD_SELF_POWERED */

      if (pdev->dev_remote_wakeup != 0U)
 800b114:	687b      	ldr	r3, [r7, #4]
 800b116:	f8d3 32a4 	ldr.w	r3, [r3, #676]	; 0x2a4
 800b11a:	2b00      	cmp	r3, #0
 800b11c:	d005      	beq.n	800b12a <USBD_GetStatus+0x46>
      {
        pdev->dev_config_status |= USB_CONFIG_REMOTE_WAKEUP;
 800b11e:	687b      	ldr	r3, [r7, #4]
 800b120:	68db      	ldr	r3, [r3, #12]
 800b122:	f043 0202 	orr.w	r2, r3, #2
 800b126:	687b      	ldr	r3, [r7, #4]
 800b128:	60da      	str	r2, [r3, #12]
      }

      (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config_status, 2U);
 800b12a:	687b      	ldr	r3, [r7, #4]
 800b12c:	330c      	adds	r3, #12
 800b12e:	2202      	movs	r2, #2
 800b130:	4619      	mov	r1, r3
 800b132:	6878      	ldr	r0, [r7, #4]
 800b134:	f000 f900 	bl	800b338 <USBD_CtlSendData>
      break;
 800b138:	e004      	b.n	800b144 <USBD_GetStatus+0x60>

    default:
      USBD_CtlError(pdev, req);
 800b13a:	6839      	ldr	r1, [r7, #0]
 800b13c:	6878      	ldr	r0, [r7, #4]
 800b13e:	f000 f88a 	bl	800b256 <USBD_CtlError>
      break;
 800b142:	bf00      	nop
  }
}
 800b144:	bf00      	nop
 800b146:	3708      	adds	r7, #8
 800b148:	46bd      	mov	sp, r7
 800b14a:	bd80      	pop	{r7, pc}

0800b14c <USBD_SetFeature>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
static void USBD_SetFeature(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800b14c:	b580      	push	{r7, lr}
 800b14e:	b082      	sub	sp, #8
 800b150:	af00      	add	r7, sp, #0
 800b152:	6078      	str	r0, [r7, #4]
 800b154:	6039      	str	r1, [r7, #0]
  if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 800b156:	683b      	ldr	r3, [r7, #0]
 800b158:	885b      	ldrh	r3, [r3, #2]
 800b15a:	2b01      	cmp	r3, #1
 800b15c:	d107      	bne.n	800b16e <USBD_SetFeature+0x22>
  {
    pdev->dev_remote_wakeup = 1U;
 800b15e:	687b      	ldr	r3, [r7, #4]
 800b160:	2201      	movs	r2, #1
 800b162:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
    (void)USBD_CtlSendStatus(pdev);
 800b166:	6878      	ldr	r0, [r7, #4]
 800b168:	f000 f940 	bl	800b3ec <USBD_CtlSendStatus>
  }
  else
  {
    USBD_CtlError(pdev, req);
  }
}
 800b16c:	e013      	b.n	800b196 <USBD_SetFeature+0x4a>
  else if (req->wValue == USB_FEATURE_TEST_MODE)
 800b16e:	683b      	ldr	r3, [r7, #0]
 800b170:	885b      	ldrh	r3, [r3, #2]
 800b172:	2b02      	cmp	r3, #2
 800b174:	d10b      	bne.n	800b18e <USBD_SetFeature+0x42>
    pdev->dev_test_mode = req->wIndex >> 8;
 800b176:	683b      	ldr	r3, [r7, #0]
 800b178:	889b      	ldrh	r3, [r3, #4]
 800b17a:	0a1b      	lsrs	r3, r3, #8
 800b17c:	b29b      	uxth	r3, r3
 800b17e:	b2da      	uxtb	r2, r3
 800b180:	687b      	ldr	r3, [r7, #4]
 800b182:	f883 22a0 	strb.w	r2, [r3, #672]	; 0x2a0
    (void)USBD_CtlSendStatus(pdev);
 800b186:	6878      	ldr	r0, [r7, #4]
 800b188:	f000 f930 	bl	800b3ec <USBD_CtlSendStatus>
}
 800b18c:	e003      	b.n	800b196 <USBD_SetFeature+0x4a>
    USBD_CtlError(pdev, req);
 800b18e:	6839      	ldr	r1, [r7, #0]
 800b190:	6878      	ldr	r0, [r7, #4]
 800b192:	f000 f860 	bl	800b256 <USBD_CtlError>
}
 800b196:	bf00      	nop
 800b198:	3708      	adds	r7, #8
 800b19a:	46bd      	mov	sp, r7
 800b19c:	bd80      	pop	{r7, pc}

0800b19e <USBD_ClrFeature>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
static void USBD_ClrFeature(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800b19e:	b580      	push	{r7, lr}
 800b1a0:	b082      	sub	sp, #8
 800b1a2:	af00      	add	r7, sp, #0
 800b1a4:	6078      	str	r0, [r7, #4]
 800b1a6:	6039      	str	r1, [r7, #0]
  switch (pdev->dev_state)
 800b1a8:	687b      	ldr	r3, [r7, #4]
 800b1aa:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800b1ae:	b2db      	uxtb	r3, r3
 800b1b0:	3b01      	subs	r3, #1
 800b1b2:	2b02      	cmp	r3, #2
 800b1b4:	d80b      	bhi.n	800b1ce <USBD_ClrFeature+0x30>
  {
    case USBD_STATE_DEFAULT:
    case USBD_STATE_ADDRESSED:
    case USBD_STATE_CONFIGURED:
      if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 800b1b6:	683b      	ldr	r3, [r7, #0]
 800b1b8:	885b      	ldrh	r3, [r3, #2]
 800b1ba:	2b01      	cmp	r3, #1
 800b1bc:	d10c      	bne.n	800b1d8 <USBD_ClrFeature+0x3a>
      {
        pdev->dev_remote_wakeup = 0U;
 800b1be:	687b      	ldr	r3, [r7, #4]
 800b1c0:	2200      	movs	r2, #0
 800b1c2:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
        (void)USBD_CtlSendStatus(pdev);
 800b1c6:	6878      	ldr	r0, [r7, #4]
 800b1c8:	f000 f910 	bl	800b3ec <USBD_CtlSendStatus>
      }
      break;
 800b1cc:	e004      	b.n	800b1d8 <USBD_ClrFeature+0x3a>

    default:
      USBD_CtlError(pdev, req);
 800b1ce:	6839      	ldr	r1, [r7, #0]
 800b1d0:	6878      	ldr	r0, [r7, #4]
 800b1d2:	f000 f840 	bl	800b256 <USBD_CtlError>
      break;
 800b1d6:	e000      	b.n	800b1da <USBD_ClrFeature+0x3c>
      break;
 800b1d8:	bf00      	nop
  }
}
 800b1da:	bf00      	nop
 800b1dc:	3708      	adds	r7, #8
 800b1de:	46bd      	mov	sp, r7
 800b1e0:	bd80      	pop	{r7, pc}

0800b1e2 <USBD_ParseSetupRequest>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval None
  */
void USBD_ParseSetupRequest(USBD_SetupReqTypedef *req, uint8_t *pdata)
{
 800b1e2:	b580      	push	{r7, lr}
 800b1e4:	b084      	sub	sp, #16
 800b1e6:	af00      	add	r7, sp, #0
 800b1e8:	6078      	str	r0, [r7, #4]
 800b1ea:	6039      	str	r1, [r7, #0]
  uint8_t *pbuff = pdata;
 800b1ec:	683b      	ldr	r3, [r7, #0]
 800b1ee:	60fb      	str	r3, [r7, #12]

  req->bmRequest = *(uint8_t *)(pbuff);
 800b1f0:	68fb      	ldr	r3, [r7, #12]
 800b1f2:	781a      	ldrb	r2, [r3, #0]
 800b1f4:	687b      	ldr	r3, [r7, #4]
 800b1f6:	701a      	strb	r2, [r3, #0]

  pbuff++;
 800b1f8:	68fb      	ldr	r3, [r7, #12]
 800b1fa:	3301      	adds	r3, #1
 800b1fc:	60fb      	str	r3, [r7, #12]
  req->bRequest = *(uint8_t *)(pbuff);
 800b1fe:	68fb      	ldr	r3, [r7, #12]
 800b200:	781a      	ldrb	r2, [r3, #0]
 800b202:	687b      	ldr	r3, [r7, #4]
 800b204:	705a      	strb	r2, [r3, #1]

  pbuff++;
 800b206:	68fb      	ldr	r3, [r7, #12]
 800b208:	3301      	adds	r3, #1
 800b20a:	60fb      	str	r3, [r7, #12]
  req->wValue = SWAPBYTE(pbuff);
 800b20c:	68f8      	ldr	r0, [r7, #12]
 800b20e:	f7ff fa41 	bl	800a694 <SWAPBYTE>
 800b212:	4603      	mov	r3, r0
 800b214:	461a      	mov	r2, r3
 800b216:	687b      	ldr	r3, [r7, #4]
 800b218:	805a      	strh	r2, [r3, #2]

  pbuff++;
 800b21a:	68fb      	ldr	r3, [r7, #12]
 800b21c:	3301      	adds	r3, #1
 800b21e:	60fb      	str	r3, [r7, #12]
  pbuff++;
 800b220:	68fb      	ldr	r3, [r7, #12]
 800b222:	3301      	adds	r3, #1
 800b224:	60fb      	str	r3, [r7, #12]
  req->wIndex = SWAPBYTE(pbuff);
 800b226:	68f8      	ldr	r0, [r7, #12]
 800b228:	f7ff fa34 	bl	800a694 <SWAPBYTE>
 800b22c:	4603      	mov	r3, r0
 800b22e:	461a      	mov	r2, r3
 800b230:	687b      	ldr	r3, [r7, #4]
 800b232:	809a      	strh	r2, [r3, #4]

  pbuff++;
 800b234:	68fb      	ldr	r3, [r7, #12]
 800b236:	3301      	adds	r3, #1
 800b238:	60fb      	str	r3, [r7, #12]
  pbuff++;
 800b23a:	68fb      	ldr	r3, [r7, #12]
 800b23c:	3301      	adds	r3, #1
 800b23e:	60fb      	str	r3, [r7, #12]
  req->wLength = SWAPBYTE(pbuff);
 800b240:	68f8      	ldr	r0, [r7, #12]
 800b242:	f7ff fa27 	bl	800a694 <SWAPBYTE>
 800b246:	4603      	mov	r3, r0
 800b248:	461a      	mov	r2, r3
 800b24a:	687b      	ldr	r3, [r7, #4]
 800b24c:	80da      	strh	r2, [r3, #6]
}
 800b24e:	bf00      	nop
 800b250:	3710      	adds	r7, #16
 800b252:	46bd      	mov	sp, r7
 800b254:	bd80      	pop	{r7, pc}

0800b256 <USBD_CtlError>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval None
  */
void USBD_CtlError(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800b256:	b580      	push	{r7, lr}
 800b258:	b082      	sub	sp, #8
 800b25a:	af00      	add	r7, sp, #0
 800b25c:	6078      	str	r0, [r7, #4]
 800b25e:	6039      	str	r1, [r7, #0]
  UNUSED(req);

  (void)USBD_LL_StallEP(pdev, 0x80U);
 800b260:	2180      	movs	r1, #128	; 0x80
 800b262:	6878      	ldr	r0, [r7, #4]
 800b264:	f001 f8a0 	bl	800c3a8 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 800b268:	2100      	movs	r1, #0
 800b26a:	6878      	ldr	r0, [r7, #4]
 800b26c:	f001 f89c 	bl	800c3a8 <USBD_LL_StallEP>
}
 800b270:	bf00      	nop
 800b272:	3708      	adds	r7, #8
 800b274:	46bd      	mov	sp, r7
 800b276:	bd80      	pop	{r7, pc}

0800b278 <USBD_GetString>:
  * @param  unicode : Formatted string buffer (unicode)
  * @param  len : descriptor length
  * @retval None
  */
void USBD_GetString(uint8_t *desc, uint8_t *unicode, uint16_t *len)
{
 800b278:	b580      	push	{r7, lr}
 800b27a:	b086      	sub	sp, #24
 800b27c:	af00      	add	r7, sp, #0
 800b27e:	60f8      	str	r0, [r7, #12]
 800b280:	60b9      	str	r1, [r7, #8]
 800b282:	607a      	str	r2, [r7, #4]
  uint8_t idx = 0U;
 800b284:	2300      	movs	r3, #0
 800b286:	75fb      	strb	r3, [r7, #23]
  uint8_t *pdesc;

  if (desc == NULL)
 800b288:	68fb      	ldr	r3, [r7, #12]
 800b28a:	2b00      	cmp	r3, #0
 800b28c:	d036      	beq.n	800b2fc <USBD_GetString+0x84>
  {
    return;
  }

  pdesc = desc;
 800b28e:	68fb      	ldr	r3, [r7, #12]
 800b290:	613b      	str	r3, [r7, #16]
  *len = ((uint16_t)USBD_GetLen(pdesc) * 2U) + 2U;
 800b292:	6938      	ldr	r0, [r7, #16]
 800b294:	f000 f836 	bl	800b304 <USBD_GetLen>
 800b298:	4603      	mov	r3, r0
 800b29a:	3301      	adds	r3, #1
 800b29c:	b29b      	uxth	r3, r3
 800b29e:	005b      	lsls	r3, r3, #1
 800b2a0:	b29a      	uxth	r2, r3
 800b2a2:	687b      	ldr	r3, [r7, #4]
 800b2a4:	801a      	strh	r2, [r3, #0]

  unicode[idx] = *(uint8_t *)len;
 800b2a6:	7dfb      	ldrb	r3, [r7, #23]
 800b2a8:	68ba      	ldr	r2, [r7, #8]
 800b2aa:	4413      	add	r3, r2
 800b2ac:	687a      	ldr	r2, [r7, #4]
 800b2ae:	7812      	ldrb	r2, [r2, #0]
 800b2b0:	701a      	strb	r2, [r3, #0]
  idx++;
 800b2b2:	7dfb      	ldrb	r3, [r7, #23]
 800b2b4:	3301      	adds	r3, #1
 800b2b6:	75fb      	strb	r3, [r7, #23]
  unicode[idx] = USB_DESC_TYPE_STRING;
 800b2b8:	7dfb      	ldrb	r3, [r7, #23]
 800b2ba:	68ba      	ldr	r2, [r7, #8]
 800b2bc:	4413      	add	r3, r2
 800b2be:	2203      	movs	r2, #3
 800b2c0:	701a      	strb	r2, [r3, #0]
  idx++;
 800b2c2:	7dfb      	ldrb	r3, [r7, #23]
 800b2c4:	3301      	adds	r3, #1
 800b2c6:	75fb      	strb	r3, [r7, #23]

  while (*pdesc != (uint8_t)'\0')
 800b2c8:	e013      	b.n	800b2f2 <USBD_GetString+0x7a>
  {
    unicode[idx] = *pdesc;
 800b2ca:	7dfb      	ldrb	r3, [r7, #23]
 800b2cc:	68ba      	ldr	r2, [r7, #8]
 800b2ce:	4413      	add	r3, r2
 800b2d0:	693a      	ldr	r2, [r7, #16]
 800b2d2:	7812      	ldrb	r2, [r2, #0]
 800b2d4:	701a      	strb	r2, [r3, #0]
    pdesc++;
 800b2d6:	693b      	ldr	r3, [r7, #16]
 800b2d8:	3301      	adds	r3, #1
 800b2da:	613b      	str	r3, [r7, #16]
    idx++;
 800b2dc:	7dfb      	ldrb	r3, [r7, #23]
 800b2de:	3301      	adds	r3, #1
 800b2e0:	75fb      	strb	r3, [r7, #23]

    unicode[idx] = 0U;
 800b2e2:	7dfb      	ldrb	r3, [r7, #23]
 800b2e4:	68ba      	ldr	r2, [r7, #8]
 800b2e6:	4413      	add	r3, r2
 800b2e8:	2200      	movs	r2, #0
 800b2ea:	701a      	strb	r2, [r3, #0]
    idx++;
 800b2ec:	7dfb      	ldrb	r3, [r7, #23]
 800b2ee:	3301      	adds	r3, #1
 800b2f0:	75fb      	strb	r3, [r7, #23]
  while (*pdesc != (uint8_t)'\0')
 800b2f2:	693b      	ldr	r3, [r7, #16]
 800b2f4:	781b      	ldrb	r3, [r3, #0]
 800b2f6:	2b00      	cmp	r3, #0
 800b2f8:	d1e7      	bne.n	800b2ca <USBD_GetString+0x52>
 800b2fa:	e000      	b.n	800b2fe <USBD_GetString+0x86>
    return;
 800b2fc:	bf00      	nop
  }
}
 800b2fe:	3718      	adds	r7, #24
 800b300:	46bd      	mov	sp, r7
 800b302:	bd80      	pop	{r7, pc}

0800b304 <USBD_GetLen>:
  *         return the string length
   * @param  buf : pointer to the ascii string buffer
  * @retval string length
  */
static uint8_t USBD_GetLen(uint8_t *buf)
{
 800b304:	b480      	push	{r7}
 800b306:	b085      	sub	sp, #20
 800b308:	af00      	add	r7, sp, #0
 800b30a:	6078      	str	r0, [r7, #4]
  uint8_t  len = 0U;
 800b30c:	2300      	movs	r3, #0
 800b30e:	73fb      	strb	r3, [r7, #15]
  uint8_t *pbuff = buf;
 800b310:	687b      	ldr	r3, [r7, #4]
 800b312:	60bb      	str	r3, [r7, #8]

  while (*pbuff != (uint8_t)'\0')
 800b314:	e005      	b.n	800b322 <USBD_GetLen+0x1e>
  {
    len++;
 800b316:	7bfb      	ldrb	r3, [r7, #15]
 800b318:	3301      	adds	r3, #1
 800b31a:	73fb      	strb	r3, [r7, #15]
    pbuff++;
 800b31c:	68bb      	ldr	r3, [r7, #8]
 800b31e:	3301      	adds	r3, #1
 800b320:	60bb      	str	r3, [r7, #8]
  while (*pbuff != (uint8_t)'\0')
 800b322:	68bb      	ldr	r3, [r7, #8]
 800b324:	781b      	ldrb	r3, [r3, #0]
 800b326:	2b00      	cmp	r3, #0
 800b328:	d1f5      	bne.n	800b316 <USBD_GetLen+0x12>
  }

  return len;
 800b32a:	7bfb      	ldrb	r3, [r7, #15]
}
 800b32c:	4618      	mov	r0, r3
 800b32e:	3714      	adds	r7, #20
 800b330:	46bd      	mov	sp, r7
 800b332:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b336:	4770      	bx	lr

0800b338 <USBD_CtlSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendData(USBD_HandleTypeDef *pdev,
                                    uint8_t *pbuf, uint32_t len)
{
 800b338:	b580      	push	{r7, lr}
 800b33a:	b084      	sub	sp, #16
 800b33c:	af00      	add	r7, sp, #0
 800b33e:	60f8      	str	r0, [r7, #12]
 800b340:	60b9      	str	r1, [r7, #8]
 800b342:	607a      	str	r2, [r7, #4]
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_IN;
 800b344:	68fb      	ldr	r3, [r7, #12]
 800b346:	2202      	movs	r2, #2
 800b348:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  pdev->ep_in[0].total_length = len;
 800b34c:	68fb      	ldr	r3, [r7, #12]
 800b34e:	687a      	ldr	r2, [r7, #4]
 800b350:	619a      	str	r2, [r3, #24]

#ifdef USBD_AVOID_PACKET_SPLIT_MPS
  pdev->ep_in[0].rem_length = 0U;
#else
  pdev->ep_in[0].rem_length = len;
 800b352:	68fb      	ldr	r3, [r7, #12]
 800b354:	687a      	ldr	r2, [r7, #4]
 800b356:	61da      	str	r2, [r3, #28]
#endif /* USBD_AVOID_PACKET_SPLIT_MPS */

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 800b358:	687b      	ldr	r3, [r7, #4]
 800b35a:	68ba      	ldr	r2, [r7, #8]
 800b35c:	2100      	movs	r1, #0
 800b35e:	68f8      	ldr	r0, [r7, #12]
 800b360:	f001 f8ab 	bl	800c4ba <USBD_LL_Transmit>

  return USBD_OK;
 800b364:	2300      	movs	r3, #0
}
 800b366:	4618      	mov	r0, r3
 800b368:	3710      	adds	r7, #16
 800b36a:	46bd      	mov	sp, r7
 800b36c:	bd80      	pop	{r7, pc}

0800b36e <USBD_CtlContinueSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueSendData(USBD_HandleTypeDef *pdev,
                                            uint8_t *pbuf, uint32_t len)
{
 800b36e:	b580      	push	{r7, lr}
 800b370:	b084      	sub	sp, #16
 800b372:	af00      	add	r7, sp, #0
 800b374:	60f8      	str	r0, [r7, #12]
 800b376:	60b9      	str	r1, [r7, #8]
 800b378:	607a      	str	r2, [r7, #4]
  /* Start the next transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 800b37a:	687b      	ldr	r3, [r7, #4]
 800b37c:	68ba      	ldr	r2, [r7, #8]
 800b37e:	2100      	movs	r1, #0
 800b380:	68f8      	ldr	r0, [r7, #12]
 800b382:	f001 f89a 	bl	800c4ba <USBD_LL_Transmit>

  return USBD_OK;
 800b386:	2300      	movs	r3, #0
}
 800b388:	4618      	mov	r0, r3
 800b38a:	3710      	adds	r7, #16
 800b38c:	46bd      	mov	sp, r7
 800b38e:	bd80      	pop	{r7, pc}

0800b390 <USBD_CtlPrepareRx>:
  * @param  len: length of data to be received
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlPrepareRx(USBD_HandleTypeDef *pdev,
                                     uint8_t *pbuf, uint32_t len)
{
 800b390:	b580      	push	{r7, lr}
 800b392:	b084      	sub	sp, #16
 800b394:	af00      	add	r7, sp, #0
 800b396:	60f8      	str	r0, [r7, #12]
 800b398:	60b9      	str	r1, [r7, #8]
 800b39a:	607a      	str	r2, [r7, #4]
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_OUT;
 800b39c:	68fb      	ldr	r3, [r7, #12]
 800b39e:	2203      	movs	r2, #3
 800b3a0:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  pdev->ep_out[0].total_length = len;
 800b3a4:	68fb      	ldr	r3, [r7, #12]
 800b3a6:	687a      	ldr	r2, [r7, #4]
 800b3a8:	f8c3 2158 	str.w	r2, [r3, #344]	; 0x158

#ifdef USBD_AVOID_PACKET_SPLIT_MPS
  pdev->ep_out[0].rem_length = 0U;
#else
  pdev->ep_out[0].rem_length = len;
 800b3ac:	68fb      	ldr	r3, [r7, #12]
 800b3ae:	687a      	ldr	r2, [r7, #4]
 800b3b0:	f8c3 215c 	str.w	r2, [r3, #348]	; 0x15c
#endif /* USBD_AVOID_PACKET_SPLIT_MPS */

  /* Start the transfer */
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
 800b3b4:	687b      	ldr	r3, [r7, #4]
 800b3b6:	68ba      	ldr	r2, [r7, #8]
 800b3b8:	2100      	movs	r1, #0
 800b3ba:	68f8      	ldr	r0, [r7, #12]
 800b3bc:	f001 f89e 	bl	800c4fc <USBD_LL_PrepareReceive>

  return USBD_OK;
 800b3c0:	2300      	movs	r3, #0
}
 800b3c2:	4618      	mov	r0, r3
 800b3c4:	3710      	adds	r7, #16
 800b3c6:	46bd      	mov	sp, r7
 800b3c8:	bd80      	pop	{r7, pc}

0800b3ca <USBD_CtlContinueRx>:
  * @param  len: length of data to be received
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueRx(USBD_HandleTypeDef *pdev,
                                      uint8_t *pbuf, uint32_t len)
{
 800b3ca:	b580      	push	{r7, lr}
 800b3cc:	b084      	sub	sp, #16
 800b3ce:	af00      	add	r7, sp, #0
 800b3d0:	60f8      	str	r0, [r7, #12]
 800b3d2:	60b9      	str	r1, [r7, #8]
 800b3d4:	607a      	str	r2, [r7, #4]
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
 800b3d6:	687b      	ldr	r3, [r7, #4]
 800b3d8:	68ba      	ldr	r2, [r7, #8]
 800b3da:	2100      	movs	r1, #0
 800b3dc:	68f8      	ldr	r0, [r7, #12]
 800b3de:	f001 f88d 	bl	800c4fc <USBD_LL_PrepareReceive>

  return USBD_OK;
 800b3e2:	2300      	movs	r3, #0
}
 800b3e4:	4618      	mov	r0, r3
 800b3e6:	3710      	adds	r7, #16
 800b3e8:	46bd      	mov	sp, r7
 800b3ea:	bd80      	pop	{r7, pc}

0800b3ec <USBD_CtlSendStatus>:
  *         send zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendStatus(USBD_HandleTypeDef *pdev)
{
 800b3ec:	b580      	push	{r7, lr}
 800b3ee:	b082      	sub	sp, #8
 800b3f0:	af00      	add	r7, sp, #0
 800b3f2:	6078      	str	r0, [r7, #4]
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 800b3f4:	687b      	ldr	r3, [r7, #4]
 800b3f6:	2204      	movs	r2, #4
 800b3f8:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 800b3fc:	2300      	movs	r3, #0
 800b3fe:	2200      	movs	r2, #0
 800b400:	2100      	movs	r1, #0
 800b402:	6878      	ldr	r0, [r7, #4]
 800b404:	f001 f859 	bl	800c4ba <USBD_LL_Transmit>

  return USBD_OK;
 800b408:	2300      	movs	r3, #0
}
 800b40a:	4618      	mov	r0, r3
 800b40c:	3708      	adds	r7, #8
 800b40e:	46bd      	mov	sp, r7
 800b410:	bd80      	pop	{r7, pc}

0800b412 <USBD_CtlReceiveStatus>:
  *         receive zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlReceiveStatus(USBD_HandleTypeDef *pdev)
{
 800b412:	b580      	push	{r7, lr}
 800b414:	b082      	sub	sp, #8
 800b416:	af00      	add	r7, sp, #0
 800b418:	6078      	str	r0, [r7, #4]
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 800b41a:	687b      	ldr	r3, [r7, #4]
 800b41c:	2205      	movs	r2, #5
 800b41e:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294

  /* Start the transfer */
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800b422:	2300      	movs	r3, #0
 800b424:	2200      	movs	r2, #0
 800b426:	2100      	movs	r1, #0
 800b428:	6878      	ldr	r0, [r7, #4]
 800b42a:	f001 f867 	bl	800c4fc <USBD_LL_PrepareReceive>

  return USBD_OK;
 800b42e:	2300      	movs	r3, #0
}
 800b430:	4618      	mov	r0, r3
 800b432:	3708      	adds	r7, #8
 800b434:	46bd      	mov	sp, r7
 800b436:	bd80      	pop	{r7, pc}

0800b438 <_ZN8touchgfx4FontD1Ev>:
 800b438:	b480      	push	{r7}
 800b43a:	b083      	sub	sp, #12
 800b43c:	af00      	add	r7, sp, #0
 800b43e:	6078      	str	r0, [r7, #4]
 800b440:	4a04      	ldr	r2, [pc, #16]	; (800b454 <_ZN8touchgfx4FontD1Ev+0x1c>)
 800b442:	687b      	ldr	r3, [r7, #4]
 800b444:	601a      	str	r2, [r3, #0]
 800b446:	687b      	ldr	r3, [r7, #4]
 800b448:	4618      	mov	r0, r3
 800b44a:	370c      	adds	r7, #12
 800b44c:	46bd      	mov	sp, r7
 800b44e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b452:	4770      	bx	lr
 800b454:	08014818 	.word	0x08014818

0800b458 <_ZN8touchgfx4FontD0Ev>:
 800b458:	b580      	push	{r7, lr}
 800b45a:	b082      	sub	sp, #8
 800b45c:	af00      	add	r7, sp, #0
 800b45e:	6078      	str	r0, [r7, #4]
 800b460:	6878      	ldr	r0, [r7, #4]
 800b462:	f7ff ffe9 	bl	800b438 <_ZN8touchgfx4FontD1Ev>
 800b466:	2114      	movs	r1, #20
 800b468:	6878      	ldr	r0, [r7, #4]
 800b46a:	f001 ff6d 	bl	800d348 <_ZdlPvj>
 800b46e:	687b      	ldr	r3, [r7, #4]
 800b470:	4618      	mov	r0, r3
 800b472:	3708      	adds	r7, #8
 800b474:	46bd      	mov	sp, r7
 800b476:	bd80      	pop	{r7, pc}

0800b478 <_ZNK8touchgfx4Font8getGlyphEt>:
 800b478:	b590      	push	{r4, r7, lr}
 800b47a:	b087      	sub	sp, #28
 800b47c:	af00      	add	r7, sp, #0
 800b47e:	6078      	str	r0, [r7, #4]
 800b480:	460b      	mov	r3, r1
 800b482:	807b      	strh	r3, [r7, #2]
 800b484:	887b      	ldrh	r3, [r7, #2]
 800b486:	2b00      	cmp	r3, #0
 800b488:	d101      	bne.n	800b48e <_ZNK8touchgfx4Font8getGlyphEt+0x16>
 800b48a:	2300      	movs	r3, #0
 800b48c:	e010      	b.n	800b4b0 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
 800b48e:	2300      	movs	r3, #0
 800b490:	613b      	str	r3, [r7, #16]
 800b492:	2300      	movs	r3, #0
 800b494:	73fb      	strb	r3, [r7, #15]
 800b496:	687b      	ldr	r3, [r7, #4]
 800b498:	681b      	ldr	r3, [r3, #0]
 800b49a:	3308      	adds	r3, #8
 800b49c:	681c      	ldr	r4, [r3, #0]
 800b49e:	f107 030f 	add.w	r3, r7, #15
 800b4a2:	f107 0210 	add.w	r2, r7, #16
 800b4a6:	8879      	ldrh	r1, [r7, #2]
 800b4a8:	6878      	ldr	r0, [r7, #4]
 800b4aa:	47a0      	blx	r4
 800b4ac:	6178      	str	r0, [r7, #20]
 800b4ae:	697b      	ldr	r3, [r7, #20]
 800b4b0:	4618      	mov	r0, r3
 800b4b2:	371c      	adds	r7, #28
 800b4b4:	46bd      	mov	sp, r7
 800b4b6:	bd90      	pop	{r4, r7, pc}

0800b4b8 <_ZNK8touchgfx4Font15getFallbackCharEv>:
 800b4b8:	b480      	push	{r7}
 800b4ba:	b083      	sub	sp, #12
 800b4bc:	af00      	add	r7, sp, #0
 800b4be:	6078      	str	r0, [r7, #4]
 800b4c0:	687b      	ldr	r3, [r7, #4]
 800b4c2:	89db      	ldrh	r3, [r3, #14]
 800b4c4:	4618      	mov	r0, r3
 800b4c6:	370c      	adds	r7, #12
 800b4c8:	46bd      	mov	sp, r7
 800b4ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4ce:	4770      	bx	lr

0800b4d0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
 800b4d0:	b480      	push	{r7}
 800b4d2:	b083      	sub	sp, #12
 800b4d4:	af00      	add	r7, sp, #0
 800b4d6:	6078      	str	r0, [r7, #4]
 800b4d8:	687b      	ldr	r3, [r7, #4]
 800b4da:	8a1b      	ldrh	r3, [r3, #16]
 800b4dc:	4618      	mov	r0, r3
 800b4de:	370c      	adds	r7, #12
 800b4e0:	46bd      	mov	sp, r7
 800b4e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4e6:	4770      	bx	lr

0800b4e8 <_ZNK8touchgfx4Font11getBaselineEv>:
 800b4e8:	b480      	push	{r7}
 800b4ea:	b083      	sub	sp, #12
 800b4ec:	af00      	add	r7, sp, #0
 800b4ee:	6078      	str	r0, [r7, #4]
 800b4f0:	687b      	ldr	r3, [r7, #4]
 800b4f2:	88db      	ldrh	r3, [r3, #6]
 800b4f4:	4618      	mov	r0, r3
 800b4f6:	370c      	adds	r7, #12
 800b4f8:	46bd      	mov	sp, r7
 800b4fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4fe:	4770      	bx	lr

0800b500 <_ZNK8touchgfx4Font9getHeightEv>:
 800b500:	b480      	push	{r7}
 800b502:	b083      	sub	sp, #12
 800b504:	af00      	add	r7, sp, #0
 800b506:	6078      	str	r0, [r7, #4]
 800b508:	687b      	ldr	r3, [r7, #4]
 800b50a:	889b      	ldrh	r3, [r3, #4]
 800b50c:	4618      	mov	r0, r3
 800b50e:	370c      	adds	r7, #12
 800b510:	46bd      	mov	sp, r7
 800b512:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b516:	4770      	bx	lr

0800b518 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
 800b518:	b480      	push	{r7}
 800b51a:	b083      	sub	sp, #12
 800b51c:	af00      	add	r7, sp, #0
 800b51e:	6078      	str	r0, [r7, #4]
 800b520:	687b      	ldr	r3, [r7, #4]
 800b522:	7a9b      	ldrb	r3, [r3, #10]
 800b524:	f3c3 0306 	ubfx	r3, r3, #0, #7
 800b528:	b2db      	uxtb	r3, r3
 800b52a:	4618      	mov	r0, r3
 800b52c:	370c      	adds	r7, #12
 800b52e:	46bd      	mov	sp, r7
 800b530:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b534:	4770      	bx	lr

0800b536 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
 800b536:	b480      	push	{r7}
 800b538:	b083      	sub	sp, #12
 800b53a:	af00      	add	r7, sp, #0
 800b53c:	6078      	str	r0, [r7, #4]
 800b53e:	687b      	ldr	r3, [r7, #4]
 800b540:	7a9b      	ldrb	r3, [r3, #10]
 800b542:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 800b546:	b2db      	uxtb	r3, r3
 800b548:	4618      	mov	r0, r3
 800b54a:	370c      	adds	r7, #12
 800b54c:	46bd      	mov	sp, r7
 800b54e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b552:	4770      	bx	lr

0800b554 <_ZN8touchgfx9ConstFontD1Ev>:
 800b554:	b580      	push	{r7, lr}
 800b556:	b082      	sub	sp, #8
 800b558:	af00      	add	r7, sp, #0
 800b55a:	6078      	str	r0, [r7, #4]
 800b55c:	4a05      	ldr	r2, [pc, #20]	; (800b574 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 800b55e:	687b      	ldr	r3, [r7, #4]
 800b560:	601a      	str	r2, [r3, #0]
 800b562:	687b      	ldr	r3, [r7, #4]
 800b564:	4618      	mov	r0, r3
 800b566:	f7ff ff67 	bl	800b438 <_ZN8touchgfx4FontD1Ev>
 800b56a:	687b      	ldr	r3, [r7, #4]
 800b56c:	4618      	mov	r0, r3
 800b56e:	3708      	adds	r7, #8
 800b570:	46bd      	mov	sp, r7
 800b572:	bd80      	pop	{r7, pc}
 800b574:	08014874 	.word	0x08014874

0800b578 <_ZN8touchgfx9ConstFontD0Ev>:
 800b578:	b580      	push	{r7, lr}
 800b57a:	b082      	sub	sp, #8
 800b57c:	af00      	add	r7, sp, #0
 800b57e:	6078      	str	r0, [r7, #4]
 800b580:	6878      	ldr	r0, [r7, #4]
 800b582:	f7ff ffe7 	bl	800b554 <_ZN8touchgfx9ConstFontD1Ev>
 800b586:	211c      	movs	r1, #28
 800b588:	6878      	ldr	r0, [r7, #4]
 800b58a:	f001 fedd 	bl	800d348 <_ZdlPvj>
 800b58e:	687b      	ldr	r3, [r7, #4]
 800b590:	4618      	mov	r0, r3
 800b592:	3708      	adds	r7, #8
 800b594:	46bd      	mov	sp, r7
 800b596:	bd80      	pop	{r7, pc}

0800b598 <_ZN8touchgfx13GeneratedFontD1Ev>:
 800b598:	b580      	push	{r7, lr}
 800b59a:	b082      	sub	sp, #8
 800b59c:	af00      	add	r7, sp, #0
 800b59e:	6078      	str	r0, [r7, #4]
 800b5a0:	4a05      	ldr	r2, [pc, #20]	; (800b5b8 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 800b5a2:	687b      	ldr	r3, [r7, #4]
 800b5a4:	601a      	str	r2, [r3, #0]
 800b5a6:	687b      	ldr	r3, [r7, #4]
 800b5a8:	4618      	mov	r0, r3
 800b5aa:	f7ff ffd3 	bl	800b554 <_ZN8touchgfx9ConstFontD1Ev>
 800b5ae:	687b      	ldr	r3, [r7, #4]
 800b5b0:	4618      	mov	r0, r3
 800b5b2:	3708      	adds	r7, #8
 800b5b4:	46bd      	mov	sp, r7
 800b5b6:	bd80      	pop	{r7, pc}
 800b5b8:	080147b8 	.word	0x080147b8

0800b5bc <_ZN8touchgfx13GeneratedFontD0Ev>:
 800b5bc:	b580      	push	{r7, lr}
 800b5be:	b082      	sub	sp, #8
 800b5c0:	af00      	add	r7, sp, #0
 800b5c2:	6078      	str	r0, [r7, #4]
 800b5c4:	6878      	ldr	r0, [r7, #4]
 800b5c6:	f7ff ffe7 	bl	800b598 <_ZN8touchgfx13GeneratedFontD1Ev>
 800b5ca:	212c      	movs	r1, #44	; 0x2c
 800b5cc:	6878      	ldr	r0, [r7, #4]
 800b5ce:	f001 febb 	bl	800d348 <_ZdlPvj>
 800b5d2:	687b      	ldr	r3, [r7, #4]
 800b5d4:	4618      	mov	r0, r3
 800b5d6:	3708      	adds	r7, #8
 800b5d8:	46bd      	mov	sp, r7
 800b5da:	bd80      	pop	{r7, pc}

0800b5dc <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
 800b5dc:	b480      	push	{r7}
 800b5de:	b083      	sub	sp, #12
 800b5e0:	af00      	add	r7, sp, #0
 800b5e2:	6078      	str	r0, [r7, #4]
 800b5e4:	687b      	ldr	r3, [r7, #4]
 800b5e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b5e8:	4618      	mov	r0, r3
 800b5ea:	370c      	adds	r7, #12
 800b5ec:	46bd      	mov	sp, r7
 800b5ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5f2:	4770      	bx	lr

0800b5f4 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
 800b5f4:	b480      	push	{r7}
 800b5f6:	b083      	sub	sp, #12
 800b5f8:	af00      	add	r7, sp, #0
 800b5fa:	6078      	str	r0, [r7, #4]
 800b5fc:	687b      	ldr	r3, [r7, #4]
 800b5fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b600:	4618      	mov	r0, r3
 800b602:	370c      	adds	r7, #12
 800b604:	46bd      	mov	sp, r7
 800b606:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b60a:	4770      	bx	lr

0800b60c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
 800b60c:	b580      	push	{r7, lr}
 800b60e:	b08e      	sub	sp, #56	; 0x38
 800b610:	af0a      	add	r7, sp, #40	; 0x28
 800b612:	60f8      	str	r0, [r7, #12]
 800b614:	60b9      	str	r1, [r7, #8]
 800b616:	4611      	mov	r1, r2
 800b618:	461a      	mov	r2, r3
 800b61a:	460b      	mov	r3, r1
 800b61c:	80fb      	strh	r3, [r7, #6]
 800b61e:	4613      	mov	r3, r2
 800b620:	80bb      	strh	r3, [r7, #4]
 800b622:	68f8      	ldr	r0, [r7, #12]
 800b624:	88b9      	ldrh	r1, [r7, #4]
 800b626:	88fa      	ldrh	r2, [r7, #6]
 800b628:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 800b62c:	9308      	str	r3, [sp, #32]
 800b62e:	8fbb      	ldrh	r3, [r7, #60]	; 0x3c
 800b630:	9307      	str	r3, [sp, #28]
 800b632:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
 800b636:	9306      	str	r3, [sp, #24]
 800b638:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800b63c:	9305      	str	r3, [sp, #20]
 800b63e:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800b642:	9304      	str	r3, [sp, #16]
 800b644:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800b648:	9303      	str	r3, [sp, #12]
 800b64a:	f897 3020 	ldrb.w	r3, [r7, #32]
 800b64e:	9302      	str	r3, [sp, #8]
 800b650:	7f3b      	ldrb	r3, [r7, #28]
 800b652:	9301      	str	r3, [sp, #4]
 800b654:	8b3b      	ldrh	r3, [r7, #24]
 800b656:	9300      	str	r3, [sp, #0]
 800b658:	460b      	mov	r3, r1
 800b65a:	68b9      	ldr	r1, [r7, #8]
 800b65c:	f001 f900 	bl	800c860 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800b660:	4a09      	ldr	r2, [pc, #36]	; (800b688 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 800b662:	68fb      	ldr	r3, [r7, #12]
 800b664:	601a      	str	r2, [r3, #0]
 800b666:	68fb      	ldr	r3, [r7, #12]
 800b668:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800b66a:	61da      	str	r2, [r3, #28]
 800b66c:	68fb      	ldr	r3, [r7, #12]
 800b66e:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800b670:	621a      	str	r2, [r3, #32]
 800b672:	68fb      	ldr	r3, [r7, #12]
 800b674:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800b676:	625a      	str	r2, [r3, #36]	; 0x24
 800b678:	68fb      	ldr	r3, [r7, #12]
 800b67a:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800b67c:	629a      	str	r2, [r3, #40]	; 0x28
 800b67e:	68fb      	ldr	r3, [r7, #12]
 800b680:	4618      	mov	r0, r3
 800b682:	3710      	adds	r7, #16
 800b684:	46bd      	mov	sp, r7
 800b686:	bd80      	pop	{r7, pc}
 800b688:	080147b8 	.word	0x080147b8

0800b68c <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
 800b68c:	b480      	push	{r7}
 800b68e:	b085      	sub	sp, #20
 800b690:	af00      	add	r7, sp, #0
 800b692:	6078      	str	r0, [r7, #4]
 800b694:	6039      	str	r1, [r7, #0]
 800b696:	687b      	ldr	r3, [r7, #4]
 800b698:	69db      	ldr	r3, [r3, #28]
 800b69a:	60fb      	str	r3, [r7, #12]
 800b69c:	683b      	ldr	r3, [r7, #0]
 800b69e:	889b      	ldrh	r3, [r3, #4]
 800b6a0:	0adb      	lsrs	r3, r3, #11
 800b6a2:	b29b      	uxth	r3, r3
 800b6a4:	009b      	lsls	r3, r3, #2
 800b6a6:	68fa      	ldr	r2, [r7, #12]
 800b6a8:	4413      	add	r3, r2
 800b6aa:	681a      	ldr	r2, [r3, #0]
 800b6ac:	683b      	ldr	r3, [r7, #0]
 800b6ae:	681b      	ldr	r3, [r3, #0]
 800b6b0:	4413      	add	r3, r2
 800b6b2:	4618      	mov	r0, r3
 800b6b4:	3714      	adds	r7, #20
 800b6b6:	46bd      	mov	sp, r7
 800b6b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6bc:	4770      	bx	lr

0800b6be <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:
 800b6be:	b480      	push	{r7}
 800b6c0:	b089      	sub	sp, #36	; 0x24
 800b6c2:	af00      	add	r7, sp, #0
 800b6c4:	60f8      	str	r0, [r7, #12]
 800b6c6:	460b      	mov	r3, r1
 800b6c8:	607a      	str	r2, [r7, #4]
 800b6ca:	817b      	strh	r3, [r7, #10]
 800b6cc:	687b      	ldr	r3, [r7, #4]
 800b6ce:	2b00      	cmp	r3, #0
 800b6d0:	d003      	beq.n	800b6da <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800b6d2:	687b      	ldr	r3, [r7, #4]
 800b6d4:	7b1b      	ldrb	r3, [r3, #12]
 800b6d6:	2b00      	cmp	r3, #0
 800b6d8:	d101      	bne.n	800b6de <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
 800b6da:	2300      	movs	r3, #0
 800b6dc:	e030      	b.n	800b740 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
 800b6de:	68fb      	ldr	r3, [r7, #12]
 800b6e0:	6a1a      	ldr	r2, [r3, #32]
 800b6e2:	687b      	ldr	r3, [r7, #4]
 800b6e4:	617b      	str	r3, [r7, #20]
 800b6e6:	697b      	ldr	r3, [r7, #20]
 800b6e8:	7b5b      	ldrb	r3, [r3, #13]
 800b6ea:	021b      	lsls	r3, r3, #8
 800b6ec:	b21b      	sxth	r3, r3
 800b6ee:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800b6f2:	b219      	sxth	r1, r3
 800b6f4:	697b      	ldr	r3, [r7, #20]
 800b6f6:	7adb      	ldrb	r3, [r3, #11]
 800b6f8:	b21b      	sxth	r3, r3
 800b6fa:	430b      	orrs	r3, r1
 800b6fc:	b21b      	sxth	r3, r3
 800b6fe:	b29b      	uxth	r3, r3
 800b700:	009b      	lsls	r3, r3, #2
 800b702:	4413      	add	r3, r2
 800b704:	61fb      	str	r3, [r7, #28]
 800b706:	687b      	ldr	r3, [r7, #4]
 800b708:	7b1b      	ldrb	r3, [r3, #12]
 800b70a:	837b      	strh	r3, [r7, #26]
 800b70c:	8b7b      	ldrh	r3, [r7, #26]
 800b70e:	2b00      	cmp	r3, #0
 800b710:	d015      	beq.n	800b73e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
 800b712:	69fb      	ldr	r3, [r7, #28]
 800b714:	881b      	ldrh	r3, [r3, #0]
 800b716:	897a      	ldrh	r2, [r7, #10]
 800b718:	429a      	cmp	r2, r3
 800b71a:	d103      	bne.n	800b724 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x66>
 800b71c:	69fb      	ldr	r3, [r7, #28]
 800b71e:	f993 3002 	ldrsb.w	r3, [r3, #2]
 800b722:	e00d      	b.n	800b740 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
 800b724:	69fb      	ldr	r3, [r7, #28]
 800b726:	881b      	ldrh	r3, [r3, #0]
 800b728:	897a      	ldrh	r2, [r7, #10]
 800b72a:	429a      	cmp	r2, r3
 800b72c:	d306      	bcc.n	800b73c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x7e>
 800b72e:	8b7b      	ldrh	r3, [r7, #26]
 800b730:	3b01      	subs	r3, #1
 800b732:	837b      	strh	r3, [r7, #26]
 800b734:	69fb      	ldr	r3, [r7, #28]
 800b736:	3304      	adds	r3, #4
 800b738:	61fb      	str	r3, [r7, #28]
 800b73a:	e7e7      	b.n	800b70c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x4e>
 800b73c:	bf00      	nop
 800b73e:	2300      	movs	r3, #0
 800b740:	4618      	mov	r0, r3
 800b742:	3724      	adds	r7, #36	; 0x24
 800b744:	46bd      	mov	sp, r7
 800b746:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b74a:	4770      	bx	lr

0800b74c <__tcf_0>:
 800b74c:	b580      	push	{r7, lr}
 800b74e:	af00      	add	r7, sp, #0
 800b750:	4801      	ldr	r0, [pc, #4]	; (800b758 <__tcf_0+0xc>)
 800b752:	f7ff ff21 	bl	800b598 <_ZN8touchgfx13GeneratedFontD1Ev>
 800b756:	bd80      	pop	{r7, pc}
 800b758:	200005ac 	.word	0x200005ac

0800b75c <_Z23getFont_verdana_10_4bppv>:
 800b75c:	b580      	push	{r7, lr}
 800b75e:	b08e      	sub	sp, #56	; 0x38
 800b760:	af0e      	add	r7, sp, #56	; 0x38
 800b762:	4b21      	ldr	r3, [pc, #132]	; (800b7e8 <_Z23getFont_verdana_10_4bppv+0x8c>)
 800b764:	781b      	ldrb	r3, [r3, #0]
 800b766:	f3bf 8f5b 	dmb	ish
 800b76a:	b2db      	uxtb	r3, r3
 800b76c:	f003 0301 	and.w	r3, r3, #1
 800b770:	2b00      	cmp	r3, #0
 800b772:	bf0c      	ite	eq
 800b774:	2301      	moveq	r3, #1
 800b776:	2300      	movne	r3, #0
 800b778:	b2db      	uxtb	r3, r3
 800b77a:	2b00      	cmp	r3, #0
 800b77c:	d030      	beq.n	800b7e0 <_Z23getFont_verdana_10_4bppv+0x84>
 800b77e:	481a      	ldr	r0, [pc, #104]	; (800b7e8 <_Z23getFont_verdana_10_4bppv+0x8c>)
 800b780:	f001 fde4 	bl	800d34c <__cxa_guard_acquire>
 800b784:	4603      	mov	r3, r0
 800b786:	2b00      	cmp	r3, #0
 800b788:	bf14      	ite	ne
 800b78a:	2301      	movne	r3, #1
 800b78c:	2300      	moveq	r3, #0
 800b78e:	b2db      	uxtb	r3, r3
 800b790:	2b00      	cmp	r3, #0
 800b792:	d025      	beq.n	800b7e0 <_Z23getFont_verdana_10_4bppv+0x84>
 800b794:	2300      	movs	r3, #0
 800b796:	930c      	str	r3, [sp, #48]	; 0x30
 800b798:	2300      	movs	r3, #0
 800b79a:	930b      	str	r3, [sp, #44]	; 0x2c
 800b79c:	2300      	movs	r3, #0
 800b79e:	930a      	str	r3, [sp, #40]	; 0x28
 800b7a0:	233f      	movs	r3, #63	; 0x3f
 800b7a2:	9309      	str	r3, [sp, #36]	; 0x24
 800b7a4:	4b11      	ldr	r3, [pc, #68]	; (800b7ec <_Z23getFont_verdana_10_4bppv+0x90>)
 800b7a6:	9308      	str	r3, [sp, #32]
 800b7a8:	4b11      	ldr	r3, [pc, #68]	; (800b7f0 <_Z23getFont_verdana_10_4bppv+0x94>)
 800b7aa:	9307      	str	r3, [sp, #28]
 800b7ac:	2300      	movs	r3, #0
 800b7ae:	9306      	str	r3, [sp, #24]
 800b7b0:	2300      	movs	r3, #0
 800b7b2:	9305      	str	r3, [sp, #20]
 800b7b4:	2301      	movs	r3, #1
 800b7b6:	9304      	str	r3, [sp, #16]
 800b7b8:	2304      	movs	r3, #4
 800b7ba:	9303      	str	r3, [sp, #12]
 800b7bc:	2300      	movs	r3, #0
 800b7be:	9302      	str	r3, [sp, #8]
 800b7c0:	2300      	movs	r3, #0
 800b7c2:	9301      	str	r3, [sp, #4]
 800b7c4:	230a      	movs	r3, #10
 800b7c6:	9300      	str	r3, [sp, #0]
 800b7c8:	230a      	movs	r3, #10
 800b7ca:	2201      	movs	r2, #1
 800b7cc:	4909      	ldr	r1, [pc, #36]	; (800b7f4 <_Z23getFont_verdana_10_4bppv+0x98>)
 800b7ce:	480a      	ldr	r0, [pc, #40]	; (800b7f8 <_Z23getFont_verdana_10_4bppv+0x9c>)
 800b7d0:	f7ff ff1c 	bl	800b60c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800b7d4:	4809      	ldr	r0, [pc, #36]	; (800b7fc <_Z23getFont_verdana_10_4bppv+0xa0>)
 800b7d6:	f002 f809 	bl	800d7ec <atexit>
 800b7da:	4803      	ldr	r0, [pc, #12]	; (800b7e8 <_Z23getFont_verdana_10_4bppv+0x8c>)
 800b7dc:	f001 fdc2 	bl	800d364 <__cxa_guard_release>
 800b7e0:	4b05      	ldr	r3, [pc, #20]	; (800b7f8 <_Z23getFont_verdana_10_4bppv+0x9c>)
 800b7e2:	4618      	mov	r0, r3
 800b7e4:	46bd      	mov	sp, r7
 800b7e6:	bd80      	pop	{r7, pc}
 800b7e8:	200005d8 	.word	0x200005d8
 800b7ec:	08014f24 	.word	0x08014f24
 800b7f0:	08014f30 	.word	0x08014f30
 800b7f4:	08014ef4 	.word	0x08014ef4
 800b7f8:	200005ac 	.word	0x200005ac
 800b7fc:	0800b74d 	.word	0x0800b74d

0800b800 <__tcf_0>:
 800b800:	b580      	push	{r7, lr}
 800b802:	af00      	add	r7, sp, #0
 800b804:	4801      	ldr	r0, [pc, #4]	; (800b80c <__tcf_0+0xc>)
 800b806:	f7ff fec7 	bl	800b598 <_ZN8touchgfx13GeneratedFontD1Ev>
 800b80a:	bd80      	pop	{r7, pc}
 800b80c:	200005dc 	.word	0x200005dc

0800b810 <_Z23getFont_verdana_20_4bppv>:
 800b810:	b580      	push	{r7, lr}
 800b812:	b08e      	sub	sp, #56	; 0x38
 800b814:	af0e      	add	r7, sp, #56	; 0x38
 800b816:	4b21      	ldr	r3, [pc, #132]	; (800b89c <_Z23getFont_verdana_20_4bppv+0x8c>)
 800b818:	781b      	ldrb	r3, [r3, #0]
 800b81a:	f3bf 8f5b 	dmb	ish
 800b81e:	b2db      	uxtb	r3, r3
 800b820:	f003 0301 	and.w	r3, r3, #1
 800b824:	2b00      	cmp	r3, #0
 800b826:	bf0c      	ite	eq
 800b828:	2301      	moveq	r3, #1
 800b82a:	2300      	movne	r3, #0
 800b82c:	b2db      	uxtb	r3, r3
 800b82e:	2b00      	cmp	r3, #0
 800b830:	d030      	beq.n	800b894 <_Z23getFont_verdana_20_4bppv+0x84>
 800b832:	481a      	ldr	r0, [pc, #104]	; (800b89c <_Z23getFont_verdana_20_4bppv+0x8c>)
 800b834:	f001 fd8a 	bl	800d34c <__cxa_guard_acquire>
 800b838:	4603      	mov	r3, r0
 800b83a:	2b00      	cmp	r3, #0
 800b83c:	bf14      	ite	ne
 800b83e:	2301      	movne	r3, #1
 800b840:	2300      	moveq	r3, #0
 800b842:	b2db      	uxtb	r3, r3
 800b844:	2b00      	cmp	r3, #0
 800b846:	d025      	beq.n	800b894 <_Z23getFont_verdana_20_4bppv+0x84>
 800b848:	2300      	movs	r3, #0
 800b84a:	930c      	str	r3, [sp, #48]	; 0x30
 800b84c:	2300      	movs	r3, #0
 800b84e:	930b      	str	r3, [sp, #44]	; 0x2c
 800b850:	2300      	movs	r3, #0
 800b852:	930a      	str	r3, [sp, #40]	; 0x28
 800b854:	233f      	movs	r3, #63	; 0x3f
 800b856:	9309      	str	r3, [sp, #36]	; 0x24
 800b858:	4b11      	ldr	r3, [pc, #68]	; (800b8a0 <_Z23getFont_verdana_20_4bppv+0x90>)
 800b85a:	9308      	str	r3, [sp, #32]
 800b85c:	4b11      	ldr	r3, [pc, #68]	; (800b8a4 <_Z23getFont_verdana_20_4bppv+0x94>)
 800b85e:	9307      	str	r3, [sp, #28]
 800b860:	2300      	movs	r3, #0
 800b862:	9306      	str	r3, [sp, #24]
 800b864:	2300      	movs	r3, #0
 800b866:	9305      	str	r3, [sp, #20]
 800b868:	2301      	movs	r3, #1
 800b86a:	9304      	str	r3, [sp, #16]
 800b86c:	2304      	movs	r3, #4
 800b86e:	9303      	str	r3, [sp, #12]
 800b870:	2300      	movs	r3, #0
 800b872:	9302      	str	r3, [sp, #8]
 800b874:	2300      	movs	r3, #0
 800b876:	9301      	str	r3, [sp, #4]
 800b878:	2314      	movs	r3, #20
 800b87a:	9300      	str	r3, [sp, #0]
 800b87c:	2314      	movs	r3, #20
 800b87e:	2201      	movs	r2, #1
 800b880:	4909      	ldr	r1, [pc, #36]	; (800b8a8 <_Z23getFont_verdana_20_4bppv+0x98>)
 800b882:	480a      	ldr	r0, [pc, #40]	; (800b8ac <_Z23getFont_verdana_20_4bppv+0x9c>)
 800b884:	f7ff fec2 	bl	800b60c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800b888:	4809      	ldr	r0, [pc, #36]	; (800b8b0 <_Z23getFont_verdana_20_4bppv+0xa0>)
 800b88a:	f001 ffaf 	bl	800d7ec <atexit>
 800b88e:	4803      	ldr	r0, [pc, #12]	; (800b89c <_Z23getFont_verdana_20_4bppv+0x8c>)
 800b890:	f001 fd68 	bl	800d364 <__cxa_guard_release>
 800b894:	4b05      	ldr	r3, [pc, #20]	; (800b8ac <_Z23getFont_verdana_20_4bppv+0x9c>)
 800b896:	4618      	mov	r0, r3
 800b898:	46bd      	mov	sp, r7
 800b89a:	bd80      	pop	{r7, pc}
 800b89c:	20000608 	.word	0x20000608
 800b8a0:	08014f28 	.word	0x08014f28
 800b8a4:	08014f34 	.word	0x08014f34
 800b8a8:	08014f04 	.word	0x08014f04
 800b8ac:	200005dc 	.word	0x200005dc
 800b8b0:	0800b801 	.word	0x0800b801

0800b8b4 <__tcf_0>:
 800b8b4:	b580      	push	{r7, lr}
 800b8b6:	af00      	add	r7, sp, #0
 800b8b8:	4801      	ldr	r0, [pc, #4]	; (800b8c0 <__tcf_0+0xc>)
 800b8ba:	f7ff fe6d 	bl	800b598 <_ZN8touchgfx13GeneratedFontD1Ev>
 800b8be:	bd80      	pop	{r7, pc}
 800b8c0:	2000060c 	.word	0x2000060c

0800b8c4 <_Z23getFont_verdana_40_4bppv>:
 800b8c4:	b580      	push	{r7, lr}
 800b8c6:	b08e      	sub	sp, #56	; 0x38
 800b8c8:	af0e      	add	r7, sp, #56	; 0x38
 800b8ca:	4b21      	ldr	r3, [pc, #132]	; (800b950 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800b8cc:	781b      	ldrb	r3, [r3, #0]
 800b8ce:	f3bf 8f5b 	dmb	ish
 800b8d2:	b2db      	uxtb	r3, r3
 800b8d4:	f003 0301 	and.w	r3, r3, #1
 800b8d8:	2b00      	cmp	r3, #0
 800b8da:	bf0c      	ite	eq
 800b8dc:	2301      	moveq	r3, #1
 800b8de:	2300      	movne	r3, #0
 800b8e0:	b2db      	uxtb	r3, r3
 800b8e2:	2b00      	cmp	r3, #0
 800b8e4:	d030      	beq.n	800b948 <_Z23getFont_verdana_40_4bppv+0x84>
 800b8e6:	481a      	ldr	r0, [pc, #104]	; (800b950 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800b8e8:	f001 fd30 	bl	800d34c <__cxa_guard_acquire>
 800b8ec:	4603      	mov	r3, r0
 800b8ee:	2b00      	cmp	r3, #0
 800b8f0:	bf14      	ite	ne
 800b8f2:	2301      	movne	r3, #1
 800b8f4:	2300      	moveq	r3, #0
 800b8f6:	b2db      	uxtb	r3, r3
 800b8f8:	2b00      	cmp	r3, #0
 800b8fa:	d025      	beq.n	800b948 <_Z23getFont_verdana_40_4bppv+0x84>
 800b8fc:	2300      	movs	r3, #0
 800b8fe:	930c      	str	r3, [sp, #48]	; 0x30
 800b900:	2300      	movs	r3, #0
 800b902:	930b      	str	r3, [sp, #44]	; 0x2c
 800b904:	2300      	movs	r3, #0
 800b906:	930a      	str	r3, [sp, #40]	; 0x28
 800b908:	233f      	movs	r3, #63	; 0x3f
 800b90a:	9309      	str	r3, [sp, #36]	; 0x24
 800b90c:	4b11      	ldr	r3, [pc, #68]	; (800b954 <_Z23getFont_verdana_40_4bppv+0x90>)
 800b90e:	9308      	str	r3, [sp, #32]
 800b910:	4b11      	ldr	r3, [pc, #68]	; (800b958 <_Z23getFont_verdana_40_4bppv+0x94>)
 800b912:	9307      	str	r3, [sp, #28]
 800b914:	2300      	movs	r3, #0
 800b916:	9306      	str	r3, [sp, #24]
 800b918:	2300      	movs	r3, #0
 800b91a:	9305      	str	r3, [sp, #20]
 800b91c:	2301      	movs	r3, #1
 800b91e:	9304      	str	r3, [sp, #16]
 800b920:	2304      	movs	r3, #4
 800b922:	9303      	str	r3, [sp, #12]
 800b924:	2300      	movs	r3, #0
 800b926:	9302      	str	r3, [sp, #8]
 800b928:	2300      	movs	r3, #0
 800b92a:	9301      	str	r3, [sp, #4]
 800b92c:	2328      	movs	r3, #40	; 0x28
 800b92e:	9300      	str	r3, [sp, #0]
 800b930:	2328      	movs	r3, #40	; 0x28
 800b932:	2201      	movs	r2, #1
 800b934:	4909      	ldr	r1, [pc, #36]	; (800b95c <_Z23getFont_verdana_40_4bppv+0x98>)
 800b936:	480a      	ldr	r0, [pc, #40]	; (800b960 <_Z23getFont_verdana_40_4bppv+0x9c>)
 800b938:	f7ff fe68 	bl	800b60c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800b93c:	4809      	ldr	r0, [pc, #36]	; (800b964 <_Z23getFont_verdana_40_4bppv+0xa0>)
 800b93e:	f001 ff55 	bl	800d7ec <atexit>
 800b942:	4803      	ldr	r0, [pc, #12]	; (800b950 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800b944:	f001 fd0e 	bl	800d364 <__cxa_guard_release>
 800b948:	4b05      	ldr	r3, [pc, #20]	; (800b960 <_Z23getFont_verdana_40_4bppv+0x9c>)
 800b94a:	4618      	mov	r0, r3
 800b94c:	46bd      	mov	sp, r7
 800b94e:	bd80      	pop	{r7, pc}
 800b950:	20000638 	.word	0x20000638
 800b954:	08014f2c 	.word	0x08014f2c
 800b958:	08014f38 	.word	0x08014f38
 800b95c:	08014f14 	.word	0x08014f14
 800b960:	2000060c 	.word	0x2000060c
 800b964:	0800b8b5 	.word	0x0800b8b5

0800b968 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
 800b968:	b480      	push	{r7}
 800b96a:	b085      	sub	sp, #20
 800b96c:	af00      	add	r7, sp, #0
 800b96e:	60f8      	str	r0, [r7, #12]
 800b970:	460b      	mov	r3, r1
 800b972:	607a      	str	r2, [r7, #4]
 800b974:	817b      	strh	r3, [r7, #10]
 800b976:	2300      	movs	r3, #0
 800b978:	4618      	mov	r0, r3
 800b97a:	3714      	adds	r7, #20
 800b97c:	46bd      	mov	sp, r7
 800b97e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b982:	4770      	bx	lr

0800b984 <_ZNK8touchgfx4Font12getGSUBTableEv>:
 800b984:	b480      	push	{r7}
 800b986:	b083      	sub	sp, #12
 800b988:	af00      	add	r7, sp, #0
 800b98a:	6078      	str	r0, [r7, #4]
 800b98c:	2300      	movs	r3, #0
 800b98e:	4618      	mov	r0, r3
 800b990:	370c      	adds	r7, #12
 800b992:	46bd      	mov	sp, r7
 800b994:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b998:	4770      	bx	lr

0800b99a <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
 800b99a:	b480      	push	{r7}
 800b99c:	b083      	sub	sp, #12
 800b99e:	af00      	add	r7, sp, #0
 800b9a0:	6078      	str	r0, [r7, #4]
 800b9a2:	2300      	movs	r3, #0
 800b9a4:	4618      	mov	r0, r3
 800b9a6:	370c      	adds	r7, #12
 800b9a8:	46bd      	mov	sp, r7
 800b9aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9ae:	4770      	bx	lr

0800b9b0 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
 800b9b0:	b40e      	push	{r1, r2, r3}
 800b9b2:	b580      	push	{r7, lr}
 800b9b4:	b085      	sub	sp, #20
 800b9b6:	af00      	add	r7, sp, #0
 800b9b8:	6078      	str	r0, [r7, #4]
 800b9ba:	f107 0320 	add.w	r3, r7, #32
 800b9be:	60bb      	str	r3, [r7, #8]
 800b9c0:	68bb      	ldr	r3, [r7, #8]
 800b9c2:	69fa      	ldr	r2, [r7, #28]
 800b9c4:	2100      	movs	r1, #0
 800b9c6:	6878      	ldr	r0, [r7, #4]
 800b9c8:	f000 fe20 	bl	800c60c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800b9cc:	4603      	mov	r3, r0
 800b9ce:	81fb      	strh	r3, [r7, #14]
 800b9d0:	89fb      	ldrh	r3, [r7, #14]
 800b9d2:	4618      	mov	r0, r3
 800b9d4:	3714      	adds	r7, #20
 800b9d6:	46bd      	mov	sp, r7
 800b9d8:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800b9dc:	b003      	add	sp, #12
 800b9de:	4770      	bx	lr

0800b9e0 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:
 800b9e0:	b40c      	push	{r2, r3}
 800b9e2:	b580      	push	{r7, lr}
 800b9e4:	b084      	sub	sp, #16
 800b9e6:	af00      	add	r7, sp, #0
 800b9e8:	6078      	str	r0, [r7, #4]
 800b9ea:	460b      	mov	r3, r1
 800b9ec:	70fb      	strb	r3, [r7, #3]
 800b9ee:	f107 031c 	add.w	r3, r7, #28
 800b9f2:	60bb      	str	r3, [r7, #8]
 800b9f4:	78f9      	ldrb	r1, [r7, #3]
 800b9f6:	68bb      	ldr	r3, [r7, #8]
 800b9f8:	69ba      	ldr	r2, [r7, #24]
 800b9fa:	6878      	ldr	r0, [r7, #4]
 800b9fc:	f000 fe06 	bl	800c60c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800ba00:	4603      	mov	r3, r0
 800ba02:	81fb      	strh	r3, [r7, #14]
 800ba04:	89fb      	ldrh	r3, [r7, #14]
 800ba06:	4618      	mov	r0, r3
 800ba08:	3710      	adds	r7, #16
 800ba0a:	46bd      	mov	sp, r7
 800ba0c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800ba10:	b002      	add	sp, #8
 800ba12:	4770      	bx	lr

0800ba14 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:
 800ba14:	b580      	push	{r7, lr}
 800ba16:	b08a      	sub	sp, #40	; 0x28
 800ba18:	af00      	add	r7, sp, #0
 800ba1a:	6078      	str	r0, [r7, #4]
 800ba1c:	460b      	mov	r3, r1
 800ba1e:	70fb      	strb	r3, [r7, #3]
 800ba20:	687b      	ldr	r3, [r7, #4]
 800ba22:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ba24:	2b00      	cmp	r3, #0
 800ba26:	d016      	beq.n	800ba56 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800ba28:	687b      	ldr	r3, [r7, #4]
 800ba2a:	3322      	adds	r3, #34	; 0x22
 800ba2c:	627b      	str	r3, [r7, #36]	; 0x24
 800ba2e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ba30:	8adb      	ldrh	r3, [r3, #22]
 800ba32:	2b00      	cmp	r3, #0
 800ba34:	d105      	bne.n	800ba42 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800ba36:	4b43      	ldr	r3, [pc, #268]	; (800bb44 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800ba38:	4a43      	ldr	r2, [pc, #268]	; (800bb48 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800ba3a:	21c5      	movs	r1, #197	; 0xc5
 800ba3c:	4843      	ldr	r0, [pc, #268]	; (800bb4c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800ba3e:	f001 feb7 	bl	800d7b0 <__assert_func>
 800ba42:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ba44:	8a9b      	ldrh	r3, [r3, #20]
 800ba46:	461a      	mov	r2, r3
 800ba48:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ba4a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800ba4e:	2b00      	cmp	r3, #0
 800ba50:	d001      	beq.n	800ba56 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800ba52:	2301      	movs	r3, #1
 800ba54:	e000      	b.n	800ba58 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800ba56:	2300      	movs	r3, #0
 800ba58:	2b00      	cmp	r3, #0
 800ba5a:	d06a      	beq.n	800bb32 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
 800ba5c:	6878      	ldr	r0, [r7, #4]
 800ba5e:	f001 fc54 	bl	800d30a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
 800ba62:	687b      	ldr	r3, [r7, #4]
 800ba64:	3322      	adds	r3, #34	; 0x22
 800ba66:	623b      	str	r3, [r7, #32]
 800ba68:	2301      	movs	r3, #1
 800ba6a:	83fb      	strh	r3, [r7, #30]
 800ba6c:	6a3b      	ldr	r3, [r7, #32]
 800ba6e:	8adb      	ldrh	r3, [r3, #22]
 800ba70:	8bfa      	ldrh	r2, [r7, #30]
 800ba72:	429a      	cmp	r2, r3
 800ba74:	d305      	bcc.n	800ba82 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800ba76:	4b36      	ldr	r3, [pc, #216]	; (800bb50 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 800ba78:	4a36      	ldr	r2, [pc, #216]	; (800bb54 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 800ba7a:	21cb      	movs	r1, #203	; 0xcb
 800ba7c:	4833      	ldr	r0, [pc, #204]	; (800bb4c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800ba7e:	f001 fe97 	bl	800d7b0 <__assert_func>
 800ba82:	6a3b      	ldr	r3, [r7, #32]
 800ba84:	8a9a      	ldrh	r2, [r3, #20]
 800ba86:	8bfb      	ldrh	r3, [r7, #30]
 800ba88:	4413      	add	r3, r2
 800ba8a:	83bb      	strh	r3, [r7, #28]
 800ba8c:	8bbb      	ldrh	r3, [r7, #28]
 800ba8e:	2b09      	cmp	r3, #9
 800ba90:	d801      	bhi.n	800ba96 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800ba92:	8bbb      	ldrh	r3, [r7, #28]
 800ba94:	e001      	b.n	800ba9a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800ba96:	8bbb      	ldrh	r3, [r7, #28]
 800ba98:	3b0a      	subs	r3, #10
 800ba9a:	6a3a      	ldr	r2, [r7, #32]
 800ba9c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800baa0:	f640 123f 	movw	r2, #2367	; 0x93f
 800baa4:	4293      	cmp	r3, r2
 800baa6:	bf0c      	ite	eq
 800baa8:	2301      	moveq	r3, #1
 800baaa:	2300      	movne	r3, #0
 800baac:	b2db      	uxtb	r3, r3
 800baae:	2b00      	cmp	r3, #0
 800bab0:	d03f      	beq.n	800bb32 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
 800bab2:	687b      	ldr	r3, [r7, #4]
 800bab4:	3322      	adds	r3, #34	; 0x22
 800bab6:	687a      	ldr	r2, [r7, #4]
 800bab8:	3222      	adds	r2, #34	; 0x22
 800baba:	60ba      	str	r2, [r7, #8]
 800babc:	68ba      	ldr	r2, [r7, #8]
 800babe:	8ad2      	ldrh	r2, [r2, #22]
 800bac0:	2a00      	cmp	r2, #0
 800bac2:	d105      	bne.n	800bad0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 800bac4:	4b1f      	ldr	r3, [pc, #124]	; (800bb44 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800bac6:	4a20      	ldr	r2, [pc, #128]	; (800bb48 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800bac8:	21c5      	movs	r1, #197	; 0xc5
 800baca:	4820      	ldr	r0, [pc, #128]	; (800bb4c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800bacc:	f001 fe70 	bl	800d7b0 <__assert_func>
 800bad0:	68ba      	ldr	r2, [r7, #8]
 800bad2:	8a92      	ldrh	r2, [r2, #20]
 800bad4:	4611      	mov	r1, r2
 800bad6:	68ba      	ldr	r2, [r7, #8]
 800bad8:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800badc:	613b      	str	r3, [r7, #16]
 800bade:	4613      	mov	r3, r2
 800bae0:	81fb      	strh	r3, [r7, #14]
 800bae2:	693b      	ldr	r3, [r7, #16]
 800bae4:	8adb      	ldrh	r3, [r3, #22]
 800bae6:	2b01      	cmp	r3, #1
 800bae8:	d806      	bhi.n	800baf8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 800baea:	4b1b      	ldr	r3, [pc, #108]	; (800bb58 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 800baec:	4a1b      	ldr	r2, [pc, #108]	; (800bb5c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800baee:	f44f 718e 	mov.w	r1, #284	; 0x11c
 800baf2:	4816      	ldr	r0, [pc, #88]	; (800bb4c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800baf4:	f001 fe5c 	bl	800d7b0 <__assert_func>
 800baf8:	693b      	ldr	r3, [r7, #16]
 800bafa:	8a9b      	ldrh	r3, [r3, #20]
 800bafc:	3301      	adds	r3, #1
 800bafe:	81bb      	strh	r3, [r7, #12]
 800bb00:	89bb      	ldrh	r3, [r7, #12]
 800bb02:	2b09      	cmp	r3, #9
 800bb04:	d801      	bhi.n	800bb0a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 800bb06:	89bb      	ldrh	r3, [r7, #12]
 800bb08:	e000      	b.n	800bb0c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 800bb0a:	2300      	movs	r3, #0
 800bb0c:	693a      	ldr	r2, [r7, #16]
 800bb0e:	89f9      	ldrh	r1, [r7, #14]
 800bb10:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800bb14:	bf00      	nop
 800bb16:	687b      	ldr	r3, [r7, #4]
 800bb18:	3322      	adds	r3, #34	; 0x22
 800bb1a:	61bb      	str	r3, [r7, #24]
 800bb1c:	f640 133f 	movw	r3, #2367	; 0x93f
 800bb20:	82fb      	strh	r3, [r7, #22]
 800bb22:	69bb      	ldr	r3, [r7, #24]
 800bb24:	8a9b      	ldrh	r3, [r3, #20]
 800bb26:	4619      	mov	r1, r3
 800bb28:	69bb      	ldr	r3, [r7, #24]
 800bb2a:	8afa      	ldrh	r2, [r7, #22]
 800bb2c:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
 800bb30:	bf00      	nop
 800bb32:	6878      	ldr	r0, [r7, #4]
 800bb34:	f001 faec 	bl	800d110 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800bb38:	4603      	mov	r3, r0
 800bb3a:	4618      	mov	r0, r3
 800bb3c:	3728      	adds	r7, #40	; 0x28
 800bb3e:	46bd      	mov	sp, r7
 800bb40:	bd80      	pop	{r7, pc}
 800bb42:	bf00      	nop
 800bb44:	0801226c 	.word	0x0801226c
 800bb48:	08012278 	.word	0x08012278
 800bb4c:	08012324 	.word	0x08012324
 800bb50:	0801236c 	.word	0x0801236c
 800bb54:	0801237c 	.word	0x0801237c
 800bb58:	08012450 	.word	0x08012450
 800bb5c:	0801245c 	.word	0x0801245c

0800bb60 <_ZN8touchgfx12TextProvider18initializeInternalEv>:
 800bb60:	b580      	push	{r7, lr}
 800bb62:	b082      	sub	sp, #8
 800bb64:	af00      	add	r7, sp, #0
 800bb66:	6078      	str	r0, [r7, #4]
 800bb68:	6878      	ldr	r0, [r7, #4]
 800bb6a:	f001 fa98 	bl	800d09e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800bb6e:	bf00      	nop
 800bb70:	3708      	adds	r7, #8
 800bb72:	46bd      	mov	sp, r7
 800bb74:	bd80      	pop	{r7, pc}
	...

0800bb78 <_Z41__static_initialization_and_destruction_0ii>:
 800bb78:	b580      	push	{r7, lr}
 800bb7a:	b082      	sub	sp, #8
 800bb7c:	af00      	add	r7, sp, #0
 800bb7e:	6078      	str	r0, [r7, #4]
 800bb80:	6039      	str	r1, [r7, #0]
 800bb82:	687b      	ldr	r3, [r7, #4]
 800bb84:	2b01      	cmp	r3, #1
 800bb86:	d113      	bne.n	800bbb0 <_Z41__static_initialization_and_destruction_0ii+0x38>
 800bb88:	683b      	ldr	r3, [r7, #0]
 800bb8a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800bb8e:	4293      	cmp	r3, r2
 800bb90:	d10e      	bne.n	800bbb0 <_Z41__static_initialization_and_destruction_0ii+0x38>
 800bb92:	f7ff fe3d 	bl	800b810 <_Z23getFont_verdana_20_4bppv>
 800bb96:	4603      	mov	r3, r0
 800bb98:	4a07      	ldr	r2, [pc, #28]	; (800bbb8 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800bb9a:	6013      	str	r3, [r2, #0]
 800bb9c:	f7ff fe92 	bl	800b8c4 <_Z23getFont_verdana_40_4bppv>
 800bba0:	4603      	mov	r3, r0
 800bba2:	4a05      	ldr	r2, [pc, #20]	; (800bbb8 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800bba4:	6053      	str	r3, [r2, #4]
 800bba6:	f7ff fdd9 	bl	800b75c <_Z23getFont_verdana_10_4bppv>
 800bbaa:	4603      	mov	r3, r0
 800bbac:	4a02      	ldr	r2, [pc, #8]	; (800bbb8 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800bbae:	6093      	str	r3, [r2, #8]
 800bbb0:	bf00      	nop
 800bbb2:	3708      	adds	r7, #8
 800bbb4:	46bd      	mov	sp, r7
 800bbb6:	bd80      	pop	{r7, pc}
 800bbb8:	2000063c 	.word	0x2000063c

0800bbbc <_GLOBAL__sub_I_touchgfx_fonts>:
 800bbbc:	b580      	push	{r7, lr}
 800bbbe:	af00      	add	r7, sp, #0
 800bbc0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800bbc4:	2001      	movs	r0, #1
 800bbc6:	f7ff ffd7 	bl	800bb78 <_Z41__static_initialization_and_destruction_0ii>
 800bbca:	bd80      	pop	{r7, pc}

0800bbcc <MX_USB_DEVICE_Init>:
/**
  * Init USB device Library, add supported class and start the library
  * @retval None
  */
void MX_USB_DEVICE_Init(void)
{
 800bbcc:	b580      	push	{r7, lr}
 800bbce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USB_DEVICE_Init_PreTreatment */

  /* USER CODE END USB_DEVICE_Init_PreTreatment */

  /* Init Device Library, add supported class and start the library. */
  if (USBD_Init(&hUsbDeviceFS, &FS_Desc, DEVICE_FS) != USBD_OK)
 800bbd0:	2200      	movs	r2, #0
 800bbd2:	4912      	ldr	r1, [pc, #72]	; (800bc1c <MX_USB_DEVICE_Init+0x50>)
 800bbd4:	4812      	ldr	r0, [pc, #72]	; (800bc20 <MX_USB_DEVICE_Init+0x54>)
 800bbd6:	f7fe f93d 	bl	8009e54 <USBD_Init>
 800bbda:	4603      	mov	r3, r0
 800bbdc:	2b00      	cmp	r3, #0
 800bbde:	d001      	beq.n	800bbe4 <MX_USB_DEVICE_Init+0x18>
  {
    Error_Handler();
 800bbe0:	f7f5 fea2 	bl	8001928 <Error_Handler>
  }
  if (USBD_RegisterClass(&hUsbDeviceFS, &USBD_CDC) != USBD_OK)
 800bbe4:	490f      	ldr	r1, [pc, #60]	; (800bc24 <MX_USB_DEVICE_Init+0x58>)
 800bbe6:	480e      	ldr	r0, [pc, #56]	; (800bc20 <MX_USB_DEVICE_Init+0x54>)
 800bbe8:	f7fe f964 	bl	8009eb4 <USBD_RegisterClass>
 800bbec:	4603      	mov	r3, r0
 800bbee:	2b00      	cmp	r3, #0
 800bbf0:	d001      	beq.n	800bbf6 <MX_USB_DEVICE_Init+0x2a>
  {
    Error_Handler();
 800bbf2:	f7f5 fe99 	bl	8001928 <Error_Handler>
  }
  if (USBD_CDC_RegisterInterface(&hUsbDeviceFS, &USBD_Interface_fops_FS) != USBD_OK)
 800bbf6:	490c      	ldr	r1, [pc, #48]	; (800bc28 <MX_USB_DEVICE_Init+0x5c>)
 800bbf8:	4809      	ldr	r0, [pc, #36]	; (800bc20 <MX_USB_DEVICE_Init+0x54>)
 800bbfa:	f7fe f855 	bl	8009ca8 <USBD_CDC_RegisterInterface>
 800bbfe:	4603      	mov	r3, r0
 800bc00:	2b00      	cmp	r3, #0
 800bc02:	d001      	beq.n	800bc08 <MX_USB_DEVICE_Init+0x3c>
  {
    Error_Handler();
 800bc04:	f7f5 fe90 	bl	8001928 <Error_Handler>
  }
  if (USBD_Start(&hUsbDeviceFS) != USBD_OK)
 800bc08:	4805      	ldr	r0, [pc, #20]	; (800bc20 <MX_USB_DEVICE_Init+0x54>)
 800bc0a:	f7fe f989 	bl	8009f20 <USBD_Start>
 800bc0e:	4603      	mov	r3, r0
 800bc10:	2b00      	cmp	r3, #0
 800bc12:	d001      	beq.n	800bc18 <MX_USB_DEVICE_Init+0x4c>
  {
    Error_Handler();
 800bc14:	f7f5 fe88 	bl	8001928 <Error_Handler>
  }

  /* USER CODE BEGIN USB_DEVICE_Init_PostTreatment */

  /* USER CODE END USB_DEVICE_Init_PostTreatment */
}
 800bc18:	bf00      	nop
 800bc1a:	bd80      	pop	{r7, pc}
 800bc1c:	200000b4 	.word	0x200000b4
 800bc20:	20000648 	.word	0x20000648
 800bc24:	20000020 	.word	0x20000020
 800bc28:	200000a0 	.word	0x200000a0

0800bc2c <CDC_Init_FS>:
/**
  * @brief  Initializes the CDC media low layer over the FS USB IP
  * @retval USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CDC_Init_FS(void)
{
 800bc2c:	b580      	push	{r7, lr}
 800bc2e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 3 */
  /* Set Application Buffers */
  USBD_CDC_SetTxBuffer(&hUsbDeviceFS, UserTxBufferFS, 0);
 800bc30:	2200      	movs	r2, #0
 800bc32:	4905      	ldr	r1, [pc, #20]	; (800bc48 <CDC_Init_FS+0x1c>)
 800bc34:	4805      	ldr	r0, [pc, #20]	; (800bc4c <CDC_Init_FS+0x20>)
 800bc36:	f7fe f851 	bl	8009cdc <USBD_CDC_SetTxBuffer>
  USBD_CDC_SetRxBuffer(&hUsbDeviceFS, UserRxBufferFS);
 800bc3a:	4905      	ldr	r1, [pc, #20]	; (800bc50 <CDC_Init_FS+0x24>)
 800bc3c:	4803      	ldr	r0, [pc, #12]	; (800bc4c <CDC_Init_FS+0x20>)
 800bc3e:	f7fe f86f 	bl	8009d20 <USBD_CDC_SetRxBuffer>
  return (USBD_OK);
 800bc42:	2300      	movs	r3, #0
  /* USER CODE END 3 */
}
 800bc44:	4618      	mov	r0, r3
 800bc46:	bd80      	pop	{r7, pc}
 800bc48:	20001124 	.word	0x20001124
 800bc4c:	20000648 	.word	0x20000648
 800bc50:	20000924 	.word	0x20000924

0800bc54 <CDC_DeInit_FS>:
/**
  * @brief  DeInitializes the CDC media low layer
  * @retval USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CDC_DeInit_FS(void)
{
 800bc54:	b480      	push	{r7}
 800bc56:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 4 */
  return (USBD_OK);
 800bc58:	2300      	movs	r3, #0
  /* USER CODE END 4 */
}
 800bc5a:	4618      	mov	r0, r3
 800bc5c:	46bd      	mov	sp, r7
 800bc5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc62:	4770      	bx	lr

0800bc64 <CDC_Control_FS>:
  * @param  pbuf: Buffer containing command data (request parameters)
  * @param  length: Number of data to be sent (in bytes)
  * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CDC_Control_FS(uint8_t cmd, uint8_t* pbuf, uint16_t length)
{
 800bc64:	b480      	push	{r7}
 800bc66:	b083      	sub	sp, #12
 800bc68:	af00      	add	r7, sp, #0
 800bc6a:	4603      	mov	r3, r0
 800bc6c:	6039      	str	r1, [r7, #0]
 800bc6e:	71fb      	strb	r3, [r7, #7]
 800bc70:	4613      	mov	r3, r2
 800bc72:	80bb      	strh	r3, [r7, #4]
  /* USER CODE BEGIN 5 */
  switch(cmd)
 800bc74:	79fb      	ldrb	r3, [r7, #7]
 800bc76:	2b23      	cmp	r3, #35	; 0x23
 800bc78:	d84a      	bhi.n	800bd10 <CDC_Control_FS+0xac>
 800bc7a:	a201      	add	r2, pc, #4	; (adr r2, 800bc80 <CDC_Control_FS+0x1c>)
 800bc7c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800bc80:	0800bd11 	.word	0x0800bd11
 800bc84:	0800bd11 	.word	0x0800bd11
 800bc88:	0800bd11 	.word	0x0800bd11
 800bc8c:	0800bd11 	.word	0x0800bd11
 800bc90:	0800bd11 	.word	0x0800bd11
 800bc94:	0800bd11 	.word	0x0800bd11
 800bc98:	0800bd11 	.word	0x0800bd11
 800bc9c:	0800bd11 	.word	0x0800bd11
 800bca0:	0800bd11 	.word	0x0800bd11
 800bca4:	0800bd11 	.word	0x0800bd11
 800bca8:	0800bd11 	.word	0x0800bd11
 800bcac:	0800bd11 	.word	0x0800bd11
 800bcb0:	0800bd11 	.word	0x0800bd11
 800bcb4:	0800bd11 	.word	0x0800bd11
 800bcb8:	0800bd11 	.word	0x0800bd11
 800bcbc:	0800bd11 	.word	0x0800bd11
 800bcc0:	0800bd11 	.word	0x0800bd11
 800bcc4:	0800bd11 	.word	0x0800bd11
 800bcc8:	0800bd11 	.word	0x0800bd11
 800bccc:	0800bd11 	.word	0x0800bd11
 800bcd0:	0800bd11 	.word	0x0800bd11
 800bcd4:	0800bd11 	.word	0x0800bd11
 800bcd8:	0800bd11 	.word	0x0800bd11
 800bcdc:	0800bd11 	.word	0x0800bd11
 800bce0:	0800bd11 	.word	0x0800bd11
 800bce4:	0800bd11 	.word	0x0800bd11
 800bce8:	0800bd11 	.word	0x0800bd11
 800bcec:	0800bd11 	.word	0x0800bd11
 800bcf0:	0800bd11 	.word	0x0800bd11
 800bcf4:	0800bd11 	.word	0x0800bd11
 800bcf8:	0800bd11 	.word	0x0800bd11
 800bcfc:	0800bd11 	.word	0x0800bd11
 800bd00:	0800bd11 	.word	0x0800bd11
 800bd04:	0800bd11 	.word	0x0800bd11
 800bd08:	0800bd11 	.word	0x0800bd11
 800bd0c:	0800bd11 	.word	0x0800bd11
    case CDC_SEND_BREAK:

    break;

  default:
    break;
 800bd10:	bf00      	nop
  }

  return (USBD_OK);
 800bd12:	2300      	movs	r3, #0
  /* USER CODE END 5 */
}
 800bd14:	4618      	mov	r0, r3
 800bd16:	370c      	adds	r7, #12
 800bd18:	46bd      	mov	sp, r7
 800bd1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd1e:	4770      	bx	lr

0800bd20 <CDC_Receive_FS>:
  * @param  Buf: Buffer of data to be received
  * @param  Len: Number of data received (in bytes)
  * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CDC_Receive_FS(uint8_t* Buf, uint32_t *Len)
{
 800bd20:	b580      	push	{r7, lr}
 800bd22:	b082      	sub	sp, #8
 800bd24:	af00      	add	r7, sp, #0
 800bd26:	6078      	str	r0, [r7, #4]
 800bd28:	6039      	str	r1, [r7, #0]
  /* USER CODE BEGIN 6 */
  USBD_CDC_SetRxBuffer(&hUsbDeviceFS, &Buf[0]);
 800bd2a:	6879      	ldr	r1, [r7, #4]
 800bd2c:	4805      	ldr	r0, [pc, #20]	; (800bd44 <CDC_Receive_FS+0x24>)
 800bd2e:	f7fd fff7 	bl	8009d20 <USBD_CDC_SetRxBuffer>
  USBD_CDC_ReceivePacket(&hUsbDeviceFS);
 800bd32:	4804      	ldr	r0, [pc, #16]	; (800bd44 <CDC_Receive_FS+0x24>)
 800bd34:	f7fe f858 	bl	8009de8 <USBD_CDC_ReceivePacket>
  return (USBD_OK);
 800bd38:	2300      	movs	r3, #0
  /* USER CODE END 6 */
}
 800bd3a:	4618      	mov	r0, r3
 800bd3c:	3708      	adds	r7, #8
 800bd3e:	46bd      	mov	sp, r7
 800bd40:	bd80      	pop	{r7, pc}
 800bd42:	bf00      	nop
 800bd44:	20000648 	.word	0x20000648

0800bd48 <CDC_Transmit_FS>:
  * @param  Buf: Buffer of data to be sent
  * @param  Len: Number of data to be sent (in bytes)
  * @retval USBD_OK if all operations are OK else USBD_FAIL or USBD_BUSY
  */
uint8_t CDC_Transmit_FS(uint8_t* Buf, uint16_t Len)
{
 800bd48:	b580      	push	{r7, lr}
 800bd4a:	b084      	sub	sp, #16
 800bd4c:	af00      	add	r7, sp, #0
 800bd4e:	6078      	str	r0, [r7, #4]
 800bd50:	460b      	mov	r3, r1
 800bd52:	807b      	strh	r3, [r7, #2]
  uint8_t result = USBD_OK;
 800bd54:	2300      	movs	r3, #0
 800bd56:	73fb      	strb	r3, [r7, #15]
  /* USER CODE BEGIN 7 */
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef*)hUsbDeviceFS.pClassData;
 800bd58:	4b0d      	ldr	r3, [pc, #52]	; (800bd90 <CDC_Transmit_FS+0x48>)
 800bd5a:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
 800bd5e:	60bb      	str	r3, [r7, #8]
  if (hcdc->TxState != 0){
 800bd60:	68bb      	ldr	r3, [r7, #8]
 800bd62:	f8d3 3214 	ldr.w	r3, [r3, #532]	; 0x214
 800bd66:	2b00      	cmp	r3, #0
 800bd68:	d001      	beq.n	800bd6e <CDC_Transmit_FS+0x26>
    return USBD_BUSY;
 800bd6a:	2301      	movs	r3, #1
 800bd6c:	e00b      	b.n	800bd86 <CDC_Transmit_FS+0x3e>
  }
  USBD_CDC_SetTxBuffer(&hUsbDeviceFS, Buf, Len);
 800bd6e:	887b      	ldrh	r3, [r7, #2]
 800bd70:	461a      	mov	r2, r3
 800bd72:	6879      	ldr	r1, [r7, #4]
 800bd74:	4806      	ldr	r0, [pc, #24]	; (800bd90 <CDC_Transmit_FS+0x48>)
 800bd76:	f7fd ffb1 	bl	8009cdc <USBD_CDC_SetTxBuffer>
  result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
 800bd7a:	4805      	ldr	r0, [pc, #20]	; (800bd90 <CDC_Transmit_FS+0x48>)
 800bd7c:	f7fd ffee 	bl	8009d5c <USBD_CDC_TransmitPacket>
 800bd80:	4603      	mov	r3, r0
 800bd82:	73fb      	strb	r3, [r7, #15]
  /* USER CODE END 7 */
  return result;
 800bd84:	7bfb      	ldrb	r3, [r7, #15]
}
 800bd86:	4618      	mov	r0, r3
 800bd88:	3710      	adds	r7, #16
 800bd8a:	46bd      	mov	sp, r7
 800bd8c:	bd80      	pop	{r7, pc}
 800bd8e:	bf00      	nop
 800bd90:	20000648 	.word	0x20000648

0800bd94 <CDC_TransmitCplt_FS>:
  * @param  Buf: Buffer of data to be received
  * @param  Len: Number of data received (in bytes)
  * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CDC_TransmitCplt_FS(uint8_t *Buf, uint32_t *Len, uint8_t epnum)
{
 800bd94:	b480      	push	{r7}
 800bd96:	b087      	sub	sp, #28
 800bd98:	af00      	add	r7, sp, #0
 800bd9a:	60f8      	str	r0, [r7, #12]
 800bd9c:	60b9      	str	r1, [r7, #8]
 800bd9e:	4613      	mov	r3, r2
 800bda0:	71fb      	strb	r3, [r7, #7]
  uint8_t result = USBD_OK;
 800bda2:	2300      	movs	r3, #0
 800bda4:	75fb      	strb	r3, [r7, #23]
  /* USER CODE BEGIN 13 */
  UNUSED(Buf);
  UNUSED(Len);
  UNUSED(epnum);
  /* USER CODE END 13 */
  return result;
 800bda6:	f997 3017 	ldrsb.w	r3, [r7, #23]
}
 800bdaa:	4618      	mov	r0, r3
 800bdac:	371c      	adds	r7, #28
 800bdae:	46bd      	mov	sp, r7
 800bdb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdb4:	4770      	bx	lr
	...

0800bdb8 <USBD_FS_DeviceDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 800bdb8:	b480      	push	{r7}
 800bdba:	b083      	sub	sp, #12
 800bdbc:	af00      	add	r7, sp, #0
 800bdbe:	4603      	mov	r3, r0
 800bdc0:	6039      	str	r1, [r7, #0]
 800bdc2:	71fb      	strb	r3, [r7, #7]
  UNUSED(speed);
  *length = sizeof(USBD_FS_DeviceDesc);
 800bdc4:	683b      	ldr	r3, [r7, #0]
 800bdc6:	2212      	movs	r2, #18
 800bdc8:	801a      	strh	r2, [r3, #0]
  return USBD_FS_DeviceDesc;
 800bdca:	4b03      	ldr	r3, [pc, #12]	; (800bdd8 <USBD_FS_DeviceDescriptor+0x20>)
}
 800bdcc:	4618      	mov	r0, r3
 800bdce:	370c      	adds	r7, #12
 800bdd0:	46bd      	mov	sp, r7
 800bdd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdd6:	4770      	bx	lr
 800bdd8:	200000d0 	.word	0x200000d0

0800bddc <USBD_FS_LangIDStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 800bddc:	b480      	push	{r7}
 800bdde:	b083      	sub	sp, #12
 800bde0:	af00      	add	r7, sp, #0
 800bde2:	4603      	mov	r3, r0
 800bde4:	6039      	str	r1, [r7, #0]
 800bde6:	71fb      	strb	r3, [r7, #7]
  UNUSED(speed);
  *length = sizeof(USBD_LangIDDesc);
 800bde8:	683b      	ldr	r3, [r7, #0]
 800bdea:	2204      	movs	r2, #4
 800bdec:	801a      	strh	r2, [r3, #0]
  return USBD_LangIDDesc;
 800bdee:	4b03      	ldr	r3, [pc, #12]	; (800bdfc <USBD_FS_LangIDStrDescriptor+0x20>)
}
 800bdf0:	4618      	mov	r0, r3
 800bdf2:	370c      	adds	r7, #12
 800bdf4:	46bd      	mov	sp, r7
 800bdf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdfa:	4770      	bx	lr
 800bdfc:	200000e4 	.word	0x200000e4

0800be00 <USBD_FS_ProductStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 800be00:	b580      	push	{r7, lr}
 800be02:	b082      	sub	sp, #8
 800be04:	af00      	add	r7, sp, #0
 800be06:	4603      	mov	r3, r0
 800be08:	6039      	str	r1, [r7, #0]
 800be0a:	71fb      	strb	r3, [r7, #7]
  if(speed == 0)
 800be0c:	79fb      	ldrb	r3, [r7, #7]
 800be0e:	2b00      	cmp	r3, #0
 800be10:	d105      	bne.n	800be1e <USBD_FS_ProductStrDescriptor+0x1e>
  {
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 800be12:	683a      	ldr	r2, [r7, #0]
 800be14:	4907      	ldr	r1, [pc, #28]	; (800be34 <USBD_FS_ProductStrDescriptor+0x34>)
 800be16:	4808      	ldr	r0, [pc, #32]	; (800be38 <USBD_FS_ProductStrDescriptor+0x38>)
 800be18:	f7ff fa2e 	bl	800b278 <USBD_GetString>
 800be1c:	e004      	b.n	800be28 <USBD_FS_ProductStrDescriptor+0x28>
  }
  else
  {
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 800be1e:	683a      	ldr	r2, [r7, #0]
 800be20:	4904      	ldr	r1, [pc, #16]	; (800be34 <USBD_FS_ProductStrDescriptor+0x34>)
 800be22:	4805      	ldr	r0, [pc, #20]	; (800be38 <USBD_FS_ProductStrDescriptor+0x38>)
 800be24:	f7ff fa28 	bl	800b278 <USBD_GetString>
  }
  return USBD_StrDesc;
 800be28:	4b02      	ldr	r3, [pc, #8]	; (800be34 <USBD_FS_ProductStrDescriptor+0x34>)
}
 800be2a:	4618      	mov	r0, r3
 800be2c:	3708      	adds	r7, #8
 800be2e:	46bd      	mov	sp, r7
 800be30:	bd80      	pop	{r7, pc}
 800be32:	bf00      	nop
 800be34:	20001924 	.word	0x20001924
 800be38:	08012510 	.word	0x08012510

0800be3c <USBD_FS_ManufacturerStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 800be3c:	b580      	push	{r7, lr}
 800be3e:	b082      	sub	sp, #8
 800be40:	af00      	add	r7, sp, #0
 800be42:	4603      	mov	r3, r0
 800be44:	6039      	str	r1, [r7, #0]
 800be46:	71fb      	strb	r3, [r7, #7]
  UNUSED(speed);
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 800be48:	683a      	ldr	r2, [r7, #0]
 800be4a:	4904      	ldr	r1, [pc, #16]	; (800be5c <USBD_FS_ManufacturerStrDescriptor+0x20>)
 800be4c:	4804      	ldr	r0, [pc, #16]	; (800be60 <USBD_FS_ManufacturerStrDescriptor+0x24>)
 800be4e:	f7ff fa13 	bl	800b278 <USBD_GetString>
  return USBD_StrDesc;
 800be52:	4b02      	ldr	r3, [pc, #8]	; (800be5c <USBD_FS_ManufacturerStrDescriptor+0x20>)
}
 800be54:	4618      	mov	r0, r3
 800be56:	3708      	adds	r7, #8
 800be58:	46bd      	mov	sp, r7
 800be5a:	bd80      	pop	{r7, pc}
 800be5c:	20001924 	.word	0x20001924
 800be60:	0801251c 	.word	0x0801251c

0800be64 <USBD_FS_SerialStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 800be64:	b580      	push	{r7, lr}
 800be66:	b082      	sub	sp, #8
 800be68:	af00      	add	r7, sp, #0
 800be6a:	4603      	mov	r3, r0
 800be6c:	6039      	str	r1, [r7, #0]
 800be6e:	71fb      	strb	r3, [r7, #7]
  UNUSED(speed);
  *length = USB_SIZ_STRING_SERIAL;
 800be70:	683b      	ldr	r3, [r7, #0]
 800be72:	221a      	movs	r2, #26
 800be74:	801a      	strh	r2, [r3, #0]

  /* Update the serial number string descriptor with the data from the unique
   * ID */
  Get_SerialNum();
 800be76:	f000 f843 	bl	800bf00 <Get_SerialNum>
  /* USER CODE BEGIN USBD_FS_SerialStrDescriptor */

  /* USER CODE END USBD_FS_SerialStrDescriptor */
  return (uint8_t *) USBD_StringSerial;
 800be7a:	4b02      	ldr	r3, [pc, #8]	; (800be84 <USBD_FS_SerialStrDescriptor+0x20>)
}
 800be7c:	4618      	mov	r0, r3
 800be7e:	3708      	adds	r7, #8
 800be80:	46bd      	mov	sp, r7
 800be82:	bd80      	pop	{r7, pc}
 800be84:	200000e8 	.word	0x200000e8

0800be88 <USBD_FS_ConfigStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 800be88:	b580      	push	{r7, lr}
 800be8a:	b082      	sub	sp, #8
 800be8c:	af00      	add	r7, sp, #0
 800be8e:	4603      	mov	r3, r0
 800be90:	6039      	str	r1, [r7, #0]
 800be92:	71fb      	strb	r3, [r7, #7]
  if(speed == USBD_SPEED_HIGH)
 800be94:	79fb      	ldrb	r3, [r7, #7]
 800be96:	2b00      	cmp	r3, #0
 800be98:	d105      	bne.n	800bea6 <USBD_FS_ConfigStrDescriptor+0x1e>
  {
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 800be9a:	683a      	ldr	r2, [r7, #0]
 800be9c:	4907      	ldr	r1, [pc, #28]	; (800bebc <USBD_FS_ConfigStrDescriptor+0x34>)
 800be9e:	4808      	ldr	r0, [pc, #32]	; (800bec0 <USBD_FS_ConfigStrDescriptor+0x38>)
 800bea0:	f7ff f9ea 	bl	800b278 <USBD_GetString>
 800bea4:	e004      	b.n	800beb0 <USBD_FS_ConfigStrDescriptor+0x28>
  }
  else
  {
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 800bea6:	683a      	ldr	r2, [r7, #0]
 800bea8:	4904      	ldr	r1, [pc, #16]	; (800bebc <USBD_FS_ConfigStrDescriptor+0x34>)
 800beaa:	4805      	ldr	r0, [pc, #20]	; (800bec0 <USBD_FS_ConfigStrDescriptor+0x38>)
 800beac:	f7ff f9e4 	bl	800b278 <USBD_GetString>
  }
  return USBD_StrDesc;
 800beb0:	4b02      	ldr	r3, [pc, #8]	; (800bebc <USBD_FS_ConfigStrDescriptor+0x34>)
}
 800beb2:	4618      	mov	r0, r3
 800beb4:	3708      	adds	r7, #8
 800beb6:	46bd      	mov	sp, r7
 800beb8:	bd80      	pop	{r7, pc}
 800beba:	bf00      	nop
 800bebc:	20001924 	.word	0x20001924
 800bec0:	08012530 	.word	0x08012530

0800bec4 <USBD_FS_InterfaceStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 800bec4:	b580      	push	{r7, lr}
 800bec6:	b082      	sub	sp, #8
 800bec8:	af00      	add	r7, sp, #0
 800beca:	4603      	mov	r3, r0
 800becc:	6039      	str	r1, [r7, #0]
 800bece:	71fb      	strb	r3, [r7, #7]
  if(speed == 0)
 800bed0:	79fb      	ldrb	r3, [r7, #7]
 800bed2:	2b00      	cmp	r3, #0
 800bed4:	d105      	bne.n	800bee2 <USBD_FS_InterfaceStrDescriptor+0x1e>
  {
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 800bed6:	683a      	ldr	r2, [r7, #0]
 800bed8:	4907      	ldr	r1, [pc, #28]	; (800bef8 <USBD_FS_InterfaceStrDescriptor+0x34>)
 800beda:	4808      	ldr	r0, [pc, #32]	; (800befc <USBD_FS_InterfaceStrDescriptor+0x38>)
 800bedc:	f7ff f9cc 	bl	800b278 <USBD_GetString>
 800bee0:	e004      	b.n	800beec <USBD_FS_InterfaceStrDescriptor+0x28>
  }
  else
  {
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 800bee2:	683a      	ldr	r2, [r7, #0]
 800bee4:	4904      	ldr	r1, [pc, #16]	; (800bef8 <USBD_FS_InterfaceStrDescriptor+0x34>)
 800bee6:	4805      	ldr	r0, [pc, #20]	; (800befc <USBD_FS_InterfaceStrDescriptor+0x38>)
 800bee8:	f7ff f9c6 	bl	800b278 <USBD_GetString>
  }
  return USBD_StrDesc;
 800beec:	4b02      	ldr	r3, [pc, #8]	; (800bef8 <USBD_FS_InterfaceStrDescriptor+0x34>)
}
 800beee:	4618      	mov	r0, r3
 800bef0:	3708      	adds	r7, #8
 800bef2:	46bd      	mov	sp, r7
 800bef4:	bd80      	pop	{r7, pc}
 800bef6:	bf00      	nop
 800bef8:	20001924 	.word	0x20001924
 800befc:	0801253c 	.word	0x0801253c

0800bf00 <Get_SerialNum>:
  * @brief  Create the serial number string descriptor
  * @param  None
  * @retval None
  */
static void Get_SerialNum(void)
{
 800bf00:	b580      	push	{r7, lr}
 800bf02:	b084      	sub	sp, #16
 800bf04:	af00      	add	r7, sp, #0
  uint32_t deviceserial0;
  uint32_t deviceserial1;
  uint32_t deviceserial2;

  deviceserial0 = *(uint32_t *) DEVICE_ID1;
 800bf06:	4b0f      	ldr	r3, [pc, #60]	; (800bf44 <Get_SerialNum+0x44>)
 800bf08:	681b      	ldr	r3, [r3, #0]
 800bf0a:	60fb      	str	r3, [r7, #12]
  deviceserial1 = *(uint32_t *) DEVICE_ID2;
 800bf0c:	4b0e      	ldr	r3, [pc, #56]	; (800bf48 <Get_SerialNum+0x48>)
 800bf0e:	681b      	ldr	r3, [r3, #0]
 800bf10:	60bb      	str	r3, [r7, #8]
  deviceserial2 = *(uint32_t *) DEVICE_ID3;
 800bf12:	4b0e      	ldr	r3, [pc, #56]	; (800bf4c <Get_SerialNum+0x4c>)
 800bf14:	681b      	ldr	r3, [r3, #0]
 800bf16:	607b      	str	r3, [r7, #4]

  deviceserial0 += deviceserial2;
 800bf18:	68fa      	ldr	r2, [r7, #12]
 800bf1a:	687b      	ldr	r3, [r7, #4]
 800bf1c:	4413      	add	r3, r2
 800bf1e:	60fb      	str	r3, [r7, #12]

  if (deviceserial0 != 0)
 800bf20:	68fb      	ldr	r3, [r7, #12]
 800bf22:	2b00      	cmp	r3, #0
 800bf24:	d009      	beq.n	800bf3a <Get_SerialNum+0x3a>
  {
    IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 800bf26:	2208      	movs	r2, #8
 800bf28:	4909      	ldr	r1, [pc, #36]	; (800bf50 <Get_SerialNum+0x50>)
 800bf2a:	68f8      	ldr	r0, [r7, #12]
 800bf2c:	f000 f814 	bl	800bf58 <IntToUnicode>
    IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 800bf30:	2204      	movs	r2, #4
 800bf32:	4908      	ldr	r1, [pc, #32]	; (800bf54 <Get_SerialNum+0x54>)
 800bf34:	68b8      	ldr	r0, [r7, #8]
 800bf36:	f000 f80f 	bl	800bf58 <IntToUnicode>
  }
}
 800bf3a:	bf00      	nop
 800bf3c:	3710      	adds	r7, #16
 800bf3e:	46bd      	mov	sp, r7
 800bf40:	bd80      	pop	{r7, pc}
 800bf42:	bf00      	nop
 800bf44:	1fff7a10 	.word	0x1fff7a10
 800bf48:	1fff7a14 	.word	0x1fff7a14
 800bf4c:	1fff7a18 	.word	0x1fff7a18
 800bf50:	200000ea 	.word	0x200000ea
 800bf54:	200000fa 	.word	0x200000fa

0800bf58 <IntToUnicode>:
  * @param  pbuf: pointer to the buffer
  * @param  len: buffer length
  * @retval None
  */
static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
{
 800bf58:	b480      	push	{r7}
 800bf5a:	b087      	sub	sp, #28
 800bf5c:	af00      	add	r7, sp, #0
 800bf5e:	60f8      	str	r0, [r7, #12]
 800bf60:	60b9      	str	r1, [r7, #8]
 800bf62:	4613      	mov	r3, r2
 800bf64:	71fb      	strb	r3, [r7, #7]
  uint8_t idx = 0;
 800bf66:	2300      	movs	r3, #0
 800bf68:	75fb      	strb	r3, [r7, #23]

  for (idx = 0; idx < len; idx++)
 800bf6a:	2300      	movs	r3, #0
 800bf6c:	75fb      	strb	r3, [r7, #23]
 800bf6e:	e027      	b.n	800bfc0 <IntToUnicode+0x68>
  {
    if (((value >> 28)) < 0xA)
 800bf70:	68fb      	ldr	r3, [r7, #12]
 800bf72:	0f1b      	lsrs	r3, r3, #28
 800bf74:	2b09      	cmp	r3, #9
 800bf76:	d80b      	bhi.n	800bf90 <IntToUnicode+0x38>
    {
      pbuf[2 * idx] = (value >> 28) + '0';
 800bf78:	68fb      	ldr	r3, [r7, #12]
 800bf7a:	0f1b      	lsrs	r3, r3, #28
 800bf7c:	b2da      	uxtb	r2, r3
 800bf7e:	7dfb      	ldrb	r3, [r7, #23]
 800bf80:	005b      	lsls	r3, r3, #1
 800bf82:	4619      	mov	r1, r3
 800bf84:	68bb      	ldr	r3, [r7, #8]
 800bf86:	440b      	add	r3, r1
 800bf88:	3230      	adds	r2, #48	; 0x30
 800bf8a:	b2d2      	uxtb	r2, r2
 800bf8c:	701a      	strb	r2, [r3, #0]
 800bf8e:	e00a      	b.n	800bfa6 <IntToUnicode+0x4e>
    }
    else
    {
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 800bf90:	68fb      	ldr	r3, [r7, #12]
 800bf92:	0f1b      	lsrs	r3, r3, #28
 800bf94:	b2da      	uxtb	r2, r3
 800bf96:	7dfb      	ldrb	r3, [r7, #23]
 800bf98:	005b      	lsls	r3, r3, #1
 800bf9a:	4619      	mov	r1, r3
 800bf9c:	68bb      	ldr	r3, [r7, #8]
 800bf9e:	440b      	add	r3, r1
 800bfa0:	3237      	adds	r2, #55	; 0x37
 800bfa2:	b2d2      	uxtb	r2, r2
 800bfa4:	701a      	strb	r2, [r3, #0]
    }

    value = value << 4;
 800bfa6:	68fb      	ldr	r3, [r7, #12]
 800bfa8:	011b      	lsls	r3, r3, #4
 800bfaa:	60fb      	str	r3, [r7, #12]

    pbuf[2 * idx + 1] = 0;
 800bfac:	7dfb      	ldrb	r3, [r7, #23]
 800bfae:	005b      	lsls	r3, r3, #1
 800bfb0:	3301      	adds	r3, #1
 800bfb2:	68ba      	ldr	r2, [r7, #8]
 800bfb4:	4413      	add	r3, r2
 800bfb6:	2200      	movs	r2, #0
 800bfb8:	701a      	strb	r2, [r3, #0]
  for (idx = 0; idx < len; idx++)
 800bfba:	7dfb      	ldrb	r3, [r7, #23]
 800bfbc:	3301      	adds	r3, #1
 800bfbe:	75fb      	strb	r3, [r7, #23]
 800bfc0:	7dfa      	ldrb	r2, [r7, #23]
 800bfc2:	79fb      	ldrb	r3, [r7, #7]
 800bfc4:	429a      	cmp	r2, r3
 800bfc6:	d3d3      	bcc.n	800bf70 <IntToUnicode+0x18>
  }
}
 800bfc8:	bf00      	nop
 800bfca:	bf00      	nop
 800bfcc:	371c      	adds	r7, #28
 800bfce:	46bd      	mov	sp, r7
 800bfd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bfd4:	4770      	bx	lr
	...

0800bfd8 <HAL_PCD_MspInit>:
                       LL Driver Callbacks (PCD -> USB Device Library)
*******************************************************************************/
/* MSP Init */

void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
{
 800bfd8:	b580      	push	{r7, lr}
 800bfda:	b08a      	sub	sp, #40	; 0x28
 800bfdc:	af00      	add	r7, sp, #0
 800bfde:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800bfe0:	f107 0314 	add.w	r3, r7, #20
 800bfe4:	2200      	movs	r2, #0
 800bfe6:	601a      	str	r2, [r3, #0]
 800bfe8:	605a      	str	r2, [r3, #4]
 800bfea:	609a      	str	r2, [r3, #8]
 800bfec:	60da      	str	r2, [r3, #12]
 800bfee:	611a      	str	r2, [r3, #16]
  if(pcdHandle->Instance==USB_OTG_FS)
 800bff0:	687b      	ldr	r3, [r7, #4]
 800bff2:	681b      	ldr	r3, [r3, #0]
 800bff4:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 800bff8:	d13a      	bne.n	800c070 <HAL_PCD_MspInit+0x98>
  {
  /* USER CODE BEGIN USB_OTG_FS_MspInit 0 */

  /* USER CODE END USB_OTG_FS_MspInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800bffa:	2300      	movs	r3, #0
 800bffc:	613b      	str	r3, [r7, #16]
 800bffe:	4b1e      	ldr	r3, [pc, #120]	; (800c078 <HAL_PCD_MspInit+0xa0>)
 800c000:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c002:	4a1d      	ldr	r2, [pc, #116]	; (800c078 <HAL_PCD_MspInit+0xa0>)
 800c004:	f043 0301 	orr.w	r3, r3, #1
 800c008:	6313      	str	r3, [r2, #48]	; 0x30
 800c00a:	4b1b      	ldr	r3, [pc, #108]	; (800c078 <HAL_PCD_MspInit+0xa0>)
 800c00c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c00e:	f003 0301 	and.w	r3, r3, #1
 800c012:	613b      	str	r3, [r7, #16]
 800c014:	693b      	ldr	r3, [r7, #16]
    /**USB_OTG_FS GPIO Configuration
    PA11     ------> USB_OTG_FS_DM
    PA12     ------> USB_OTG_FS_DP
    */
    GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
 800c016:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 800c01a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800c01c:	2302      	movs	r3, #2
 800c01e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800c020:	2300      	movs	r3, #0
 800c022:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800c024:	2303      	movs	r3, #3
 800c026:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 800c028:	230a      	movs	r3, #10
 800c02a:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800c02c:	f107 0314 	add.w	r3, r7, #20
 800c030:	4619      	mov	r1, r3
 800c032:	4812      	ldr	r0, [pc, #72]	; (800c07c <HAL_PCD_MspInit+0xa4>)
 800c034:	f7f7 ffd0 	bl	8003fd8 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
 800c038:	4b0f      	ldr	r3, [pc, #60]	; (800c078 <HAL_PCD_MspInit+0xa0>)
 800c03a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c03c:	4a0e      	ldr	r2, [pc, #56]	; (800c078 <HAL_PCD_MspInit+0xa0>)
 800c03e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800c042:	6353      	str	r3, [r2, #52]	; 0x34
 800c044:	2300      	movs	r3, #0
 800c046:	60fb      	str	r3, [r7, #12]
 800c048:	4b0b      	ldr	r3, [pc, #44]	; (800c078 <HAL_PCD_MspInit+0xa0>)
 800c04a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c04c:	4a0a      	ldr	r2, [pc, #40]	; (800c078 <HAL_PCD_MspInit+0xa0>)
 800c04e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800c052:	6453      	str	r3, [r2, #68]	; 0x44
 800c054:	4b08      	ldr	r3, [pc, #32]	; (800c078 <HAL_PCD_MspInit+0xa0>)
 800c056:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c058:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800c05c:	60fb      	str	r3, [r7, #12]
 800c05e:	68fb      	ldr	r3, [r7, #12]

    /* Peripheral interrupt init */
    HAL_NVIC_SetPriority(OTG_FS_IRQn, 0, 0);
 800c060:	2200      	movs	r2, #0
 800c062:	2100      	movs	r1, #0
 800c064:	2043      	movs	r0, #67	; 0x43
 800c066:	f7f7 fbdf 	bl	8003828 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(OTG_FS_IRQn);
 800c06a:	2043      	movs	r0, #67	; 0x43
 800c06c:	f7f7 fbf8 	bl	8003860 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USB_OTG_FS_MspInit 1 */

  /* USER CODE END USB_OTG_FS_MspInit 1 */
  }
}
 800c070:	bf00      	nop
 800c072:	3728      	adds	r7, #40	; 0x28
 800c074:	46bd      	mov	sp, r7
 800c076:	bd80      	pop	{r7, pc}
 800c078:	40023800 	.word	0x40023800
 800c07c:	40020000 	.word	0x40020000

0800c080 <HAL_PCD_SetupStageCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800c080:	b580      	push	{r7, lr}
 800c082:	b082      	sub	sp, #8
 800c084:	af00      	add	r7, sp, #0
 800c086:	6078      	str	r0, [r7, #4]
  USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 800c088:	687b      	ldr	r3, [r7, #4]
 800c08a:	f8d3 2508 	ldr.w	r2, [r3, #1288]	; 0x508
 800c08e:	687b      	ldr	r3, [r7, #4]
 800c090:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 800c094:	4619      	mov	r1, r3
 800c096:	4610      	mov	r0, r2
 800c098:	f7fd ff8f 	bl	8009fba <USBD_LL_SetupStage>
}
 800c09c:	bf00      	nop
 800c09e:	3708      	adds	r7, #8
 800c0a0:	46bd      	mov	sp, r7
 800c0a2:	bd80      	pop	{r7, pc}

0800c0a4 <HAL_PCD_DataOutStageCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800c0a4:	b580      	push	{r7, lr}
 800c0a6:	b082      	sub	sp, #8
 800c0a8:	af00      	add	r7, sp, #0
 800c0aa:	6078      	str	r0, [r7, #4]
 800c0ac:	460b      	mov	r3, r1
 800c0ae:	70fb      	strb	r3, [r7, #3]
  USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 800c0b0:	687b      	ldr	r3, [r7, #4]
 800c0b2:	f8d3 0508 	ldr.w	r0, [r3, #1288]	; 0x508
 800c0b6:	78fa      	ldrb	r2, [r7, #3]
 800c0b8:	6879      	ldr	r1, [r7, #4]
 800c0ba:	4613      	mov	r3, r2
 800c0bc:	00db      	lsls	r3, r3, #3
 800c0be:	4413      	add	r3, r2
 800c0c0:	009b      	lsls	r3, r3, #2
 800c0c2:	440b      	add	r3, r1
 800c0c4:	f503 7323 	add.w	r3, r3, #652	; 0x28c
 800c0c8:	681a      	ldr	r2, [r3, #0]
 800c0ca:	78fb      	ldrb	r3, [r7, #3]
 800c0cc:	4619      	mov	r1, r3
 800c0ce:	f7fd ffc9 	bl	800a064 <USBD_LL_DataOutStage>
}
 800c0d2:	bf00      	nop
 800c0d4:	3708      	adds	r7, #8
 800c0d6:	46bd      	mov	sp, r7
 800c0d8:	bd80      	pop	{r7, pc}

0800c0da <HAL_PCD_DataInStageCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800c0da:	b580      	push	{r7, lr}
 800c0dc:	b082      	sub	sp, #8
 800c0de:	af00      	add	r7, sp, #0
 800c0e0:	6078      	str	r0, [r7, #4]
 800c0e2:	460b      	mov	r3, r1
 800c0e4:	70fb      	strb	r3, [r7, #3]
  USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 800c0e6:	687b      	ldr	r3, [r7, #4]
 800c0e8:	f8d3 0508 	ldr.w	r0, [r3, #1288]	; 0x508
 800c0ec:	78fa      	ldrb	r2, [r7, #3]
 800c0ee:	6879      	ldr	r1, [r7, #4]
 800c0f0:	4613      	mov	r3, r2
 800c0f2:	00db      	lsls	r3, r3, #3
 800c0f4:	4413      	add	r3, r2
 800c0f6:	009b      	lsls	r3, r3, #2
 800c0f8:	440b      	add	r3, r1
 800c0fa:	334c      	adds	r3, #76	; 0x4c
 800c0fc:	681a      	ldr	r2, [r3, #0]
 800c0fe:	78fb      	ldrb	r3, [r7, #3]
 800c100:	4619      	mov	r1, r3
 800c102:	f7fe f862 	bl	800a1ca <USBD_LL_DataInStage>
}
 800c106:	bf00      	nop
 800c108:	3708      	adds	r7, #8
 800c10a:	46bd      	mov	sp, r7
 800c10c:	bd80      	pop	{r7, pc}

0800c10e <HAL_PCD_SOFCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800c10e:	b580      	push	{r7, lr}
 800c110:	b082      	sub	sp, #8
 800c112:	af00      	add	r7, sp, #0
 800c114:	6078      	str	r0, [r7, #4]
  USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 800c116:	687b      	ldr	r3, [r7, #4]
 800c118:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 800c11c:	4618      	mov	r0, r3
 800c11e:	f7fe f996 	bl	800a44e <USBD_LL_SOF>
}
 800c122:	bf00      	nop
 800c124:	3708      	adds	r7, #8
 800c126:	46bd      	mov	sp, r7
 800c128:	bd80      	pop	{r7, pc}

0800c12a <HAL_PCD_ResetCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800c12a:	b580      	push	{r7, lr}
 800c12c:	b084      	sub	sp, #16
 800c12e:	af00      	add	r7, sp, #0
 800c130:	6078      	str	r0, [r7, #4]
   USBD_SpeedTypeDef speed = USBD_SPEED_FULL;
 800c132:	2301      	movs	r3, #1
 800c134:	73fb      	strb	r3, [r7, #15]

  if ( hpcd->Init.speed != PCD_SPEED_FULL)
 800c136:	687b      	ldr	r3, [r7, #4]
 800c138:	68db      	ldr	r3, [r3, #12]
 800c13a:	2b02      	cmp	r3, #2
 800c13c:	d001      	beq.n	800c142 <HAL_PCD_ResetCallback+0x18>
  {
    Error_Handler();
 800c13e:	f7f5 fbf3 	bl	8001928 <Error_Handler>
  }
    /* Set Speed. */
  USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);
 800c142:	687b      	ldr	r3, [r7, #4]
 800c144:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 800c148:	7bfa      	ldrb	r2, [r7, #15]
 800c14a:	4611      	mov	r1, r2
 800c14c:	4618      	mov	r0, r3
 800c14e:	f7fe f940 	bl	800a3d2 <USBD_LL_SetSpeed>

  /* Reset Device. */
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 800c152:	687b      	ldr	r3, [r7, #4]
 800c154:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 800c158:	4618      	mov	r0, r3
 800c15a:	f7fe f8e8 	bl	800a32e <USBD_LL_Reset>
}
 800c15e:	bf00      	nop
 800c160:	3710      	adds	r7, #16
 800c162:	46bd      	mov	sp, r7
 800c164:	bd80      	pop	{r7, pc}
	...

0800c168 <HAL_PCD_SuspendCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800c168:	b580      	push	{r7, lr}
 800c16a:	b082      	sub	sp, #8
 800c16c:	af00      	add	r7, sp, #0
 800c16e:	6078      	str	r0, [r7, #4]
  /* Inform USB library that core enters in suspend Mode. */
  USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 800c170:	687b      	ldr	r3, [r7, #4]
 800c172:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 800c176:	4618      	mov	r0, r3
 800c178:	f7fe f93b 	bl	800a3f2 <USBD_LL_Suspend>
  __HAL_PCD_GATE_PHYCLOCK(hpcd);
 800c17c:	687b      	ldr	r3, [r7, #4]
 800c17e:	681b      	ldr	r3, [r3, #0]
 800c180:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 800c184:	681b      	ldr	r3, [r3, #0]
 800c186:	687a      	ldr	r2, [r7, #4]
 800c188:	6812      	ldr	r2, [r2, #0]
 800c18a:	f502 6260 	add.w	r2, r2, #3584	; 0xe00
 800c18e:	f043 0301 	orr.w	r3, r3, #1
 800c192:	6013      	str	r3, [r2, #0]
  /* Enter in STOP mode. */
  /* USER CODE BEGIN 2 */
  if (hpcd->Init.low_power_enable)
 800c194:	687b      	ldr	r3, [r7, #4]
 800c196:	6a1b      	ldr	r3, [r3, #32]
 800c198:	2b00      	cmp	r3, #0
 800c19a:	d005      	beq.n	800c1a8 <HAL_PCD_SuspendCallback+0x40>
  {
    /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register. */
    SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 800c19c:	4b04      	ldr	r3, [pc, #16]	; (800c1b0 <HAL_PCD_SuspendCallback+0x48>)
 800c19e:	691b      	ldr	r3, [r3, #16]
 800c1a0:	4a03      	ldr	r2, [pc, #12]	; (800c1b0 <HAL_PCD_SuspendCallback+0x48>)
 800c1a2:	f043 0306 	orr.w	r3, r3, #6
 800c1a6:	6113      	str	r3, [r2, #16]
  }
  /* USER CODE END 2 */
}
 800c1a8:	bf00      	nop
 800c1aa:	3708      	adds	r7, #8
 800c1ac:	46bd      	mov	sp, r7
 800c1ae:	bd80      	pop	{r7, pc}
 800c1b0:	e000ed00 	.word	0xe000ed00

0800c1b4 <HAL_PCD_ResumeCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800c1b4:	b580      	push	{r7, lr}
 800c1b6:	b082      	sub	sp, #8
 800c1b8:	af00      	add	r7, sp, #0
 800c1ba:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN 3 */

  /* USER CODE END 3 */
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 800c1bc:	687b      	ldr	r3, [r7, #4]
 800c1be:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 800c1c2:	4618      	mov	r0, r3
 800c1c4:	f7fe f92b 	bl	800a41e <USBD_LL_Resume>
}
 800c1c8:	bf00      	nop
 800c1ca:	3708      	adds	r7, #8
 800c1cc:	46bd      	mov	sp, r7
 800c1ce:	bd80      	pop	{r7, pc}

0800c1d0 <HAL_PCD_ISOOUTIncompleteCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800c1d0:	b580      	push	{r7, lr}
 800c1d2:	b082      	sub	sp, #8
 800c1d4:	af00      	add	r7, sp, #0
 800c1d6:	6078      	str	r0, [r7, #4]
 800c1d8:	460b      	mov	r3, r1
 800c1da:	70fb      	strb	r3, [r7, #3]
  USBD_LL_IsoOUTIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 800c1dc:	687b      	ldr	r3, [r7, #4]
 800c1de:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 800c1e2:	78fa      	ldrb	r2, [r7, #3]
 800c1e4:	4611      	mov	r1, r2
 800c1e6:	4618      	mov	r0, r3
 800c1e8:	f7fe f983 	bl	800a4f2 <USBD_LL_IsoOUTIncomplete>
}
 800c1ec:	bf00      	nop
 800c1ee:	3708      	adds	r7, #8
 800c1f0:	46bd      	mov	sp, r7
 800c1f2:	bd80      	pop	{r7, pc}

0800c1f4 <HAL_PCD_ISOINIncompleteCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800c1f4:	b580      	push	{r7, lr}
 800c1f6:	b082      	sub	sp, #8
 800c1f8:	af00      	add	r7, sp, #0
 800c1fa:	6078      	str	r0, [r7, #4]
 800c1fc:	460b      	mov	r3, r1
 800c1fe:	70fb      	strb	r3, [r7, #3]
  USBD_LL_IsoINIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 800c200:	687b      	ldr	r3, [r7, #4]
 800c202:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 800c206:	78fa      	ldrb	r2, [r7, #3]
 800c208:	4611      	mov	r1, r2
 800c20a:	4618      	mov	r0, r3
 800c20c:	f7fe f93f 	bl	800a48e <USBD_LL_IsoINIncomplete>
}
 800c210:	bf00      	nop
 800c212:	3708      	adds	r7, #8
 800c214:	46bd      	mov	sp, r7
 800c216:	bd80      	pop	{r7, pc}

0800c218 <HAL_PCD_ConnectCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800c218:	b580      	push	{r7, lr}
 800c21a:	b082      	sub	sp, #8
 800c21c:	af00      	add	r7, sp, #0
 800c21e:	6078      	str	r0, [r7, #4]
  USBD_LL_DevConnected((USBD_HandleTypeDef*)hpcd->pData);
 800c220:	687b      	ldr	r3, [r7, #4]
 800c222:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 800c226:	4618      	mov	r0, r3
 800c228:	f7fe f995 	bl	800a556 <USBD_LL_DevConnected>
}
 800c22c:	bf00      	nop
 800c22e:	3708      	adds	r7, #8
 800c230:	46bd      	mov	sp, r7
 800c232:	bd80      	pop	{r7, pc}

0800c234 <HAL_PCD_DisconnectCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800c234:	b580      	push	{r7, lr}
 800c236:	b082      	sub	sp, #8
 800c238:	af00      	add	r7, sp, #0
 800c23a:	6078      	str	r0, [r7, #4]
  USBD_LL_DevDisconnected((USBD_HandleTypeDef*)hpcd->pData);
 800c23c:	687b      	ldr	r3, [r7, #4]
 800c23e:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 800c242:	4618      	mov	r0, r3
 800c244:	f7fe f992 	bl	800a56c <USBD_LL_DevDisconnected>
}
 800c248:	bf00      	nop
 800c24a:	3708      	adds	r7, #8
 800c24c:	46bd      	mov	sp, r7
 800c24e:	bd80      	pop	{r7, pc}

0800c250 <USBD_LL_Init>:
  * @brief  Initializes the low level portion of the device driver.
  * @param  pdev: Device handle
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Init(USBD_HandleTypeDef *pdev)
{
 800c250:	b580      	push	{r7, lr}
 800c252:	b082      	sub	sp, #8
 800c254:	af00      	add	r7, sp, #0
 800c256:	6078      	str	r0, [r7, #4]
  /* Init USB Ip. */
  if (pdev->id == DEVICE_FS) {
 800c258:	687b      	ldr	r3, [r7, #4]
 800c25a:	781b      	ldrb	r3, [r3, #0]
 800c25c:	2b00      	cmp	r3, #0
 800c25e:	d13c      	bne.n	800c2da <USBD_LL_Init+0x8a>
  /* Link the driver to the stack. */
  hpcd_USB_OTG_FS.pData = pdev;
 800c260:	4a20      	ldr	r2, [pc, #128]	; (800c2e4 <USBD_LL_Init+0x94>)
 800c262:	687b      	ldr	r3, [r7, #4]
 800c264:	f8c2 3508 	str.w	r3, [r2, #1288]	; 0x508
  pdev->pData = &hpcd_USB_OTG_FS;
 800c268:	687b      	ldr	r3, [r7, #4]
 800c26a:	4a1e      	ldr	r2, [pc, #120]	; (800c2e4 <USBD_LL_Init+0x94>)
 800c26c:	f8c3 22c8 	str.w	r2, [r3, #712]	; 0x2c8

  hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 800c270:	4b1c      	ldr	r3, [pc, #112]	; (800c2e4 <USBD_LL_Init+0x94>)
 800c272:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
 800c276:	601a      	str	r2, [r3, #0]
  hpcd_USB_OTG_FS.Init.dev_endpoints = 4;
 800c278:	4b1a      	ldr	r3, [pc, #104]	; (800c2e4 <USBD_LL_Init+0x94>)
 800c27a:	2204      	movs	r2, #4
 800c27c:	605a      	str	r2, [r3, #4]
  hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 800c27e:	4b19      	ldr	r3, [pc, #100]	; (800c2e4 <USBD_LL_Init+0x94>)
 800c280:	2202      	movs	r2, #2
 800c282:	60da      	str	r2, [r3, #12]
  hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 800c284:	4b17      	ldr	r3, [pc, #92]	; (800c2e4 <USBD_LL_Init+0x94>)
 800c286:	2200      	movs	r2, #0
 800c288:	611a      	str	r2, [r3, #16]
  hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 800c28a:	4b16      	ldr	r3, [pc, #88]	; (800c2e4 <USBD_LL_Init+0x94>)
 800c28c:	2202      	movs	r2, #2
 800c28e:	619a      	str	r2, [r3, #24]
  hpcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 800c290:	4b14      	ldr	r3, [pc, #80]	; (800c2e4 <USBD_LL_Init+0x94>)
 800c292:	2200      	movs	r2, #0
 800c294:	61da      	str	r2, [r3, #28]
  hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 800c296:	4b13      	ldr	r3, [pc, #76]	; (800c2e4 <USBD_LL_Init+0x94>)
 800c298:	2200      	movs	r2, #0
 800c29a:	621a      	str	r2, [r3, #32]
  hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 800c29c:	4b11      	ldr	r3, [pc, #68]	; (800c2e4 <USBD_LL_Init+0x94>)
 800c29e:	2200      	movs	r2, #0
 800c2a0:	625a      	str	r2, [r3, #36]	; 0x24
  hpcd_USB_OTG_FS.Init.vbus_sensing_enable = DISABLE;
 800c2a2:	4b10      	ldr	r3, [pc, #64]	; (800c2e4 <USBD_LL_Init+0x94>)
 800c2a4:	2200      	movs	r2, #0
 800c2a6:	62da      	str	r2, [r3, #44]	; 0x2c
  hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 800c2a8:	4b0e      	ldr	r3, [pc, #56]	; (800c2e4 <USBD_LL_Init+0x94>)
 800c2aa:	2200      	movs	r2, #0
 800c2ac:	631a      	str	r2, [r3, #48]	; 0x30
  if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 800c2ae:	480d      	ldr	r0, [pc, #52]	; (800c2e4 <USBD_LL_Init+0x94>)
 800c2b0:	f7f8 f82f 	bl	8004312 <HAL_PCD_Init>
 800c2b4:	4603      	mov	r3, r0
 800c2b6:	2b00      	cmp	r3, #0
 800c2b8:	d001      	beq.n	800c2be <USBD_LL_Init+0x6e>
  {
    Error_Handler( );
 800c2ba:	f7f5 fb35 	bl	8001928 <Error_Handler>
  HAL_PCD_RegisterDataOutStageCallback(&hpcd_USB_OTG_FS, PCD_DataOutStageCallback);
  HAL_PCD_RegisterDataInStageCallback(&hpcd_USB_OTG_FS, PCD_DataInStageCallback);
  HAL_PCD_RegisterIsoOutIncpltCallback(&hpcd_USB_OTG_FS, PCD_ISOOUTIncompleteCallback);
  HAL_PCD_RegisterIsoInIncpltCallback(&hpcd_USB_OTG_FS, PCD_ISOINIncompleteCallback);
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
  HAL_PCDEx_SetRxFiFo(&hpcd_USB_OTG_FS, 0x80);
 800c2be:	2180      	movs	r1, #128	; 0x80
 800c2c0:	4808      	ldr	r0, [pc, #32]	; (800c2e4 <USBD_LL_Init+0x94>)
 800c2c2:	f7f9 fa86 	bl	80057d2 <HAL_PCDEx_SetRxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_FS, 0, 0x40);
 800c2c6:	2240      	movs	r2, #64	; 0x40
 800c2c8:	2100      	movs	r1, #0
 800c2ca:	4806      	ldr	r0, [pc, #24]	; (800c2e4 <USBD_LL_Init+0x94>)
 800c2cc:	f7f9 fa3a 	bl	8005744 <HAL_PCDEx_SetTxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_FS, 1, 0x80);
 800c2d0:	2280      	movs	r2, #128	; 0x80
 800c2d2:	2101      	movs	r1, #1
 800c2d4:	4803      	ldr	r0, [pc, #12]	; (800c2e4 <USBD_LL_Init+0x94>)
 800c2d6:	f7f9 fa35 	bl	8005744 <HAL_PCDEx_SetTxFiFo>
  }
  return USBD_OK;
 800c2da:	2300      	movs	r3, #0
}
 800c2dc:	4618      	mov	r0, r3
 800c2de:	3708      	adds	r7, #8
 800c2e0:	46bd      	mov	sp, r7
 800c2e2:	bd80      	pop	{r7, pc}
 800c2e4:	20001b24 	.word	0x20001b24

0800c2e8 <USBD_LL_Start>:
  * @brief  Starts the low level portion of the device driver.
  * @param  pdev: Device handle
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Start(USBD_HandleTypeDef *pdev)
{
 800c2e8:	b580      	push	{r7, lr}
 800c2ea:	b084      	sub	sp, #16
 800c2ec:	af00      	add	r7, sp, #0
 800c2ee:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef hal_status = HAL_OK;
 800c2f0:	2300      	movs	r3, #0
 800c2f2:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 800c2f4:	2300      	movs	r3, #0
 800c2f6:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_Start(pdev->pData);
 800c2f8:	687b      	ldr	r3, [r7, #4]
 800c2fa:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 800c2fe:	4618      	mov	r0, r3
 800c300:	f7f8 f924 	bl	800454c <HAL_PCD_Start>
 800c304:	4603      	mov	r3, r0
 800c306:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 800c308:	7bfb      	ldrb	r3, [r7, #15]
 800c30a:	4618      	mov	r0, r3
 800c30c:	f000 f942 	bl	800c594 <USBD_Get_USB_Status>
 800c310:	4603      	mov	r3, r0
 800c312:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 800c314:	7bbb      	ldrb	r3, [r7, #14]
}
 800c316:	4618      	mov	r0, r3
 800c318:	3710      	adds	r7, #16
 800c31a:	46bd      	mov	sp, r7
 800c31c:	bd80      	pop	{r7, pc}

0800c31e <USBD_LL_OpenEP>:
  * @param  ep_type: Endpoint type
  * @param  ep_mps: Endpoint max packet size
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_OpenEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr, uint8_t ep_type, uint16_t ep_mps)
{
 800c31e:	b580      	push	{r7, lr}
 800c320:	b084      	sub	sp, #16
 800c322:	af00      	add	r7, sp, #0
 800c324:	6078      	str	r0, [r7, #4]
 800c326:	4608      	mov	r0, r1
 800c328:	4611      	mov	r1, r2
 800c32a:	461a      	mov	r2, r3
 800c32c:	4603      	mov	r3, r0
 800c32e:	70fb      	strb	r3, [r7, #3]
 800c330:	460b      	mov	r3, r1
 800c332:	70bb      	strb	r3, [r7, #2]
 800c334:	4613      	mov	r3, r2
 800c336:	803b      	strh	r3, [r7, #0]
  HAL_StatusTypeDef hal_status = HAL_OK;
 800c338:	2300      	movs	r3, #0
 800c33a:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 800c33c:	2300      	movs	r3, #0
 800c33e:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 800c340:	687b      	ldr	r3, [r7, #4]
 800c342:	f8d3 02c8 	ldr.w	r0, [r3, #712]	; 0x2c8
 800c346:	78bb      	ldrb	r3, [r7, #2]
 800c348:	883a      	ldrh	r2, [r7, #0]
 800c34a:	78f9      	ldrb	r1, [r7, #3]
 800c34c:	f7f8 fdf5 	bl	8004f3a <HAL_PCD_EP_Open>
 800c350:	4603      	mov	r3, r0
 800c352:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 800c354:	7bfb      	ldrb	r3, [r7, #15]
 800c356:	4618      	mov	r0, r3
 800c358:	f000 f91c 	bl	800c594 <USBD_Get_USB_Status>
 800c35c:	4603      	mov	r3, r0
 800c35e:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 800c360:	7bbb      	ldrb	r3, [r7, #14]
}
 800c362:	4618      	mov	r0, r3
 800c364:	3710      	adds	r7, #16
 800c366:	46bd      	mov	sp, r7
 800c368:	bd80      	pop	{r7, pc}

0800c36a <USBD_LL_CloseEP>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint number
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_CloseEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
 800c36a:	b580      	push	{r7, lr}
 800c36c:	b084      	sub	sp, #16
 800c36e:	af00      	add	r7, sp, #0
 800c370:	6078      	str	r0, [r7, #4]
 800c372:	460b      	mov	r3, r1
 800c374:	70fb      	strb	r3, [r7, #3]
  HAL_StatusTypeDef hal_status = HAL_OK;
 800c376:	2300      	movs	r3, #0
 800c378:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 800c37a:	2300      	movs	r3, #0
 800c37c:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 800c37e:	687b      	ldr	r3, [r7, #4]
 800c380:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 800c384:	78fa      	ldrb	r2, [r7, #3]
 800c386:	4611      	mov	r1, r2
 800c388:	4618      	mov	r0, r3
 800c38a:	f7f8 fe3e 	bl	800500a <HAL_PCD_EP_Close>
 800c38e:	4603      	mov	r3, r0
 800c390:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 800c392:	7bfb      	ldrb	r3, [r7, #15]
 800c394:	4618      	mov	r0, r3
 800c396:	f000 f8fd 	bl	800c594 <USBD_Get_USB_Status>
 800c39a:	4603      	mov	r3, r0
 800c39c:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 800c39e:	7bbb      	ldrb	r3, [r7, #14]
}
 800c3a0:	4618      	mov	r0, r3
 800c3a2:	3710      	adds	r7, #16
 800c3a4:	46bd      	mov	sp, r7
 800c3a6:	bd80      	pop	{r7, pc}

0800c3a8 <USBD_LL_StallEP>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint number
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_StallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
 800c3a8:	b580      	push	{r7, lr}
 800c3aa:	b084      	sub	sp, #16
 800c3ac:	af00      	add	r7, sp, #0
 800c3ae:	6078      	str	r0, [r7, #4]
 800c3b0:	460b      	mov	r3, r1
 800c3b2:	70fb      	strb	r3, [r7, #3]
  HAL_StatusTypeDef hal_status = HAL_OK;
 800c3b4:	2300      	movs	r3, #0
 800c3b6:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 800c3b8:	2300      	movs	r3, #0
 800c3ba:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 800c3bc:	687b      	ldr	r3, [r7, #4]
 800c3be:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 800c3c2:	78fa      	ldrb	r2, [r7, #3]
 800c3c4:	4611      	mov	r1, r2
 800c3c6:	4618      	mov	r0, r3
 800c3c8:	f7f8 ff16 	bl	80051f8 <HAL_PCD_EP_SetStall>
 800c3cc:	4603      	mov	r3, r0
 800c3ce:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 800c3d0:	7bfb      	ldrb	r3, [r7, #15]
 800c3d2:	4618      	mov	r0, r3
 800c3d4:	f000 f8de 	bl	800c594 <USBD_Get_USB_Status>
 800c3d8:	4603      	mov	r3, r0
 800c3da:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 800c3dc:	7bbb      	ldrb	r3, [r7, #14]
}
 800c3de:	4618      	mov	r0, r3
 800c3e0:	3710      	adds	r7, #16
 800c3e2:	46bd      	mov	sp, r7
 800c3e4:	bd80      	pop	{r7, pc}

0800c3e6 <USBD_LL_ClearStallEP>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint number
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_ClearStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
 800c3e6:	b580      	push	{r7, lr}
 800c3e8:	b084      	sub	sp, #16
 800c3ea:	af00      	add	r7, sp, #0
 800c3ec:	6078      	str	r0, [r7, #4]
 800c3ee:	460b      	mov	r3, r1
 800c3f0:	70fb      	strb	r3, [r7, #3]
  HAL_StatusTypeDef hal_status = HAL_OK;
 800c3f2:	2300      	movs	r3, #0
 800c3f4:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 800c3f6:	2300      	movs	r3, #0
 800c3f8:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);
 800c3fa:	687b      	ldr	r3, [r7, #4]
 800c3fc:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 800c400:	78fa      	ldrb	r2, [r7, #3]
 800c402:	4611      	mov	r1, r2
 800c404:	4618      	mov	r0, r3
 800c406:	f7f8 ff5b 	bl	80052c0 <HAL_PCD_EP_ClrStall>
 800c40a:	4603      	mov	r3, r0
 800c40c:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 800c40e:	7bfb      	ldrb	r3, [r7, #15]
 800c410:	4618      	mov	r0, r3
 800c412:	f000 f8bf 	bl	800c594 <USBD_Get_USB_Status>
 800c416:	4603      	mov	r3, r0
 800c418:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 800c41a:	7bbb      	ldrb	r3, [r7, #14]
}
 800c41c:	4618      	mov	r0, r3
 800c41e:	3710      	adds	r7, #16
 800c420:	46bd      	mov	sp, r7
 800c422:	bd80      	pop	{r7, pc}

0800c424 <USBD_LL_IsStallEP>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint number
  * @retval Stall (1: Yes, 0: No)
  */
uint8_t USBD_LL_IsStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
 800c424:	b480      	push	{r7}
 800c426:	b085      	sub	sp, #20
 800c428:	af00      	add	r7, sp, #0
 800c42a:	6078      	str	r0, [r7, #4]
 800c42c:	460b      	mov	r3, r1
 800c42e:	70fb      	strb	r3, [r7, #3]
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 800c430:	687b      	ldr	r3, [r7, #4]
 800c432:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 800c436:	60fb      	str	r3, [r7, #12]

  if((ep_addr & 0x80) == 0x80)
 800c438:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800c43c:	2b00      	cmp	r3, #0
 800c43e:	da0b      	bge.n	800c458 <USBD_LL_IsStallEP+0x34>
  {
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 800c440:	78fb      	ldrb	r3, [r7, #3]
 800c442:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800c446:	68f9      	ldr	r1, [r7, #12]
 800c448:	4613      	mov	r3, r2
 800c44a:	00db      	lsls	r3, r3, #3
 800c44c:	4413      	add	r3, r2
 800c44e:	009b      	lsls	r3, r3, #2
 800c450:	440b      	add	r3, r1
 800c452:	333e      	adds	r3, #62	; 0x3e
 800c454:	781b      	ldrb	r3, [r3, #0]
 800c456:	e00b      	b.n	800c470 <USBD_LL_IsStallEP+0x4c>
  }
  else
  {
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 800c458:	78fb      	ldrb	r3, [r7, #3]
 800c45a:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800c45e:	68f9      	ldr	r1, [r7, #12]
 800c460:	4613      	mov	r3, r2
 800c462:	00db      	lsls	r3, r3, #3
 800c464:	4413      	add	r3, r2
 800c466:	009b      	lsls	r3, r3, #2
 800c468:	440b      	add	r3, r1
 800c46a:	f203 237e 	addw	r3, r3, #638	; 0x27e
 800c46e:	781b      	ldrb	r3, [r3, #0]
  }
}
 800c470:	4618      	mov	r0, r3
 800c472:	3714      	adds	r7, #20
 800c474:	46bd      	mov	sp, r7
 800c476:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c47a:	4770      	bx	lr

0800c47c <USBD_LL_SetUSBAddress>:
  * @param  pdev: Device handle
  * @param  dev_addr: Device address
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_SetUSBAddress(USBD_HandleTypeDef *pdev, uint8_t dev_addr)
{
 800c47c:	b580      	push	{r7, lr}
 800c47e:	b084      	sub	sp, #16
 800c480:	af00      	add	r7, sp, #0
 800c482:	6078      	str	r0, [r7, #4]
 800c484:	460b      	mov	r3, r1
 800c486:	70fb      	strb	r3, [r7, #3]
  HAL_StatusTypeDef hal_status = HAL_OK;
 800c488:	2300      	movs	r3, #0
 800c48a:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 800c48c:	2300      	movs	r3, #0
 800c48e:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 800c490:	687b      	ldr	r3, [r7, #4]
 800c492:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 800c496:	78fa      	ldrb	r2, [r7, #3]
 800c498:	4611      	mov	r1, r2
 800c49a:	4618      	mov	r0, r3
 800c49c:	f7f8 fd28 	bl	8004ef0 <HAL_PCD_SetAddress>
 800c4a0:	4603      	mov	r3, r0
 800c4a2:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 800c4a4:	7bfb      	ldrb	r3, [r7, #15]
 800c4a6:	4618      	mov	r0, r3
 800c4a8:	f000 f874 	bl	800c594 <USBD_Get_USB_Status>
 800c4ac:	4603      	mov	r3, r0
 800c4ae:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 800c4b0:	7bbb      	ldrb	r3, [r7, #14]
}
 800c4b2:	4618      	mov	r0, r3
 800c4b4:	3710      	adds	r7, #16
 800c4b6:	46bd      	mov	sp, r7
 800c4b8:	bd80      	pop	{r7, pc}

0800c4ba <USBD_LL_Transmit>:
  * @param  pbuf: Pointer to data to be sent
  * @param  size: Data size
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Transmit(USBD_HandleTypeDef *pdev, uint8_t ep_addr, uint8_t *pbuf, uint32_t size)
{
 800c4ba:	b580      	push	{r7, lr}
 800c4bc:	b086      	sub	sp, #24
 800c4be:	af00      	add	r7, sp, #0
 800c4c0:	60f8      	str	r0, [r7, #12]
 800c4c2:	607a      	str	r2, [r7, #4]
 800c4c4:	603b      	str	r3, [r7, #0]
 800c4c6:	460b      	mov	r3, r1
 800c4c8:	72fb      	strb	r3, [r7, #11]
  HAL_StatusTypeDef hal_status = HAL_OK;
 800c4ca:	2300      	movs	r3, #0
 800c4cc:	75fb      	strb	r3, [r7, #23]
  USBD_StatusTypeDef usb_status = USBD_OK;
 800c4ce:	2300      	movs	r3, #0
 800c4d0:	75bb      	strb	r3, [r7, #22]

  hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 800c4d2:	68fb      	ldr	r3, [r7, #12]
 800c4d4:	f8d3 02c8 	ldr.w	r0, [r3, #712]	; 0x2c8
 800c4d8:	7af9      	ldrb	r1, [r7, #11]
 800c4da:	683b      	ldr	r3, [r7, #0]
 800c4dc:	687a      	ldr	r2, [r7, #4]
 800c4de:	f7f8 fe41 	bl	8005164 <HAL_PCD_EP_Transmit>
 800c4e2:	4603      	mov	r3, r0
 800c4e4:	75fb      	strb	r3, [r7, #23]

  usb_status =  USBD_Get_USB_Status(hal_status);
 800c4e6:	7dfb      	ldrb	r3, [r7, #23]
 800c4e8:	4618      	mov	r0, r3
 800c4ea:	f000 f853 	bl	800c594 <USBD_Get_USB_Status>
 800c4ee:	4603      	mov	r3, r0
 800c4f0:	75bb      	strb	r3, [r7, #22]

  return usb_status;
 800c4f2:	7dbb      	ldrb	r3, [r7, #22]
}
 800c4f4:	4618      	mov	r0, r3
 800c4f6:	3718      	adds	r7, #24
 800c4f8:	46bd      	mov	sp, r7
 800c4fa:	bd80      	pop	{r7, pc}

0800c4fc <USBD_LL_PrepareReceive>:
  * @param  pbuf: Pointer to data to be received
  * @param  size: Data size
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_PrepareReceive(USBD_HandleTypeDef *pdev, uint8_t ep_addr, uint8_t *pbuf, uint32_t size)
{
 800c4fc:	b580      	push	{r7, lr}
 800c4fe:	b086      	sub	sp, #24
 800c500:	af00      	add	r7, sp, #0
 800c502:	60f8      	str	r0, [r7, #12]
 800c504:	607a      	str	r2, [r7, #4]
 800c506:	603b      	str	r3, [r7, #0]
 800c508:	460b      	mov	r3, r1
 800c50a:	72fb      	strb	r3, [r7, #11]
  HAL_StatusTypeDef hal_status = HAL_OK;
 800c50c:	2300      	movs	r3, #0
 800c50e:	75fb      	strb	r3, [r7, #23]
  USBD_StatusTypeDef usb_status = USBD_OK;
 800c510:	2300      	movs	r3, #0
 800c512:	75bb      	strb	r3, [r7, #22]

  hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 800c514:	68fb      	ldr	r3, [r7, #12]
 800c516:	f8d3 02c8 	ldr.w	r0, [r3, #712]	; 0x2c8
 800c51a:	7af9      	ldrb	r1, [r7, #11]
 800c51c:	683b      	ldr	r3, [r7, #0]
 800c51e:	687a      	ldr	r2, [r7, #4]
 800c520:	f7f8 fdbd 	bl	800509e <HAL_PCD_EP_Receive>
 800c524:	4603      	mov	r3, r0
 800c526:	75fb      	strb	r3, [r7, #23]

  usb_status =  USBD_Get_USB_Status(hal_status);
 800c528:	7dfb      	ldrb	r3, [r7, #23]
 800c52a:	4618      	mov	r0, r3
 800c52c:	f000 f832 	bl	800c594 <USBD_Get_USB_Status>
 800c530:	4603      	mov	r3, r0
 800c532:	75bb      	strb	r3, [r7, #22]

  return usb_status;
 800c534:	7dbb      	ldrb	r3, [r7, #22]
}
 800c536:	4618      	mov	r0, r3
 800c538:	3718      	adds	r7, #24
 800c53a:	46bd      	mov	sp, r7
 800c53c:	bd80      	pop	{r7, pc}

0800c53e <USBD_LL_GetRxDataSize>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint number
  * @retval Received Data Size
  */
uint32_t USBD_LL_GetRxDataSize(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
 800c53e:	b580      	push	{r7, lr}
 800c540:	b082      	sub	sp, #8
 800c542:	af00      	add	r7, sp, #0
 800c544:	6078      	str	r0, [r7, #4]
 800c546:	460b      	mov	r3, r1
 800c548:	70fb      	strb	r3, [r7, #3]
  return HAL_PCD_EP_GetRxCount((PCD_HandleTypeDef*) pdev->pData, ep_addr);
 800c54a:	687b      	ldr	r3, [r7, #4]
 800c54c:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 800c550:	78fa      	ldrb	r2, [r7, #3]
 800c552:	4611      	mov	r1, r2
 800c554:	4618      	mov	r0, r3
 800c556:	f7f8 fded 	bl	8005134 <HAL_PCD_EP_GetRxCount>
 800c55a:	4603      	mov	r3, r0
}
 800c55c:	4618      	mov	r0, r3
 800c55e:	3708      	adds	r7, #8
 800c560:	46bd      	mov	sp, r7
 800c562:	bd80      	pop	{r7, pc}

0800c564 <USBD_static_malloc>:
  * @brief  Static single allocation.
  * @param  size: Size of allocated memory
  * @retval None
  */
void *USBD_static_malloc(uint32_t size)
{
 800c564:	b480      	push	{r7}
 800c566:	b083      	sub	sp, #12
 800c568:	af00      	add	r7, sp, #0
 800c56a:	6078      	str	r0, [r7, #4]
  static uint32_t mem[(sizeof(USBD_CDC_HandleTypeDef)/4)+1];/* On 32-bit boundary */
  return mem;
 800c56c:	4b03      	ldr	r3, [pc, #12]	; (800c57c <USBD_static_malloc+0x18>)
}
 800c56e:	4618      	mov	r0, r3
 800c570:	370c      	adds	r7, #12
 800c572:	46bd      	mov	sp, r7
 800c574:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c578:	4770      	bx	lr
 800c57a:	bf00      	nop
 800c57c:	20002030 	.word	0x20002030

0800c580 <USBD_static_free>:
  * @brief  Dummy memory free
  * @param  p: Pointer to allocated  memory address
  * @retval None
  */
void USBD_static_free(void *p)
{
 800c580:	b480      	push	{r7}
 800c582:	b083      	sub	sp, #12
 800c584:	af00      	add	r7, sp, #0
 800c586:	6078      	str	r0, [r7, #4]

}
 800c588:	bf00      	nop
 800c58a:	370c      	adds	r7, #12
 800c58c:	46bd      	mov	sp, r7
 800c58e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c592:	4770      	bx	lr

0800c594 <USBD_Get_USB_Status>:
  * @brief  Returns the USB status depending on the HAL status:
  * @param  hal_status: HAL status
  * @retval USB status
  */
USBD_StatusTypeDef USBD_Get_USB_Status(HAL_StatusTypeDef hal_status)
{
 800c594:	b480      	push	{r7}
 800c596:	b085      	sub	sp, #20
 800c598:	af00      	add	r7, sp, #0
 800c59a:	4603      	mov	r3, r0
 800c59c:	71fb      	strb	r3, [r7, #7]
  USBD_StatusTypeDef usb_status = USBD_OK;
 800c59e:	2300      	movs	r3, #0
 800c5a0:	73fb      	strb	r3, [r7, #15]

  switch (hal_status)
 800c5a2:	79fb      	ldrb	r3, [r7, #7]
 800c5a4:	2b03      	cmp	r3, #3
 800c5a6:	d817      	bhi.n	800c5d8 <USBD_Get_USB_Status+0x44>
 800c5a8:	a201      	add	r2, pc, #4	; (adr r2, 800c5b0 <USBD_Get_USB_Status+0x1c>)
 800c5aa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c5ae:	bf00      	nop
 800c5b0:	0800c5c1 	.word	0x0800c5c1
 800c5b4:	0800c5c7 	.word	0x0800c5c7
 800c5b8:	0800c5cd 	.word	0x0800c5cd
 800c5bc:	0800c5d3 	.word	0x0800c5d3
  {
    case HAL_OK :
      usb_status = USBD_OK;
 800c5c0:	2300      	movs	r3, #0
 800c5c2:	73fb      	strb	r3, [r7, #15]
    break;
 800c5c4:	e00b      	b.n	800c5de <USBD_Get_USB_Status+0x4a>
    case HAL_ERROR :
      usb_status = USBD_FAIL;
 800c5c6:	2303      	movs	r3, #3
 800c5c8:	73fb      	strb	r3, [r7, #15]
    break;
 800c5ca:	e008      	b.n	800c5de <USBD_Get_USB_Status+0x4a>
    case HAL_BUSY :
      usb_status = USBD_BUSY;
 800c5cc:	2301      	movs	r3, #1
 800c5ce:	73fb      	strb	r3, [r7, #15]
    break;
 800c5d0:	e005      	b.n	800c5de <USBD_Get_USB_Status+0x4a>
    case HAL_TIMEOUT :
      usb_status = USBD_FAIL;
 800c5d2:	2303      	movs	r3, #3
 800c5d4:	73fb      	strb	r3, [r7, #15]
    break;
 800c5d6:	e002      	b.n	800c5de <USBD_Get_USB_Status+0x4a>
    default :
      usb_status = USBD_FAIL;
 800c5d8:	2303      	movs	r3, #3
 800c5da:	73fb      	strb	r3, [r7, #15]
    break;
 800c5dc:	bf00      	nop
  }
  return usb_status;
 800c5de:	7bfb      	ldrb	r3, [r7, #15]
}
 800c5e0:	4618      	mov	r0, r3
 800c5e2:	3714      	adds	r7, #20
 800c5e4:	46bd      	mov	sp, r7
 800c5e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c5ea:	4770      	bx	lr

0800c5ec <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800c5ec:	4b01      	ldr	r3, [pc, #4]	; (800c5f4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800c5ee:	2200      	movs	r2, #0
 800c5f0:	601a      	str	r2, [r3, #0]
 800c5f2:	4770      	bx	lr
 800c5f4:	20002250 	.word	0x20002250

0800c5f8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800c5f8:	4b03      	ldr	r3, [pc, #12]	; (800c608 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800c5fa:	2200      	movs	r2, #0
 800c5fc:	801a      	strh	r2, [r3, #0]
 800c5fe:	805a      	strh	r2, [r3, #2]
 800c600:	809a      	strh	r2, [r3, #4]
 800c602:	80da      	strh	r2, [r3, #6]
 800c604:	4770      	bx	lr
 800c606:	bf00      	nop
 800c608:	20002254 	.word	0x20002254

0800c60c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800c60c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c610:	4606      	mov	r6, r0
 800c612:	b09d      	sub	sp, #116	; 0x74
 800c614:	a803      	add	r0, sp, #12
 800c616:	4614      	mov	r4, r2
 800c618:	468a      	mov	sl, r1
 800c61a:	461d      	mov	r5, r3
 800c61c:	f000 f9b2 	bl	800c984 <_ZN8touchgfx12TextProviderC1Ev>
 800c620:	6833      	ldr	r3, [r6, #0]
 800c622:	4630      	mov	r0, r6
 800c624:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c626:	4798      	blx	r3
 800c628:	6833      	ldr	r3, [r6, #0]
 800c62a:	4607      	mov	r7, r0
 800c62c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800c62e:	4630      	mov	r0, r6
 800c630:	4798      	blx	r3
 800c632:	462a      	mov	r2, r5
 800c634:	9000      	str	r0, [sp, #0]
 800c636:	4621      	mov	r1, r4
 800c638:	463b      	mov	r3, r7
 800c63a:	a803      	add	r0, sp, #12
 800c63c:	f000 f9f5 	bl	800ca2a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c640:	2500      	movs	r5, #0
 800c642:	462c      	mov	r4, r5
 800c644:	46a9      	mov	r9, r5
 800c646:	46a8      	mov	r8, r5
 800c648:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800c64c:	2300      	movs	r3, #0
 800c64e:	9302      	str	r3, [sp, #8]
 800c650:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c654:	429c      	cmp	r4, r3
 800c656:	d002      	beq.n	800c65e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800c658:	455c      	cmp	r4, fp
 800c65a:	bf18      	it	ne
 800c65c:	4625      	movne	r5, r4
 800c65e:	ab02      	add	r3, sp, #8
 800c660:	4632      	mov	r2, r6
 800c662:	4651      	mov	r1, sl
 800c664:	a803      	add	r0, sp, #12
 800c666:	f000 fcd1 	bl	800d00c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c66a:	4604      	mov	r4, r0
 800c66c:	b108      	cbz	r0, 800c672 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800c66e:	280a      	cmp	r0, #10
 800c670:	d10a      	bne.n	800c688 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800c672:	45c1      	cmp	r9, r8
 800c674:	bf38      	it	cc
 800c676:	46c1      	movcc	r9, r8
 800c678:	f04f 0800 	mov.w	r8, #0
 800c67c:	2c00      	cmp	r4, #0
 800c67e:	d1e5      	bne.n	800c64c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800c680:	4648      	mov	r0, r9
 800c682:	b01d      	add	sp, #116	; 0x74
 800c684:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c688:	9a02      	ldr	r2, [sp, #8]
 800c68a:	2a00      	cmp	r2, #0
 800c68c:	d0de      	beq.n	800c64c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800c68e:	7b57      	ldrb	r7, [r2, #13]
 800c690:	6833      	ldr	r3, [r6, #0]
 800c692:	8894      	ldrh	r4, [r2, #4]
 800c694:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c696:	007f      	lsls	r7, r7, #1
 800c698:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800c69c:	7a97      	ldrb	r7, [r2, #10]
 800c69e:	4629      	mov	r1, r5
 800c6a0:	4307      	orrs	r7, r0
 800c6a2:	4630      	mov	r0, r6
 800c6a4:	4798      	blx	r3
 800c6a6:	4438      	add	r0, r7
 800c6a8:	4480      	add	r8, r0
 800c6aa:	fa1f f888 	uxth.w	r8, r8
 800c6ae:	e7e5      	b.n	800c67c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800c6b0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800c6b0:	b508      	push	{r3, lr}
 800c6b2:	6803      	ldr	r3, [r0, #0]
 800c6b4:	68db      	ldr	r3, [r3, #12]
 800c6b6:	4798      	blx	r3
 800c6b8:	b128      	cbz	r0, 800c6c6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800c6ba:	7b43      	ldrb	r3, [r0, #13]
 800c6bc:	7a80      	ldrb	r0, [r0, #10]
 800c6be:	005b      	lsls	r3, r3, #1
 800c6c0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c6c4:	4318      	orrs	r0, r3
 800c6c6:	bd08      	pop	{r3, pc}

0800c6c8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800c6c8:	b40e      	push	{r1, r2, r3}
 800c6ca:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c6cc:	b09e      	sub	sp, #120	; 0x78
 800c6ce:	ab23      	add	r3, sp, #140	; 0x8c
 800c6d0:	4605      	mov	r5, r0
 800c6d2:	f853 4b04 	ldr.w	r4, [r3], #4
 800c6d6:	9303      	str	r3, [sp, #12]
 800c6d8:	a805      	add	r0, sp, #20
 800c6da:	f000 f953 	bl	800c984 <_ZN8touchgfx12TextProviderC1Ev>
 800c6de:	682b      	ldr	r3, [r5, #0]
 800c6e0:	4628      	mov	r0, r5
 800c6e2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c6e4:	4798      	blx	r3
 800c6e6:	682b      	ldr	r3, [r5, #0]
 800c6e8:	4606      	mov	r6, r0
 800c6ea:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800c6ec:	4628      	mov	r0, r5
 800c6ee:	4798      	blx	r3
 800c6f0:	4633      	mov	r3, r6
 800c6f2:	ae1e      	add	r6, sp, #120	; 0x78
 800c6f4:	4621      	mov	r1, r4
 800c6f6:	9000      	str	r0, [sp, #0]
 800c6f8:	9a03      	ldr	r2, [sp, #12]
 800c6fa:	2400      	movs	r4, #0
 800c6fc:	a805      	add	r0, sp, #20
 800c6fe:	f000 f994 	bl	800ca2a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c702:	f846 4d68 	str.w	r4, [r6, #-104]!
 800c706:	462a      	mov	r2, r5
 800c708:	4633      	mov	r3, r6
 800c70a:	4621      	mov	r1, r4
 800c70c:	a805      	add	r0, sp, #20
 800c70e:	f000 fc7d 	bl	800d00c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c712:	b1f0      	cbz	r0, 800c752 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800c714:	280a      	cmp	r0, #10
 800c716:	d018      	beq.n	800c74a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800c718:	9f04      	ldr	r7, [sp, #16]
 800c71a:	b1b7      	cbz	r7, 800c74a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800c71c:	7b78      	ldrb	r0, [r7, #13]
 800c71e:	7a3b      	ldrb	r3, [r7, #8]
 800c720:	88ea      	ldrh	r2, [r5, #6]
 800c722:	00c1      	lsls	r1, r0, #3
 800c724:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800c728:	4319      	orrs	r1, r3
 800c72a:	0643      	lsls	r3, r0, #25
 800c72c:	bf44      	itt	mi
 800c72e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800c732:	b219      	sxthmi	r1, r3
 800c734:	0100      	lsls	r0, r0, #4
 800c736:	79fb      	ldrb	r3, [r7, #7]
 800c738:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800c73c:	4303      	orrs	r3, r0
 800c73e:	4413      	add	r3, r2
 800c740:	1a5b      	subs	r3, r3, r1
 800c742:	b21b      	sxth	r3, r3
 800c744:	429c      	cmp	r4, r3
 800c746:	bfb8      	it	lt
 800c748:	461c      	movlt	r4, r3
 800c74a:	4633      	mov	r3, r6
 800c74c:	462a      	mov	r2, r5
 800c74e:	2100      	movs	r1, #0
 800c750:	e7dc      	b.n	800c70c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800c752:	b2a0      	uxth	r0, r4
 800c754:	b01e      	add	sp, #120	; 0x78
 800c756:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800c75a:	b003      	add	sp, #12
 800c75c:	4770      	bx	lr

0800c75e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 800c75e:	7a43      	ldrb	r3, [r0, #9]
 800c760:	8880      	ldrh	r0, [r0, #4]
 800c762:	4418      	add	r0, r3
 800c764:	b280      	uxth	r0, r0
 800c766:	4770      	bx	lr

0800c768 <_ZNK8touchgfx4Font13getFontHeightEv>:
 800c768:	6803      	ldr	r3, [r0, #0]
 800c76a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c76c:	4718      	bx	r3

0800c76e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800c76e:	b40e      	push	{r1, r2, r3}
 800c770:	b570      	push	{r4, r5, r6, lr}
 800c772:	b09d      	sub	sp, #116	; 0x74
 800c774:	ab21      	add	r3, sp, #132	; 0x84
 800c776:	4604      	mov	r4, r0
 800c778:	f853 5b04 	ldr.w	r5, [r3], #4
 800c77c:	9302      	str	r3, [sp, #8]
 800c77e:	a803      	add	r0, sp, #12
 800c780:	f000 f900 	bl	800c984 <_ZN8touchgfx12TextProviderC1Ev>
 800c784:	6823      	ldr	r3, [r4, #0]
 800c786:	4620      	mov	r0, r4
 800c788:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c78a:	4798      	blx	r3
 800c78c:	6823      	ldr	r3, [r4, #0]
 800c78e:	4606      	mov	r6, r0
 800c790:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800c792:	4620      	mov	r0, r4
 800c794:	4798      	blx	r3
 800c796:	4633      	mov	r3, r6
 800c798:	9000      	str	r0, [sp, #0]
 800c79a:	9a02      	ldr	r2, [sp, #8]
 800c79c:	4629      	mov	r1, r5
 800c79e:	a803      	add	r0, sp, #12
 800c7a0:	f000 f943 	bl	800ca2a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c7a4:	a803      	add	r0, sp, #12
 800c7a6:	f000 fcb3 	bl	800d110 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c7aa:	2401      	movs	r4, #1
 800c7ac:	b2a3      	uxth	r3, r4
 800c7ae:	b140      	cbz	r0, 800c7c2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800c7b0:	280a      	cmp	r0, #10
 800c7b2:	bf08      	it	eq
 800c7b4:	3301      	addeq	r3, #1
 800c7b6:	a803      	add	r0, sp, #12
 800c7b8:	bf08      	it	eq
 800c7ba:	b21c      	sxtheq	r4, r3
 800c7bc:	f000 fca8 	bl	800d110 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c7c0:	e7f4      	b.n	800c7ac <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800c7c2:	4618      	mov	r0, r3
 800c7c4:	b01d      	add	sp, #116	; 0x74
 800c7c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c7ca:	b003      	add	sp, #12
 800c7cc:	4770      	bx	lr

0800c7ce <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800c7ce:	b40e      	push	{r1, r2, r3}
 800c7d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c7d2:	b09e      	sub	sp, #120	; 0x78
 800c7d4:	ab23      	add	r3, sp, #140	; 0x8c
 800c7d6:	4604      	mov	r4, r0
 800c7d8:	f853 5b04 	ldr.w	r5, [r3], #4
 800c7dc:	9303      	str	r3, [sp, #12]
 800c7de:	a805      	add	r0, sp, #20
 800c7e0:	f000 f8d0 	bl	800c984 <_ZN8touchgfx12TextProviderC1Ev>
 800c7e4:	6823      	ldr	r3, [r4, #0]
 800c7e6:	4620      	mov	r0, r4
 800c7e8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c7ea:	4798      	blx	r3
 800c7ec:	6823      	ldr	r3, [r4, #0]
 800c7ee:	4606      	mov	r6, r0
 800c7f0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800c7f2:	4620      	mov	r0, r4
 800c7f4:	4798      	blx	r3
 800c7f6:	4633      	mov	r3, r6
 800c7f8:	4629      	mov	r1, r5
 800c7fa:	9000      	str	r0, [sp, #0]
 800c7fc:	9a03      	ldr	r2, [sp, #12]
 800c7fe:	a805      	add	r0, sp, #20
 800c800:	ad1e      	add	r5, sp, #120	; 0x78
 800c802:	f000 f912 	bl	800ca2a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c806:	2100      	movs	r1, #0
 800c808:	f845 1d68 	str.w	r1, [r5, #-104]!
 800c80c:	4622      	mov	r2, r4
 800c80e:	462b      	mov	r3, r5
 800c810:	a805      	add	r0, sp, #20
 800c812:	f000 fbfb 	bl	800d00c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c816:	f647 76ff 	movw	r6, #32767	; 0x7fff
 800c81a:	b1d8      	cbz	r0, 800c854 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 800c81c:	280a      	cmp	r0, #10
 800c81e:	d012      	beq.n	800c846 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800c820:	9804      	ldr	r0, [sp, #16]
 800c822:	b180      	cbz	r0, 800c846 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800c824:	7b47      	ldrb	r7, [r0, #13]
 800c826:	88e2      	ldrh	r2, [r4, #6]
 800c828:	00fb      	lsls	r3, r7, #3
 800c82a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800c82e:	7a03      	ldrb	r3, [r0, #8]
 800c830:	430b      	orrs	r3, r1
 800c832:	0679      	lsls	r1, r7, #25
 800c834:	bf44      	itt	mi
 800c836:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800c83a:	b21b      	sxthmi	r3, r3
 800c83c:	1ad3      	subs	r3, r2, r3
 800c83e:	b21b      	sxth	r3, r3
 800c840:	429e      	cmp	r6, r3
 800c842:	bfa8      	it	ge
 800c844:	461e      	movge	r6, r3
 800c846:	462b      	mov	r3, r5
 800c848:	4622      	mov	r2, r4
 800c84a:	2100      	movs	r1, #0
 800c84c:	a805      	add	r0, sp, #20
 800c84e:	f000 fbdd 	bl	800d00c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c852:	e7e2      	b.n	800c81a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 800c854:	4630      	mov	r0, r6
 800c856:	b01e      	add	sp, #120	; 0x78
 800c858:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800c85c:	b003      	add	sp, #12
 800c85e:	4770      	bx	lr

0800c860 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 800c860:	b530      	push	{r4, r5, lr}
 800c862:	8083      	strh	r3, [r0, #4]
 800c864:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800c868:	80c3      	strh	r3, [r0, #6]
 800c86a:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800c86e:	7203      	strb	r3, [r0, #8]
 800c870:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800c874:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800c878:	7243      	strb	r3, [r0, #9]
 800c87a:	7a83      	ldrb	r3, [r0, #10]
 800c87c:	6141      	str	r1, [r0, #20]
 800c87e:	f365 0306 	bfi	r3, r5, #0, #7
 800c882:	f89d 501c 	ldrb.w	r5, [sp, #28]
 800c886:	8302      	strh	r2, [r0, #24]
 800c888:	f365 13c7 	bfi	r3, r5, #7, #1
 800c88c:	7283      	strb	r3, [r0, #10]
 800c88e:	f89d 3020 	ldrb.w	r3, [sp, #32]
 800c892:	72c3      	strb	r3, [r0, #11]
 800c894:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 800c898:	7303      	strb	r3, [r0, #12]
 800c89a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800c89e:	81c3      	strh	r3, [r0, #14]
 800c8a0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800c8a4:	8203      	strh	r3, [r0, #16]
 800c8a6:	4b01      	ldr	r3, [pc, #4]	; (800c8ac <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 800c8a8:	6003      	str	r3, [r0, #0]
 800c8aa:	bd30      	pop	{r4, r5, pc}
 800c8ac:	08014874 	.word	0x08014874

0800c8b0 <_ZNK8touchgfx9ConstFont4findEt>:
 800c8b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c8b2:	6944      	ldr	r4, [r0, #20]
 800c8b4:	b3bc      	cbz	r4, 800c926 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c8b6:	88a3      	ldrh	r3, [r4, #4]
 800c8b8:	8b02      	ldrh	r2, [r0, #24]
 800c8ba:	1acb      	subs	r3, r1, r3
 800c8bc:	f102 32ff 	add.w	r2, r2, #4294967295
 800c8c0:	d431      	bmi.n	800c926 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c8c2:	4293      	cmp	r3, r2
 800c8c4:	dd0c      	ble.n	800c8e0 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800c8c6:	230e      	movs	r3, #14
 800c8c8:	fb03 4302 	mla	r3, r3, r2, r4
 800c8cc:	889b      	ldrh	r3, [r3, #4]
 800c8ce:	1a5b      	subs	r3, r3, r1
 800c8d0:	1ad3      	subs	r3, r2, r3
 800c8d2:	429a      	cmp	r2, r3
 800c8d4:	db27      	blt.n	800c926 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c8d6:	2b00      	cmp	r3, #0
 800c8d8:	bfbc      	itt	lt
 800c8da:	2302      	movlt	r3, #2
 800c8dc:	fb92 f3f3 	sdivlt	r3, r2, r3
 800c8e0:	2500      	movs	r5, #0
 800c8e2:	260e      	movs	r6, #14
 800c8e4:	4295      	cmp	r5, r2
 800c8e6:	dc1e      	bgt.n	800c926 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c8e8:	fb06 4003 	mla	r0, r6, r3, r4
 800c8ec:	8887      	ldrh	r7, [r0, #4]
 800c8ee:	42b9      	cmp	r1, r7
 800c8f0:	d01a      	beq.n	800c928 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800c8f2:	d20d      	bcs.n	800c910 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800c8f4:	1e5a      	subs	r2, r3, #1
 800c8f6:	4295      	cmp	r5, r2
 800c8f8:	dc15      	bgt.n	800c926 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c8fa:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800c8fe:	1a5b      	subs	r3, r3, r1
 800c900:	1ad3      	subs	r3, r2, r3
 800c902:	429a      	cmp	r2, r3
 800c904:	db0f      	blt.n	800c926 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c906:	429d      	cmp	r5, r3
 800c908:	ddec      	ble.n	800c8e4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800c90a:	1953      	adds	r3, r2, r5
 800c90c:	105b      	asrs	r3, r3, #1
 800c90e:	e7e9      	b.n	800c8e4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800c910:	1c5d      	adds	r5, r3, #1
 800c912:	42aa      	cmp	r2, r5
 800c914:	db07      	blt.n	800c926 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c916:	8a43      	ldrh	r3, [r0, #18]
 800c918:	1acb      	subs	r3, r1, r3
 800c91a:	442b      	add	r3, r5
 800c91c:	429d      	cmp	r5, r3
 800c91e:	dc02      	bgt.n	800c926 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c920:	429a      	cmp	r2, r3
 800c922:	dadf      	bge.n	800c8e4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800c924:	e7f1      	b.n	800c90a <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800c926:	2000      	movs	r0, #0
 800c928:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c92a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800c92a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c92c:	4604      	mov	r4, r0
 800c92e:	4617      	mov	r7, r2
 800c930:	461e      	mov	r6, r3
 800c932:	b911      	cbnz	r1, 800c93a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800c934:	2500      	movs	r5, #0
 800c936:	4628      	mov	r0, r5
 800c938:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c93a:	290a      	cmp	r1, #10
 800c93c:	d0fa      	beq.n	800c934 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800c93e:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800c942:	4291      	cmp	r1, r2
 800c944:	d0f6      	beq.n	800c934 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800c946:	f242 020b 	movw	r2, #8203	; 0x200b
 800c94a:	4291      	cmp	r1, r2
 800c94c:	d0f2      	beq.n	800c934 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800c94e:	f7ff ffaf 	bl	800c8b0 <_ZNK8touchgfx9ConstFont4findEt>
 800c952:	4605      	mov	r5, r0
 800c954:	b950      	cbnz	r0, 800c96c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800c956:	6823      	ldr	r3, [r4, #0]
 800c958:	4620      	mov	r0, r4
 800c95a:	691b      	ldr	r3, [r3, #16]
 800c95c:	4798      	blx	r3
 800c95e:	4601      	mov	r1, r0
 800c960:	4620      	mov	r0, r4
 800c962:	f7ff ffa5 	bl	800c8b0 <_ZNK8touchgfx9ConstFont4findEt>
 800c966:	4605      	mov	r5, r0
 800c968:	2800      	cmp	r0, #0
 800c96a:	d0e3      	beq.n	800c934 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800c96c:	6823      	ldr	r3, [r4, #0]
 800c96e:	4629      	mov	r1, r5
 800c970:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800c972:	4620      	mov	r0, r4
 800c974:	4798      	blx	r3
 800c976:	6038      	str	r0, [r7, #0]
 800c978:	6823      	ldr	r3, [r4, #0]
 800c97a:	4620      	mov	r0, r4
 800c97c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c97e:	4798      	blx	r3
 800c980:	7030      	strb	r0, [r6, #0]
 800c982:	e7d8      	b.n	800c936 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800c984 <_ZN8touchgfx12TextProviderC1Ev>:
 800c984:	b538      	push	{r3, r4, r5, lr}
 800c986:	2500      	movs	r5, #0
 800c988:	2302      	movs	r3, #2
 800c98a:	4604      	mov	r4, r0
 800c98c:	e9c0 5500 	strd	r5, r5, [r0]
 800c990:	7403      	strb	r3, [r0, #16]
 800c992:	6145      	str	r5, [r0, #20]
 800c994:	7605      	strb	r5, [r0, #24]
 800c996:	83c5      	strh	r5, [r0, #30]
 800c998:	8405      	strh	r5, [r0, #32]
 800c99a:	86c5      	strh	r5, [r0, #54]	; 0x36
 800c99c:	8705      	strh	r5, [r0, #56]	; 0x38
 800c99e:	87c5      	strh	r5, [r0, #62]	; 0x3e
 800c9a0:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 800c9a4:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 800c9a8:	220e      	movs	r2, #14
 800c9aa:	4629      	mov	r1, r5
 800c9ac:	304c      	adds	r0, #76	; 0x4c
 800c9ae:	f000 ff7d 	bl	800d8ac <memset>
 800c9b2:	2301      	movs	r3, #1
 800c9b4:	4620      	mov	r0, r4
 800c9b6:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 800c9ba:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800c9be:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 800c9c2:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 800c9c6:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 800c9ca:	f7ff f8c9 	bl	800bb60 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800c9ce:	4620      	mov	r0, r4
 800c9d0:	bd38      	pop	{r3, r4, r5, pc}

0800c9d2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800c9d2:	b530      	push	{r4, r5, lr}
 800c9d4:	2500      	movs	r5, #0
 800c9d6:	2401      	movs	r4, #1
 800c9d8:	6843      	ldr	r3, [r0, #4]
 800c9da:	b913      	cbnz	r3, 800c9e2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800c9dc:	6803      	ldr	r3, [r0, #0]
 800c9de:	b313      	cbz	r3, 800ca26 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800c9e0:	6043      	str	r3, [r0, #4]
 800c9e2:	7e03      	ldrb	r3, [r0, #24]
 800c9e4:	b143      	cbz	r3, 800c9f8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800c9e6:	6943      	ldr	r3, [r0, #20]
 800c9e8:	b12b      	cbz	r3, 800c9f6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800c9ea:	881a      	ldrh	r2, [r3, #0]
 800c9ec:	b11a      	cbz	r2, 800c9f6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800c9ee:	1c9a      	adds	r2, r3, #2
 800c9f0:	6142      	str	r2, [r0, #20]
 800c9f2:	8818      	ldrh	r0, [r3, #0]
 800c9f4:	bd30      	pop	{r4, r5, pc}
 800c9f6:	7605      	strb	r5, [r0, #24]
 800c9f8:	6843      	ldr	r3, [r0, #4]
 800c9fa:	8819      	ldrh	r1, [r3, #0]
 800c9fc:	b199      	cbz	r1, 800ca26 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800c9fe:	1c9a      	adds	r2, r3, #2
 800ca00:	2902      	cmp	r1, #2
 800ca02:	6042      	str	r2, [r0, #4]
 800ca04:	d1f5      	bne.n	800c9f2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800ca06:	7c03      	ldrb	r3, [r0, #16]
 800ca08:	2b01      	cmp	r3, #1
 800ca0a:	d8e5      	bhi.n	800c9d8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800ca0c:	1c5a      	adds	r2, r3, #1
 800ca0e:	3302      	adds	r3, #2
 800ca10:	7402      	strb	r2, [r0, #16]
 800ca12:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800ca16:	6143      	str	r3, [r0, #20]
 800ca18:	2b00      	cmp	r3, #0
 800ca1a:	d0dd      	beq.n	800c9d8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800ca1c:	881b      	ldrh	r3, [r3, #0]
 800ca1e:	2b00      	cmp	r3, #0
 800ca20:	d0da      	beq.n	800c9d8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800ca22:	7604      	strb	r4, [r0, #24]
 800ca24:	e7d8      	b.n	800c9d8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800ca26:	2000      	movs	r0, #0
 800ca28:	e7e4      	b.n	800c9f4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800ca2a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800ca2a:	b430      	push	{r4, r5}
 800ca2c:	6001      	str	r1, [r0, #0]
 800ca2e:	2100      	movs	r1, #0
 800ca30:	6041      	str	r1, [r0, #4]
 800ca32:	6815      	ldr	r5, [r2, #0]
 800ca34:	6085      	str	r5, [r0, #8]
 800ca36:	6852      	ldr	r2, [r2, #4]
 800ca38:	6443      	str	r3, [r0, #68]	; 0x44
 800ca3a:	9b02      	ldr	r3, [sp, #8]
 800ca3c:	60c2      	str	r2, [r0, #12]
 800ca3e:	7401      	strb	r1, [r0, #16]
 800ca40:	6141      	str	r1, [r0, #20]
 800ca42:	7601      	strb	r1, [r0, #24]
 800ca44:	8701      	strh	r1, [r0, #56]	; 0x38
 800ca46:	8401      	strh	r1, [r0, #32]
 800ca48:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800ca4c:	6483      	str	r3, [r0, #72]	; 0x48
 800ca4e:	bc30      	pop	{r4, r5}
 800ca50:	f7ff b886 	b.w	800bb60 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800ca54 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800ca54:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ca56:	4605      	mov	r5, r0
 800ca58:	4608      	mov	r0, r1
 800ca5a:	b1e9      	cbz	r1, 800ca98 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800ca5c:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 800ca60:	460b      	mov	r3, r1
 800ca62:	f101 0708 	add.w	r7, r1, #8
 800ca66:	4622      	mov	r2, r4
 800ca68:	6818      	ldr	r0, [r3, #0]
 800ca6a:	6859      	ldr	r1, [r3, #4]
 800ca6c:	4626      	mov	r6, r4
 800ca6e:	c603      	stmia	r6!, {r0, r1}
 800ca70:	3308      	adds	r3, #8
 800ca72:	42bb      	cmp	r3, r7
 800ca74:	4634      	mov	r4, r6
 800ca76:	d1f7      	bne.n	800ca68 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800ca78:	6818      	ldr	r0, [r3, #0]
 800ca7a:	6030      	str	r0, [r6, #0]
 800ca7c:	889b      	ldrh	r3, [r3, #4]
 800ca7e:	80b3      	strh	r3, [r6, #4]
 800ca80:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 800ca84:	015b      	lsls	r3, r3, #5
 800ca86:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800ca8a:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 800ca8e:	430b      	orrs	r3, r1
 800ca90:	425b      	negs	r3, r3
 800ca92:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800ca96:	4610      	mov	r0, r2
 800ca98:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ca9a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800ca9a:	b538      	push	{r3, r4, r5, lr}
 800ca9c:	460c      	mov	r4, r1
 800ca9e:	6811      	ldr	r1, [r2, #0]
 800caa0:	4610      	mov	r0, r2
 800caa2:	68cd      	ldr	r5, [r1, #12]
 800caa4:	4619      	mov	r1, r3
 800caa6:	47a8      	blx	r5
 800caa8:	2800      	cmp	r0, #0
 800caaa:	bf08      	it	eq
 800caac:	4620      	moveq	r0, r4
 800caae:	bd38      	pop	{r3, r4, r5, pc}

0800cab0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800cab0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cab2:	4604      	mov	r4, r0
 800cab4:	4615      	mov	r5, r2
 800cab6:	4608      	mov	r0, r1
 800cab8:	b93a      	cbnz	r2, 800caca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800caba:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800cabe:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 800cac2:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800cac6:	4628      	mov	r0, r5
 800cac8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800caca:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800cace:	8893      	ldrh	r3, [r2, #4]
 800cad0:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800cad4:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800cad8:	79ee      	ldrb	r6, [r5, #7]
 800cada:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 800cade:	4316      	orrs	r6, r2
 800cae0:	19da      	adds	r2, r3, r7
 800cae2:	b291      	uxth	r1, r2
 800cae4:	291d      	cmp	r1, #29
 800cae6:	b2b7      	uxth	r7, r6
 800cae8:	d87a      	bhi.n	800cbe0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 800caea:	2201      	movs	r2, #1
 800caec:	408a      	lsls	r2, r1
 800caee:	4975      	ldr	r1, [pc, #468]	; (800ccc4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 800caf0:	420a      	tst	r2, r1
 800caf2:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800caf6:	d12d      	bne.n	800cb54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 800caf8:	f412 7f60 	tst.w	r2, #896	; 0x380
 800cafc:	d070      	beq.n	800cbe0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 800cafe:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 800cb02:	462b      	mov	r3, r5
 800cb04:	f105 0e08 	add.w	lr, r5, #8
 800cb08:	4615      	mov	r5, r2
 800cb0a:	6818      	ldr	r0, [r3, #0]
 800cb0c:	6859      	ldr	r1, [r3, #4]
 800cb0e:	4694      	mov	ip, r2
 800cb10:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800cb14:	3308      	adds	r3, #8
 800cb16:	4573      	cmp	r3, lr
 800cb18:	4662      	mov	r2, ip
 800cb1a:	d1f6      	bne.n	800cb0a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 800cb1c:	6818      	ldr	r0, [r3, #0]
 800cb1e:	f8cc 0000 	str.w	r0, [ip]
 800cb22:	889b      	ldrh	r3, [r3, #4]
 800cb24:	f8ac 3004 	strh.w	r3, [ip, #4]
 800cb28:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800cb2c:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 800cb30:	b2b3      	uxth	r3, r6
 800cb32:	1aca      	subs	r2, r1, r3
 800cb34:	b292      	uxth	r2, r2
 800cb36:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 800cb3a:	10d2      	asrs	r2, r2, #3
 800cb3c:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800cb40:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800cb44:	4302      	orrs	r2, r0
 800cb46:	1bcf      	subs	r7, r1, r7
 800cb48:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 800cb4c:	1afb      	subs	r3, r7, r3
 800cb4e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 800cb52:	e7b8      	b.n	800cac6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800cb54:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cb56:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800cb5a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800cb5c:	f640 6333 	movw	r3, #3635	; 0xe33
 800cb60:	4299      	cmp	r1, r3
 800cb62:	d110      	bne.n	800cb86 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 800cb64:	6803      	ldr	r3, [r0, #0]
 800cb66:	68db      	ldr	r3, [r3, #12]
 800cb68:	4798      	blx	r3
 800cb6a:	7b41      	ldrb	r1, [r0, #13]
 800cb6c:	00cb      	lsls	r3, r1, #3
 800cb6e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800cb72:	7a03      	ldrb	r3, [r0, #8]
 800cb74:	0648      	lsls	r0, r1, #25
 800cb76:	ea43 0302 	orr.w	r3, r3, r2
 800cb7a:	bf44      	itt	mi
 800cb7c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800cb80:	b21b      	sxthmi	r3, r3
 800cb82:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800cb86:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 800cb8a:	443b      	add	r3, r7
 800cb8c:	4433      	add	r3, r6
 800cb8e:	b29b      	uxth	r3, r3
 800cb90:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 800cb94:	462a      	mov	r2, r5
 800cb96:	f105 0c08 	add.w	ip, r5, #8
 800cb9a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800cb9e:	4635      	mov	r5, r6
 800cba0:	6810      	ldr	r0, [r2, #0]
 800cba2:	6851      	ldr	r1, [r2, #4]
 800cba4:	4637      	mov	r7, r6
 800cba6:	c703      	stmia	r7!, {r0, r1}
 800cba8:	3208      	adds	r2, #8
 800cbaa:	4562      	cmp	r2, ip
 800cbac:	463e      	mov	r6, r7
 800cbae:	d1f7      	bne.n	800cba0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 800cbb0:	6810      	ldr	r0, [r2, #0]
 800cbb2:	6038      	str	r0, [r7, #0]
 800cbb4:	8892      	ldrh	r2, [r2, #4]
 800cbb6:	80ba      	strh	r2, [r7, #4]
 800cbb8:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800cbbc:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800cbc0:	10db      	asrs	r3, r3, #3
 800cbc2:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800cbc6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800cbca:	4313      	orrs	r3, r2
 800cbcc:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800cbd0:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 800cbd4:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800cbd8:	1a9b      	subs	r3, r3, r2
 800cbda:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800cbde:	e772      	b.n	800cac6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800cbe0:	f023 0204 	bic.w	r2, r3, #4
 800cbe4:	f640 611b 	movw	r1, #3611	; 0xe1b
 800cbe8:	428a      	cmp	r2, r1
 800cbea:	d003      	beq.n	800cbf4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 800cbec:	f640 621d 	movw	r2, #3613	; 0xe1d
 800cbf0:	4293      	cmp	r3, r2
 800cbf2:	d120      	bne.n	800cc36 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 800cbf4:	3b01      	subs	r3, #1
 800cbf6:	4602      	mov	r2, r0
 800cbf8:	b29b      	uxth	r3, r3
 800cbfa:	4629      	mov	r1, r5
 800cbfc:	4620      	mov	r0, r4
 800cbfe:	f7ff ff4c 	bl	800ca9a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800cc02:	7b41      	ldrb	r1, [r0, #13]
 800cc04:	00cb      	lsls	r3, r1, #3
 800cc06:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800cc0a:	7a03      	ldrb	r3, [r0, #8]
 800cc0c:	0649      	lsls	r1, r1, #25
 800cc0e:	ea43 0302 	orr.w	r3, r3, r2
 800cc12:	bf44      	itt	mi
 800cc14:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800cc18:	b21b      	sxthmi	r3, r3
 800cc1a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800cc1e:	7b6b      	ldrb	r3, [r5, #13]
 800cc20:	7aaa      	ldrb	r2, [r5, #10]
 800cc22:	005b      	lsls	r3, r3, #1
 800cc24:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800cc28:	4313      	orrs	r3, r2
 800cc2a:	115a      	asrs	r2, r3, #5
 800cc2c:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800cc30:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800cc34:	e036      	b.n	800cca4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 800cc36:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800cc3a:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800cc3e:	7a2a      	ldrb	r2, [r5, #8]
 800cc40:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800cc44:	ea42 0201 	orr.w	r2, r2, r1
 800cc48:	bf1c      	itt	ne
 800cc4a:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800cc4e:	b212      	sxthne	r2, r2
 800cc50:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800cc54:	f640 6109 	movw	r1, #3593	; 0xe09
 800cc58:	f023 0210 	bic.w	r2, r3, #16
 800cc5c:	428a      	cmp	r2, r1
 800cc5e:	d003      	beq.n	800cc68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 800cc60:	f640 6213 	movw	r2, #3603	; 0xe13
 800cc64:	4293      	cmp	r3, r2
 800cc66:	d12a      	bne.n	800ccbe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 800cc68:	7b6e      	ldrb	r6, [r5, #13]
 800cc6a:	0076      	lsls	r6, r6, #1
 800cc6c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800cc70:	7aae      	ldrb	r6, [r5, #10]
 800cc72:	4316      	orrs	r6, r2
 800cc74:	f640 6213 	movw	r2, #3603	; 0xe13
 800cc78:	4293      	cmp	r3, r2
 800cc7a:	bf18      	it	ne
 800cc7c:	f103 33ff 	addne.w	r3, r3, #4294967295
 800cc80:	4602      	mov	r2, r0
 800cc82:	bf14      	ite	ne
 800cc84:	b29b      	uxthne	r3, r3
 800cc86:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800cc8a:	4629      	mov	r1, r5
 800cc8c:	4620      	mov	r0, r4
 800cc8e:	f7ff ff04 	bl	800ca9a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800cc92:	7b43      	ldrb	r3, [r0, #13]
 800cc94:	7a82      	ldrb	r2, [r0, #10]
 800cc96:	005b      	lsls	r3, r3, #1
 800cc98:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800cc9c:	4313      	orrs	r3, r2
 800cc9e:	1af6      	subs	r6, r6, r3
 800cca0:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 800cca4:	7b69      	ldrb	r1, [r5, #13]
 800cca6:	00cb      	lsls	r3, r1, #3
 800cca8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ccac:	7a2b      	ldrb	r3, [r5, #8]
 800ccae:	4313      	orrs	r3, r2
 800ccb0:	064a      	lsls	r2, r1, #25
 800ccb2:	bf44      	itt	mi
 800ccb4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ccb8:	b21b      	sxthmi	r3, r3
 800ccba:	1bdb      	subs	r3, r3, r7
 800ccbc:	e747      	b.n	800cb4e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 800ccbe:	2300      	movs	r3, #0
 800ccc0:	e7b6      	b.n	800cc30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 800ccc2:	bf00      	nop
 800ccc4:	3fc00079 	.word	0x3fc00079

0800ccc8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800ccc8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cccc:	4604      	mov	r4, r0
 800ccce:	b942      	cbnz	r2, 800cce2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800ccd0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800ccd4:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 800ccd8:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 800ccdc:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800cce0:	e047      	b.n	800cd72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800cce2:	7b51      	ldrb	r1, [r2, #13]
 800cce4:	8893      	ldrh	r3, [r2, #4]
 800cce6:	010d      	lsls	r5, r1, #4
 800cce8:	f405 7080 	and.w	r0, r5, #256	; 0x100
 800ccec:	79d5      	ldrb	r5, [r2, #7]
 800ccee:	4305      	orrs	r5, r0
 800ccf0:	2d04      	cmp	r5, #4
 800ccf2:	bfcc      	ite	gt
 800ccf4:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 800ccf8:	f04f 0e01 	movle.w	lr, #1
 800ccfc:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800cd00:	f200 80ab 	bhi.w	800ce5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 800cd04:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800cd08:	4283      	cmp	r3, r0
 800cd0a:	d216      	bcs.n	800cd3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800cd0c:	f240 605b 	movw	r0, #1627	; 0x65b
 800cd10:	4283      	cmp	r3, r0
 800cd12:	d859      	bhi.n	800cdc8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 800cd14:	f240 6057 	movw	r0, #1623	; 0x657
 800cd18:	4283      	cmp	r3, r0
 800cd1a:	d20e      	bcs.n	800cd3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800cd1c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800cd20:	d24a      	bcs.n	800cdb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 800cd22:	f240 604e 	movw	r0, #1614	; 0x64e
 800cd26:	4283      	cmp	r3, r0
 800cd28:	d207      	bcs.n	800cd3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800cd2a:	f240 601a 	movw	r0, #1562	; 0x61a
 800cd2e:	4283      	cmp	r3, r0
 800cd30:	d02a      	beq.n	800cd88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800cd32:	d821      	bhi.n	800cd78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 800cd34:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800cd38:	d35b      	bcc.n	800cdf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800cd3a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 800cd3e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800cd42:	f040 80d0 	bne.w	800cee6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800cd46:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 800cd4a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800cd4e:	f040 80ca 	bne.w	800cee6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800cd52:	00cb      	lsls	r3, r1, #3
 800cd54:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800cd58:	7a13      	ldrb	r3, [r2, #8]
 800cd5a:	0649      	lsls	r1, r1, #25
 800cd5c:	ea43 0300 	orr.w	r3, r3, r0
 800cd60:	bf44      	itt	mi
 800cd62:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800cd66:	b21b      	sxthmi	r3, r3
 800cd68:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800cd6c:	1b5d      	subs	r5, r3, r5
 800cd6e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800cd72:	4610      	mov	r0, r2
 800cd74:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cd78:	f240 604b 	movw	r0, #1611	; 0x64b
 800cd7c:	4283      	cmp	r3, r0
 800cd7e:	d338      	bcc.n	800cdf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800cd80:	f240 604c 	movw	r0, #1612	; 0x64c
 800cd84:	4283      	cmp	r3, r0
 800cd86:	d9d8      	bls.n	800cd3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800cd88:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 800cd8c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 800cd90:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800cd94:	f040 80f2 	bne.w	800cf7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 800cd98:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800cd9c:	f040 80ee 	bne.w	800cf7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 800cda0:	00cb      	lsls	r3, r1, #3
 800cda2:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800cda6:	7a13      	ldrb	r3, [r2, #8]
 800cda8:	064e      	lsls	r6, r1, #25
 800cdaa:	ea43 0300 	orr.w	r3, r3, r0
 800cdae:	bf44      	itt	mi
 800cdb0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800cdb4:	b21b      	sxthmi	r3, r3
 800cdb6:	e7d9      	b.n	800cd6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 800cdb8:	f240 6054 	movw	r0, #1620	; 0x654
 800cdbc:	4283      	cmp	r3, r0
 800cdbe:	d8e3      	bhi.n	800cd88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800cdc0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800cdc4:	d9e0      	bls.n	800cd88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800cdc6:	e7b8      	b.n	800cd3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800cdc8:	f240 6074 	movw	r0, #1652	; 0x674
 800cdcc:	4283      	cmp	r3, r0
 800cdce:	d0b4      	beq.n	800cd3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800cdd0:	d82d      	bhi.n	800ce2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 800cdd2:	f240 605e 	movw	r0, #1630	; 0x65e
 800cdd6:	4283      	cmp	r3, r0
 800cdd8:	d804      	bhi.n	800cde4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 800cdda:	f240 605d 	movw	r0, #1629	; 0x65d
 800cdde:	4283      	cmp	r3, r0
 800cde0:	d3d2      	bcc.n	800cd88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800cde2:	e7aa      	b.n	800cd3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800cde4:	f240 605f 	movw	r0, #1631	; 0x65f
 800cde8:	4283      	cmp	r3, r0
 800cdea:	d0cd      	beq.n	800cd88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800cdec:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800cdf0:	d0a3      	beq.n	800cd3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800cdf2:	00cb      	lsls	r3, r1, #3
 800cdf4:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800cdf8:	7a13      	ldrb	r3, [r2, #8]
 800cdfa:	0649      	lsls	r1, r1, #25
 800cdfc:	ea43 0300 	orr.w	r3, r3, r0
 800ce00:	bf44      	itt	mi
 800ce02:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ce06:	b21b      	sxthmi	r3, r3
 800ce08:	1b5d      	subs	r5, r3, r5
 800ce0a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800ce0e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800ce12:	7b53      	ldrb	r3, [r2, #13]
 800ce14:	015b      	lsls	r3, r3, #5
 800ce16:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800ce1a:	7993      	ldrb	r3, [r2, #6]
 800ce1c:	430b      	orrs	r3, r1
 800ce1e:	005b      	lsls	r3, r3, #1
 800ce20:	2105      	movs	r1, #5
 800ce22:	fb93 f3f1 	sdiv	r3, r3, r1
 800ce26:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800ce2a:	440b      	add	r3, r1
 800ce2c:	e756      	b.n	800ccdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800ce2e:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800ce32:	4283      	cmp	r3, r0
 800ce34:	d809      	bhi.n	800ce4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 800ce36:	f240 60df 	movw	r0, #1759	; 0x6df
 800ce3a:	4283      	cmp	r3, r0
 800ce3c:	f4bf af7d 	bcs.w	800cd3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ce40:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800ce44:	2b05      	cmp	r3, #5
 800ce46:	d8d4      	bhi.n	800cdf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800ce48:	e777      	b.n	800cd3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ce4a:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800ce4e:	4283      	cmp	r3, r0
 800ce50:	d09a      	beq.n	800cd88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ce52:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800ce56:	4283      	cmp	r3, r0
 800ce58:	e7ca      	b.n	800cdf0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800ce5a:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800ce5e:	d22b      	bcs.n	800ceb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 800ce60:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800ce64:	4283      	cmp	r3, r0
 800ce66:	d28f      	bcs.n	800cd88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ce68:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800ce6c:	4283      	cmp	r3, r0
 800ce6e:	d816      	bhi.n	800ce9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 800ce70:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800ce74:	4283      	cmp	r3, r0
 800ce76:	f4bf af60 	bcs.w	800cd3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ce7a:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800ce7e:	4283      	cmp	r3, r0
 800ce80:	d80a      	bhi.n	800ce98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 800ce82:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800ce86:	4283      	cmp	r3, r0
 800ce88:	f4bf af57 	bcs.w	800cd3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ce8c:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800ce90:	4283      	cmp	r3, r0
 800ce92:	f43f af79 	beq.w	800cd88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ce96:	e7ac      	b.n	800cdf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800ce98:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800ce9c:	e7f8      	b.n	800ce90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 800ce9e:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800cea2:	4283      	cmp	r3, r0
 800cea4:	d802      	bhi.n	800ceac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 800cea6:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800ceaa:	e798      	b.n	800cdde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 800ceac:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800ceb0:	4283      	cmp	r3, r0
 800ceb2:	f47f af42 	bne.w	800cd3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ceb6:	e767      	b.n	800cd88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ceb8:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800cebc:	4283      	cmp	r3, r0
 800cebe:	f43f af63 	beq.w	800cd88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800cec2:	d802      	bhi.n	800ceca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 800cec4:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800cec8:	e7f2      	b.n	800ceb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 800ceca:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800cece:	4283      	cmp	r3, r0
 800ced0:	d805      	bhi.n	800cede <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 800ced2:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800ced6:	4283      	cmp	r3, r0
 800ced8:	f4ff af2f 	bcc.w	800cd3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800cedc:	e754      	b.n	800cd88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800cede:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800cee2:	4283      	cmp	r3, r0
 800cee4:	e7af      	b.n	800ce46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 800cee6:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 800ceea:	4617      	mov	r7, r2
 800ceec:	f102 0808 	add.w	r8, r2, #8
 800cef0:	4666      	mov	r6, ip
 800cef2:	6838      	ldr	r0, [r7, #0]
 800cef4:	6879      	ldr	r1, [r7, #4]
 800cef6:	46e6      	mov	lr, ip
 800cef8:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800cefc:	3708      	adds	r7, #8
 800cefe:	4547      	cmp	r7, r8
 800cf00:	46f4      	mov	ip, lr
 800cf02:	d1f6      	bne.n	800cef2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 800cf04:	6838      	ldr	r0, [r7, #0]
 800cf06:	f8ce 0000 	str.w	r0, [lr]
 800cf0a:	88b9      	ldrh	r1, [r7, #4]
 800cf0c:	f8ae 1004 	strh.w	r1, [lr, #4]
 800cf10:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800cf14:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800cf18:	d009      	beq.n	800cf2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 800cf1a:	7b51      	ldrb	r1, [r2, #13]
 800cf1c:	7992      	ldrb	r2, [r2, #6]
 800cf1e:	0149      	lsls	r1, r1, #5
 800cf20:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800cf24:	4311      	orrs	r1, r2
 800cf26:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800cf2a:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800cf2e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800cf32:	b2ad      	uxth	r5, r5
 800cf34:	d00d      	beq.n	800cf52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 800cf36:	442b      	add	r3, r5
 800cf38:	b29b      	uxth	r3, r3
 800cf3a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800cf3e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800cf42:	10db      	asrs	r3, r3, #3
 800cf44:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800cf48:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800cf4c:	4313      	orrs	r3, r2
 800cf4e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800cf52:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800cf56:	00cb      	lsls	r3, r1, #3
 800cf58:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800cf5c:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800cf60:	064f      	lsls	r7, r1, #25
 800cf62:	ea43 0302 	orr.w	r3, r3, r2
 800cf66:	bf44      	itt	mi
 800cf68:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800cf6c:	b21b      	sxthmi	r3, r3
 800cf6e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800cf72:	1b5b      	subs	r3, r3, r5
 800cf74:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 800cf78:	4632      	mov	r2, r6
 800cf7a:	e6fa      	b.n	800cd72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800cf7c:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 800cf80:	4617      	mov	r7, r2
 800cf82:	f102 0908 	add.w	r9, r2, #8
 800cf86:	4666      	mov	r6, ip
 800cf88:	6838      	ldr	r0, [r7, #0]
 800cf8a:	6879      	ldr	r1, [r7, #4]
 800cf8c:	46e0      	mov	r8, ip
 800cf8e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800cf92:	3708      	adds	r7, #8
 800cf94:	454f      	cmp	r7, r9
 800cf96:	46c4      	mov	ip, r8
 800cf98:	d1f6      	bne.n	800cf88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 800cf9a:	6838      	ldr	r0, [r7, #0]
 800cf9c:	f8c8 0000 	str.w	r0, [r8]
 800cfa0:	88b9      	ldrh	r1, [r7, #4]
 800cfa2:	f8a8 1004 	strh.w	r1, [r8, #4]
 800cfa6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800cfaa:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800cfae:	d009      	beq.n	800cfc4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 800cfb0:	7b51      	ldrb	r1, [r2, #13]
 800cfb2:	7992      	ldrb	r2, [r2, #6]
 800cfb4:	0149      	lsls	r1, r1, #5
 800cfb6:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800cfba:	4311      	orrs	r1, r2
 800cfbc:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800cfc0:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800cfc4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800cfc8:	d00e      	beq.n	800cfe8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 800cfca:	eba3 030e 	sub.w	r3, r3, lr
 800cfce:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800cfd2:	b29b      	uxth	r3, r3
 800cfd4:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800cfd8:	10db      	asrs	r3, r3, #3
 800cfda:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800cfde:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800cfe2:	4313      	orrs	r3, r2
 800cfe4:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800cfe8:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800cfec:	00cb      	lsls	r3, r1, #3
 800cfee:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800cff2:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800cff6:	0648      	lsls	r0, r1, #25
 800cff8:	ea43 0302 	orr.w	r3, r3, r2
 800cffc:	bf44      	itt	mi
 800cffe:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d002:	b21b      	sxthmi	r3, r3
 800d004:	1b5d      	subs	r5, r3, r5
 800d006:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800d00a:	e7b5      	b.n	800cf78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0800d00c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800d00c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d010:	461e      	mov	r6, r3
 800d012:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800d014:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800d018:	4604      	mov	r4, r0
 800d01a:	4617      	mov	r7, r2
 800d01c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800d020:	f7fe fcf8 	bl	800ba14 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d024:	4605      	mov	r5, r0
 800d026:	b918      	cbnz	r0, 800d030 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 800d028:	6030      	str	r0, [r6, #0]
 800d02a:	4628      	mov	r0, r5
 800d02c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d030:	683b      	ldr	r3, [r7, #0]
 800d032:	4601      	mov	r1, r0
 800d034:	68db      	ldr	r3, [r3, #12]
 800d036:	4638      	mov	r0, r7
 800d038:	4798      	blx	r3
 800d03a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800d03e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800d042:	4602      	mov	r2, r0
 800d044:	6030      	str	r0, [r6, #0]
 800d046:	d213      	bcs.n	800d070 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 800d048:	4643      	mov	r3, r8
 800d04a:	4639      	mov	r1, r7
 800d04c:	4620      	mov	r0, r4
 800d04e:	f7ff fe3b 	bl	800ccc8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800d052:	6030      	str	r0, [r6, #0]
 800d054:	6833      	ldr	r3, [r6, #0]
 800d056:	b143      	cbz	r3, 800d06a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 800d058:	7b5a      	ldrb	r2, [r3, #13]
 800d05a:	7a9b      	ldrb	r3, [r3, #10]
 800d05c:	0052      	lsls	r2, r2, #1
 800d05e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800d062:	4313      	orrs	r3, r2
 800d064:	bf0c      	ite	eq
 800d066:	2301      	moveq	r3, #1
 800d068:	2300      	movne	r3, #0
 800d06a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 800d06e:	e7dc      	b.n	800d02a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 800d070:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800d074:	b29b      	uxth	r3, r3
 800d076:	2b7f      	cmp	r3, #127	; 0x7f
 800d078:	d804      	bhi.n	800d084 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 800d07a:	4639      	mov	r1, r7
 800d07c:	4620      	mov	r0, r4
 800d07e:	f7ff fd17 	bl	800cab0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800d082:	e7e6      	b.n	800d052 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 800d084:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800d088:	2b00      	cmp	r3, #0
 800d08a:	d0e3      	beq.n	800d054 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800d08c:	f640 1302 	movw	r3, #2306	; 0x902
 800d090:	429d      	cmp	r5, r3
 800d092:	d1df      	bne.n	800d054 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800d094:	4601      	mov	r1, r0
 800d096:	4620      	mov	r0, r4
 800d098:	f7ff fcdc 	bl	800ca54 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800d09c:	e7d9      	b.n	800d052 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0800d09e <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800d09e:	b510      	push	{r4, lr}
 800d0a0:	4604      	mov	r4, r0
 800d0a2:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 800d0a6:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800d0a8:	b1f1      	cbz	r1, 800d0e8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 800d0aa:	2b0a      	cmp	r3, #10
 800d0ac:	d02f      	beq.n	800d10e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800d0ae:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800d0b0:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800d0b4:	3901      	subs	r1, #1
 800d0b6:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 800d0b8:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 800d0bc:	1c51      	adds	r1, r2, #1
 800d0be:	b289      	uxth	r1, r1
 800d0c0:	2901      	cmp	r1, #1
 800d0c2:	bf84      	itt	hi
 800d0c4:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800d0c8:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 800d0ca:	f103 0201 	add.w	r2, r3, #1
 800d0ce:	8722      	strh	r2, [r4, #56]	; 0x38
 800d0d0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800d0d2:	bf98      	it	ls
 800d0d4:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 800d0d6:	4413      	add	r3, r2
 800d0d8:	b29b      	uxth	r3, r3
 800d0da:	2b09      	cmp	r3, #9
 800d0dc:	bf88      	it	hi
 800d0de:	3b0a      	subhi	r3, #10
 800d0e0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800d0e4:	8458      	strh	r0, [r3, #34]	; 0x22
 800d0e6:	e7dc      	b.n	800d0a2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800d0e8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800d0ea:	2b0a      	cmp	r3, #10
 800d0ec:	d00f      	beq.n	800d10e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800d0ee:	4620      	mov	r0, r4
 800d0f0:	f7ff fc6f 	bl	800c9d2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800d0f4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800d0f6:	1c5a      	adds	r2, r3, #1
 800d0f8:	8722      	strh	r2, [r4, #56]	; 0x38
 800d0fa:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800d0fc:	4413      	add	r3, r2
 800d0fe:	b29b      	uxth	r3, r3
 800d100:	2b09      	cmp	r3, #9
 800d102:	bf88      	it	hi
 800d104:	3b0a      	subhi	r3, #10
 800d106:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800d10a:	8458      	strh	r0, [r3, #34]	; 0x22
 800d10c:	e7ec      	b.n	800d0e8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 800d10e:	bd10      	pop	{r4, pc}

0800d110 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800d110:	b538      	push	{r3, r4, r5, lr}
 800d112:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800d114:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 800d118:	4604      	mov	r4, r0
 800d11a:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 800d11c:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 800d11e:	3a01      	subs	r2, #1
 800d120:	8702      	strh	r2, [r0, #56]	; 0x38
 800d122:	1c5a      	adds	r2, r3, #1
 800d124:	b292      	uxth	r2, r2
 800d126:	2a09      	cmp	r2, #9
 800d128:	bf86      	itte	hi
 800d12a:	3b09      	subhi	r3, #9
 800d12c:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 800d12e:	86c2      	strhls	r2, [r0, #54]	; 0x36
 800d130:	f7ff ffb5 	bl	800d09e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800d134:	8c23      	ldrh	r3, [r4, #32]
 800d136:	2b01      	cmp	r3, #1
 800d138:	bf9c      	itt	ls
 800d13a:	3301      	addls	r3, #1
 800d13c:	8423      	strhls	r3, [r4, #32]
 800d13e:	8be3      	ldrh	r3, [r4, #30]
 800d140:	b90b      	cbnz	r3, 800d146 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 800d142:	2302      	movs	r3, #2
 800d144:	83e3      	strh	r3, [r4, #30]
 800d146:	8be3      	ldrh	r3, [r4, #30]
 800d148:	3b01      	subs	r3, #1
 800d14a:	b29b      	uxth	r3, r3
 800d14c:	83e3      	strh	r3, [r4, #30]
 800d14e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800d152:	4628      	mov	r0, r5
 800d154:	8365      	strh	r5, [r4, #26]
 800d156:	bd38      	pop	{r3, r4, r5, pc}

0800d158 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800d158:	428a      	cmp	r2, r1
 800d15a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d15e:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 800d160:	d931      	bls.n	800d1c6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 800d162:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 800d164:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 800d168:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 800d16c:	19ee      	adds	r6, r5, r7
 800d16e:	1a54      	subs	r4, r2, r1
 800d170:	3e01      	subs	r6, #1
 800d172:	fa1f fe84 	uxth.w	lr, r4
 800d176:	b2b4      	uxth	r4, r6
 800d178:	eba4 090e 	sub.w	r9, r4, lr
 800d17c:	fa1f f989 	uxth.w	r9, r9
 800d180:	2c09      	cmp	r4, #9
 800d182:	4626      	mov	r6, r4
 800d184:	bf88      	it	hi
 800d186:	f1a4 060a 	subhi.w	r6, r4, #10
 800d18a:	f1bc 0f00 	cmp.w	ip, #0
 800d18e:	bf08      	it	eq
 800d190:	f04f 0c02 	moveq.w	ip, #2
 800d194:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 800d198:	f10c 3cff 	add.w	ip, ip, #4294967295
 800d19c:	fa1f fc8c 	uxth.w	ip, ip
 800d1a0:	3c01      	subs	r4, #1
 800d1a2:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 800d1a6:	b2a4      	uxth	r4, r4
 800d1a8:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 800d1ac:	454c      	cmp	r4, r9
 800d1ae:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 800d1b2:	d1e5      	bne.n	800d180 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 800d1b4:	eba5 050e 	sub.w	r5, r5, lr
 800d1b8:	eb0e 0408 	add.w	r4, lr, r8
 800d1bc:	8705      	strh	r5, [r0, #56]	; 0x38
 800d1be:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 800d1c2:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 800d1c6:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 800d1c8:	1a64      	subs	r4, r4, r1
 800d1ca:	4439      	add	r1, r7
 800d1cc:	b289      	uxth	r1, r1
 800d1ce:	2909      	cmp	r1, #9
 800d1d0:	bf88      	it	hi
 800d1d2:	390a      	subhi	r1, #10
 800d1d4:	8704      	strh	r4, [r0, #56]	; 0x38
 800d1d6:	86c1      	strh	r1, [r0, #54]	; 0x36
 800d1d8:	250a      	movs	r5, #10
 800d1da:	b18a      	cbz	r2, 800d200 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 800d1dc:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 800d1de:	3a01      	subs	r2, #1
 800d1e0:	b292      	uxth	r2, r2
 800d1e2:	3101      	adds	r1, #1
 800d1e4:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800d1e8:	8701      	strh	r1, [r0, #56]	; 0x38
 800d1ea:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 800d1ec:	b901      	cbnz	r1, 800d1f0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 800d1ee:	86c5      	strh	r5, [r0, #54]	; 0x36
 800d1f0:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 800d1f2:	3901      	subs	r1, #1
 800d1f4:	b289      	uxth	r1, r1
 800d1f6:	86c1      	strh	r1, [r0, #54]	; 0x36
 800d1f8:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800d1fc:	844c      	strh	r4, [r1, #34]	; 0x22
 800d1fe:	e7ec      	b.n	800d1da <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 800d200:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d204:	f7ff bf4b 	b.w	800d09e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800d208 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800d208:	b570      	push	{r4, r5, r6, lr}
 800d20a:	2500      	movs	r5, #0
 800d20c:	4295      	cmp	r5, r2
 800d20e:	d011      	beq.n	800d234 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 800d210:	8bc4      	ldrh	r4, [r0, #30]
 800d212:	f831 6b02 	ldrh.w	r6, [r1], #2
 800d216:	4414      	add	r4, r2
 800d218:	3c01      	subs	r4, #1
 800d21a:	1b64      	subs	r4, r4, r5
 800d21c:	b2a4      	uxth	r4, r4
 800d21e:	2c01      	cmp	r4, #1
 800d220:	bf88      	it	hi
 800d222:	3c02      	subhi	r4, #2
 800d224:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800d228:	8b64      	ldrh	r4, [r4, #26]
 800d22a:	42b4      	cmp	r4, r6
 800d22c:	d117      	bne.n	800d25e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 800d22e:	3501      	adds	r5, #1
 800d230:	b2ad      	uxth	r5, r5
 800d232:	e7eb      	b.n	800d20c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 800d234:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800d238:	2400      	movs	r4, #0
 800d23a:	4413      	add	r3, r2
 800d23c:	b2a2      	uxth	r2, r4
 800d23e:	429a      	cmp	r2, r3
 800d240:	da0f      	bge.n	800d262 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 800d242:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 800d244:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800d248:	4432      	add	r2, r6
 800d24a:	b292      	uxth	r2, r2
 800d24c:	2a09      	cmp	r2, #9
 800d24e:	bf88      	it	hi
 800d250:	3a0a      	subhi	r2, #10
 800d252:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800d256:	3401      	adds	r4, #1
 800d258:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 800d25a:	42aa      	cmp	r2, r5
 800d25c:	d0ee      	beq.n	800d23c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 800d25e:	2000      	movs	r0, #0
 800d260:	bd70      	pop	{r4, r5, r6, pc}
 800d262:	2001      	movs	r0, #1
 800d264:	e7fc      	b.n	800d260 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0800d266 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800d266:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d26a:	4605      	mov	r5, r0
 800d26c:	4616      	mov	r6, r2
 800d26e:	1c8c      	adds	r4, r1, #2
 800d270:	8809      	ldrh	r1, [r1, #0]
 800d272:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800d276:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800d27a:	42b3      	cmp	r3, r6
 800d27c:	d124      	bne.n	800d2c8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800d27e:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800d282:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800d286:	f001 070f 	and.w	r7, r1, #15
 800d28a:	f8cd 8000 	str.w	r8, [sp]
 800d28e:	464b      	mov	r3, r9
 800d290:	4652      	mov	r2, sl
 800d292:	4621      	mov	r1, r4
 800d294:	4628      	mov	r0, r5
 800d296:	f7ff ffb7 	bl	800d208 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800d29a:	4683      	mov	fp, r0
 800d29c:	b168      	cbz	r0, 800d2ba <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800d29e:	eb0a 0109 	add.w	r1, sl, r9
 800d2a2:	4441      	add	r1, r8
 800d2a4:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800d2a8:	463a      	mov	r2, r7
 800d2aa:	4649      	mov	r1, r9
 800d2ac:	4628      	mov	r0, r5
 800d2ae:	f7ff ff53 	bl	800d158 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800d2b2:	4658      	mov	r0, fp
 800d2b4:	b003      	add	sp, #12
 800d2b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d2ba:	eb07 010a 	add.w	r1, r7, sl
 800d2be:	4449      	add	r1, r9
 800d2c0:	4441      	add	r1, r8
 800d2c2:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800d2c6:	e7d2      	b.n	800d26e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800d2c8:	f04f 0b00 	mov.w	fp, #0
 800d2cc:	e7f1      	b.n	800d2b2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800d2ce <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800d2ce:	b570      	push	{r4, r5, r6, lr}
 800d2d0:	8810      	ldrh	r0, [r2, #0]
 800d2d2:	4298      	cmp	r0, r3
 800d2d4:	d817      	bhi.n	800d306 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800d2d6:	1e48      	subs	r0, r1, #1
 800d2d8:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800d2dc:	4298      	cmp	r0, r3
 800d2de:	d312      	bcc.n	800d306 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800d2e0:	2400      	movs	r4, #0
 800d2e2:	428c      	cmp	r4, r1
 800d2e4:	d20f      	bcs.n	800d306 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800d2e6:	1860      	adds	r0, r4, r1
 800d2e8:	1040      	asrs	r0, r0, #1
 800d2ea:	0085      	lsls	r5, r0, #2
 800d2ec:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800d2f0:	42b3      	cmp	r3, r6
 800d2f2:	d902      	bls.n	800d2fa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800d2f4:	3001      	adds	r0, #1
 800d2f6:	b284      	uxth	r4, r0
 800d2f8:	e7f3      	b.n	800d2e2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800d2fa:	d201      	bcs.n	800d300 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800d2fc:	b281      	uxth	r1, r0
 800d2fe:	e7f0      	b.n	800d2e2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800d300:	442a      	add	r2, r5
 800d302:	8850      	ldrh	r0, [r2, #2]
 800d304:	bd70      	pop	{r4, r5, r6, pc}
 800d306:	2000      	movs	r0, #0
 800d308:	e7fc      	b.n	800d304 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800d30a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800d30a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d30e:	6c45      	ldr	r5, [r0, #68]	; 0x44
 800d310:	886f      	ldrh	r7, [r5, #2]
 800d312:	4604      	mov	r4, r0
 800d314:	087f      	lsrs	r7, r7, #1
 800d316:	260b      	movs	r6, #11
 800d318:	3e01      	subs	r6, #1
 800d31a:	d013      	beq.n	800d344 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 800d31c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d31e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800d322:	462a      	mov	r2, r5
 800d324:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800d328:	4639      	mov	r1, r7
 800d32a:	4643      	mov	r3, r8
 800d32c:	4620      	mov	r0, r4
 800d32e:	f7ff ffce 	bl	800d2ce <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800d332:	b138      	cbz	r0, 800d344 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 800d334:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800d338:	4642      	mov	r2, r8
 800d33a:	4620      	mov	r0, r4
 800d33c:	f7ff ff93 	bl	800d266 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800d340:	2800      	cmp	r0, #0
 800d342:	d1e9      	bne.n	800d318 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800d344:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d348 <_ZdlPvj>:
 800d348:	f000 b812 	b.w	800d370 <_ZdlPv>

0800d34c <__cxa_guard_acquire>:
 800d34c:	6803      	ldr	r3, [r0, #0]
 800d34e:	07db      	lsls	r3, r3, #31
 800d350:	d406      	bmi.n	800d360 <__cxa_guard_acquire+0x14>
 800d352:	7843      	ldrb	r3, [r0, #1]
 800d354:	b103      	cbz	r3, 800d358 <__cxa_guard_acquire+0xc>
 800d356:	deff      	udf	#255	; 0xff
 800d358:	2301      	movs	r3, #1
 800d35a:	7043      	strb	r3, [r0, #1]
 800d35c:	4618      	mov	r0, r3
 800d35e:	4770      	bx	lr
 800d360:	2000      	movs	r0, #0
 800d362:	4770      	bx	lr

0800d364 <__cxa_guard_release>:
 800d364:	2301      	movs	r3, #1
 800d366:	6003      	str	r3, [r0, #0]
 800d368:	4770      	bx	lr

0800d36a <__cxa_pure_virtual>:
 800d36a:	b508      	push	{r3, lr}
 800d36c:	f000 f80e 	bl	800d38c <_ZSt9terminatev>

0800d370 <_ZdlPv>:
 800d370:	f000 ba86 	b.w	800d880 <free>

0800d374 <_ZN10__cxxabiv111__terminateEPFvvE>:
 800d374:	b508      	push	{r3, lr}
 800d376:	4780      	blx	r0
 800d378:	f000 fa12 	bl	800d7a0 <abort>

0800d37c <_ZSt13get_terminatev>:
 800d37c:	4b02      	ldr	r3, [pc, #8]	; (800d388 <_ZSt13get_terminatev+0xc>)
 800d37e:	6818      	ldr	r0, [r3, #0]
 800d380:	f3bf 8f5b 	dmb	ish
 800d384:	4770      	bx	lr
 800d386:	bf00      	nop
 800d388:	20000104 	.word	0x20000104

0800d38c <_ZSt9terminatev>:
 800d38c:	b508      	push	{r3, lr}
 800d38e:	f7ff fff5 	bl	800d37c <_ZSt13get_terminatev>
 800d392:	f7ff ffef 	bl	800d374 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0800d398 <log>:
 800d398:	b538      	push	{r3, r4, r5, lr}
 800d39a:	ed2d 8b02 	vpush	{d8}
 800d39e:	ec55 4b10 	vmov	r4, r5, d0
 800d3a2:	f000 f839 	bl	800d418 <__ieee754_log>
 800d3a6:	4622      	mov	r2, r4
 800d3a8:	462b      	mov	r3, r5
 800d3aa:	4620      	mov	r0, r4
 800d3ac:	4629      	mov	r1, r5
 800d3ae:	eeb0 8a40 	vmov.f32	s16, s0
 800d3b2:	eef0 8a60 	vmov.f32	s17, s1
 800d3b6:	f7f3 fbc1 	bl	8000b3c <__aeabi_dcmpun>
 800d3ba:	b998      	cbnz	r0, 800d3e4 <log+0x4c>
 800d3bc:	2200      	movs	r2, #0
 800d3be:	2300      	movs	r3, #0
 800d3c0:	4620      	mov	r0, r4
 800d3c2:	4629      	mov	r1, r5
 800d3c4:	f7f3 fbb0 	bl	8000b28 <__aeabi_dcmpgt>
 800d3c8:	b960      	cbnz	r0, 800d3e4 <log+0x4c>
 800d3ca:	2200      	movs	r2, #0
 800d3cc:	2300      	movs	r3, #0
 800d3ce:	4620      	mov	r0, r4
 800d3d0:	4629      	mov	r1, r5
 800d3d2:	f7f3 fb81 	bl	8000ad8 <__aeabi_dcmpeq>
 800d3d6:	b160      	cbz	r0, 800d3f2 <log+0x5a>
 800d3d8:	f000 fa0e 	bl	800d7f8 <__errno>
 800d3dc:	ed9f 8b0a 	vldr	d8, [pc, #40]	; 800d408 <log+0x70>
 800d3e0:	2322      	movs	r3, #34	; 0x22
 800d3e2:	6003      	str	r3, [r0, #0]
 800d3e4:	eeb0 0a48 	vmov.f32	s0, s16
 800d3e8:	eef0 0a68 	vmov.f32	s1, s17
 800d3ec:	ecbd 8b02 	vpop	{d8}
 800d3f0:	bd38      	pop	{r3, r4, r5, pc}
 800d3f2:	f000 fa01 	bl	800d7f8 <__errno>
 800d3f6:	ecbd 8b02 	vpop	{d8}
 800d3fa:	2321      	movs	r3, #33	; 0x21
 800d3fc:	6003      	str	r3, [r0, #0]
 800d3fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d402:	4803      	ldr	r0, [pc, #12]	; (800d410 <log+0x78>)
 800d404:	f000 b9c4 	b.w	800d790 <nan>
 800d408:	00000000 	.word	0x00000000
 800d40c:	fff00000 	.word	0xfff00000
 800d410:	08014907 	.word	0x08014907
 800d414:	00000000 	.word	0x00000000

0800d418 <__ieee754_log>:
 800d418:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d41c:	ec51 0b10 	vmov	r0, r1, d0
 800d420:	ed2d 8b04 	vpush	{d8-d9}
 800d424:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800d428:	b083      	sub	sp, #12
 800d42a:	460d      	mov	r5, r1
 800d42c:	da29      	bge.n	800d482 <__ieee754_log+0x6a>
 800d42e:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 800d432:	4303      	orrs	r3, r0
 800d434:	ee10 2a10 	vmov	r2, s0
 800d438:	d10c      	bne.n	800d454 <__ieee754_log+0x3c>
 800d43a:	49cf      	ldr	r1, [pc, #828]	; (800d778 <__ieee754_log+0x360>)
 800d43c:	2200      	movs	r2, #0
 800d43e:	2300      	movs	r3, #0
 800d440:	2000      	movs	r0, #0
 800d442:	f7f3 fa0b 	bl	800085c <__aeabi_ddiv>
 800d446:	ec41 0b10 	vmov	d0, r0, r1
 800d44a:	b003      	add	sp, #12
 800d44c:	ecbd 8b04 	vpop	{d8-d9}
 800d450:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d454:	2900      	cmp	r1, #0
 800d456:	da05      	bge.n	800d464 <__ieee754_log+0x4c>
 800d458:	460b      	mov	r3, r1
 800d45a:	f7f2 ff1d 	bl	8000298 <__aeabi_dsub>
 800d45e:	2200      	movs	r2, #0
 800d460:	2300      	movs	r3, #0
 800d462:	e7ee      	b.n	800d442 <__ieee754_log+0x2a>
 800d464:	4bc5      	ldr	r3, [pc, #788]	; (800d77c <__ieee754_log+0x364>)
 800d466:	2200      	movs	r2, #0
 800d468:	f7f3 f8ce 	bl	8000608 <__aeabi_dmul>
 800d46c:	f06f 0335 	mvn.w	r3, #53	; 0x35
 800d470:	460d      	mov	r5, r1
 800d472:	4ac3      	ldr	r2, [pc, #780]	; (800d780 <__ieee754_log+0x368>)
 800d474:	4295      	cmp	r5, r2
 800d476:	dd06      	ble.n	800d486 <__ieee754_log+0x6e>
 800d478:	4602      	mov	r2, r0
 800d47a:	460b      	mov	r3, r1
 800d47c:	f7f2 ff0e 	bl	800029c <__adddf3>
 800d480:	e7e1      	b.n	800d446 <__ieee754_log+0x2e>
 800d482:	2300      	movs	r3, #0
 800d484:	e7f5      	b.n	800d472 <__ieee754_log+0x5a>
 800d486:	152c      	asrs	r4, r5, #20
 800d488:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 800d48c:	f3c5 0513 	ubfx	r5, r5, #0, #20
 800d490:	441c      	add	r4, r3
 800d492:	f505 2315 	add.w	r3, r5, #610304	; 0x95000
 800d496:	f603 7364 	addw	r3, r3, #3940	; 0xf64
 800d49a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800d49e:	f083 527f 	eor.w	r2, r3, #1069547520	; 0x3fc00000
 800d4a2:	f482 1240 	eor.w	r2, r2, #3145728	; 0x300000
 800d4a6:	ea42 0105 	orr.w	r1, r2, r5
 800d4aa:	eb04 5413 	add.w	r4, r4, r3, lsr #20
 800d4ae:	2200      	movs	r2, #0
 800d4b0:	4bb4      	ldr	r3, [pc, #720]	; (800d784 <__ieee754_log+0x36c>)
 800d4b2:	f7f2 fef1 	bl	8000298 <__aeabi_dsub>
 800d4b6:	1cab      	adds	r3, r5, #2
 800d4b8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800d4bc:	2b02      	cmp	r3, #2
 800d4be:	4682      	mov	sl, r0
 800d4c0:	468b      	mov	fp, r1
 800d4c2:	f04f 0200 	mov.w	r2, #0
 800d4c6:	dc53      	bgt.n	800d570 <__ieee754_log+0x158>
 800d4c8:	2300      	movs	r3, #0
 800d4ca:	f7f3 fb05 	bl	8000ad8 <__aeabi_dcmpeq>
 800d4ce:	b1d0      	cbz	r0, 800d506 <__ieee754_log+0xee>
 800d4d0:	2c00      	cmp	r4, #0
 800d4d2:	f000 8122 	beq.w	800d71a <__ieee754_log+0x302>
 800d4d6:	4620      	mov	r0, r4
 800d4d8:	f7f3 f82c 	bl	8000534 <__aeabi_i2d>
 800d4dc:	a390      	add	r3, pc, #576	; (adr r3, 800d720 <__ieee754_log+0x308>)
 800d4de:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d4e2:	4606      	mov	r6, r0
 800d4e4:	460f      	mov	r7, r1
 800d4e6:	f7f3 f88f 	bl	8000608 <__aeabi_dmul>
 800d4ea:	a38f      	add	r3, pc, #572	; (adr r3, 800d728 <__ieee754_log+0x310>)
 800d4ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d4f0:	4604      	mov	r4, r0
 800d4f2:	460d      	mov	r5, r1
 800d4f4:	4630      	mov	r0, r6
 800d4f6:	4639      	mov	r1, r7
 800d4f8:	f7f3 f886 	bl	8000608 <__aeabi_dmul>
 800d4fc:	4602      	mov	r2, r0
 800d4fe:	460b      	mov	r3, r1
 800d500:	4620      	mov	r0, r4
 800d502:	4629      	mov	r1, r5
 800d504:	e7ba      	b.n	800d47c <__ieee754_log+0x64>
 800d506:	a38a      	add	r3, pc, #552	; (adr r3, 800d730 <__ieee754_log+0x318>)
 800d508:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d50c:	4650      	mov	r0, sl
 800d50e:	4659      	mov	r1, fp
 800d510:	f7f3 f87a 	bl	8000608 <__aeabi_dmul>
 800d514:	4602      	mov	r2, r0
 800d516:	460b      	mov	r3, r1
 800d518:	2000      	movs	r0, #0
 800d51a:	499b      	ldr	r1, [pc, #620]	; (800d788 <__ieee754_log+0x370>)
 800d51c:	f7f2 febc 	bl	8000298 <__aeabi_dsub>
 800d520:	4652      	mov	r2, sl
 800d522:	4606      	mov	r6, r0
 800d524:	460f      	mov	r7, r1
 800d526:	465b      	mov	r3, fp
 800d528:	4650      	mov	r0, sl
 800d52a:	4659      	mov	r1, fp
 800d52c:	f7f3 f86c 	bl	8000608 <__aeabi_dmul>
 800d530:	4602      	mov	r2, r0
 800d532:	460b      	mov	r3, r1
 800d534:	4630      	mov	r0, r6
 800d536:	4639      	mov	r1, r7
 800d538:	f7f3 f866 	bl	8000608 <__aeabi_dmul>
 800d53c:	4606      	mov	r6, r0
 800d53e:	460f      	mov	r7, r1
 800d540:	b914      	cbnz	r4, 800d548 <__ieee754_log+0x130>
 800d542:	4632      	mov	r2, r6
 800d544:	463b      	mov	r3, r7
 800d546:	e0a2      	b.n	800d68e <__ieee754_log+0x276>
 800d548:	4620      	mov	r0, r4
 800d54a:	f7f2 fff3 	bl	8000534 <__aeabi_i2d>
 800d54e:	a374      	add	r3, pc, #464	; (adr r3, 800d720 <__ieee754_log+0x308>)
 800d550:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d554:	4680      	mov	r8, r0
 800d556:	4689      	mov	r9, r1
 800d558:	f7f3 f856 	bl	8000608 <__aeabi_dmul>
 800d55c:	a372      	add	r3, pc, #456	; (adr r3, 800d728 <__ieee754_log+0x310>)
 800d55e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d562:	4604      	mov	r4, r0
 800d564:	460d      	mov	r5, r1
 800d566:	4640      	mov	r0, r8
 800d568:	4649      	mov	r1, r9
 800d56a:	f7f3 f84d 	bl	8000608 <__aeabi_dmul>
 800d56e:	e0a7      	b.n	800d6c0 <__ieee754_log+0x2a8>
 800d570:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800d574:	f7f2 fe92 	bl	800029c <__adddf3>
 800d578:	4602      	mov	r2, r0
 800d57a:	460b      	mov	r3, r1
 800d57c:	4650      	mov	r0, sl
 800d57e:	4659      	mov	r1, fp
 800d580:	f7f3 f96c 	bl	800085c <__aeabi_ddiv>
 800d584:	ec41 0b18 	vmov	d8, r0, r1
 800d588:	4620      	mov	r0, r4
 800d58a:	f7f2 ffd3 	bl	8000534 <__aeabi_i2d>
 800d58e:	ec53 2b18 	vmov	r2, r3, d8
 800d592:	ec41 0b19 	vmov	d9, r0, r1
 800d596:	ec51 0b18 	vmov	r0, r1, d8
 800d59a:	f7f3 f835 	bl	8000608 <__aeabi_dmul>
 800d59e:	f5a5 23c2 	sub.w	r3, r5, #397312	; 0x61000
 800d5a2:	f2a3 437a 	subw	r3, r3, #1146	; 0x47a
 800d5a6:	9301      	str	r3, [sp, #4]
 800d5a8:	4602      	mov	r2, r0
 800d5aa:	460b      	mov	r3, r1
 800d5ac:	4680      	mov	r8, r0
 800d5ae:	4689      	mov	r9, r1
 800d5b0:	f7f3 f82a 	bl	8000608 <__aeabi_dmul>
 800d5b4:	a360      	add	r3, pc, #384	; (adr r3, 800d738 <__ieee754_log+0x320>)
 800d5b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d5ba:	4606      	mov	r6, r0
 800d5bc:	460f      	mov	r7, r1
 800d5be:	f7f3 f823 	bl	8000608 <__aeabi_dmul>
 800d5c2:	a35f      	add	r3, pc, #380	; (adr r3, 800d740 <__ieee754_log+0x328>)
 800d5c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d5c8:	f7f2 fe68 	bl	800029c <__adddf3>
 800d5cc:	4632      	mov	r2, r6
 800d5ce:	463b      	mov	r3, r7
 800d5d0:	f7f3 f81a 	bl	8000608 <__aeabi_dmul>
 800d5d4:	a35c      	add	r3, pc, #368	; (adr r3, 800d748 <__ieee754_log+0x330>)
 800d5d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d5da:	f7f2 fe5f 	bl	800029c <__adddf3>
 800d5de:	4632      	mov	r2, r6
 800d5e0:	463b      	mov	r3, r7
 800d5e2:	f7f3 f811 	bl	8000608 <__aeabi_dmul>
 800d5e6:	a35a      	add	r3, pc, #360	; (adr r3, 800d750 <__ieee754_log+0x338>)
 800d5e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d5ec:	f7f2 fe56 	bl	800029c <__adddf3>
 800d5f0:	4642      	mov	r2, r8
 800d5f2:	464b      	mov	r3, r9
 800d5f4:	f7f3 f808 	bl	8000608 <__aeabi_dmul>
 800d5f8:	a357      	add	r3, pc, #348	; (adr r3, 800d758 <__ieee754_log+0x340>)
 800d5fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d5fe:	4680      	mov	r8, r0
 800d600:	4689      	mov	r9, r1
 800d602:	4630      	mov	r0, r6
 800d604:	4639      	mov	r1, r7
 800d606:	f7f2 ffff 	bl	8000608 <__aeabi_dmul>
 800d60a:	a355      	add	r3, pc, #340	; (adr r3, 800d760 <__ieee754_log+0x348>)
 800d60c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d610:	f7f2 fe44 	bl	800029c <__adddf3>
 800d614:	4632      	mov	r2, r6
 800d616:	463b      	mov	r3, r7
 800d618:	f7f2 fff6 	bl	8000608 <__aeabi_dmul>
 800d61c:	a352      	add	r3, pc, #328	; (adr r3, 800d768 <__ieee754_log+0x350>)
 800d61e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d622:	f7f2 fe3b 	bl	800029c <__adddf3>
 800d626:	4632      	mov	r2, r6
 800d628:	463b      	mov	r3, r7
 800d62a:	f7f2 ffed 	bl	8000608 <__aeabi_dmul>
 800d62e:	460b      	mov	r3, r1
 800d630:	4602      	mov	r2, r0
 800d632:	4649      	mov	r1, r9
 800d634:	4640      	mov	r0, r8
 800d636:	f7f2 fe31 	bl	800029c <__adddf3>
 800d63a:	f5c5 25d7 	rsb	r5, r5, #440320	; 0x6b800
 800d63e:	9b01      	ldr	r3, [sp, #4]
 800d640:	3551      	adds	r5, #81	; 0x51
 800d642:	431d      	orrs	r5, r3
 800d644:	2d00      	cmp	r5, #0
 800d646:	4680      	mov	r8, r0
 800d648:	4689      	mov	r9, r1
 800d64a:	dd48      	ble.n	800d6de <__ieee754_log+0x2c6>
 800d64c:	4b4e      	ldr	r3, [pc, #312]	; (800d788 <__ieee754_log+0x370>)
 800d64e:	2200      	movs	r2, #0
 800d650:	4650      	mov	r0, sl
 800d652:	4659      	mov	r1, fp
 800d654:	f7f2 ffd8 	bl	8000608 <__aeabi_dmul>
 800d658:	4652      	mov	r2, sl
 800d65a:	465b      	mov	r3, fp
 800d65c:	f7f2 ffd4 	bl	8000608 <__aeabi_dmul>
 800d660:	4602      	mov	r2, r0
 800d662:	460b      	mov	r3, r1
 800d664:	4606      	mov	r6, r0
 800d666:	460f      	mov	r7, r1
 800d668:	4640      	mov	r0, r8
 800d66a:	4649      	mov	r1, r9
 800d66c:	f7f2 fe16 	bl	800029c <__adddf3>
 800d670:	ec53 2b18 	vmov	r2, r3, d8
 800d674:	f7f2 ffc8 	bl	8000608 <__aeabi_dmul>
 800d678:	4680      	mov	r8, r0
 800d67a:	4689      	mov	r9, r1
 800d67c:	b964      	cbnz	r4, 800d698 <__ieee754_log+0x280>
 800d67e:	4602      	mov	r2, r0
 800d680:	460b      	mov	r3, r1
 800d682:	4630      	mov	r0, r6
 800d684:	4639      	mov	r1, r7
 800d686:	f7f2 fe07 	bl	8000298 <__aeabi_dsub>
 800d68a:	4602      	mov	r2, r0
 800d68c:	460b      	mov	r3, r1
 800d68e:	4650      	mov	r0, sl
 800d690:	4659      	mov	r1, fp
 800d692:	f7f2 fe01 	bl	8000298 <__aeabi_dsub>
 800d696:	e6d6      	b.n	800d446 <__ieee754_log+0x2e>
 800d698:	a321      	add	r3, pc, #132	; (adr r3, 800d720 <__ieee754_log+0x308>)
 800d69a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d69e:	ec51 0b19 	vmov	r0, r1, d9
 800d6a2:	f7f2 ffb1 	bl	8000608 <__aeabi_dmul>
 800d6a6:	a320      	add	r3, pc, #128	; (adr r3, 800d728 <__ieee754_log+0x310>)
 800d6a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d6ac:	4604      	mov	r4, r0
 800d6ae:	460d      	mov	r5, r1
 800d6b0:	ec51 0b19 	vmov	r0, r1, d9
 800d6b4:	f7f2 ffa8 	bl	8000608 <__aeabi_dmul>
 800d6b8:	4642      	mov	r2, r8
 800d6ba:	464b      	mov	r3, r9
 800d6bc:	f7f2 fdee 	bl	800029c <__adddf3>
 800d6c0:	4602      	mov	r2, r0
 800d6c2:	460b      	mov	r3, r1
 800d6c4:	4630      	mov	r0, r6
 800d6c6:	4639      	mov	r1, r7
 800d6c8:	f7f2 fde6 	bl	8000298 <__aeabi_dsub>
 800d6cc:	4652      	mov	r2, sl
 800d6ce:	465b      	mov	r3, fp
 800d6d0:	f7f2 fde2 	bl	8000298 <__aeabi_dsub>
 800d6d4:	4602      	mov	r2, r0
 800d6d6:	460b      	mov	r3, r1
 800d6d8:	4620      	mov	r0, r4
 800d6da:	4629      	mov	r1, r5
 800d6dc:	e7d9      	b.n	800d692 <__ieee754_log+0x27a>
 800d6de:	4602      	mov	r2, r0
 800d6e0:	460b      	mov	r3, r1
 800d6e2:	4650      	mov	r0, sl
 800d6e4:	4659      	mov	r1, fp
 800d6e6:	f7f2 fdd7 	bl	8000298 <__aeabi_dsub>
 800d6ea:	ec53 2b18 	vmov	r2, r3, d8
 800d6ee:	f7f2 ff8b 	bl	8000608 <__aeabi_dmul>
 800d6f2:	4606      	mov	r6, r0
 800d6f4:	460f      	mov	r7, r1
 800d6f6:	2c00      	cmp	r4, #0
 800d6f8:	f43f af23 	beq.w	800d542 <__ieee754_log+0x12a>
 800d6fc:	a308      	add	r3, pc, #32	; (adr r3, 800d720 <__ieee754_log+0x308>)
 800d6fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d702:	ec51 0b19 	vmov	r0, r1, d9
 800d706:	f7f2 ff7f 	bl	8000608 <__aeabi_dmul>
 800d70a:	a307      	add	r3, pc, #28	; (adr r3, 800d728 <__ieee754_log+0x310>)
 800d70c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d710:	4604      	mov	r4, r0
 800d712:	460d      	mov	r5, r1
 800d714:	ec51 0b19 	vmov	r0, r1, d9
 800d718:	e727      	b.n	800d56a <__ieee754_log+0x152>
 800d71a:	ed9f 0b15 	vldr	d0, [pc, #84]	; 800d770 <__ieee754_log+0x358>
 800d71e:	e694      	b.n	800d44a <__ieee754_log+0x32>
 800d720:	fee00000 	.word	0xfee00000
 800d724:	3fe62e42 	.word	0x3fe62e42
 800d728:	35793c76 	.word	0x35793c76
 800d72c:	3dea39ef 	.word	0x3dea39ef
 800d730:	55555555 	.word	0x55555555
 800d734:	3fd55555 	.word	0x3fd55555
 800d738:	df3e5244 	.word	0xdf3e5244
 800d73c:	3fc2f112 	.word	0x3fc2f112
 800d740:	96cb03de 	.word	0x96cb03de
 800d744:	3fc74664 	.word	0x3fc74664
 800d748:	94229359 	.word	0x94229359
 800d74c:	3fd24924 	.word	0x3fd24924
 800d750:	55555593 	.word	0x55555593
 800d754:	3fe55555 	.word	0x3fe55555
 800d758:	d078c69f 	.word	0xd078c69f
 800d75c:	3fc39a09 	.word	0x3fc39a09
 800d760:	1d8e78af 	.word	0x1d8e78af
 800d764:	3fcc71c5 	.word	0x3fcc71c5
 800d768:	9997fa04 	.word	0x9997fa04
 800d76c:	3fd99999 	.word	0x3fd99999
	...
 800d778:	c3500000 	.word	0xc3500000
 800d77c:	43500000 	.word	0x43500000
 800d780:	7fefffff 	.word	0x7fefffff
 800d784:	3ff00000 	.word	0x3ff00000
 800d788:	3fe00000 	.word	0x3fe00000
 800d78c:	00000000 	.word	0x00000000

0800d790 <nan>:
 800d790:	ed9f 0b01 	vldr	d0, [pc, #4]	; 800d798 <nan+0x8>
 800d794:	4770      	bx	lr
 800d796:	bf00      	nop
 800d798:	00000000 	.word	0x00000000
 800d79c:	7ff80000 	.word	0x7ff80000

0800d7a0 <abort>:
 800d7a0:	b508      	push	{r3, lr}
 800d7a2:	2006      	movs	r0, #6
 800d7a4:	f001 f97c 	bl	800eaa0 <raise>
 800d7a8:	2001      	movs	r0, #1
 800d7aa:	f004 fd41 	bl	8012230 <_exit>
	...

0800d7b0 <__assert_func>:
 800d7b0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d7b2:	4614      	mov	r4, r2
 800d7b4:	461a      	mov	r2, r3
 800d7b6:	4b09      	ldr	r3, [pc, #36]	; (800d7dc <__assert_func+0x2c>)
 800d7b8:	681b      	ldr	r3, [r3, #0]
 800d7ba:	4605      	mov	r5, r0
 800d7bc:	68d8      	ldr	r0, [r3, #12]
 800d7be:	b14c      	cbz	r4, 800d7d4 <__assert_func+0x24>
 800d7c0:	4b07      	ldr	r3, [pc, #28]	; (800d7e0 <__assert_func+0x30>)
 800d7c2:	9100      	str	r1, [sp, #0]
 800d7c4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800d7c8:	4906      	ldr	r1, [pc, #24]	; (800d7e4 <__assert_func+0x34>)
 800d7ca:	462b      	mov	r3, r5
 800d7cc:	f000 f81a 	bl	800d804 <fiprintf>
 800d7d0:	f7ff ffe6 	bl	800d7a0 <abort>
 800d7d4:	4b04      	ldr	r3, [pc, #16]	; (800d7e8 <__assert_func+0x38>)
 800d7d6:	461c      	mov	r4, r3
 800d7d8:	e7f3      	b.n	800d7c2 <__assert_func+0x12>
 800d7da:	bf00      	nop
 800d7dc:	20000108 	.word	0x20000108
 800d7e0:	080148cc 	.word	0x080148cc
 800d7e4:	080148d9 	.word	0x080148d9
 800d7e8:	08014907 	.word	0x08014907

0800d7ec <atexit>:
 800d7ec:	2300      	movs	r3, #0
 800d7ee:	4601      	mov	r1, r0
 800d7f0:	461a      	mov	r2, r3
 800d7f2:	4618      	mov	r0, r3
 800d7f4:	f002 b8fc 	b.w	800f9f0 <__register_exitproc>

0800d7f8 <__errno>:
 800d7f8:	4b01      	ldr	r3, [pc, #4]	; (800d800 <__errno+0x8>)
 800d7fa:	6818      	ldr	r0, [r3, #0]
 800d7fc:	4770      	bx	lr
 800d7fe:	bf00      	nop
 800d800:	20000108 	.word	0x20000108

0800d804 <fiprintf>:
 800d804:	b40e      	push	{r1, r2, r3}
 800d806:	b503      	push	{r0, r1, lr}
 800d808:	4601      	mov	r1, r0
 800d80a:	ab03      	add	r3, sp, #12
 800d80c:	4805      	ldr	r0, [pc, #20]	; (800d824 <fiprintf+0x20>)
 800d80e:	f853 2b04 	ldr.w	r2, [r3], #4
 800d812:	6800      	ldr	r0, [r0, #0]
 800d814:	9301      	str	r3, [sp, #4]
 800d816:	f000 f95b 	bl	800dad0 <_vfiprintf_r>
 800d81a:	b002      	add	sp, #8
 800d81c:	f85d eb04 	ldr.w	lr, [sp], #4
 800d820:	b003      	add	sp, #12
 800d822:	4770      	bx	lr
 800d824:	20000108 	.word	0x20000108

0800d828 <__libc_init_array>:
 800d828:	b570      	push	{r4, r5, r6, lr}
 800d82a:	4d0d      	ldr	r5, [pc, #52]	; (800d860 <__libc_init_array+0x38>)
 800d82c:	4c0d      	ldr	r4, [pc, #52]	; (800d864 <__libc_init_array+0x3c>)
 800d82e:	1b64      	subs	r4, r4, r5
 800d830:	10a4      	asrs	r4, r4, #2
 800d832:	2600      	movs	r6, #0
 800d834:	42a6      	cmp	r6, r4
 800d836:	d109      	bne.n	800d84c <__libc_init_array+0x24>
 800d838:	4d0b      	ldr	r5, [pc, #44]	; (800d868 <__libc_init_array+0x40>)
 800d83a:	4c0c      	ldr	r4, [pc, #48]	; (800d86c <__libc_init_array+0x44>)
 800d83c:	f004 fcfa 	bl	8012234 <_init>
 800d840:	1b64      	subs	r4, r4, r5
 800d842:	10a4      	asrs	r4, r4, #2
 800d844:	2600      	movs	r6, #0
 800d846:	42a6      	cmp	r6, r4
 800d848:	d105      	bne.n	800d856 <__libc_init_array+0x2e>
 800d84a:	bd70      	pop	{r4, r5, r6, pc}
 800d84c:	f855 3b04 	ldr.w	r3, [r5], #4
 800d850:	4798      	blx	r3
 800d852:	3601      	adds	r6, #1
 800d854:	e7ee      	b.n	800d834 <__libc_init_array+0xc>
 800d856:	f855 3b04 	ldr.w	r3, [r5], #4
 800d85a:	4798      	blx	r3
 800d85c:	3601      	adds	r6, #1
 800d85e:	e7f2      	b.n	800d846 <__libc_init_array+0x1e>
 800d860:	08014f44 	.word	0x08014f44
 800d864:	08014f44 	.word	0x08014f44
 800d868:	08014f44 	.word	0x08014f44
 800d86c:	08014f54 	.word	0x08014f54

0800d870 <malloc>:
 800d870:	4b02      	ldr	r3, [pc, #8]	; (800d87c <malloc+0xc>)
 800d872:	4601      	mov	r1, r0
 800d874:	6818      	ldr	r0, [r3, #0]
 800d876:	f000 b88d 	b.w	800d994 <_malloc_r>
 800d87a:	bf00      	nop
 800d87c:	20000108 	.word	0x20000108

0800d880 <free>:
 800d880:	4b02      	ldr	r3, [pc, #8]	; (800d88c <free+0xc>)
 800d882:	4601      	mov	r1, r0
 800d884:	6818      	ldr	r0, [r3, #0]
 800d886:	f000 b819 	b.w	800d8bc <_free_r>
 800d88a:	bf00      	nop
 800d88c:	20000108 	.word	0x20000108

0800d890 <memcpy>:
 800d890:	440a      	add	r2, r1
 800d892:	4291      	cmp	r1, r2
 800d894:	f100 33ff 	add.w	r3, r0, #4294967295
 800d898:	d100      	bne.n	800d89c <memcpy+0xc>
 800d89a:	4770      	bx	lr
 800d89c:	b510      	push	{r4, lr}
 800d89e:	f811 4b01 	ldrb.w	r4, [r1], #1
 800d8a2:	f803 4f01 	strb.w	r4, [r3, #1]!
 800d8a6:	4291      	cmp	r1, r2
 800d8a8:	d1f9      	bne.n	800d89e <memcpy+0xe>
 800d8aa:	bd10      	pop	{r4, pc}

0800d8ac <memset>:
 800d8ac:	4402      	add	r2, r0
 800d8ae:	4603      	mov	r3, r0
 800d8b0:	4293      	cmp	r3, r2
 800d8b2:	d100      	bne.n	800d8b6 <memset+0xa>
 800d8b4:	4770      	bx	lr
 800d8b6:	f803 1b01 	strb.w	r1, [r3], #1
 800d8ba:	e7f9      	b.n	800d8b0 <memset+0x4>

0800d8bc <_free_r>:
 800d8bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d8be:	2900      	cmp	r1, #0
 800d8c0:	d044      	beq.n	800d94c <_free_r+0x90>
 800d8c2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800d8c6:	9001      	str	r0, [sp, #4]
 800d8c8:	2b00      	cmp	r3, #0
 800d8ca:	f1a1 0404 	sub.w	r4, r1, #4
 800d8ce:	bfb8      	it	lt
 800d8d0:	18e4      	addlt	r4, r4, r3
 800d8d2:	f003 fd2b 	bl	801132c <__malloc_lock>
 800d8d6:	4a1e      	ldr	r2, [pc, #120]	; (800d950 <_free_r+0x94>)
 800d8d8:	9801      	ldr	r0, [sp, #4]
 800d8da:	6813      	ldr	r3, [r2, #0]
 800d8dc:	b933      	cbnz	r3, 800d8ec <_free_r+0x30>
 800d8de:	6063      	str	r3, [r4, #4]
 800d8e0:	6014      	str	r4, [r2, #0]
 800d8e2:	b003      	add	sp, #12
 800d8e4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800d8e8:	f003 bd26 	b.w	8011338 <__malloc_unlock>
 800d8ec:	42a3      	cmp	r3, r4
 800d8ee:	d908      	bls.n	800d902 <_free_r+0x46>
 800d8f0:	6825      	ldr	r5, [r4, #0]
 800d8f2:	1961      	adds	r1, r4, r5
 800d8f4:	428b      	cmp	r3, r1
 800d8f6:	bf01      	itttt	eq
 800d8f8:	6819      	ldreq	r1, [r3, #0]
 800d8fa:	685b      	ldreq	r3, [r3, #4]
 800d8fc:	1949      	addeq	r1, r1, r5
 800d8fe:	6021      	streq	r1, [r4, #0]
 800d900:	e7ed      	b.n	800d8de <_free_r+0x22>
 800d902:	461a      	mov	r2, r3
 800d904:	685b      	ldr	r3, [r3, #4]
 800d906:	b10b      	cbz	r3, 800d90c <_free_r+0x50>
 800d908:	42a3      	cmp	r3, r4
 800d90a:	d9fa      	bls.n	800d902 <_free_r+0x46>
 800d90c:	6811      	ldr	r1, [r2, #0]
 800d90e:	1855      	adds	r5, r2, r1
 800d910:	42a5      	cmp	r5, r4
 800d912:	d10b      	bne.n	800d92c <_free_r+0x70>
 800d914:	6824      	ldr	r4, [r4, #0]
 800d916:	4421      	add	r1, r4
 800d918:	1854      	adds	r4, r2, r1
 800d91a:	42a3      	cmp	r3, r4
 800d91c:	6011      	str	r1, [r2, #0]
 800d91e:	d1e0      	bne.n	800d8e2 <_free_r+0x26>
 800d920:	681c      	ldr	r4, [r3, #0]
 800d922:	685b      	ldr	r3, [r3, #4]
 800d924:	6053      	str	r3, [r2, #4]
 800d926:	4421      	add	r1, r4
 800d928:	6011      	str	r1, [r2, #0]
 800d92a:	e7da      	b.n	800d8e2 <_free_r+0x26>
 800d92c:	d902      	bls.n	800d934 <_free_r+0x78>
 800d92e:	230c      	movs	r3, #12
 800d930:	6003      	str	r3, [r0, #0]
 800d932:	e7d6      	b.n	800d8e2 <_free_r+0x26>
 800d934:	6825      	ldr	r5, [r4, #0]
 800d936:	1961      	adds	r1, r4, r5
 800d938:	428b      	cmp	r3, r1
 800d93a:	bf04      	itt	eq
 800d93c:	6819      	ldreq	r1, [r3, #0]
 800d93e:	685b      	ldreq	r3, [r3, #4]
 800d940:	6063      	str	r3, [r4, #4]
 800d942:	bf04      	itt	eq
 800d944:	1949      	addeq	r1, r1, r5
 800d946:	6021      	streq	r1, [r4, #0]
 800d948:	6054      	str	r4, [r2, #4]
 800d94a:	e7ca      	b.n	800d8e2 <_free_r+0x26>
 800d94c:	b003      	add	sp, #12
 800d94e:	bd30      	pop	{r4, r5, pc}
 800d950:	2000225c 	.word	0x2000225c

0800d954 <sbrk_aligned>:
 800d954:	b570      	push	{r4, r5, r6, lr}
 800d956:	4e0e      	ldr	r6, [pc, #56]	; (800d990 <sbrk_aligned+0x3c>)
 800d958:	460c      	mov	r4, r1
 800d95a:	6831      	ldr	r1, [r6, #0]
 800d95c:	4605      	mov	r5, r0
 800d95e:	b911      	cbnz	r1, 800d966 <sbrk_aligned+0x12>
 800d960:	f001 f860 	bl	800ea24 <_sbrk_r>
 800d964:	6030      	str	r0, [r6, #0]
 800d966:	4621      	mov	r1, r4
 800d968:	4628      	mov	r0, r5
 800d96a:	f001 f85b 	bl	800ea24 <_sbrk_r>
 800d96e:	1c43      	adds	r3, r0, #1
 800d970:	d00a      	beq.n	800d988 <sbrk_aligned+0x34>
 800d972:	1cc4      	adds	r4, r0, #3
 800d974:	f024 0403 	bic.w	r4, r4, #3
 800d978:	42a0      	cmp	r0, r4
 800d97a:	d007      	beq.n	800d98c <sbrk_aligned+0x38>
 800d97c:	1a21      	subs	r1, r4, r0
 800d97e:	4628      	mov	r0, r5
 800d980:	f001 f850 	bl	800ea24 <_sbrk_r>
 800d984:	3001      	adds	r0, #1
 800d986:	d101      	bne.n	800d98c <sbrk_aligned+0x38>
 800d988:	f04f 34ff 	mov.w	r4, #4294967295
 800d98c:	4620      	mov	r0, r4
 800d98e:	bd70      	pop	{r4, r5, r6, pc}
 800d990:	20002260 	.word	0x20002260

0800d994 <_malloc_r>:
 800d994:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d998:	1ccd      	adds	r5, r1, #3
 800d99a:	f025 0503 	bic.w	r5, r5, #3
 800d99e:	3508      	adds	r5, #8
 800d9a0:	2d0c      	cmp	r5, #12
 800d9a2:	bf38      	it	cc
 800d9a4:	250c      	movcc	r5, #12
 800d9a6:	2d00      	cmp	r5, #0
 800d9a8:	4607      	mov	r7, r0
 800d9aa:	db01      	blt.n	800d9b0 <_malloc_r+0x1c>
 800d9ac:	42a9      	cmp	r1, r5
 800d9ae:	d905      	bls.n	800d9bc <_malloc_r+0x28>
 800d9b0:	230c      	movs	r3, #12
 800d9b2:	603b      	str	r3, [r7, #0]
 800d9b4:	2600      	movs	r6, #0
 800d9b6:	4630      	mov	r0, r6
 800d9b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d9bc:	4e2e      	ldr	r6, [pc, #184]	; (800da78 <_malloc_r+0xe4>)
 800d9be:	f003 fcb5 	bl	801132c <__malloc_lock>
 800d9c2:	6833      	ldr	r3, [r6, #0]
 800d9c4:	461c      	mov	r4, r3
 800d9c6:	bb34      	cbnz	r4, 800da16 <_malloc_r+0x82>
 800d9c8:	4629      	mov	r1, r5
 800d9ca:	4638      	mov	r0, r7
 800d9cc:	f7ff ffc2 	bl	800d954 <sbrk_aligned>
 800d9d0:	1c43      	adds	r3, r0, #1
 800d9d2:	4604      	mov	r4, r0
 800d9d4:	d14d      	bne.n	800da72 <_malloc_r+0xde>
 800d9d6:	6834      	ldr	r4, [r6, #0]
 800d9d8:	4626      	mov	r6, r4
 800d9da:	2e00      	cmp	r6, #0
 800d9dc:	d140      	bne.n	800da60 <_malloc_r+0xcc>
 800d9de:	6823      	ldr	r3, [r4, #0]
 800d9e0:	4631      	mov	r1, r6
 800d9e2:	4638      	mov	r0, r7
 800d9e4:	eb04 0803 	add.w	r8, r4, r3
 800d9e8:	f001 f81c 	bl	800ea24 <_sbrk_r>
 800d9ec:	4580      	cmp	r8, r0
 800d9ee:	d13a      	bne.n	800da66 <_malloc_r+0xd2>
 800d9f0:	6821      	ldr	r1, [r4, #0]
 800d9f2:	3503      	adds	r5, #3
 800d9f4:	1a6d      	subs	r5, r5, r1
 800d9f6:	f025 0503 	bic.w	r5, r5, #3
 800d9fa:	3508      	adds	r5, #8
 800d9fc:	2d0c      	cmp	r5, #12
 800d9fe:	bf38      	it	cc
 800da00:	250c      	movcc	r5, #12
 800da02:	4629      	mov	r1, r5
 800da04:	4638      	mov	r0, r7
 800da06:	f7ff ffa5 	bl	800d954 <sbrk_aligned>
 800da0a:	3001      	adds	r0, #1
 800da0c:	d02b      	beq.n	800da66 <_malloc_r+0xd2>
 800da0e:	6823      	ldr	r3, [r4, #0]
 800da10:	442b      	add	r3, r5
 800da12:	6023      	str	r3, [r4, #0]
 800da14:	e00e      	b.n	800da34 <_malloc_r+0xa0>
 800da16:	6822      	ldr	r2, [r4, #0]
 800da18:	1b52      	subs	r2, r2, r5
 800da1a:	d41e      	bmi.n	800da5a <_malloc_r+0xc6>
 800da1c:	2a0b      	cmp	r2, #11
 800da1e:	d916      	bls.n	800da4e <_malloc_r+0xba>
 800da20:	1961      	adds	r1, r4, r5
 800da22:	42a3      	cmp	r3, r4
 800da24:	6025      	str	r5, [r4, #0]
 800da26:	bf18      	it	ne
 800da28:	6059      	strne	r1, [r3, #4]
 800da2a:	6863      	ldr	r3, [r4, #4]
 800da2c:	bf08      	it	eq
 800da2e:	6031      	streq	r1, [r6, #0]
 800da30:	5162      	str	r2, [r4, r5]
 800da32:	604b      	str	r3, [r1, #4]
 800da34:	4638      	mov	r0, r7
 800da36:	f104 060b 	add.w	r6, r4, #11
 800da3a:	f003 fc7d 	bl	8011338 <__malloc_unlock>
 800da3e:	f026 0607 	bic.w	r6, r6, #7
 800da42:	1d23      	adds	r3, r4, #4
 800da44:	1af2      	subs	r2, r6, r3
 800da46:	d0b6      	beq.n	800d9b6 <_malloc_r+0x22>
 800da48:	1b9b      	subs	r3, r3, r6
 800da4a:	50a3      	str	r3, [r4, r2]
 800da4c:	e7b3      	b.n	800d9b6 <_malloc_r+0x22>
 800da4e:	6862      	ldr	r2, [r4, #4]
 800da50:	42a3      	cmp	r3, r4
 800da52:	bf0c      	ite	eq
 800da54:	6032      	streq	r2, [r6, #0]
 800da56:	605a      	strne	r2, [r3, #4]
 800da58:	e7ec      	b.n	800da34 <_malloc_r+0xa0>
 800da5a:	4623      	mov	r3, r4
 800da5c:	6864      	ldr	r4, [r4, #4]
 800da5e:	e7b2      	b.n	800d9c6 <_malloc_r+0x32>
 800da60:	4634      	mov	r4, r6
 800da62:	6876      	ldr	r6, [r6, #4]
 800da64:	e7b9      	b.n	800d9da <_malloc_r+0x46>
 800da66:	230c      	movs	r3, #12
 800da68:	603b      	str	r3, [r7, #0]
 800da6a:	4638      	mov	r0, r7
 800da6c:	f003 fc64 	bl	8011338 <__malloc_unlock>
 800da70:	e7a1      	b.n	800d9b6 <_malloc_r+0x22>
 800da72:	6025      	str	r5, [r4, #0]
 800da74:	e7de      	b.n	800da34 <_malloc_r+0xa0>
 800da76:	bf00      	nop
 800da78:	2000225c 	.word	0x2000225c

0800da7c <__sfputc_r>:
 800da7c:	6893      	ldr	r3, [r2, #8]
 800da7e:	3b01      	subs	r3, #1
 800da80:	2b00      	cmp	r3, #0
 800da82:	b410      	push	{r4}
 800da84:	6093      	str	r3, [r2, #8]
 800da86:	da08      	bge.n	800da9a <__sfputc_r+0x1e>
 800da88:	6994      	ldr	r4, [r2, #24]
 800da8a:	42a3      	cmp	r3, r4
 800da8c:	db01      	blt.n	800da92 <__sfputc_r+0x16>
 800da8e:	290a      	cmp	r1, #10
 800da90:	d103      	bne.n	800da9a <__sfputc_r+0x1e>
 800da92:	f85d 4b04 	ldr.w	r4, [sp], #4
 800da96:	f001 beeb 	b.w	800f870 <__swbuf_r>
 800da9a:	6813      	ldr	r3, [r2, #0]
 800da9c:	1c58      	adds	r0, r3, #1
 800da9e:	6010      	str	r0, [r2, #0]
 800daa0:	7019      	strb	r1, [r3, #0]
 800daa2:	4608      	mov	r0, r1
 800daa4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800daa8:	4770      	bx	lr

0800daaa <__sfputs_r>:
 800daaa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800daac:	4606      	mov	r6, r0
 800daae:	460f      	mov	r7, r1
 800dab0:	4614      	mov	r4, r2
 800dab2:	18d5      	adds	r5, r2, r3
 800dab4:	42ac      	cmp	r4, r5
 800dab6:	d101      	bne.n	800dabc <__sfputs_r+0x12>
 800dab8:	2000      	movs	r0, #0
 800daba:	e007      	b.n	800dacc <__sfputs_r+0x22>
 800dabc:	f814 1b01 	ldrb.w	r1, [r4], #1
 800dac0:	463a      	mov	r2, r7
 800dac2:	4630      	mov	r0, r6
 800dac4:	f7ff ffda 	bl	800da7c <__sfputc_r>
 800dac8:	1c43      	adds	r3, r0, #1
 800daca:	d1f3      	bne.n	800dab4 <__sfputs_r+0xa>
 800dacc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800dad0 <_vfiprintf_r>:
 800dad0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dad4:	460d      	mov	r5, r1
 800dad6:	b09d      	sub	sp, #116	; 0x74
 800dad8:	4614      	mov	r4, r2
 800dada:	4698      	mov	r8, r3
 800dadc:	4606      	mov	r6, r0
 800dade:	b118      	cbz	r0, 800dae8 <_vfiprintf_r+0x18>
 800dae0:	6983      	ldr	r3, [r0, #24]
 800dae2:	b90b      	cbnz	r3, 800dae8 <_vfiprintf_r+0x18>
 800dae4:	f002 ff7c 	bl	80109e0 <__sinit>
 800dae8:	4b89      	ldr	r3, [pc, #548]	; (800dd10 <_vfiprintf_r+0x240>)
 800daea:	429d      	cmp	r5, r3
 800daec:	d11b      	bne.n	800db26 <_vfiprintf_r+0x56>
 800daee:	6875      	ldr	r5, [r6, #4]
 800daf0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800daf2:	07d9      	lsls	r1, r3, #31
 800daf4:	d405      	bmi.n	800db02 <_vfiprintf_r+0x32>
 800daf6:	89ab      	ldrh	r3, [r5, #12]
 800daf8:	059a      	lsls	r2, r3, #22
 800dafa:	d402      	bmi.n	800db02 <_vfiprintf_r+0x32>
 800dafc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800dafe:	f003 fb80 	bl	8011202 <__retarget_lock_acquire_recursive>
 800db02:	89ab      	ldrh	r3, [r5, #12]
 800db04:	071b      	lsls	r3, r3, #28
 800db06:	d501      	bpl.n	800db0c <_vfiprintf_r+0x3c>
 800db08:	692b      	ldr	r3, [r5, #16]
 800db0a:	b9eb      	cbnz	r3, 800db48 <_vfiprintf_r+0x78>
 800db0c:	4629      	mov	r1, r5
 800db0e:	4630      	mov	r0, r6
 800db10:	f001 ff00 	bl	800f914 <__swsetup_r>
 800db14:	b1c0      	cbz	r0, 800db48 <_vfiprintf_r+0x78>
 800db16:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800db18:	07dc      	lsls	r4, r3, #31
 800db1a:	d50e      	bpl.n	800db3a <_vfiprintf_r+0x6a>
 800db1c:	f04f 30ff 	mov.w	r0, #4294967295
 800db20:	b01d      	add	sp, #116	; 0x74
 800db22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800db26:	4b7b      	ldr	r3, [pc, #492]	; (800dd14 <_vfiprintf_r+0x244>)
 800db28:	429d      	cmp	r5, r3
 800db2a:	d101      	bne.n	800db30 <_vfiprintf_r+0x60>
 800db2c:	68b5      	ldr	r5, [r6, #8]
 800db2e:	e7df      	b.n	800daf0 <_vfiprintf_r+0x20>
 800db30:	4b79      	ldr	r3, [pc, #484]	; (800dd18 <_vfiprintf_r+0x248>)
 800db32:	429d      	cmp	r5, r3
 800db34:	bf08      	it	eq
 800db36:	68f5      	ldreq	r5, [r6, #12]
 800db38:	e7da      	b.n	800daf0 <_vfiprintf_r+0x20>
 800db3a:	89ab      	ldrh	r3, [r5, #12]
 800db3c:	0598      	lsls	r0, r3, #22
 800db3e:	d4ed      	bmi.n	800db1c <_vfiprintf_r+0x4c>
 800db40:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800db42:	f003 fb60 	bl	8011206 <__retarget_lock_release_recursive>
 800db46:	e7e9      	b.n	800db1c <_vfiprintf_r+0x4c>
 800db48:	2300      	movs	r3, #0
 800db4a:	9309      	str	r3, [sp, #36]	; 0x24
 800db4c:	2320      	movs	r3, #32
 800db4e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800db52:	f8cd 800c 	str.w	r8, [sp, #12]
 800db56:	2330      	movs	r3, #48	; 0x30
 800db58:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800dd1c <_vfiprintf_r+0x24c>
 800db5c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800db60:	f04f 0901 	mov.w	r9, #1
 800db64:	4623      	mov	r3, r4
 800db66:	469a      	mov	sl, r3
 800db68:	f813 2b01 	ldrb.w	r2, [r3], #1
 800db6c:	b10a      	cbz	r2, 800db72 <_vfiprintf_r+0xa2>
 800db6e:	2a25      	cmp	r2, #37	; 0x25
 800db70:	d1f9      	bne.n	800db66 <_vfiprintf_r+0x96>
 800db72:	ebba 0b04 	subs.w	fp, sl, r4
 800db76:	d00b      	beq.n	800db90 <_vfiprintf_r+0xc0>
 800db78:	465b      	mov	r3, fp
 800db7a:	4622      	mov	r2, r4
 800db7c:	4629      	mov	r1, r5
 800db7e:	4630      	mov	r0, r6
 800db80:	f7ff ff93 	bl	800daaa <__sfputs_r>
 800db84:	3001      	adds	r0, #1
 800db86:	f000 80aa 	beq.w	800dcde <_vfiprintf_r+0x20e>
 800db8a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800db8c:	445a      	add	r2, fp
 800db8e:	9209      	str	r2, [sp, #36]	; 0x24
 800db90:	f89a 3000 	ldrb.w	r3, [sl]
 800db94:	2b00      	cmp	r3, #0
 800db96:	f000 80a2 	beq.w	800dcde <_vfiprintf_r+0x20e>
 800db9a:	2300      	movs	r3, #0
 800db9c:	f04f 32ff 	mov.w	r2, #4294967295
 800dba0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800dba4:	f10a 0a01 	add.w	sl, sl, #1
 800dba8:	9304      	str	r3, [sp, #16]
 800dbaa:	9307      	str	r3, [sp, #28]
 800dbac:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800dbb0:	931a      	str	r3, [sp, #104]	; 0x68
 800dbb2:	4654      	mov	r4, sl
 800dbb4:	2205      	movs	r2, #5
 800dbb6:	f814 1b01 	ldrb.w	r1, [r4], #1
 800dbba:	4858      	ldr	r0, [pc, #352]	; (800dd1c <_vfiprintf_r+0x24c>)
 800dbbc:	f7f2 fb18 	bl	80001f0 <memchr>
 800dbc0:	9a04      	ldr	r2, [sp, #16]
 800dbc2:	b9d8      	cbnz	r0, 800dbfc <_vfiprintf_r+0x12c>
 800dbc4:	06d1      	lsls	r1, r2, #27
 800dbc6:	bf44      	itt	mi
 800dbc8:	2320      	movmi	r3, #32
 800dbca:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800dbce:	0713      	lsls	r3, r2, #28
 800dbd0:	bf44      	itt	mi
 800dbd2:	232b      	movmi	r3, #43	; 0x2b
 800dbd4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800dbd8:	f89a 3000 	ldrb.w	r3, [sl]
 800dbdc:	2b2a      	cmp	r3, #42	; 0x2a
 800dbde:	d015      	beq.n	800dc0c <_vfiprintf_r+0x13c>
 800dbe0:	9a07      	ldr	r2, [sp, #28]
 800dbe2:	4654      	mov	r4, sl
 800dbe4:	2000      	movs	r0, #0
 800dbe6:	f04f 0c0a 	mov.w	ip, #10
 800dbea:	4621      	mov	r1, r4
 800dbec:	f811 3b01 	ldrb.w	r3, [r1], #1
 800dbf0:	3b30      	subs	r3, #48	; 0x30
 800dbf2:	2b09      	cmp	r3, #9
 800dbf4:	d94e      	bls.n	800dc94 <_vfiprintf_r+0x1c4>
 800dbf6:	b1b0      	cbz	r0, 800dc26 <_vfiprintf_r+0x156>
 800dbf8:	9207      	str	r2, [sp, #28]
 800dbfa:	e014      	b.n	800dc26 <_vfiprintf_r+0x156>
 800dbfc:	eba0 0308 	sub.w	r3, r0, r8
 800dc00:	fa09 f303 	lsl.w	r3, r9, r3
 800dc04:	4313      	orrs	r3, r2
 800dc06:	9304      	str	r3, [sp, #16]
 800dc08:	46a2      	mov	sl, r4
 800dc0a:	e7d2      	b.n	800dbb2 <_vfiprintf_r+0xe2>
 800dc0c:	9b03      	ldr	r3, [sp, #12]
 800dc0e:	1d19      	adds	r1, r3, #4
 800dc10:	681b      	ldr	r3, [r3, #0]
 800dc12:	9103      	str	r1, [sp, #12]
 800dc14:	2b00      	cmp	r3, #0
 800dc16:	bfbb      	ittet	lt
 800dc18:	425b      	neglt	r3, r3
 800dc1a:	f042 0202 	orrlt.w	r2, r2, #2
 800dc1e:	9307      	strge	r3, [sp, #28]
 800dc20:	9307      	strlt	r3, [sp, #28]
 800dc22:	bfb8      	it	lt
 800dc24:	9204      	strlt	r2, [sp, #16]
 800dc26:	7823      	ldrb	r3, [r4, #0]
 800dc28:	2b2e      	cmp	r3, #46	; 0x2e
 800dc2a:	d10c      	bne.n	800dc46 <_vfiprintf_r+0x176>
 800dc2c:	7863      	ldrb	r3, [r4, #1]
 800dc2e:	2b2a      	cmp	r3, #42	; 0x2a
 800dc30:	d135      	bne.n	800dc9e <_vfiprintf_r+0x1ce>
 800dc32:	9b03      	ldr	r3, [sp, #12]
 800dc34:	1d1a      	adds	r2, r3, #4
 800dc36:	681b      	ldr	r3, [r3, #0]
 800dc38:	9203      	str	r2, [sp, #12]
 800dc3a:	2b00      	cmp	r3, #0
 800dc3c:	bfb8      	it	lt
 800dc3e:	f04f 33ff 	movlt.w	r3, #4294967295
 800dc42:	3402      	adds	r4, #2
 800dc44:	9305      	str	r3, [sp, #20]
 800dc46:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800dd2c <_vfiprintf_r+0x25c>
 800dc4a:	7821      	ldrb	r1, [r4, #0]
 800dc4c:	2203      	movs	r2, #3
 800dc4e:	4650      	mov	r0, sl
 800dc50:	f7f2 face 	bl	80001f0 <memchr>
 800dc54:	b140      	cbz	r0, 800dc68 <_vfiprintf_r+0x198>
 800dc56:	2340      	movs	r3, #64	; 0x40
 800dc58:	eba0 000a 	sub.w	r0, r0, sl
 800dc5c:	fa03 f000 	lsl.w	r0, r3, r0
 800dc60:	9b04      	ldr	r3, [sp, #16]
 800dc62:	4303      	orrs	r3, r0
 800dc64:	3401      	adds	r4, #1
 800dc66:	9304      	str	r3, [sp, #16]
 800dc68:	f814 1b01 	ldrb.w	r1, [r4], #1
 800dc6c:	482c      	ldr	r0, [pc, #176]	; (800dd20 <_vfiprintf_r+0x250>)
 800dc6e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800dc72:	2206      	movs	r2, #6
 800dc74:	f7f2 fabc 	bl	80001f0 <memchr>
 800dc78:	2800      	cmp	r0, #0
 800dc7a:	d03f      	beq.n	800dcfc <_vfiprintf_r+0x22c>
 800dc7c:	4b29      	ldr	r3, [pc, #164]	; (800dd24 <_vfiprintf_r+0x254>)
 800dc7e:	bb1b      	cbnz	r3, 800dcc8 <_vfiprintf_r+0x1f8>
 800dc80:	9b03      	ldr	r3, [sp, #12]
 800dc82:	3307      	adds	r3, #7
 800dc84:	f023 0307 	bic.w	r3, r3, #7
 800dc88:	3308      	adds	r3, #8
 800dc8a:	9303      	str	r3, [sp, #12]
 800dc8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dc8e:	443b      	add	r3, r7
 800dc90:	9309      	str	r3, [sp, #36]	; 0x24
 800dc92:	e767      	b.n	800db64 <_vfiprintf_r+0x94>
 800dc94:	fb0c 3202 	mla	r2, ip, r2, r3
 800dc98:	460c      	mov	r4, r1
 800dc9a:	2001      	movs	r0, #1
 800dc9c:	e7a5      	b.n	800dbea <_vfiprintf_r+0x11a>
 800dc9e:	2300      	movs	r3, #0
 800dca0:	3401      	adds	r4, #1
 800dca2:	9305      	str	r3, [sp, #20]
 800dca4:	4619      	mov	r1, r3
 800dca6:	f04f 0c0a 	mov.w	ip, #10
 800dcaa:	4620      	mov	r0, r4
 800dcac:	f810 2b01 	ldrb.w	r2, [r0], #1
 800dcb0:	3a30      	subs	r2, #48	; 0x30
 800dcb2:	2a09      	cmp	r2, #9
 800dcb4:	d903      	bls.n	800dcbe <_vfiprintf_r+0x1ee>
 800dcb6:	2b00      	cmp	r3, #0
 800dcb8:	d0c5      	beq.n	800dc46 <_vfiprintf_r+0x176>
 800dcba:	9105      	str	r1, [sp, #20]
 800dcbc:	e7c3      	b.n	800dc46 <_vfiprintf_r+0x176>
 800dcbe:	fb0c 2101 	mla	r1, ip, r1, r2
 800dcc2:	4604      	mov	r4, r0
 800dcc4:	2301      	movs	r3, #1
 800dcc6:	e7f0      	b.n	800dcaa <_vfiprintf_r+0x1da>
 800dcc8:	ab03      	add	r3, sp, #12
 800dcca:	9300      	str	r3, [sp, #0]
 800dccc:	462a      	mov	r2, r5
 800dcce:	4b16      	ldr	r3, [pc, #88]	; (800dd28 <_vfiprintf_r+0x258>)
 800dcd0:	a904      	add	r1, sp, #16
 800dcd2:	4630      	mov	r0, r6
 800dcd4:	f000 f8cc 	bl	800de70 <_printf_float>
 800dcd8:	4607      	mov	r7, r0
 800dcda:	1c78      	adds	r0, r7, #1
 800dcdc:	d1d6      	bne.n	800dc8c <_vfiprintf_r+0x1bc>
 800dcde:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800dce0:	07d9      	lsls	r1, r3, #31
 800dce2:	d405      	bmi.n	800dcf0 <_vfiprintf_r+0x220>
 800dce4:	89ab      	ldrh	r3, [r5, #12]
 800dce6:	059a      	lsls	r2, r3, #22
 800dce8:	d402      	bmi.n	800dcf0 <_vfiprintf_r+0x220>
 800dcea:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800dcec:	f003 fa8b 	bl	8011206 <__retarget_lock_release_recursive>
 800dcf0:	89ab      	ldrh	r3, [r5, #12]
 800dcf2:	065b      	lsls	r3, r3, #25
 800dcf4:	f53f af12 	bmi.w	800db1c <_vfiprintf_r+0x4c>
 800dcf8:	9809      	ldr	r0, [sp, #36]	; 0x24
 800dcfa:	e711      	b.n	800db20 <_vfiprintf_r+0x50>
 800dcfc:	ab03      	add	r3, sp, #12
 800dcfe:	9300      	str	r3, [sp, #0]
 800dd00:	462a      	mov	r2, r5
 800dd02:	4b09      	ldr	r3, [pc, #36]	; (800dd28 <_vfiprintf_r+0x258>)
 800dd04:	a904      	add	r1, sp, #16
 800dd06:	4630      	mov	r0, r6
 800dd08:	f000 fb56 	bl	800e3b8 <_printf_i>
 800dd0c:	e7e4      	b.n	800dcd8 <_vfiprintf_r+0x208>
 800dd0e:	bf00      	nop
 800dd10:	08014b64 	.word	0x08014b64
 800dd14:	08014b84 	.word	0x08014b84
 800dd18:	08014b44 	.word	0x08014b44
 800dd1c:	0801490c 	.word	0x0801490c
 800dd20:	08014916 	.word	0x08014916
 800dd24:	0800de71 	.word	0x0800de71
 800dd28:	0800daab 	.word	0x0800daab
 800dd2c:	08014912 	.word	0x08014912

0800dd30 <__cvt>:
 800dd30:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800dd34:	ec55 4b10 	vmov	r4, r5, d0
 800dd38:	2d00      	cmp	r5, #0
 800dd3a:	460e      	mov	r6, r1
 800dd3c:	4619      	mov	r1, r3
 800dd3e:	462b      	mov	r3, r5
 800dd40:	bfbb      	ittet	lt
 800dd42:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 800dd46:	461d      	movlt	r5, r3
 800dd48:	2300      	movge	r3, #0
 800dd4a:	232d      	movlt	r3, #45	; 0x2d
 800dd4c:	700b      	strb	r3, [r1, #0]
 800dd4e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800dd50:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800dd54:	4691      	mov	r9, r2
 800dd56:	f023 0820 	bic.w	r8, r3, #32
 800dd5a:	bfbc      	itt	lt
 800dd5c:	4622      	movlt	r2, r4
 800dd5e:	4614      	movlt	r4, r2
 800dd60:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800dd64:	d005      	beq.n	800dd72 <__cvt+0x42>
 800dd66:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 800dd6a:	d100      	bne.n	800dd6e <__cvt+0x3e>
 800dd6c:	3601      	adds	r6, #1
 800dd6e:	2102      	movs	r1, #2
 800dd70:	e000      	b.n	800dd74 <__cvt+0x44>
 800dd72:	2103      	movs	r1, #3
 800dd74:	ab03      	add	r3, sp, #12
 800dd76:	9301      	str	r3, [sp, #4]
 800dd78:	ab02      	add	r3, sp, #8
 800dd7a:	9300      	str	r3, [sp, #0]
 800dd7c:	ec45 4b10 	vmov	d0, r4, r5
 800dd80:	4653      	mov	r3, sl
 800dd82:	4632      	mov	r2, r6
 800dd84:	f001 ff24 	bl	800fbd0 <_dtoa_r>
 800dd88:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800dd8c:	4607      	mov	r7, r0
 800dd8e:	d102      	bne.n	800dd96 <__cvt+0x66>
 800dd90:	f019 0f01 	tst.w	r9, #1
 800dd94:	d022      	beq.n	800dddc <__cvt+0xac>
 800dd96:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800dd9a:	eb07 0906 	add.w	r9, r7, r6
 800dd9e:	d110      	bne.n	800ddc2 <__cvt+0x92>
 800dda0:	783b      	ldrb	r3, [r7, #0]
 800dda2:	2b30      	cmp	r3, #48	; 0x30
 800dda4:	d10a      	bne.n	800ddbc <__cvt+0x8c>
 800dda6:	2200      	movs	r2, #0
 800dda8:	2300      	movs	r3, #0
 800ddaa:	4620      	mov	r0, r4
 800ddac:	4629      	mov	r1, r5
 800ddae:	f7f2 fe93 	bl	8000ad8 <__aeabi_dcmpeq>
 800ddb2:	b918      	cbnz	r0, 800ddbc <__cvt+0x8c>
 800ddb4:	f1c6 0601 	rsb	r6, r6, #1
 800ddb8:	f8ca 6000 	str.w	r6, [sl]
 800ddbc:	f8da 3000 	ldr.w	r3, [sl]
 800ddc0:	4499      	add	r9, r3
 800ddc2:	2200      	movs	r2, #0
 800ddc4:	2300      	movs	r3, #0
 800ddc6:	4620      	mov	r0, r4
 800ddc8:	4629      	mov	r1, r5
 800ddca:	f7f2 fe85 	bl	8000ad8 <__aeabi_dcmpeq>
 800ddce:	b108      	cbz	r0, 800ddd4 <__cvt+0xa4>
 800ddd0:	f8cd 900c 	str.w	r9, [sp, #12]
 800ddd4:	2230      	movs	r2, #48	; 0x30
 800ddd6:	9b03      	ldr	r3, [sp, #12]
 800ddd8:	454b      	cmp	r3, r9
 800ddda:	d307      	bcc.n	800ddec <__cvt+0xbc>
 800dddc:	9b03      	ldr	r3, [sp, #12]
 800ddde:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800dde0:	1bdb      	subs	r3, r3, r7
 800dde2:	4638      	mov	r0, r7
 800dde4:	6013      	str	r3, [r2, #0]
 800dde6:	b004      	add	sp, #16
 800dde8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ddec:	1c59      	adds	r1, r3, #1
 800ddee:	9103      	str	r1, [sp, #12]
 800ddf0:	701a      	strb	r2, [r3, #0]
 800ddf2:	e7f0      	b.n	800ddd6 <__cvt+0xa6>

0800ddf4 <__exponent>:
 800ddf4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ddf6:	4603      	mov	r3, r0
 800ddf8:	2900      	cmp	r1, #0
 800ddfa:	bfb8      	it	lt
 800ddfc:	4249      	neglt	r1, r1
 800ddfe:	f803 2b02 	strb.w	r2, [r3], #2
 800de02:	bfb4      	ite	lt
 800de04:	222d      	movlt	r2, #45	; 0x2d
 800de06:	222b      	movge	r2, #43	; 0x2b
 800de08:	2909      	cmp	r1, #9
 800de0a:	7042      	strb	r2, [r0, #1]
 800de0c:	dd2a      	ble.n	800de64 <__exponent+0x70>
 800de0e:	f10d 0407 	add.w	r4, sp, #7
 800de12:	46a4      	mov	ip, r4
 800de14:	270a      	movs	r7, #10
 800de16:	46a6      	mov	lr, r4
 800de18:	460a      	mov	r2, r1
 800de1a:	fb91 f6f7 	sdiv	r6, r1, r7
 800de1e:	fb07 1516 	mls	r5, r7, r6, r1
 800de22:	3530      	adds	r5, #48	; 0x30
 800de24:	2a63      	cmp	r2, #99	; 0x63
 800de26:	f104 34ff 	add.w	r4, r4, #4294967295
 800de2a:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800de2e:	4631      	mov	r1, r6
 800de30:	dcf1      	bgt.n	800de16 <__exponent+0x22>
 800de32:	3130      	adds	r1, #48	; 0x30
 800de34:	f1ae 0502 	sub.w	r5, lr, #2
 800de38:	f804 1c01 	strb.w	r1, [r4, #-1]
 800de3c:	1c44      	adds	r4, r0, #1
 800de3e:	4629      	mov	r1, r5
 800de40:	4561      	cmp	r1, ip
 800de42:	d30a      	bcc.n	800de5a <__exponent+0x66>
 800de44:	f10d 0209 	add.w	r2, sp, #9
 800de48:	eba2 020e 	sub.w	r2, r2, lr
 800de4c:	4565      	cmp	r5, ip
 800de4e:	bf88      	it	hi
 800de50:	2200      	movhi	r2, #0
 800de52:	4413      	add	r3, r2
 800de54:	1a18      	subs	r0, r3, r0
 800de56:	b003      	add	sp, #12
 800de58:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800de5a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800de5e:	f804 2f01 	strb.w	r2, [r4, #1]!
 800de62:	e7ed      	b.n	800de40 <__exponent+0x4c>
 800de64:	2330      	movs	r3, #48	; 0x30
 800de66:	3130      	adds	r1, #48	; 0x30
 800de68:	7083      	strb	r3, [r0, #2]
 800de6a:	70c1      	strb	r1, [r0, #3]
 800de6c:	1d03      	adds	r3, r0, #4
 800de6e:	e7f1      	b.n	800de54 <__exponent+0x60>

0800de70 <_printf_float>:
 800de70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de74:	ed2d 8b02 	vpush	{d8}
 800de78:	b08d      	sub	sp, #52	; 0x34
 800de7a:	460c      	mov	r4, r1
 800de7c:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 800de80:	4616      	mov	r6, r2
 800de82:	461f      	mov	r7, r3
 800de84:	4605      	mov	r5, r0
 800de86:	f003 f9b7 	bl	80111f8 <_localeconv_r>
 800de8a:	f8d0 a000 	ldr.w	sl, [r0]
 800de8e:	4650      	mov	r0, sl
 800de90:	f7f2 f9a6 	bl	80001e0 <strlen>
 800de94:	2300      	movs	r3, #0
 800de96:	930a      	str	r3, [sp, #40]	; 0x28
 800de98:	6823      	ldr	r3, [r4, #0]
 800de9a:	9305      	str	r3, [sp, #20]
 800de9c:	f8d8 3000 	ldr.w	r3, [r8]
 800dea0:	f894 b018 	ldrb.w	fp, [r4, #24]
 800dea4:	3307      	adds	r3, #7
 800dea6:	f023 0307 	bic.w	r3, r3, #7
 800deaa:	f103 0208 	add.w	r2, r3, #8
 800deae:	f8c8 2000 	str.w	r2, [r8]
 800deb2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800deb6:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 800deba:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 800debe:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800dec2:	9307      	str	r3, [sp, #28]
 800dec4:	f8cd 8018 	str.w	r8, [sp, #24]
 800dec8:	ee08 0a10 	vmov	s16, r0
 800decc:	4b9f      	ldr	r3, [pc, #636]	; (800e14c <_printf_float+0x2dc>)
 800dece:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800ded2:	f04f 32ff 	mov.w	r2, #4294967295
 800ded6:	f7f2 fe31 	bl	8000b3c <__aeabi_dcmpun>
 800deda:	bb88      	cbnz	r0, 800df40 <_printf_float+0xd0>
 800dedc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800dee0:	4b9a      	ldr	r3, [pc, #616]	; (800e14c <_printf_float+0x2dc>)
 800dee2:	f04f 32ff 	mov.w	r2, #4294967295
 800dee6:	f7f2 fe0b 	bl	8000b00 <__aeabi_dcmple>
 800deea:	bb48      	cbnz	r0, 800df40 <_printf_float+0xd0>
 800deec:	2200      	movs	r2, #0
 800deee:	2300      	movs	r3, #0
 800def0:	4640      	mov	r0, r8
 800def2:	4649      	mov	r1, r9
 800def4:	f7f2 fdfa 	bl	8000aec <__aeabi_dcmplt>
 800def8:	b110      	cbz	r0, 800df00 <_printf_float+0x90>
 800defa:	232d      	movs	r3, #45	; 0x2d
 800defc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800df00:	4b93      	ldr	r3, [pc, #588]	; (800e150 <_printf_float+0x2e0>)
 800df02:	4894      	ldr	r0, [pc, #592]	; (800e154 <_printf_float+0x2e4>)
 800df04:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 800df08:	bf94      	ite	ls
 800df0a:	4698      	movls	r8, r3
 800df0c:	4680      	movhi	r8, r0
 800df0e:	2303      	movs	r3, #3
 800df10:	6123      	str	r3, [r4, #16]
 800df12:	9b05      	ldr	r3, [sp, #20]
 800df14:	f023 0204 	bic.w	r2, r3, #4
 800df18:	6022      	str	r2, [r4, #0]
 800df1a:	f04f 0900 	mov.w	r9, #0
 800df1e:	9700      	str	r7, [sp, #0]
 800df20:	4633      	mov	r3, r6
 800df22:	aa0b      	add	r2, sp, #44	; 0x2c
 800df24:	4621      	mov	r1, r4
 800df26:	4628      	mov	r0, r5
 800df28:	f000 f9d8 	bl	800e2dc <_printf_common>
 800df2c:	3001      	adds	r0, #1
 800df2e:	f040 8090 	bne.w	800e052 <_printf_float+0x1e2>
 800df32:	f04f 30ff 	mov.w	r0, #4294967295
 800df36:	b00d      	add	sp, #52	; 0x34
 800df38:	ecbd 8b02 	vpop	{d8}
 800df3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800df40:	4642      	mov	r2, r8
 800df42:	464b      	mov	r3, r9
 800df44:	4640      	mov	r0, r8
 800df46:	4649      	mov	r1, r9
 800df48:	f7f2 fdf8 	bl	8000b3c <__aeabi_dcmpun>
 800df4c:	b140      	cbz	r0, 800df60 <_printf_float+0xf0>
 800df4e:	464b      	mov	r3, r9
 800df50:	2b00      	cmp	r3, #0
 800df52:	bfbc      	itt	lt
 800df54:	232d      	movlt	r3, #45	; 0x2d
 800df56:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800df5a:	487f      	ldr	r0, [pc, #508]	; (800e158 <_printf_float+0x2e8>)
 800df5c:	4b7f      	ldr	r3, [pc, #508]	; (800e15c <_printf_float+0x2ec>)
 800df5e:	e7d1      	b.n	800df04 <_printf_float+0x94>
 800df60:	6863      	ldr	r3, [r4, #4]
 800df62:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 800df66:	9206      	str	r2, [sp, #24]
 800df68:	1c5a      	adds	r2, r3, #1
 800df6a:	d13f      	bne.n	800dfec <_printf_float+0x17c>
 800df6c:	2306      	movs	r3, #6
 800df6e:	6063      	str	r3, [r4, #4]
 800df70:	9b05      	ldr	r3, [sp, #20]
 800df72:	6861      	ldr	r1, [r4, #4]
 800df74:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 800df78:	2300      	movs	r3, #0
 800df7a:	9303      	str	r3, [sp, #12]
 800df7c:	ab0a      	add	r3, sp, #40	; 0x28
 800df7e:	e9cd b301 	strd	fp, r3, [sp, #4]
 800df82:	ab09      	add	r3, sp, #36	; 0x24
 800df84:	ec49 8b10 	vmov	d0, r8, r9
 800df88:	9300      	str	r3, [sp, #0]
 800df8a:	6022      	str	r2, [r4, #0]
 800df8c:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 800df90:	4628      	mov	r0, r5
 800df92:	f7ff fecd 	bl	800dd30 <__cvt>
 800df96:	9b06      	ldr	r3, [sp, #24]
 800df98:	9909      	ldr	r1, [sp, #36]	; 0x24
 800df9a:	2b47      	cmp	r3, #71	; 0x47
 800df9c:	4680      	mov	r8, r0
 800df9e:	d108      	bne.n	800dfb2 <_printf_float+0x142>
 800dfa0:	1cc8      	adds	r0, r1, #3
 800dfa2:	db02      	blt.n	800dfaa <_printf_float+0x13a>
 800dfa4:	6863      	ldr	r3, [r4, #4]
 800dfa6:	4299      	cmp	r1, r3
 800dfa8:	dd41      	ble.n	800e02e <_printf_float+0x1be>
 800dfaa:	f1ab 0b02 	sub.w	fp, fp, #2
 800dfae:	fa5f fb8b 	uxtb.w	fp, fp
 800dfb2:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800dfb6:	d820      	bhi.n	800dffa <_printf_float+0x18a>
 800dfb8:	3901      	subs	r1, #1
 800dfba:	465a      	mov	r2, fp
 800dfbc:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800dfc0:	9109      	str	r1, [sp, #36]	; 0x24
 800dfc2:	f7ff ff17 	bl	800ddf4 <__exponent>
 800dfc6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800dfc8:	1813      	adds	r3, r2, r0
 800dfca:	2a01      	cmp	r2, #1
 800dfcc:	4681      	mov	r9, r0
 800dfce:	6123      	str	r3, [r4, #16]
 800dfd0:	dc02      	bgt.n	800dfd8 <_printf_float+0x168>
 800dfd2:	6822      	ldr	r2, [r4, #0]
 800dfd4:	07d2      	lsls	r2, r2, #31
 800dfd6:	d501      	bpl.n	800dfdc <_printf_float+0x16c>
 800dfd8:	3301      	adds	r3, #1
 800dfda:	6123      	str	r3, [r4, #16]
 800dfdc:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 800dfe0:	2b00      	cmp	r3, #0
 800dfe2:	d09c      	beq.n	800df1e <_printf_float+0xae>
 800dfe4:	232d      	movs	r3, #45	; 0x2d
 800dfe6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800dfea:	e798      	b.n	800df1e <_printf_float+0xae>
 800dfec:	9a06      	ldr	r2, [sp, #24]
 800dfee:	2a47      	cmp	r2, #71	; 0x47
 800dff0:	d1be      	bne.n	800df70 <_printf_float+0x100>
 800dff2:	2b00      	cmp	r3, #0
 800dff4:	d1bc      	bne.n	800df70 <_printf_float+0x100>
 800dff6:	2301      	movs	r3, #1
 800dff8:	e7b9      	b.n	800df6e <_printf_float+0xfe>
 800dffa:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 800dffe:	d118      	bne.n	800e032 <_printf_float+0x1c2>
 800e000:	2900      	cmp	r1, #0
 800e002:	6863      	ldr	r3, [r4, #4]
 800e004:	dd0b      	ble.n	800e01e <_printf_float+0x1ae>
 800e006:	6121      	str	r1, [r4, #16]
 800e008:	b913      	cbnz	r3, 800e010 <_printf_float+0x1a0>
 800e00a:	6822      	ldr	r2, [r4, #0]
 800e00c:	07d0      	lsls	r0, r2, #31
 800e00e:	d502      	bpl.n	800e016 <_printf_float+0x1a6>
 800e010:	3301      	adds	r3, #1
 800e012:	440b      	add	r3, r1
 800e014:	6123      	str	r3, [r4, #16]
 800e016:	65a1      	str	r1, [r4, #88]	; 0x58
 800e018:	f04f 0900 	mov.w	r9, #0
 800e01c:	e7de      	b.n	800dfdc <_printf_float+0x16c>
 800e01e:	b913      	cbnz	r3, 800e026 <_printf_float+0x1b6>
 800e020:	6822      	ldr	r2, [r4, #0]
 800e022:	07d2      	lsls	r2, r2, #31
 800e024:	d501      	bpl.n	800e02a <_printf_float+0x1ba>
 800e026:	3302      	adds	r3, #2
 800e028:	e7f4      	b.n	800e014 <_printf_float+0x1a4>
 800e02a:	2301      	movs	r3, #1
 800e02c:	e7f2      	b.n	800e014 <_printf_float+0x1a4>
 800e02e:	f04f 0b67 	mov.w	fp, #103	; 0x67
 800e032:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e034:	4299      	cmp	r1, r3
 800e036:	db05      	blt.n	800e044 <_printf_float+0x1d4>
 800e038:	6823      	ldr	r3, [r4, #0]
 800e03a:	6121      	str	r1, [r4, #16]
 800e03c:	07d8      	lsls	r0, r3, #31
 800e03e:	d5ea      	bpl.n	800e016 <_printf_float+0x1a6>
 800e040:	1c4b      	adds	r3, r1, #1
 800e042:	e7e7      	b.n	800e014 <_printf_float+0x1a4>
 800e044:	2900      	cmp	r1, #0
 800e046:	bfd4      	ite	le
 800e048:	f1c1 0202 	rsble	r2, r1, #2
 800e04c:	2201      	movgt	r2, #1
 800e04e:	4413      	add	r3, r2
 800e050:	e7e0      	b.n	800e014 <_printf_float+0x1a4>
 800e052:	6823      	ldr	r3, [r4, #0]
 800e054:	055a      	lsls	r2, r3, #21
 800e056:	d407      	bmi.n	800e068 <_printf_float+0x1f8>
 800e058:	6923      	ldr	r3, [r4, #16]
 800e05a:	4642      	mov	r2, r8
 800e05c:	4631      	mov	r1, r6
 800e05e:	4628      	mov	r0, r5
 800e060:	47b8      	blx	r7
 800e062:	3001      	adds	r0, #1
 800e064:	d12c      	bne.n	800e0c0 <_printf_float+0x250>
 800e066:	e764      	b.n	800df32 <_printf_float+0xc2>
 800e068:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800e06c:	f240 80e0 	bls.w	800e230 <_printf_float+0x3c0>
 800e070:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800e074:	2200      	movs	r2, #0
 800e076:	2300      	movs	r3, #0
 800e078:	f7f2 fd2e 	bl	8000ad8 <__aeabi_dcmpeq>
 800e07c:	2800      	cmp	r0, #0
 800e07e:	d034      	beq.n	800e0ea <_printf_float+0x27a>
 800e080:	4a37      	ldr	r2, [pc, #220]	; (800e160 <_printf_float+0x2f0>)
 800e082:	2301      	movs	r3, #1
 800e084:	4631      	mov	r1, r6
 800e086:	4628      	mov	r0, r5
 800e088:	47b8      	blx	r7
 800e08a:	3001      	adds	r0, #1
 800e08c:	f43f af51 	beq.w	800df32 <_printf_float+0xc2>
 800e090:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800e094:	429a      	cmp	r2, r3
 800e096:	db02      	blt.n	800e09e <_printf_float+0x22e>
 800e098:	6823      	ldr	r3, [r4, #0]
 800e09a:	07d8      	lsls	r0, r3, #31
 800e09c:	d510      	bpl.n	800e0c0 <_printf_float+0x250>
 800e09e:	ee18 3a10 	vmov	r3, s16
 800e0a2:	4652      	mov	r2, sl
 800e0a4:	4631      	mov	r1, r6
 800e0a6:	4628      	mov	r0, r5
 800e0a8:	47b8      	blx	r7
 800e0aa:	3001      	adds	r0, #1
 800e0ac:	f43f af41 	beq.w	800df32 <_printf_float+0xc2>
 800e0b0:	f04f 0800 	mov.w	r8, #0
 800e0b4:	f104 091a 	add.w	r9, r4, #26
 800e0b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e0ba:	3b01      	subs	r3, #1
 800e0bc:	4543      	cmp	r3, r8
 800e0be:	dc09      	bgt.n	800e0d4 <_printf_float+0x264>
 800e0c0:	6823      	ldr	r3, [r4, #0]
 800e0c2:	079b      	lsls	r3, r3, #30
 800e0c4:	f100 8105 	bmi.w	800e2d2 <_printf_float+0x462>
 800e0c8:	68e0      	ldr	r0, [r4, #12]
 800e0ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e0cc:	4298      	cmp	r0, r3
 800e0ce:	bfb8      	it	lt
 800e0d0:	4618      	movlt	r0, r3
 800e0d2:	e730      	b.n	800df36 <_printf_float+0xc6>
 800e0d4:	2301      	movs	r3, #1
 800e0d6:	464a      	mov	r2, r9
 800e0d8:	4631      	mov	r1, r6
 800e0da:	4628      	mov	r0, r5
 800e0dc:	47b8      	blx	r7
 800e0de:	3001      	adds	r0, #1
 800e0e0:	f43f af27 	beq.w	800df32 <_printf_float+0xc2>
 800e0e4:	f108 0801 	add.w	r8, r8, #1
 800e0e8:	e7e6      	b.n	800e0b8 <_printf_float+0x248>
 800e0ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e0ec:	2b00      	cmp	r3, #0
 800e0ee:	dc39      	bgt.n	800e164 <_printf_float+0x2f4>
 800e0f0:	4a1b      	ldr	r2, [pc, #108]	; (800e160 <_printf_float+0x2f0>)
 800e0f2:	2301      	movs	r3, #1
 800e0f4:	4631      	mov	r1, r6
 800e0f6:	4628      	mov	r0, r5
 800e0f8:	47b8      	blx	r7
 800e0fa:	3001      	adds	r0, #1
 800e0fc:	f43f af19 	beq.w	800df32 <_printf_float+0xc2>
 800e100:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800e104:	4313      	orrs	r3, r2
 800e106:	d102      	bne.n	800e10e <_printf_float+0x29e>
 800e108:	6823      	ldr	r3, [r4, #0]
 800e10a:	07d9      	lsls	r1, r3, #31
 800e10c:	d5d8      	bpl.n	800e0c0 <_printf_float+0x250>
 800e10e:	ee18 3a10 	vmov	r3, s16
 800e112:	4652      	mov	r2, sl
 800e114:	4631      	mov	r1, r6
 800e116:	4628      	mov	r0, r5
 800e118:	47b8      	blx	r7
 800e11a:	3001      	adds	r0, #1
 800e11c:	f43f af09 	beq.w	800df32 <_printf_float+0xc2>
 800e120:	f04f 0900 	mov.w	r9, #0
 800e124:	f104 0a1a 	add.w	sl, r4, #26
 800e128:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e12a:	425b      	negs	r3, r3
 800e12c:	454b      	cmp	r3, r9
 800e12e:	dc01      	bgt.n	800e134 <_printf_float+0x2c4>
 800e130:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e132:	e792      	b.n	800e05a <_printf_float+0x1ea>
 800e134:	2301      	movs	r3, #1
 800e136:	4652      	mov	r2, sl
 800e138:	4631      	mov	r1, r6
 800e13a:	4628      	mov	r0, r5
 800e13c:	47b8      	blx	r7
 800e13e:	3001      	adds	r0, #1
 800e140:	f43f aef7 	beq.w	800df32 <_printf_float+0xc2>
 800e144:	f109 0901 	add.w	r9, r9, #1
 800e148:	e7ee      	b.n	800e128 <_printf_float+0x2b8>
 800e14a:	bf00      	nop
 800e14c:	7fefffff 	.word	0x7fefffff
 800e150:	0801491d 	.word	0x0801491d
 800e154:	08014921 	.word	0x08014921
 800e158:	08014929 	.word	0x08014929
 800e15c:	08014925 	.word	0x08014925
 800e160:	0801492d 	.word	0x0801492d
 800e164:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800e166:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800e168:	429a      	cmp	r2, r3
 800e16a:	bfa8      	it	ge
 800e16c:	461a      	movge	r2, r3
 800e16e:	2a00      	cmp	r2, #0
 800e170:	4691      	mov	r9, r2
 800e172:	dc37      	bgt.n	800e1e4 <_printf_float+0x374>
 800e174:	f04f 0b00 	mov.w	fp, #0
 800e178:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800e17c:	f104 021a 	add.w	r2, r4, #26
 800e180:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800e182:	9305      	str	r3, [sp, #20]
 800e184:	eba3 0309 	sub.w	r3, r3, r9
 800e188:	455b      	cmp	r3, fp
 800e18a:	dc33      	bgt.n	800e1f4 <_printf_float+0x384>
 800e18c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800e190:	429a      	cmp	r2, r3
 800e192:	db3b      	blt.n	800e20c <_printf_float+0x39c>
 800e194:	6823      	ldr	r3, [r4, #0]
 800e196:	07da      	lsls	r2, r3, #31
 800e198:	d438      	bmi.n	800e20c <_printf_float+0x39c>
 800e19a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e19c:	9a05      	ldr	r2, [sp, #20]
 800e19e:	9909      	ldr	r1, [sp, #36]	; 0x24
 800e1a0:	1a9a      	subs	r2, r3, r2
 800e1a2:	eba3 0901 	sub.w	r9, r3, r1
 800e1a6:	4591      	cmp	r9, r2
 800e1a8:	bfa8      	it	ge
 800e1aa:	4691      	movge	r9, r2
 800e1ac:	f1b9 0f00 	cmp.w	r9, #0
 800e1b0:	dc35      	bgt.n	800e21e <_printf_float+0x3ae>
 800e1b2:	f04f 0800 	mov.w	r8, #0
 800e1b6:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800e1ba:	f104 0a1a 	add.w	sl, r4, #26
 800e1be:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800e1c2:	1a9b      	subs	r3, r3, r2
 800e1c4:	eba3 0309 	sub.w	r3, r3, r9
 800e1c8:	4543      	cmp	r3, r8
 800e1ca:	f77f af79 	ble.w	800e0c0 <_printf_float+0x250>
 800e1ce:	2301      	movs	r3, #1
 800e1d0:	4652      	mov	r2, sl
 800e1d2:	4631      	mov	r1, r6
 800e1d4:	4628      	mov	r0, r5
 800e1d6:	47b8      	blx	r7
 800e1d8:	3001      	adds	r0, #1
 800e1da:	f43f aeaa 	beq.w	800df32 <_printf_float+0xc2>
 800e1de:	f108 0801 	add.w	r8, r8, #1
 800e1e2:	e7ec      	b.n	800e1be <_printf_float+0x34e>
 800e1e4:	4613      	mov	r3, r2
 800e1e6:	4631      	mov	r1, r6
 800e1e8:	4642      	mov	r2, r8
 800e1ea:	4628      	mov	r0, r5
 800e1ec:	47b8      	blx	r7
 800e1ee:	3001      	adds	r0, #1
 800e1f0:	d1c0      	bne.n	800e174 <_printf_float+0x304>
 800e1f2:	e69e      	b.n	800df32 <_printf_float+0xc2>
 800e1f4:	2301      	movs	r3, #1
 800e1f6:	4631      	mov	r1, r6
 800e1f8:	4628      	mov	r0, r5
 800e1fa:	9205      	str	r2, [sp, #20]
 800e1fc:	47b8      	blx	r7
 800e1fe:	3001      	adds	r0, #1
 800e200:	f43f ae97 	beq.w	800df32 <_printf_float+0xc2>
 800e204:	9a05      	ldr	r2, [sp, #20]
 800e206:	f10b 0b01 	add.w	fp, fp, #1
 800e20a:	e7b9      	b.n	800e180 <_printf_float+0x310>
 800e20c:	ee18 3a10 	vmov	r3, s16
 800e210:	4652      	mov	r2, sl
 800e212:	4631      	mov	r1, r6
 800e214:	4628      	mov	r0, r5
 800e216:	47b8      	blx	r7
 800e218:	3001      	adds	r0, #1
 800e21a:	d1be      	bne.n	800e19a <_printf_float+0x32a>
 800e21c:	e689      	b.n	800df32 <_printf_float+0xc2>
 800e21e:	9a05      	ldr	r2, [sp, #20]
 800e220:	464b      	mov	r3, r9
 800e222:	4442      	add	r2, r8
 800e224:	4631      	mov	r1, r6
 800e226:	4628      	mov	r0, r5
 800e228:	47b8      	blx	r7
 800e22a:	3001      	adds	r0, #1
 800e22c:	d1c1      	bne.n	800e1b2 <_printf_float+0x342>
 800e22e:	e680      	b.n	800df32 <_printf_float+0xc2>
 800e230:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800e232:	2a01      	cmp	r2, #1
 800e234:	dc01      	bgt.n	800e23a <_printf_float+0x3ca>
 800e236:	07db      	lsls	r3, r3, #31
 800e238:	d538      	bpl.n	800e2ac <_printf_float+0x43c>
 800e23a:	2301      	movs	r3, #1
 800e23c:	4642      	mov	r2, r8
 800e23e:	4631      	mov	r1, r6
 800e240:	4628      	mov	r0, r5
 800e242:	47b8      	blx	r7
 800e244:	3001      	adds	r0, #1
 800e246:	f43f ae74 	beq.w	800df32 <_printf_float+0xc2>
 800e24a:	ee18 3a10 	vmov	r3, s16
 800e24e:	4652      	mov	r2, sl
 800e250:	4631      	mov	r1, r6
 800e252:	4628      	mov	r0, r5
 800e254:	47b8      	blx	r7
 800e256:	3001      	adds	r0, #1
 800e258:	f43f ae6b 	beq.w	800df32 <_printf_float+0xc2>
 800e25c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800e260:	2200      	movs	r2, #0
 800e262:	2300      	movs	r3, #0
 800e264:	f7f2 fc38 	bl	8000ad8 <__aeabi_dcmpeq>
 800e268:	b9d8      	cbnz	r0, 800e2a2 <_printf_float+0x432>
 800e26a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e26c:	f108 0201 	add.w	r2, r8, #1
 800e270:	3b01      	subs	r3, #1
 800e272:	4631      	mov	r1, r6
 800e274:	4628      	mov	r0, r5
 800e276:	47b8      	blx	r7
 800e278:	3001      	adds	r0, #1
 800e27a:	d10e      	bne.n	800e29a <_printf_float+0x42a>
 800e27c:	e659      	b.n	800df32 <_printf_float+0xc2>
 800e27e:	2301      	movs	r3, #1
 800e280:	4652      	mov	r2, sl
 800e282:	4631      	mov	r1, r6
 800e284:	4628      	mov	r0, r5
 800e286:	47b8      	blx	r7
 800e288:	3001      	adds	r0, #1
 800e28a:	f43f ae52 	beq.w	800df32 <_printf_float+0xc2>
 800e28e:	f108 0801 	add.w	r8, r8, #1
 800e292:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e294:	3b01      	subs	r3, #1
 800e296:	4543      	cmp	r3, r8
 800e298:	dcf1      	bgt.n	800e27e <_printf_float+0x40e>
 800e29a:	464b      	mov	r3, r9
 800e29c:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800e2a0:	e6dc      	b.n	800e05c <_printf_float+0x1ec>
 800e2a2:	f04f 0800 	mov.w	r8, #0
 800e2a6:	f104 0a1a 	add.w	sl, r4, #26
 800e2aa:	e7f2      	b.n	800e292 <_printf_float+0x422>
 800e2ac:	2301      	movs	r3, #1
 800e2ae:	4642      	mov	r2, r8
 800e2b0:	e7df      	b.n	800e272 <_printf_float+0x402>
 800e2b2:	2301      	movs	r3, #1
 800e2b4:	464a      	mov	r2, r9
 800e2b6:	4631      	mov	r1, r6
 800e2b8:	4628      	mov	r0, r5
 800e2ba:	47b8      	blx	r7
 800e2bc:	3001      	adds	r0, #1
 800e2be:	f43f ae38 	beq.w	800df32 <_printf_float+0xc2>
 800e2c2:	f108 0801 	add.w	r8, r8, #1
 800e2c6:	68e3      	ldr	r3, [r4, #12]
 800e2c8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800e2ca:	1a5b      	subs	r3, r3, r1
 800e2cc:	4543      	cmp	r3, r8
 800e2ce:	dcf0      	bgt.n	800e2b2 <_printf_float+0x442>
 800e2d0:	e6fa      	b.n	800e0c8 <_printf_float+0x258>
 800e2d2:	f04f 0800 	mov.w	r8, #0
 800e2d6:	f104 0919 	add.w	r9, r4, #25
 800e2da:	e7f4      	b.n	800e2c6 <_printf_float+0x456>

0800e2dc <_printf_common>:
 800e2dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e2e0:	4616      	mov	r6, r2
 800e2e2:	4699      	mov	r9, r3
 800e2e4:	688a      	ldr	r2, [r1, #8]
 800e2e6:	690b      	ldr	r3, [r1, #16]
 800e2e8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800e2ec:	4293      	cmp	r3, r2
 800e2ee:	bfb8      	it	lt
 800e2f0:	4613      	movlt	r3, r2
 800e2f2:	6033      	str	r3, [r6, #0]
 800e2f4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800e2f8:	4607      	mov	r7, r0
 800e2fa:	460c      	mov	r4, r1
 800e2fc:	b10a      	cbz	r2, 800e302 <_printf_common+0x26>
 800e2fe:	3301      	adds	r3, #1
 800e300:	6033      	str	r3, [r6, #0]
 800e302:	6823      	ldr	r3, [r4, #0]
 800e304:	0699      	lsls	r1, r3, #26
 800e306:	bf42      	ittt	mi
 800e308:	6833      	ldrmi	r3, [r6, #0]
 800e30a:	3302      	addmi	r3, #2
 800e30c:	6033      	strmi	r3, [r6, #0]
 800e30e:	6825      	ldr	r5, [r4, #0]
 800e310:	f015 0506 	ands.w	r5, r5, #6
 800e314:	d106      	bne.n	800e324 <_printf_common+0x48>
 800e316:	f104 0a19 	add.w	sl, r4, #25
 800e31a:	68e3      	ldr	r3, [r4, #12]
 800e31c:	6832      	ldr	r2, [r6, #0]
 800e31e:	1a9b      	subs	r3, r3, r2
 800e320:	42ab      	cmp	r3, r5
 800e322:	dc26      	bgt.n	800e372 <_printf_common+0x96>
 800e324:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800e328:	1e13      	subs	r3, r2, #0
 800e32a:	6822      	ldr	r2, [r4, #0]
 800e32c:	bf18      	it	ne
 800e32e:	2301      	movne	r3, #1
 800e330:	0692      	lsls	r2, r2, #26
 800e332:	d42b      	bmi.n	800e38c <_printf_common+0xb0>
 800e334:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800e338:	4649      	mov	r1, r9
 800e33a:	4638      	mov	r0, r7
 800e33c:	47c0      	blx	r8
 800e33e:	3001      	adds	r0, #1
 800e340:	d01e      	beq.n	800e380 <_printf_common+0xa4>
 800e342:	6823      	ldr	r3, [r4, #0]
 800e344:	68e5      	ldr	r5, [r4, #12]
 800e346:	6832      	ldr	r2, [r6, #0]
 800e348:	f003 0306 	and.w	r3, r3, #6
 800e34c:	2b04      	cmp	r3, #4
 800e34e:	bf08      	it	eq
 800e350:	1aad      	subeq	r5, r5, r2
 800e352:	68a3      	ldr	r3, [r4, #8]
 800e354:	6922      	ldr	r2, [r4, #16]
 800e356:	bf0c      	ite	eq
 800e358:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800e35c:	2500      	movne	r5, #0
 800e35e:	4293      	cmp	r3, r2
 800e360:	bfc4      	itt	gt
 800e362:	1a9b      	subgt	r3, r3, r2
 800e364:	18ed      	addgt	r5, r5, r3
 800e366:	2600      	movs	r6, #0
 800e368:	341a      	adds	r4, #26
 800e36a:	42b5      	cmp	r5, r6
 800e36c:	d11a      	bne.n	800e3a4 <_printf_common+0xc8>
 800e36e:	2000      	movs	r0, #0
 800e370:	e008      	b.n	800e384 <_printf_common+0xa8>
 800e372:	2301      	movs	r3, #1
 800e374:	4652      	mov	r2, sl
 800e376:	4649      	mov	r1, r9
 800e378:	4638      	mov	r0, r7
 800e37a:	47c0      	blx	r8
 800e37c:	3001      	adds	r0, #1
 800e37e:	d103      	bne.n	800e388 <_printf_common+0xac>
 800e380:	f04f 30ff 	mov.w	r0, #4294967295
 800e384:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e388:	3501      	adds	r5, #1
 800e38a:	e7c6      	b.n	800e31a <_printf_common+0x3e>
 800e38c:	18e1      	adds	r1, r4, r3
 800e38e:	1c5a      	adds	r2, r3, #1
 800e390:	2030      	movs	r0, #48	; 0x30
 800e392:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800e396:	4422      	add	r2, r4
 800e398:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800e39c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800e3a0:	3302      	adds	r3, #2
 800e3a2:	e7c7      	b.n	800e334 <_printf_common+0x58>
 800e3a4:	2301      	movs	r3, #1
 800e3a6:	4622      	mov	r2, r4
 800e3a8:	4649      	mov	r1, r9
 800e3aa:	4638      	mov	r0, r7
 800e3ac:	47c0      	blx	r8
 800e3ae:	3001      	adds	r0, #1
 800e3b0:	d0e6      	beq.n	800e380 <_printf_common+0xa4>
 800e3b2:	3601      	adds	r6, #1
 800e3b4:	e7d9      	b.n	800e36a <_printf_common+0x8e>
	...

0800e3b8 <_printf_i>:
 800e3b8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800e3bc:	7e0f      	ldrb	r7, [r1, #24]
 800e3be:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800e3c0:	2f78      	cmp	r7, #120	; 0x78
 800e3c2:	4691      	mov	r9, r2
 800e3c4:	4680      	mov	r8, r0
 800e3c6:	460c      	mov	r4, r1
 800e3c8:	469a      	mov	sl, r3
 800e3ca:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800e3ce:	d807      	bhi.n	800e3e0 <_printf_i+0x28>
 800e3d0:	2f62      	cmp	r7, #98	; 0x62
 800e3d2:	d80a      	bhi.n	800e3ea <_printf_i+0x32>
 800e3d4:	2f00      	cmp	r7, #0
 800e3d6:	f000 80d8 	beq.w	800e58a <_printf_i+0x1d2>
 800e3da:	2f58      	cmp	r7, #88	; 0x58
 800e3dc:	f000 80a3 	beq.w	800e526 <_printf_i+0x16e>
 800e3e0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800e3e4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800e3e8:	e03a      	b.n	800e460 <_printf_i+0xa8>
 800e3ea:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800e3ee:	2b15      	cmp	r3, #21
 800e3f0:	d8f6      	bhi.n	800e3e0 <_printf_i+0x28>
 800e3f2:	a101      	add	r1, pc, #4	; (adr r1, 800e3f8 <_printf_i+0x40>)
 800e3f4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800e3f8:	0800e451 	.word	0x0800e451
 800e3fc:	0800e465 	.word	0x0800e465
 800e400:	0800e3e1 	.word	0x0800e3e1
 800e404:	0800e3e1 	.word	0x0800e3e1
 800e408:	0800e3e1 	.word	0x0800e3e1
 800e40c:	0800e3e1 	.word	0x0800e3e1
 800e410:	0800e465 	.word	0x0800e465
 800e414:	0800e3e1 	.word	0x0800e3e1
 800e418:	0800e3e1 	.word	0x0800e3e1
 800e41c:	0800e3e1 	.word	0x0800e3e1
 800e420:	0800e3e1 	.word	0x0800e3e1
 800e424:	0800e571 	.word	0x0800e571
 800e428:	0800e495 	.word	0x0800e495
 800e42c:	0800e553 	.word	0x0800e553
 800e430:	0800e3e1 	.word	0x0800e3e1
 800e434:	0800e3e1 	.word	0x0800e3e1
 800e438:	0800e593 	.word	0x0800e593
 800e43c:	0800e3e1 	.word	0x0800e3e1
 800e440:	0800e495 	.word	0x0800e495
 800e444:	0800e3e1 	.word	0x0800e3e1
 800e448:	0800e3e1 	.word	0x0800e3e1
 800e44c:	0800e55b 	.word	0x0800e55b
 800e450:	682b      	ldr	r3, [r5, #0]
 800e452:	1d1a      	adds	r2, r3, #4
 800e454:	681b      	ldr	r3, [r3, #0]
 800e456:	602a      	str	r2, [r5, #0]
 800e458:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800e45c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800e460:	2301      	movs	r3, #1
 800e462:	e0a3      	b.n	800e5ac <_printf_i+0x1f4>
 800e464:	6820      	ldr	r0, [r4, #0]
 800e466:	6829      	ldr	r1, [r5, #0]
 800e468:	0606      	lsls	r6, r0, #24
 800e46a:	f101 0304 	add.w	r3, r1, #4
 800e46e:	d50a      	bpl.n	800e486 <_printf_i+0xce>
 800e470:	680e      	ldr	r6, [r1, #0]
 800e472:	602b      	str	r3, [r5, #0]
 800e474:	2e00      	cmp	r6, #0
 800e476:	da03      	bge.n	800e480 <_printf_i+0xc8>
 800e478:	232d      	movs	r3, #45	; 0x2d
 800e47a:	4276      	negs	r6, r6
 800e47c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800e480:	485e      	ldr	r0, [pc, #376]	; (800e5fc <_printf_i+0x244>)
 800e482:	230a      	movs	r3, #10
 800e484:	e019      	b.n	800e4ba <_printf_i+0x102>
 800e486:	680e      	ldr	r6, [r1, #0]
 800e488:	602b      	str	r3, [r5, #0]
 800e48a:	f010 0f40 	tst.w	r0, #64	; 0x40
 800e48e:	bf18      	it	ne
 800e490:	b236      	sxthne	r6, r6
 800e492:	e7ef      	b.n	800e474 <_printf_i+0xbc>
 800e494:	682b      	ldr	r3, [r5, #0]
 800e496:	6820      	ldr	r0, [r4, #0]
 800e498:	1d19      	adds	r1, r3, #4
 800e49a:	6029      	str	r1, [r5, #0]
 800e49c:	0601      	lsls	r1, r0, #24
 800e49e:	d501      	bpl.n	800e4a4 <_printf_i+0xec>
 800e4a0:	681e      	ldr	r6, [r3, #0]
 800e4a2:	e002      	b.n	800e4aa <_printf_i+0xf2>
 800e4a4:	0646      	lsls	r6, r0, #25
 800e4a6:	d5fb      	bpl.n	800e4a0 <_printf_i+0xe8>
 800e4a8:	881e      	ldrh	r6, [r3, #0]
 800e4aa:	4854      	ldr	r0, [pc, #336]	; (800e5fc <_printf_i+0x244>)
 800e4ac:	2f6f      	cmp	r7, #111	; 0x6f
 800e4ae:	bf0c      	ite	eq
 800e4b0:	2308      	moveq	r3, #8
 800e4b2:	230a      	movne	r3, #10
 800e4b4:	2100      	movs	r1, #0
 800e4b6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800e4ba:	6865      	ldr	r5, [r4, #4]
 800e4bc:	60a5      	str	r5, [r4, #8]
 800e4be:	2d00      	cmp	r5, #0
 800e4c0:	bfa2      	ittt	ge
 800e4c2:	6821      	ldrge	r1, [r4, #0]
 800e4c4:	f021 0104 	bicge.w	r1, r1, #4
 800e4c8:	6021      	strge	r1, [r4, #0]
 800e4ca:	b90e      	cbnz	r6, 800e4d0 <_printf_i+0x118>
 800e4cc:	2d00      	cmp	r5, #0
 800e4ce:	d04d      	beq.n	800e56c <_printf_i+0x1b4>
 800e4d0:	4615      	mov	r5, r2
 800e4d2:	fbb6 f1f3 	udiv	r1, r6, r3
 800e4d6:	fb03 6711 	mls	r7, r3, r1, r6
 800e4da:	5dc7      	ldrb	r7, [r0, r7]
 800e4dc:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800e4e0:	4637      	mov	r7, r6
 800e4e2:	42bb      	cmp	r3, r7
 800e4e4:	460e      	mov	r6, r1
 800e4e6:	d9f4      	bls.n	800e4d2 <_printf_i+0x11a>
 800e4e8:	2b08      	cmp	r3, #8
 800e4ea:	d10b      	bne.n	800e504 <_printf_i+0x14c>
 800e4ec:	6823      	ldr	r3, [r4, #0]
 800e4ee:	07de      	lsls	r6, r3, #31
 800e4f0:	d508      	bpl.n	800e504 <_printf_i+0x14c>
 800e4f2:	6923      	ldr	r3, [r4, #16]
 800e4f4:	6861      	ldr	r1, [r4, #4]
 800e4f6:	4299      	cmp	r1, r3
 800e4f8:	bfde      	ittt	le
 800e4fa:	2330      	movle	r3, #48	; 0x30
 800e4fc:	f805 3c01 	strble.w	r3, [r5, #-1]
 800e500:	f105 35ff 	addle.w	r5, r5, #4294967295
 800e504:	1b52      	subs	r2, r2, r5
 800e506:	6122      	str	r2, [r4, #16]
 800e508:	f8cd a000 	str.w	sl, [sp]
 800e50c:	464b      	mov	r3, r9
 800e50e:	aa03      	add	r2, sp, #12
 800e510:	4621      	mov	r1, r4
 800e512:	4640      	mov	r0, r8
 800e514:	f7ff fee2 	bl	800e2dc <_printf_common>
 800e518:	3001      	adds	r0, #1
 800e51a:	d14c      	bne.n	800e5b6 <_printf_i+0x1fe>
 800e51c:	f04f 30ff 	mov.w	r0, #4294967295
 800e520:	b004      	add	sp, #16
 800e522:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e526:	4835      	ldr	r0, [pc, #212]	; (800e5fc <_printf_i+0x244>)
 800e528:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800e52c:	6829      	ldr	r1, [r5, #0]
 800e52e:	6823      	ldr	r3, [r4, #0]
 800e530:	f851 6b04 	ldr.w	r6, [r1], #4
 800e534:	6029      	str	r1, [r5, #0]
 800e536:	061d      	lsls	r5, r3, #24
 800e538:	d514      	bpl.n	800e564 <_printf_i+0x1ac>
 800e53a:	07df      	lsls	r7, r3, #31
 800e53c:	bf44      	itt	mi
 800e53e:	f043 0320 	orrmi.w	r3, r3, #32
 800e542:	6023      	strmi	r3, [r4, #0]
 800e544:	b91e      	cbnz	r6, 800e54e <_printf_i+0x196>
 800e546:	6823      	ldr	r3, [r4, #0]
 800e548:	f023 0320 	bic.w	r3, r3, #32
 800e54c:	6023      	str	r3, [r4, #0]
 800e54e:	2310      	movs	r3, #16
 800e550:	e7b0      	b.n	800e4b4 <_printf_i+0xfc>
 800e552:	6823      	ldr	r3, [r4, #0]
 800e554:	f043 0320 	orr.w	r3, r3, #32
 800e558:	6023      	str	r3, [r4, #0]
 800e55a:	2378      	movs	r3, #120	; 0x78
 800e55c:	4828      	ldr	r0, [pc, #160]	; (800e600 <_printf_i+0x248>)
 800e55e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800e562:	e7e3      	b.n	800e52c <_printf_i+0x174>
 800e564:	0659      	lsls	r1, r3, #25
 800e566:	bf48      	it	mi
 800e568:	b2b6      	uxthmi	r6, r6
 800e56a:	e7e6      	b.n	800e53a <_printf_i+0x182>
 800e56c:	4615      	mov	r5, r2
 800e56e:	e7bb      	b.n	800e4e8 <_printf_i+0x130>
 800e570:	682b      	ldr	r3, [r5, #0]
 800e572:	6826      	ldr	r6, [r4, #0]
 800e574:	6961      	ldr	r1, [r4, #20]
 800e576:	1d18      	adds	r0, r3, #4
 800e578:	6028      	str	r0, [r5, #0]
 800e57a:	0635      	lsls	r5, r6, #24
 800e57c:	681b      	ldr	r3, [r3, #0]
 800e57e:	d501      	bpl.n	800e584 <_printf_i+0x1cc>
 800e580:	6019      	str	r1, [r3, #0]
 800e582:	e002      	b.n	800e58a <_printf_i+0x1d2>
 800e584:	0670      	lsls	r0, r6, #25
 800e586:	d5fb      	bpl.n	800e580 <_printf_i+0x1c8>
 800e588:	8019      	strh	r1, [r3, #0]
 800e58a:	2300      	movs	r3, #0
 800e58c:	6123      	str	r3, [r4, #16]
 800e58e:	4615      	mov	r5, r2
 800e590:	e7ba      	b.n	800e508 <_printf_i+0x150>
 800e592:	682b      	ldr	r3, [r5, #0]
 800e594:	1d1a      	adds	r2, r3, #4
 800e596:	602a      	str	r2, [r5, #0]
 800e598:	681d      	ldr	r5, [r3, #0]
 800e59a:	6862      	ldr	r2, [r4, #4]
 800e59c:	2100      	movs	r1, #0
 800e59e:	4628      	mov	r0, r5
 800e5a0:	f7f1 fe26 	bl	80001f0 <memchr>
 800e5a4:	b108      	cbz	r0, 800e5aa <_printf_i+0x1f2>
 800e5a6:	1b40      	subs	r0, r0, r5
 800e5a8:	6060      	str	r0, [r4, #4]
 800e5aa:	6863      	ldr	r3, [r4, #4]
 800e5ac:	6123      	str	r3, [r4, #16]
 800e5ae:	2300      	movs	r3, #0
 800e5b0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800e5b4:	e7a8      	b.n	800e508 <_printf_i+0x150>
 800e5b6:	6923      	ldr	r3, [r4, #16]
 800e5b8:	462a      	mov	r2, r5
 800e5ba:	4649      	mov	r1, r9
 800e5bc:	4640      	mov	r0, r8
 800e5be:	47d0      	blx	sl
 800e5c0:	3001      	adds	r0, #1
 800e5c2:	d0ab      	beq.n	800e51c <_printf_i+0x164>
 800e5c4:	6823      	ldr	r3, [r4, #0]
 800e5c6:	079b      	lsls	r3, r3, #30
 800e5c8:	d413      	bmi.n	800e5f2 <_printf_i+0x23a>
 800e5ca:	68e0      	ldr	r0, [r4, #12]
 800e5cc:	9b03      	ldr	r3, [sp, #12]
 800e5ce:	4298      	cmp	r0, r3
 800e5d0:	bfb8      	it	lt
 800e5d2:	4618      	movlt	r0, r3
 800e5d4:	e7a4      	b.n	800e520 <_printf_i+0x168>
 800e5d6:	2301      	movs	r3, #1
 800e5d8:	4632      	mov	r2, r6
 800e5da:	4649      	mov	r1, r9
 800e5dc:	4640      	mov	r0, r8
 800e5de:	47d0      	blx	sl
 800e5e0:	3001      	adds	r0, #1
 800e5e2:	d09b      	beq.n	800e51c <_printf_i+0x164>
 800e5e4:	3501      	adds	r5, #1
 800e5e6:	68e3      	ldr	r3, [r4, #12]
 800e5e8:	9903      	ldr	r1, [sp, #12]
 800e5ea:	1a5b      	subs	r3, r3, r1
 800e5ec:	42ab      	cmp	r3, r5
 800e5ee:	dcf2      	bgt.n	800e5d6 <_printf_i+0x21e>
 800e5f0:	e7eb      	b.n	800e5ca <_printf_i+0x212>
 800e5f2:	2500      	movs	r5, #0
 800e5f4:	f104 0619 	add.w	r6, r4, #25
 800e5f8:	e7f5      	b.n	800e5e6 <_printf_i+0x22e>
 800e5fa:	bf00      	nop
 800e5fc:	0801492f 	.word	0x0801492f
 800e600:	08014940 	.word	0x08014940

0800e604 <_scanf_float>:
 800e604:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e608:	b087      	sub	sp, #28
 800e60a:	4617      	mov	r7, r2
 800e60c:	9303      	str	r3, [sp, #12]
 800e60e:	688b      	ldr	r3, [r1, #8]
 800e610:	1e5a      	subs	r2, r3, #1
 800e612:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 800e616:	bf83      	ittte	hi
 800e618:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 800e61c:	195b      	addhi	r3, r3, r5
 800e61e:	9302      	strhi	r3, [sp, #8]
 800e620:	2300      	movls	r3, #0
 800e622:	bf86      	itte	hi
 800e624:	f240 135d 	movwhi	r3, #349	; 0x15d
 800e628:	608b      	strhi	r3, [r1, #8]
 800e62a:	9302      	strls	r3, [sp, #8]
 800e62c:	680b      	ldr	r3, [r1, #0]
 800e62e:	468b      	mov	fp, r1
 800e630:	2500      	movs	r5, #0
 800e632:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 800e636:	f84b 3b1c 	str.w	r3, [fp], #28
 800e63a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800e63e:	4680      	mov	r8, r0
 800e640:	460c      	mov	r4, r1
 800e642:	465e      	mov	r6, fp
 800e644:	46aa      	mov	sl, r5
 800e646:	46a9      	mov	r9, r5
 800e648:	9501      	str	r5, [sp, #4]
 800e64a:	68a2      	ldr	r2, [r4, #8]
 800e64c:	b152      	cbz	r2, 800e664 <_scanf_float+0x60>
 800e64e:	683b      	ldr	r3, [r7, #0]
 800e650:	781b      	ldrb	r3, [r3, #0]
 800e652:	2b4e      	cmp	r3, #78	; 0x4e
 800e654:	d864      	bhi.n	800e720 <_scanf_float+0x11c>
 800e656:	2b40      	cmp	r3, #64	; 0x40
 800e658:	d83c      	bhi.n	800e6d4 <_scanf_float+0xd0>
 800e65a:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 800e65e:	b2c8      	uxtb	r0, r1
 800e660:	280e      	cmp	r0, #14
 800e662:	d93a      	bls.n	800e6da <_scanf_float+0xd6>
 800e664:	f1b9 0f00 	cmp.w	r9, #0
 800e668:	d003      	beq.n	800e672 <_scanf_float+0x6e>
 800e66a:	6823      	ldr	r3, [r4, #0]
 800e66c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800e670:	6023      	str	r3, [r4, #0]
 800e672:	f10a 3aff 	add.w	sl, sl, #4294967295
 800e676:	f1ba 0f01 	cmp.w	sl, #1
 800e67a:	f200 8113 	bhi.w	800e8a4 <_scanf_float+0x2a0>
 800e67e:	455e      	cmp	r6, fp
 800e680:	f200 8105 	bhi.w	800e88e <_scanf_float+0x28a>
 800e684:	2501      	movs	r5, #1
 800e686:	4628      	mov	r0, r5
 800e688:	b007      	add	sp, #28
 800e68a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e68e:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 800e692:	2a0d      	cmp	r2, #13
 800e694:	d8e6      	bhi.n	800e664 <_scanf_float+0x60>
 800e696:	a101      	add	r1, pc, #4	; (adr r1, 800e69c <_scanf_float+0x98>)
 800e698:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800e69c:	0800e7db 	.word	0x0800e7db
 800e6a0:	0800e665 	.word	0x0800e665
 800e6a4:	0800e665 	.word	0x0800e665
 800e6a8:	0800e665 	.word	0x0800e665
 800e6ac:	0800e83b 	.word	0x0800e83b
 800e6b0:	0800e813 	.word	0x0800e813
 800e6b4:	0800e665 	.word	0x0800e665
 800e6b8:	0800e665 	.word	0x0800e665
 800e6bc:	0800e7e9 	.word	0x0800e7e9
 800e6c0:	0800e665 	.word	0x0800e665
 800e6c4:	0800e665 	.word	0x0800e665
 800e6c8:	0800e665 	.word	0x0800e665
 800e6cc:	0800e665 	.word	0x0800e665
 800e6d0:	0800e7a1 	.word	0x0800e7a1
 800e6d4:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800e6d8:	e7db      	b.n	800e692 <_scanf_float+0x8e>
 800e6da:	290e      	cmp	r1, #14
 800e6dc:	d8c2      	bhi.n	800e664 <_scanf_float+0x60>
 800e6de:	a001      	add	r0, pc, #4	; (adr r0, 800e6e4 <_scanf_float+0xe0>)
 800e6e0:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 800e6e4:	0800e793 	.word	0x0800e793
 800e6e8:	0800e665 	.word	0x0800e665
 800e6ec:	0800e793 	.word	0x0800e793
 800e6f0:	0800e827 	.word	0x0800e827
 800e6f4:	0800e665 	.word	0x0800e665
 800e6f8:	0800e741 	.word	0x0800e741
 800e6fc:	0800e77d 	.word	0x0800e77d
 800e700:	0800e77d 	.word	0x0800e77d
 800e704:	0800e77d 	.word	0x0800e77d
 800e708:	0800e77d 	.word	0x0800e77d
 800e70c:	0800e77d 	.word	0x0800e77d
 800e710:	0800e77d 	.word	0x0800e77d
 800e714:	0800e77d 	.word	0x0800e77d
 800e718:	0800e77d 	.word	0x0800e77d
 800e71c:	0800e77d 	.word	0x0800e77d
 800e720:	2b6e      	cmp	r3, #110	; 0x6e
 800e722:	d809      	bhi.n	800e738 <_scanf_float+0x134>
 800e724:	2b60      	cmp	r3, #96	; 0x60
 800e726:	d8b2      	bhi.n	800e68e <_scanf_float+0x8a>
 800e728:	2b54      	cmp	r3, #84	; 0x54
 800e72a:	d077      	beq.n	800e81c <_scanf_float+0x218>
 800e72c:	2b59      	cmp	r3, #89	; 0x59
 800e72e:	d199      	bne.n	800e664 <_scanf_float+0x60>
 800e730:	2d07      	cmp	r5, #7
 800e732:	d197      	bne.n	800e664 <_scanf_float+0x60>
 800e734:	2508      	movs	r5, #8
 800e736:	e029      	b.n	800e78c <_scanf_float+0x188>
 800e738:	2b74      	cmp	r3, #116	; 0x74
 800e73a:	d06f      	beq.n	800e81c <_scanf_float+0x218>
 800e73c:	2b79      	cmp	r3, #121	; 0x79
 800e73e:	e7f6      	b.n	800e72e <_scanf_float+0x12a>
 800e740:	6821      	ldr	r1, [r4, #0]
 800e742:	05c8      	lsls	r0, r1, #23
 800e744:	d51a      	bpl.n	800e77c <_scanf_float+0x178>
 800e746:	9b02      	ldr	r3, [sp, #8]
 800e748:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 800e74c:	6021      	str	r1, [r4, #0]
 800e74e:	f109 0901 	add.w	r9, r9, #1
 800e752:	b11b      	cbz	r3, 800e75c <_scanf_float+0x158>
 800e754:	3b01      	subs	r3, #1
 800e756:	3201      	adds	r2, #1
 800e758:	9302      	str	r3, [sp, #8]
 800e75a:	60a2      	str	r2, [r4, #8]
 800e75c:	68a3      	ldr	r3, [r4, #8]
 800e75e:	3b01      	subs	r3, #1
 800e760:	60a3      	str	r3, [r4, #8]
 800e762:	6923      	ldr	r3, [r4, #16]
 800e764:	3301      	adds	r3, #1
 800e766:	6123      	str	r3, [r4, #16]
 800e768:	687b      	ldr	r3, [r7, #4]
 800e76a:	3b01      	subs	r3, #1
 800e76c:	2b00      	cmp	r3, #0
 800e76e:	607b      	str	r3, [r7, #4]
 800e770:	f340 8084 	ble.w	800e87c <_scanf_float+0x278>
 800e774:	683b      	ldr	r3, [r7, #0]
 800e776:	3301      	adds	r3, #1
 800e778:	603b      	str	r3, [r7, #0]
 800e77a:	e766      	b.n	800e64a <_scanf_float+0x46>
 800e77c:	eb1a 0f05 	cmn.w	sl, r5
 800e780:	f47f af70 	bne.w	800e664 <_scanf_float+0x60>
 800e784:	6822      	ldr	r2, [r4, #0]
 800e786:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 800e78a:	6022      	str	r2, [r4, #0]
 800e78c:	f806 3b01 	strb.w	r3, [r6], #1
 800e790:	e7e4      	b.n	800e75c <_scanf_float+0x158>
 800e792:	6822      	ldr	r2, [r4, #0]
 800e794:	0610      	lsls	r0, r2, #24
 800e796:	f57f af65 	bpl.w	800e664 <_scanf_float+0x60>
 800e79a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800e79e:	e7f4      	b.n	800e78a <_scanf_float+0x186>
 800e7a0:	f1ba 0f00 	cmp.w	sl, #0
 800e7a4:	d10e      	bne.n	800e7c4 <_scanf_float+0x1c0>
 800e7a6:	f1b9 0f00 	cmp.w	r9, #0
 800e7aa:	d10e      	bne.n	800e7ca <_scanf_float+0x1c6>
 800e7ac:	6822      	ldr	r2, [r4, #0]
 800e7ae:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 800e7b2:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 800e7b6:	d108      	bne.n	800e7ca <_scanf_float+0x1c6>
 800e7b8:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 800e7bc:	6022      	str	r2, [r4, #0]
 800e7be:	f04f 0a01 	mov.w	sl, #1
 800e7c2:	e7e3      	b.n	800e78c <_scanf_float+0x188>
 800e7c4:	f1ba 0f02 	cmp.w	sl, #2
 800e7c8:	d055      	beq.n	800e876 <_scanf_float+0x272>
 800e7ca:	2d01      	cmp	r5, #1
 800e7cc:	d002      	beq.n	800e7d4 <_scanf_float+0x1d0>
 800e7ce:	2d04      	cmp	r5, #4
 800e7d0:	f47f af48 	bne.w	800e664 <_scanf_float+0x60>
 800e7d4:	3501      	adds	r5, #1
 800e7d6:	b2ed      	uxtb	r5, r5
 800e7d8:	e7d8      	b.n	800e78c <_scanf_float+0x188>
 800e7da:	f1ba 0f01 	cmp.w	sl, #1
 800e7de:	f47f af41 	bne.w	800e664 <_scanf_float+0x60>
 800e7e2:	f04f 0a02 	mov.w	sl, #2
 800e7e6:	e7d1      	b.n	800e78c <_scanf_float+0x188>
 800e7e8:	b97d      	cbnz	r5, 800e80a <_scanf_float+0x206>
 800e7ea:	f1b9 0f00 	cmp.w	r9, #0
 800e7ee:	f47f af3c 	bne.w	800e66a <_scanf_float+0x66>
 800e7f2:	6822      	ldr	r2, [r4, #0]
 800e7f4:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 800e7f8:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 800e7fc:	f47f af39 	bne.w	800e672 <_scanf_float+0x6e>
 800e800:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 800e804:	6022      	str	r2, [r4, #0]
 800e806:	2501      	movs	r5, #1
 800e808:	e7c0      	b.n	800e78c <_scanf_float+0x188>
 800e80a:	2d03      	cmp	r5, #3
 800e80c:	d0e2      	beq.n	800e7d4 <_scanf_float+0x1d0>
 800e80e:	2d05      	cmp	r5, #5
 800e810:	e7de      	b.n	800e7d0 <_scanf_float+0x1cc>
 800e812:	2d02      	cmp	r5, #2
 800e814:	f47f af26 	bne.w	800e664 <_scanf_float+0x60>
 800e818:	2503      	movs	r5, #3
 800e81a:	e7b7      	b.n	800e78c <_scanf_float+0x188>
 800e81c:	2d06      	cmp	r5, #6
 800e81e:	f47f af21 	bne.w	800e664 <_scanf_float+0x60>
 800e822:	2507      	movs	r5, #7
 800e824:	e7b2      	b.n	800e78c <_scanf_float+0x188>
 800e826:	6822      	ldr	r2, [r4, #0]
 800e828:	0591      	lsls	r1, r2, #22
 800e82a:	f57f af1b 	bpl.w	800e664 <_scanf_float+0x60>
 800e82e:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 800e832:	6022      	str	r2, [r4, #0]
 800e834:	f8cd 9004 	str.w	r9, [sp, #4]
 800e838:	e7a8      	b.n	800e78c <_scanf_float+0x188>
 800e83a:	6822      	ldr	r2, [r4, #0]
 800e83c:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 800e840:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 800e844:	d006      	beq.n	800e854 <_scanf_float+0x250>
 800e846:	0550      	lsls	r0, r2, #21
 800e848:	f57f af0c 	bpl.w	800e664 <_scanf_float+0x60>
 800e84c:	f1b9 0f00 	cmp.w	r9, #0
 800e850:	f43f af0f 	beq.w	800e672 <_scanf_float+0x6e>
 800e854:	0591      	lsls	r1, r2, #22
 800e856:	bf58      	it	pl
 800e858:	9901      	ldrpl	r1, [sp, #4]
 800e85a:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 800e85e:	bf58      	it	pl
 800e860:	eba9 0101 	subpl.w	r1, r9, r1
 800e864:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 800e868:	bf58      	it	pl
 800e86a:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 800e86e:	6022      	str	r2, [r4, #0]
 800e870:	f04f 0900 	mov.w	r9, #0
 800e874:	e78a      	b.n	800e78c <_scanf_float+0x188>
 800e876:	f04f 0a03 	mov.w	sl, #3
 800e87a:	e787      	b.n	800e78c <_scanf_float+0x188>
 800e87c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800e880:	4639      	mov	r1, r7
 800e882:	4640      	mov	r0, r8
 800e884:	4798      	blx	r3
 800e886:	2800      	cmp	r0, #0
 800e888:	f43f aedf 	beq.w	800e64a <_scanf_float+0x46>
 800e88c:	e6ea      	b.n	800e664 <_scanf_float+0x60>
 800e88e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800e892:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800e896:	463a      	mov	r2, r7
 800e898:	4640      	mov	r0, r8
 800e89a:	4798      	blx	r3
 800e89c:	6923      	ldr	r3, [r4, #16]
 800e89e:	3b01      	subs	r3, #1
 800e8a0:	6123      	str	r3, [r4, #16]
 800e8a2:	e6ec      	b.n	800e67e <_scanf_float+0x7a>
 800e8a4:	1e6b      	subs	r3, r5, #1
 800e8a6:	2b06      	cmp	r3, #6
 800e8a8:	d825      	bhi.n	800e8f6 <_scanf_float+0x2f2>
 800e8aa:	2d02      	cmp	r5, #2
 800e8ac:	d836      	bhi.n	800e91c <_scanf_float+0x318>
 800e8ae:	455e      	cmp	r6, fp
 800e8b0:	f67f aee8 	bls.w	800e684 <_scanf_float+0x80>
 800e8b4:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800e8b8:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800e8bc:	463a      	mov	r2, r7
 800e8be:	4640      	mov	r0, r8
 800e8c0:	4798      	blx	r3
 800e8c2:	6923      	ldr	r3, [r4, #16]
 800e8c4:	3b01      	subs	r3, #1
 800e8c6:	6123      	str	r3, [r4, #16]
 800e8c8:	e7f1      	b.n	800e8ae <_scanf_float+0x2aa>
 800e8ca:	9802      	ldr	r0, [sp, #8]
 800e8cc:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800e8d0:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 800e8d4:	9002      	str	r0, [sp, #8]
 800e8d6:	463a      	mov	r2, r7
 800e8d8:	4640      	mov	r0, r8
 800e8da:	4798      	blx	r3
 800e8dc:	6923      	ldr	r3, [r4, #16]
 800e8de:	3b01      	subs	r3, #1
 800e8e0:	6123      	str	r3, [r4, #16]
 800e8e2:	f10a 3aff 	add.w	sl, sl, #4294967295
 800e8e6:	fa5f fa8a 	uxtb.w	sl, sl
 800e8ea:	f1ba 0f02 	cmp.w	sl, #2
 800e8ee:	d1ec      	bne.n	800e8ca <_scanf_float+0x2c6>
 800e8f0:	3d03      	subs	r5, #3
 800e8f2:	b2ed      	uxtb	r5, r5
 800e8f4:	1b76      	subs	r6, r6, r5
 800e8f6:	6823      	ldr	r3, [r4, #0]
 800e8f8:	05da      	lsls	r2, r3, #23
 800e8fa:	d52f      	bpl.n	800e95c <_scanf_float+0x358>
 800e8fc:	055b      	lsls	r3, r3, #21
 800e8fe:	d510      	bpl.n	800e922 <_scanf_float+0x31e>
 800e900:	455e      	cmp	r6, fp
 800e902:	f67f aebf 	bls.w	800e684 <_scanf_float+0x80>
 800e906:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800e90a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800e90e:	463a      	mov	r2, r7
 800e910:	4640      	mov	r0, r8
 800e912:	4798      	blx	r3
 800e914:	6923      	ldr	r3, [r4, #16]
 800e916:	3b01      	subs	r3, #1
 800e918:	6123      	str	r3, [r4, #16]
 800e91a:	e7f1      	b.n	800e900 <_scanf_float+0x2fc>
 800e91c:	46aa      	mov	sl, r5
 800e91e:	9602      	str	r6, [sp, #8]
 800e920:	e7df      	b.n	800e8e2 <_scanf_float+0x2de>
 800e922:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 800e926:	6923      	ldr	r3, [r4, #16]
 800e928:	2965      	cmp	r1, #101	; 0x65
 800e92a:	f103 33ff 	add.w	r3, r3, #4294967295
 800e92e:	f106 35ff 	add.w	r5, r6, #4294967295
 800e932:	6123      	str	r3, [r4, #16]
 800e934:	d00c      	beq.n	800e950 <_scanf_float+0x34c>
 800e936:	2945      	cmp	r1, #69	; 0x45
 800e938:	d00a      	beq.n	800e950 <_scanf_float+0x34c>
 800e93a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800e93e:	463a      	mov	r2, r7
 800e940:	4640      	mov	r0, r8
 800e942:	4798      	blx	r3
 800e944:	6923      	ldr	r3, [r4, #16]
 800e946:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 800e94a:	3b01      	subs	r3, #1
 800e94c:	1eb5      	subs	r5, r6, #2
 800e94e:	6123      	str	r3, [r4, #16]
 800e950:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800e954:	463a      	mov	r2, r7
 800e956:	4640      	mov	r0, r8
 800e958:	4798      	blx	r3
 800e95a:	462e      	mov	r6, r5
 800e95c:	6825      	ldr	r5, [r4, #0]
 800e95e:	f015 0510 	ands.w	r5, r5, #16
 800e962:	d159      	bne.n	800ea18 <_scanf_float+0x414>
 800e964:	7035      	strb	r5, [r6, #0]
 800e966:	6823      	ldr	r3, [r4, #0]
 800e968:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 800e96c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800e970:	d11b      	bne.n	800e9aa <_scanf_float+0x3a6>
 800e972:	9b01      	ldr	r3, [sp, #4]
 800e974:	454b      	cmp	r3, r9
 800e976:	eba3 0209 	sub.w	r2, r3, r9
 800e97a:	d123      	bne.n	800e9c4 <_scanf_float+0x3c0>
 800e97c:	2200      	movs	r2, #0
 800e97e:	4659      	mov	r1, fp
 800e980:	4640      	mov	r0, r8
 800e982:	f000 feeb 	bl	800f75c <_strtod_r>
 800e986:	6822      	ldr	r2, [r4, #0]
 800e988:	9b03      	ldr	r3, [sp, #12]
 800e98a:	f012 0f02 	tst.w	r2, #2
 800e98e:	ec57 6b10 	vmov	r6, r7, d0
 800e992:	681b      	ldr	r3, [r3, #0]
 800e994:	d021      	beq.n	800e9da <_scanf_float+0x3d6>
 800e996:	9903      	ldr	r1, [sp, #12]
 800e998:	1d1a      	adds	r2, r3, #4
 800e99a:	600a      	str	r2, [r1, #0]
 800e99c:	681b      	ldr	r3, [r3, #0]
 800e99e:	e9c3 6700 	strd	r6, r7, [r3]
 800e9a2:	68e3      	ldr	r3, [r4, #12]
 800e9a4:	3301      	adds	r3, #1
 800e9a6:	60e3      	str	r3, [r4, #12]
 800e9a8:	e66d      	b.n	800e686 <_scanf_float+0x82>
 800e9aa:	9b04      	ldr	r3, [sp, #16]
 800e9ac:	2b00      	cmp	r3, #0
 800e9ae:	d0e5      	beq.n	800e97c <_scanf_float+0x378>
 800e9b0:	9905      	ldr	r1, [sp, #20]
 800e9b2:	230a      	movs	r3, #10
 800e9b4:	462a      	mov	r2, r5
 800e9b6:	3101      	adds	r1, #1
 800e9b8:	4640      	mov	r0, r8
 800e9ba:	f000 ff57 	bl	800f86c <_strtol_r>
 800e9be:	9b04      	ldr	r3, [sp, #16]
 800e9c0:	9e05      	ldr	r6, [sp, #20]
 800e9c2:	1ac2      	subs	r2, r0, r3
 800e9c4:	f204 136f 	addw	r3, r4, #367	; 0x16f
 800e9c8:	429e      	cmp	r6, r3
 800e9ca:	bf28      	it	cs
 800e9cc:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 800e9d0:	4912      	ldr	r1, [pc, #72]	; (800ea1c <_scanf_float+0x418>)
 800e9d2:	4630      	mov	r0, r6
 800e9d4:	f000 f880 	bl	800ead8 <siprintf>
 800e9d8:	e7d0      	b.n	800e97c <_scanf_float+0x378>
 800e9da:	9903      	ldr	r1, [sp, #12]
 800e9dc:	f012 0f04 	tst.w	r2, #4
 800e9e0:	f103 0204 	add.w	r2, r3, #4
 800e9e4:	600a      	str	r2, [r1, #0]
 800e9e6:	d1d9      	bne.n	800e99c <_scanf_float+0x398>
 800e9e8:	f8d3 8000 	ldr.w	r8, [r3]
 800e9ec:	ee10 2a10 	vmov	r2, s0
 800e9f0:	ee10 0a10 	vmov	r0, s0
 800e9f4:	463b      	mov	r3, r7
 800e9f6:	4639      	mov	r1, r7
 800e9f8:	f7f2 f8a0 	bl	8000b3c <__aeabi_dcmpun>
 800e9fc:	b128      	cbz	r0, 800ea0a <_scanf_float+0x406>
 800e9fe:	4808      	ldr	r0, [pc, #32]	; (800ea20 <_scanf_float+0x41c>)
 800ea00:	f000 f820 	bl	800ea44 <nanf>
 800ea04:	ed88 0a00 	vstr	s0, [r8]
 800ea08:	e7cb      	b.n	800e9a2 <_scanf_float+0x39e>
 800ea0a:	4630      	mov	r0, r6
 800ea0c:	4639      	mov	r1, r7
 800ea0e:	f7f2 f8f3 	bl	8000bf8 <__aeabi_d2f>
 800ea12:	f8c8 0000 	str.w	r0, [r8]
 800ea16:	e7c4      	b.n	800e9a2 <_scanf_float+0x39e>
 800ea18:	2500      	movs	r5, #0
 800ea1a:	e634      	b.n	800e686 <_scanf_float+0x82>
 800ea1c:	08014951 	.word	0x08014951
 800ea20:	08014907 	.word	0x08014907

0800ea24 <_sbrk_r>:
 800ea24:	b538      	push	{r3, r4, r5, lr}
 800ea26:	4d06      	ldr	r5, [pc, #24]	; (800ea40 <_sbrk_r+0x1c>)
 800ea28:	2300      	movs	r3, #0
 800ea2a:	4604      	mov	r4, r0
 800ea2c:	4608      	mov	r0, r1
 800ea2e:	602b      	str	r3, [r5, #0]
 800ea30:	f7f3 fa7e 	bl	8001f30 <_sbrk>
 800ea34:	1c43      	adds	r3, r0, #1
 800ea36:	d102      	bne.n	800ea3e <_sbrk_r+0x1a>
 800ea38:	682b      	ldr	r3, [r5, #0]
 800ea3a:	b103      	cbz	r3, 800ea3e <_sbrk_r+0x1a>
 800ea3c:	6023      	str	r3, [r4, #0]
 800ea3e:	bd38      	pop	{r3, r4, r5, pc}
 800ea40:	20002400 	.word	0x20002400

0800ea44 <nanf>:
 800ea44:	ed9f 0a01 	vldr	s0, [pc, #4]	; 800ea4c <nanf+0x8>
 800ea48:	4770      	bx	lr
 800ea4a:	bf00      	nop
 800ea4c:	7fc00000 	.word	0x7fc00000

0800ea50 <_raise_r>:
 800ea50:	291f      	cmp	r1, #31
 800ea52:	b538      	push	{r3, r4, r5, lr}
 800ea54:	4604      	mov	r4, r0
 800ea56:	460d      	mov	r5, r1
 800ea58:	d904      	bls.n	800ea64 <_raise_r+0x14>
 800ea5a:	2316      	movs	r3, #22
 800ea5c:	6003      	str	r3, [r0, #0]
 800ea5e:	f04f 30ff 	mov.w	r0, #4294967295
 800ea62:	bd38      	pop	{r3, r4, r5, pc}
 800ea64:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800ea66:	b112      	cbz	r2, 800ea6e <_raise_r+0x1e>
 800ea68:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800ea6c:	b94b      	cbnz	r3, 800ea82 <_raise_r+0x32>
 800ea6e:	4620      	mov	r0, r4
 800ea70:	f000 f830 	bl	800ead4 <_getpid_r>
 800ea74:	462a      	mov	r2, r5
 800ea76:	4601      	mov	r1, r0
 800ea78:	4620      	mov	r0, r4
 800ea7a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ea7e:	f000 b817 	b.w	800eab0 <_kill_r>
 800ea82:	2b01      	cmp	r3, #1
 800ea84:	d00a      	beq.n	800ea9c <_raise_r+0x4c>
 800ea86:	1c59      	adds	r1, r3, #1
 800ea88:	d103      	bne.n	800ea92 <_raise_r+0x42>
 800ea8a:	2316      	movs	r3, #22
 800ea8c:	6003      	str	r3, [r0, #0]
 800ea8e:	2001      	movs	r0, #1
 800ea90:	e7e7      	b.n	800ea62 <_raise_r+0x12>
 800ea92:	2400      	movs	r4, #0
 800ea94:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800ea98:	4628      	mov	r0, r5
 800ea9a:	4798      	blx	r3
 800ea9c:	2000      	movs	r0, #0
 800ea9e:	e7e0      	b.n	800ea62 <_raise_r+0x12>

0800eaa0 <raise>:
 800eaa0:	4b02      	ldr	r3, [pc, #8]	; (800eaac <raise+0xc>)
 800eaa2:	4601      	mov	r1, r0
 800eaa4:	6818      	ldr	r0, [r3, #0]
 800eaa6:	f7ff bfd3 	b.w	800ea50 <_raise_r>
 800eaaa:	bf00      	nop
 800eaac:	20000108 	.word	0x20000108

0800eab0 <_kill_r>:
 800eab0:	b538      	push	{r3, r4, r5, lr}
 800eab2:	4d07      	ldr	r5, [pc, #28]	; (800ead0 <_kill_r+0x20>)
 800eab4:	2300      	movs	r3, #0
 800eab6:	4604      	mov	r4, r0
 800eab8:	4608      	mov	r0, r1
 800eaba:	4611      	mov	r1, r2
 800eabc:	602b      	str	r3, [r5, #0]
 800eabe:	f003 fb97 	bl	80121f0 <_kill>
 800eac2:	1c43      	adds	r3, r0, #1
 800eac4:	d102      	bne.n	800eacc <_kill_r+0x1c>
 800eac6:	682b      	ldr	r3, [r5, #0]
 800eac8:	b103      	cbz	r3, 800eacc <_kill_r+0x1c>
 800eaca:	6023      	str	r3, [r4, #0]
 800eacc:	bd38      	pop	{r3, r4, r5, pc}
 800eace:	bf00      	nop
 800ead0:	20002400 	.word	0x20002400

0800ead4 <_getpid_r>:
 800ead4:	f003 bb7c 	b.w	80121d0 <_getpid>

0800ead8 <siprintf>:
 800ead8:	b40e      	push	{r1, r2, r3}
 800eada:	b500      	push	{lr}
 800eadc:	b09c      	sub	sp, #112	; 0x70
 800eade:	ab1d      	add	r3, sp, #116	; 0x74
 800eae0:	9002      	str	r0, [sp, #8]
 800eae2:	9006      	str	r0, [sp, #24]
 800eae4:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800eae8:	4809      	ldr	r0, [pc, #36]	; (800eb10 <siprintf+0x38>)
 800eaea:	9107      	str	r1, [sp, #28]
 800eaec:	9104      	str	r1, [sp, #16]
 800eaee:	4909      	ldr	r1, [pc, #36]	; (800eb14 <siprintf+0x3c>)
 800eaf0:	f853 2b04 	ldr.w	r2, [r3], #4
 800eaf4:	9105      	str	r1, [sp, #20]
 800eaf6:	6800      	ldr	r0, [r0, #0]
 800eaf8:	9301      	str	r3, [sp, #4]
 800eafa:	a902      	add	r1, sp, #8
 800eafc:	f003 f984 	bl	8011e08 <_svfiprintf_r>
 800eb00:	9b02      	ldr	r3, [sp, #8]
 800eb02:	2200      	movs	r2, #0
 800eb04:	701a      	strb	r2, [r3, #0]
 800eb06:	b01c      	add	sp, #112	; 0x70
 800eb08:	f85d eb04 	ldr.w	lr, [sp], #4
 800eb0c:	b003      	add	sp, #12
 800eb0e:	4770      	bx	lr
 800eb10:	20000108 	.word	0x20000108
 800eb14:	ffff0208 	.word	0xffff0208

0800eb18 <sulp>:
 800eb18:	b570      	push	{r4, r5, r6, lr}
 800eb1a:	4604      	mov	r4, r0
 800eb1c:	460d      	mov	r5, r1
 800eb1e:	ec45 4b10 	vmov	d0, r4, r5
 800eb22:	4616      	mov	r6, r2
 800eb24:	f002 ff80 	bl	8011a28 <__ulp>
 800eb28:	ec51 0b10 	vmov	r0, r1, d0
 800eb2c:	b17e      	cbz	r6, 800eb4e <sulp+0x36>
 800eb2e:	f3c5 530a 	ubfx	r3, r5, #20, #11
 800eb32:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800eb36:	2b00      	cmp	r3, #0
 800eb38:	dd09      	ble.n	800eb4e <sulp+0x36>
 800eb3a:	051b      	lsls	r3, r3, #20
 800eb3c:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 800eb40:	2400      	movs	r4, #0
 800eb42:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 800eb46:	4622      	mov	r2, r4
 800eb48:	462b      	mov	r3, r5
 800eb4a:	f7f1 fd5d 	bl	8000608 <__aeabi_dmul>
 800eb4e:	bd70      	pop	{r4, r5, r6, pc}

0800eb50 <_strtod_l>:
 800eb50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eb54:	ed2d 8b02 	vpush	{d8}
 800eb58:	b09d      	sub	sp, #116	; 0x74
 800eb5a:	461f      	mov	r7, r3
 800eb5c:	2300      	movs	r3, #0
 800eb5e:	9318      	str	r3, [sp, #96]	; 0x60
 800eb60:	4ba2      	ldr	r3, [pc, #648]	; (800edec <_strtod_l+0x29c>)
 800eb62:	9213      	str	r2, [sp, #76]	; 0x4c
 800eb64:	681b      	ldr	r3, [r3, #0]
 800eb66:	9305      	str	r3, [sp, #20]
 800eb68:	4604      	mov	r4, r0
 800eb6a:	4618      	mov	r0, r3
 800eb6c:	4688      	mov	r8, r1
 800eb6e:	f7f1 fb37 	bl	80001e0 <strlen>
 800eb72:	f04f 0a00 	mov.w	sl, #0
 800eb76:	4605      	mov	r5, r0
 800eb78:	f04f 0b00 	mov.w	fp, #0
 800eb7c:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 800eb80:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800eb82:	781a      	ldrb	r2, [r3, #0]
 800eb84:	2a2b      	cmp	r2, #43	; 0x2b
 800eb86:	d04e      	beq.n	800ec26 <_strtod_l+0xd6>
 800eb88:	d83b      	bhi.n	800ec02 <_strtod_l+0xb2>
 800eb8a:	2a0d      	cmp	r2, #13
 800eb8c:	d834      	bhi.n	800ebf8 <_strtod_l+0xa8>
 800eb8e:	2a08      	cmp	r2, #8
 800eb90:	d834      	bhi.n	800ebfc <_strtod_l+0xac>
 800eb92:	2a00      	cmp	r2, #0
 800eb94:	d03e      	beq.n	800ec14 <_strtod_l+0xc4>
 800eb96:	2300      	movs	r3, #0
 800eb98:	930a      	str	r3, [sp, #40]	; 0x28
 800eb9a:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 800eb9c:	7833      	ldrb	r3, [r6, #0]
 800eb9e:	2b30      	cmp	r3, #48	; 0x30
 800eba0:	f040 80b0 	bne.w	800ed04 <_strtod_l+0x1b4>
 800eba4:	7873      	ldrb	r3, [r6, #1]
 800eba6:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800ebaa:	2b58      	cmp	r3, #88	; 0x58
 800ebac:	d168      	bne.n	800ec80 <_strtod_l+0x130>
 800ebae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ebb0:	9301      	str	r3, [sp, #4]
 800ebb2:	ab18      	add	r3, sp, #96	; 0x60
 800ebb4:	9702      	str	r7, [sp, #8]
 800ebb6:	9300      	str	r3, [sp, #0]
 800ebb8:	4a8d      	ldr	r2, [pc, #564]	; (800edf0 <_strtod_l+0x2a0>)
 800ebba:	ab19      	add	r3, sp, #100	; 0x64
 800ebbc:	a917      	add	r1, sp, #92	; 0x5c
 800ebbe:	4620      	mov	r0, r4
 800ebc0:	f002 f812 	bl	8010be8 <__gethex>
 800ebc4:	f010 0707 	ands.w	r7, r0, #7
 800ebc8:	4605      	mov	r5, r0
 800ebca:	d005      	beq.n	800ebd8 <_strtod_l+0x88>
 800ebcc:	2f06      	cmp	r7, #6
 800ebce:	d12c      	bne.n	800ec2a <_strtod_l+0xda>
 800ebd0:	3601      	adds	r6, #1
 800ebd2:	2300      	movs	r3, #0
 800ebd4:	9617      	str	r6, [sp, #92]	; 0x5c
 800ebd6:	930a      	str	r3, [sp, #40]	; 0x28
 800ebd8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800ebda:	2b00      	cmp	r3, #0
 800ebdc:	f040 8590 	bne.w	800f700 <_strtod_l+0xbb0>
 800ebe0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ebe2:	b1eb      	cbz	r3, 800ec20 <_strtod_l+0xd0>
 800ebe4:	4652      	mov	r2, sl
 800ebe6:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800ebea:	ec43 2b10 	vmov	d0, r2, r3
 800ebee:	b01d      	add	sp, #116	; 0x74
 800ebf0:	ecbd 8b02 	vpop	{d8}
 800ebf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ebf8:	2a20      	cmp	r2, #32
 800ebfa:	d1cc      	bne.n	800eb96 <_strtod_l+0x46>
 800ebfc:	3301      	adds	r3, #1
 800ebfe:	9317      	str	r3, [sp, #92]	; 0x5c
 800ec00:	e7be      	b.n	800eb80 <_strtod_l+0x30>
 800ec02:	2a2d      	cmp	r2, #45	; 0x2d
 800ec04:	d1c7      	bne.n	800eb96 <_strtod_l+0x46>
 800ec06:	2201      	movs	r2, #1
 800ec08:	920a      	str	r2, [sp, #40]	; 0x28
 800ec0a:	1c5a      	adds	r2, r3, #1
 800ec0c:	9217      	str	r2, [sp, #92]	; 0x5c
 800ec0e:	785b      	ldrb	r3, [r3, #1]
 800ec10:	2b00      	cmp	r3, #0
 800ec12:	d1c2      	bne.n	800eb9a <_strtod_l+0x4a>
 800ec14:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800ec16:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 800ec1a:	2b00      	cmp	r3, #0
 800ec1c:	f040 856e 	bne.w	800f6fc <_strtod_l+0xbac>
 800ec20:	4652      	mov	r2, sl
 800ec22:	465b      	mov	r3, fp
 800ec24:	e7e1      	b.n	800ebea <_strtod_l+0x9a>
 800ec26:	2200      	movs	r2, #0
 800ec28:	e7ee      	b.n	800ec08 <_strtod_l+0xb8>
 800ec2a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800ec2c:	b13a      	cbz	r2, 800ec3e <_strtod_l+0xee>
 800ec2e:	2135      	movs	r1, #53	; 0x35
 800ec30:	a81a      	add	r0, sp, #104	; 0x68
 800ec32:	f003 f804 	bl	8011c3e <__copybits>
 800ec36:	9918      	ldr	r1, [sp, #96]	; 0x60
 800ec38:	4620      	mov	r0, r4
 800ec3a:	f002 fbc3 	bl	80113c4 <_Bfree>
 800ec3e:	3f01      	subs	r7, #1
 800ec40:	2f04      	cmp	r7, #4
 800ec42:	d806      	bhi.n	800ec52 <_strtod_l+0x102>
 800ec44:	e8df f007 	tbb	[pc, r7]
 800ec48:	1714030a 	.word	0x1714030a
 800ec4c:	0a          	.byte	0x0a
 800ec4d:	00          	.byte	0x00
 800ec4e:	e9dd ab1a 	ldrd	sl, fp, [sp, #104]	; 0x68
 800ec52:	0728      	lsls	r0, r5, #28
 800ec54:	d5c0      	bpl.n	800ebd8 <_strtod_l+0x88>
 800ec56:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
 800ec5a:	e7bd      	b.n	800ebd8 <_strtod_l+0x88>
 800ec5c:	e9dd a31a 	ldrd	sl, r3, [sp, #104]	; 0x68
 800ec60:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800ec62:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 800ec66:	f202 4233 	addw	r2, r2, #1075	; 0x433
 800ec6a:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 800ec6e:	e7f0      	b.n	800ec52 <_strtod_l+0x102>
 800ec70:	f8df b180 	ldr.w	fp, [pc, #384]	; 800edf4 <_strtod_l+0x2a4>
 800ec74:	e7ed      	b.n	800ec52 <_strtod_l+0x102>
 800ec76:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 800ec7a:	f04f 3aff 	mov.w	sl, #4294967295
 800ec7e:	e7e8      	b.n	800ec52 <_strtod_l+0x102>
 800ec80:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800ec82:	1c5a      	adds	r2, r3, #1
 800ec84:	9217      	str	r2, [sp, #92]	; 0x5c
 800ec86:	785b      	ldrb	r3, [r3, #1]
 800ec88:	2b30      	cmp	r3, #48	; 0x30
 800ec8a:	d0f9      	beq.n	800ec80 <_strtod_l+0x130>
 800ec8c:	2b00      	cmp	r3, #0
 800ec8e:	d0a3      	beq.n	800ebd8 <_strtod_l+0x88>
 800ec90:	2301      	movs	r3, #1
 800ec92:	f04f 0900 	mov.w	r9, #0
 800ec96:	9304      	str	r3, [sp, #16]
 800ec98:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800ec9a:	9308      	str	r3, [sp, #32]
 800ec9c:	f8cd 901c 	str.w	r9, [sp, #28]
 800eca0:	464f      	mov	r7, r9
 800eca2:	220a      	movs	r2, #10
 800eca4:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800eca6:	7806      	ldrb	r6, [r0, #0]
 800eca8:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 800ecac:	b2d9      	uxtb	r1, r3
 800ecae:	2909      	cmp	r1, #9
 800ecb0:	d92a      	bls.n	800ed08 <_strtod_l+0x1b8>
 800ecb2:	9905      	ldr	r1, [sp, #20]
 800ecb4:	462a      	mov	r2, r5
 800ecb6:	f003 f9ea 	bl	801208e <strncmp>
 800ecba:	b398      	cbz	r0, 800ed24 <_strtod_l+0x1d4>
 800ecbc:	2000      	movs	r0, #0
 800ecbe:	4632      	mov	r2, r6
 800ecc0:	463d      	mov	r5, r7
 800ecc2:	9005      	str	r0, [sp, #20]
 800ecc4:	4603      	mov	r3, r0
 800ecc6:	2a65      	cmp	r2, #101	; 0x65
 800ecc8:	d001      	beq.n	800ecce <_strtod_l+0x17e>
 800ecca:	2a45      	cmp	r2, #69	; 0x45
 800eccc:	d118      	bne.n	800ed00 <_strtod_l+0x1b0>
 800ecce:	b91d      	cbnz	r5, 800ecd8 <_strtod_l+0x188>
 800ecd0:	9a04      	ldr	r2, [sp, #16]
 800ecd2:	4302      	orrs	r2, r0
 800ecd4:	d09e      	beq.n	800ec14 <_strtod_l+0xc4>
 800ecd6:	2500      	movs	r5, #0
 800ecd8:	f8dd 805c 	ldr.w	r8, [sp, #92]	; 0x5c
 800ecdc:	f108 0201 	add.w	r2, r8, #1
 800ece0:	9217      	str	r2, [sp, #92]	; 0x5c
 800ece2:	f898 2001 	ldrb.w	r2, [r8, #1]
 800ece6:	2a2b      	cmp	r2, #43	; 0x2b
 800ece8:	d075      	beq.n	800edd6 <_strtod_l+0x286>
 800ecea:	2a2d      	cmp	r2, #45	; 0x2d
 800ecec:	d07b      	beq.n	800ede6 <_strtod_l+0x296>
 800ecee:	f04f 0c00 	mov.w	ip, #0
 800ecf2:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 800ecf6:	2909      	cmp	r1, #9
 800ecf8:	f240 8082 	bls.w	800ee00 <_strtod_l+0x2b0>
 800ecfc:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 800ed00:	2600      	movs	r6, #0
 800ed02:	e09d      	b.n	800ee40 <_strtod_l+0x2f0>
 800ed04:	2300      	movs	r3, #0
 800ed06:	e7c4      	b.n	800ec92 <_strtod_l+0x142>
 800ed08:	2f08      	cmp	r7, #8
 800ed0a:	bfd8      	it	le
 800ed0c:	9907      	ldrle	r1, [sp, #28]
 800ed0e:	f100 0001 	add.w	r0, r0, #1
 800ed12:	bfda      	itte	le
 800ed14:	fb02 3301 	mlale	r3, r2, r1, r3
 800ed18:	9307      	strle	r3, [sp, #28]
 800ed1a:	fb02 3909 	mlagt	r9, r2, r9, r3
 800ed1e:	3701      	adds	r7, #1
 800ed20:	9017      	str	r0, [sp, #92]	; 0x5c
 800ed22:	e7bf      	b.n	800eca4 <_strtod_l+0x154>
 800ed24:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800ed26:	195a      	adds	r2, r3, r5
 800ed28:	9217      	str	r2, [sp, #92]	; 0x5c
 800ed2a:	5d5a      	ldrb	r2, [r3, r5]
 800ed2c:	2f00      	cmp	r7, #0
 800ed2e:	d037      	beq.n	800eda0 <_strtod_l+0x250>
 800ed30:	9005      	str	r0, [sp, #20]
 800ed32:	463d      	mov	r5, r7
 800ed34:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 800ed38:	2b09      	cmp	r3, #9
 800ed3a:	d912      	bls.n	800ed62 <_strtod_l+0x212>
 800ed3c:	2301      	movs	r3, #1
 800ed3e:	e7c2      	b.n	800ecc6 <_strtod_l+0x176>
 800ed40:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800ed42:	1c5a      	adds	r2, r3, #1
 800ed44:	9217      	str	r2, [sp, #92]	; 0x5c
 800ed46:	785a      	ldrb	r2, [r3, #1]
 800ed48:	3001      	adds	r0, #1
 800ed4a:	2a30      	cmp	r2, #48	; 0x30
 800ed4c:	d0f8      	beq.n	800ed40 <_strtod_l+0x1f0>
 800ed4e:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 800ed52:	2b08      	cmp	r3, #8
 800ed54:	f200 84d9 	bhi.w	800f70a <_strtod_l+0xbba>
 800ed58:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800ed5a:	9005      	str	r0, [sp, #20]
 800ed5c:	2000      	movs	r0, #0
 800ed5e:	9308      	str	r3, [sp, #32]
 800ed60:	4605      	mov	r5, r0
 800ed62:	3a30      	subs	r2, #48	; 0x30
 800ed64:	f100 0301 	add.w	r3, r0, #1
 800ed68:	d014      	beq.n	800ed94 <_strtod_l+0x244>
 800ed6a:	9905      	ldr	r1, [sp, #20]
 800ed6c:	4419      	add	r1, r3
 800ed6e:	9105      	str	r1, [sp, #20]
 800ed70:	462b      	mov	r3, r5
 800ed72:	eb00 0e05 	add.w	lr, r0, r5
 800ed76:	210a      	movs	r1, #10
 800ed78:	4573      	cmp	r3, lr
 800ed7a:	d113      	bne.n	800eda4 <_strtod_l+0x254>
 800ed7c:	182b      	adds	r3, r5, r0
 800ed7e:	2b08      	cmp	r3, #8
 800ed80:	f105 0501 	add.w	r5, r5, #1
 800ed84:	4405      	add	r5, r0
 800ed86:	dc1c      	bgt.n	800edc2 <_strtod_l+0x272>
 800ed88:	9907      	ldr	r1, [sp, #28]
 800ed8a:	230a      	movs	r3, #10
 800ed8c:	fb03 2301 	mla	r3, r3, r1, r2
 800ed90:	9307      	str	r3, [sp, #28]
 800ed92:	2300      	movs	r3, #0
 800ed94:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800ed96:	1c51      	adds	r1, r2, #1
 800ed98:	9117      	str	r1, [sp, #92]	; 0x5c
 800ed9a:	7852      	ldrb	r2, [r2, #1]
 800ed9c:	4618      	mov	r0, r3
 800ed9e:	e7c9      	b.n	800ed34 <_strtod_l+0x1e4>
 800eda0:	4638      	mov	r0, r7
 800eda2:	e7d2      	b.n	800ed4a <_strtod_l+0x1fa>
 800eda4:	2b08      	cmp	r3, #8
 800eda6:	dc04      	bgt.n	800edb2 <_strtod_l+0x262>
 800eda8:	9e07      	ldr	r6, [sp, #28]
 800edaa:	434e      	muls	r6, r1
 800edac:	9607      	str	r6, [sp, #28]
 800edae:	3301      	adds	r3, #1
 800edb0:	e7e2      	b.n	800ed78 <_strtod_l+0x228>
 800edb2:	f103 0c01 	add.w	ip, r3, #1
 800edb6:	f1bc 0f10 	cmp.w	ip, #16
 800edba:	bfd8      	it	le
 800edbc:	fb01 f909 	mulle.w	r9, r1, r9
 800edc0:	e7f5      	b.n	800edae <_strtod_l+0x25e>
 800edc2:	2d10      	cmp	r5, #16
 800edc4:	bfdc      	itt	le
 800edc6:	230a      	movle	r3, #10
 800edc8:	fb03 2909 	mlale	r9, r3, r9, r2
 800edcc:	e7e1      	b.n	800ed92 <_strtod_l+0x242>
 800edce:	2300      	movs	r3, #0
 800edd0:	9305      	str	r3, [sp, #20]
 800edd2:	2301      	movs	r3, #1
 800edd4:	e77c      	b.n	800ecd0 <_strtod_l+0x180>
 800edd6:	f04f 0c00 	mov.w	ip, #0
 800edda:	f108 0202 	add.w	r2, r8, #2
 800edde:	9217      	str	r2, [sp, #92]	; 0x5c
 800ede0:	f898 2002 	ldrb.w	r2, [r8, #2]
 800ede4:	e785      	b.n	800ecf2 <_strtod_l+0x1a2>
 800ede6:	f04f 0c01 	mov.w	ip, #1
 800edea:	e7f6      	b.n	800edda <_strtod_l+0x28a>
 800edec:	08014c0c 	.word	0x08014c0c
 800edf0:	0801495c 	.word	0x0801495c
 800edf4:	7ff00000 	.word	0x7ff00000
 800edf8:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800edfa:	1c51      	adds	r1, r2, #1
 800edfc:	9117      	str	r1, [sp, #92]	; 0x5c
 800edfe:	7852      	ldrb	r2, [r2, #1]
 800ee00:	2a30      	cmp	r2, #48	; 0x30
 800ee02:	d0f9      	beq.n	800edf8 <_strtod_l+0x2a8>
 800ee04:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 800ee08:	2908      	cmp	r1, #8
 800ee0a:	f63f af79 	bhi.w	800ed00 <_strtod_l+0x1b0>
 800ee0e:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 800ee12:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800ee14:	9206      	str	r2, [sp, #24]
 800ee16:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800ee18:	1c51      	adds	r1, r2, #1
 800ee1a:	9117      	str	r1, [sp, #92]	; 0x5c
 800ee1c:	7852      	ldrb	r2, [r2, #1]
 800ee1e:	f1a2 0630 	sub.w	r6, r2, #48	; 0x30
 800ee22:	2e09      	cmp	r6, #9
 800ee24:	d937      	bls.n	800ee96 <_strtod_l+0x346>
 800ee26:	9e06      	ldr	r6, [sp, #24]
 800ee28:	1b89      	subs	r1, r1, r6
 800ee2a:	2908      	cmp	r1, #8
 800ee2c:	f644 661f 	movw	r6, #19999	; 0x4e1f
 800ee30:	dc02      	bgt.n	800ee38 <_strtod_l+0x2e8>
 800ee32:	4576      	cmp	r6, lr
 800ee34:	bfa8      	it	ge
 800ee36:	4676      	movge	r6, lr
 800ee38:	f1bc 0f00 	cmp.w	ip, #0
 800ee3c:	d000      	beq.n	800ee40 <_strtod_l+0x2f0>
 800ee3e:	4276      	negs	r6, r6
 800ee40:	2d00      	cmp	r5, #0
 800ee42:	d14d      	bne.n	800eee0 <_strtod_l+0x390>
 800ee44:	9904      	ldr	r1, [sp, #16]
 800ee46:	4301      	orrs	r1, r0
 800ee48:	f47f aec6 	bne.w	800ebd8 <_strtod_l+0x88>
 800ee4c:	2b00      	cmp	r3, #0
 800ee4e:	f47f aee1 	bne.w	800ec14 <_strtod_l+0xc4>
 800ee52:	2a69      	cmp	r2, #105	; 0x69
 800ee54:	d027      	beq.n	800eea6 <_strtod_l+0x356>
 800ee56:	dc24      	bgt.n	800eea2 <_strtod_l+0x352>
 800ee58:	2a49      	cmp	r2, #73	; 0x49
 800ee5a:	d024      	beq.n	800eea6 <_strtod_l+0x356>
 800ee5c:	2a4e      	cmp	r2, #78	; 0x4e
 800ee5e:	f47f aed9 	bne.w	800ec14 <_strtod_l+0xc4>
 800ee62:	499f      	ldr	r1, [pc, #636]	; (800f0e0 <_strtod_l+0x590>)
 800ee64:	a817      	add	r0, sp, #92	; 0x5c
 800ee66:	f002 f917 	bl	8011098 <__match>
 800ee6a:	2800      	cmp	r0, #0
 800ee6c:	f43f aed2 	beq.w	800ec14 <_strtod_l+0xc4>
 800ee70:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800ee72:	781b      	ldrb	r3, [r3, #0]
 800ee74:	2b28      	cmp	r3, #40	; 0x28
 800ee76:	d12d      	bne.n	800eed4 <_strtod_l+0x384>
 800ee78:	499a      	ldr	r1, [pc, #616]	; (800f0e4 <_strtod_l+0x594>)
 800ee7a:	aa1a      	add	r2, sp, #104	; 0x68
 800ee7c:	a817      	add	r0, sp, #92	; 0x5c
 800ee7e:	f002 f91f 	bl	80110c0 <__hexnan>
 800ee82:	2805      	cmp	r0, #5
 800ee84:	d126      	bne.n	800eed4 <_strtod_l+0x384>
 800ee86:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800ee88:	f8dd a068 	ldr.w	sl, [sp, #104]	; 0x68
 800ee8c:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
 800ee90:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
 800ee94:	e6a0      	b.n	800ebd8 <_strtod_l+0x88>
 800ee96:	210a      	movs	r1, #10
 800ee98:	fb01 2e0e 	mla	lr, r1, lr, r2
 800ee9c:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 800eea0:	e7b9      	b.n	800ee16 <_strtod_l+0x2c6>
 800eea2:	2a6e      	cmp	r2, #110	; 0x6e
 800eea4:	e7db      	b.n	800ee5e <_strtod_l+0x30e>
 800eea6:	4990      	ldr	r1, [pc, #576]	; (800f0e8 <_strtod_l+0x598>)
 800eea8:	a817      	add	r0, sp, #92	; 0x5c
 800eeaa:	f002 f8f5 	bl	8011098 <__match>
 800eeae:	2800      	cmp	r0, #0
 800eeb0:	f43f aeb0 	beq.w	800ec14 <_strtod_l+0xc4>
 800eeb4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800eeb6:	498d      	ldr	r1, [pc, #564]	; (800f0ec <_strtod_l+0x59c>)
 800eeb8:	3b01      	subs	r3, #1
 800eeba:	a817      	add	r0, sp, #92	; 0x5c
 800eebc:	9317      	str	r3, [sp, #92]	; 0x5c
 800eebe:	f002 f8eb 	bl	8011098 <__match>
 800eec2:	b910      	cbnz	r0, 800eeca <_strtod_l+0x37a>
 800eec4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800eec6:	3301      	adds	r3, #1
 800eec8:	9317      	str	r3, [sp, #92]	; 0x5c
 800eeca:	f8df b230 	ldr.w	fp, [pc, #560]	; 800f0fc <_strtod_l+0x5ac>
 800eece:	f04f 0a00 	mov.w	sl, #0
 800eed2:	e681      	b.n	800ebd8 <_strtod_l+0x88>
 800eed4:	4886      	ldr	r0, [pc, #536]	; (800f0f0 <_strtod_l+0x5a0>)
 800eed6:	f7fe fc5b 	bl	800d790 <nan>
 800eeda:	ec5b ab10 	vmov	sl, fp, d0
 800eede:	e67b      	b.n	800ebd8 <_strtod_l+0x88>
 800eee0:	9b05      	ldr	r3, [sp, #20]
 800eee2:	9807      	ldr	r0, [sp, #28]
 800eee4:	1af3      	subs	r3, r6, r3
 800eee6:	2f00      	cmp	r7, #0
 800eee8:	bf08      	it	eq
 800eeea:	462f      	moveq	r7, r5
 800eeec:	2d10      	cmp	r5, #16
 800eeee:	9306      	str	r3, [sp, #24]
 800eef0:	46a8      	mov	r8, r5
 800eef2:	bfa8      	it	ge
 800eef4:	f04f 0810 	movge.w	r8, #16
 800eef8:	f7f1 fb0c 	bl	8000514 <__aeabi_ui2d>
 800eefc:	2d09      	cmp	r5, #9
 800eefe:	4682      	mov	sl, r0
 800ef00:	468b      	mov	fp, r1
 800ef02:	dd13      	ble.n	800ef2c <_strtod_l+0x3dc>
 800ef04:	4b7b      	ldr	r3, [pc, #492]	; (800f0f4 <_strtod_l+0x5a4>)
 800ef06:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 800ef0a:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 800ef0e:	f7f1 fb7b 	bl	8000608 <__aeabi_dmul>
 800ef12:	4682      	mov	sl, r0
 800ef14:	4648      	mov	r0, r9
 800ef16:	468b      	mov	fp, r1
 800ef18:	f7f1 fafc 	bl	8000514 <__aeabi_ui2d>
 800ef1c:	4602      	mov	r2, r0
 800ef1e:	460b      	mov	r3, r1
 800ef20:	4650      	mov	r0, sl
 800ef22:	4659      	mov	r1, fp
 800ef24:	f7f1 f9ba 	bl	800029c <__adddf3>
 800ef28:	4682      	mov	sl, r0
 800ef2a:	468b      	mov	fp, r1
 800ef2c:	2d0f      	cmp	r5, #15
 800ef2e:	dc38      	bgt.n	800efa2 <_strtod_l+0x452>
 800ef30:	9b06      	ldr	r3, [sp, #24]
 800ef32:	2b00      	cmp	r3, #0
 800ef34:	f43f ae50 	beq.w	800ebd8 <_strtod_l+0x88>
 800ef38:	dd24      	ble.n	800ef84 <_strtod_l+0x434>
 800ef3a:	2b16      	cmp	r3, #22
 800ef3c:	dc0b      	bgt.n	800ef56 <_strtod_l+0x406>
 800ef3e:	496d      	ldr	r1, [pc, #436]	; (800f0f4 <_strtod_l+0x5a4>)
 800ef40:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800ef44:	e9d1 0100 	ldrd	r0, r1, [r1]
 800ef48:	4652      	mov	r2, sl
 800ef4a:	465b      	mov	r3, fp
 800ef4c:	f7f1 fb5c 	bl	8000608 <__aeabi_dmul>
 800ef50:	4682      	mov	sl, r0
 800ef52:	468b      	mov	fp, r1
 800ef54:	e640      	b.n	800ebd8 <_strtod_l+0x88>
 800ef56:	9a06      	ldr	r2, [sp, #24]
 800ef58:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
 800ef5c:	4293      	cmp	r3, r2
 800ef5e:	db20      	blt.n	800efa2 <_strtod_l+0x452>
 800ef60:	4c64      	ldr	r4, [pc, #400]	; (800f0f4 <_strtod_l+0x5a4>)
 800ef62:	f1c5 050f 	rsb	r5, r5, #15
 800ef66:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 800ef6a:	4652      	mov	r2, sl
 800ef6c:	465b      	mov	r3, fp
 800ef6e:	e9d1 0100 	ldrd	r0, r1, [r1]
 800ef72:	f7f1 fb49 	bl	8000608 <__aeabi_dmul>
 800ef76:	9b06      	ldr	r3, [sp, #24]
 800ef78:	1b5d      	subs	r5, r3, r5
 800ef7a:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 800ef7e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ef82:	e7e3      	b.n	800ef4c <_strtod_l+0x3fc>
 800ef84:	9b06      	ldr	r3, [sp, #24]
 800ef86:	3316      	adds	r3, #22
 800ef88:	db0b      	blt.n	800efa2 <_strtod_l+0x452>
 800ef8a:	9b05      	ldr	r3, [sp, #20]
 800ef8c:	1b9e      	subs	r6, r3, r6
 800ef8e:	4b59      	ldr	r3, [pc, #356]	; (800f0f4 <_strtod_l+0x5a4>)
 800ef90:	eb03 06c6 	add.w	r6, r3, r6, lsl #3
 800ef94:	e9d6 2300 	ldrd	r2, r3, [r6]
 800ef98:	4650      	mov	r0, sl
 800ef9a:	4659      	mov	r1, fp
 800ef9c:	f7f1 fc5e 	bl	800085c <__aeabi_ddiv>
 800efa0:	e7d6      	b.n	800ef50 <_strtod_l+0x400>
 800efa2:	9b06      	ldr	r3, [sp, #24]
 800efa4:	eba5 0808 	sub.w	r8, r5, r8
 800efa8:	4498      	add	r8, r3
 800efaa:	f1b8 0f00 	cmp.w	r8, #0
 800efae:	dd74      	ble.n	800f09a <_strtod_l+0x54a>
 800efb0:	f018 030f 	ands.w	r3, r8, #15
 800efb4:	d00a      	beq.n	800efcc <_strtod_l+0x47c>
 800efb6:	494f      	ldr	r1, [pc, #316]	; (800f0f4 <_strtod_l+0x5a4>)
 800efb8:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800efbc:	4652      	mov	r2, sl
 800efbe:	465b      	mov	r3, fp
 800efc0:	e9d1 0100 	ldrd	r0, r1, [r1]
 800efc4:	f7f1 fb20 	bl	8000608 <__aeabi_dmul>
 800efc8:	4682      	mov	sl, r0
 800efca:	468b      	mov	fp, r1
 800efcc:	f038 080f 	bics.w	r8, r8, #15
 800efd0:	d04f      	beq.n	800f072 <_strtod_l+0x522>
 800efd2:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 800efd6:	dd22      	ble.n	800f01e <_strtod_l+0x4ce>
 800efd8:	2500      	movs	r5, #0
 800efda:	462e      	mov	r6, r5
 800efdc:	9507      	str	r5, [sp, #28]
 800efde:	9505      	str	r5, [sp, #20]
 800efe0:	2322      	movs	r3, #34	; 0x22
 800efe2:	f8df b118 	ldr.w	fp, [pc, #280]	; 800f0fc <_strtod_l+0x5ac>
 800efe6:	6023      	str	r3, [r4, #0]
 800efe8:	f04f 0a00 	mov.w	sl, #0
 800efec:	9b07      	ldr	r3, [sp, #28]
 800efee:	2b00      	cmp	r3, #0
 800eff0:	f43f adf2 	beq.w	800ebd8 <_strtod_l+0x88>
 800eff4:	9918      	ldr	r1, [sp, #96]	; 0x60
 800eff6:	4620      	mov	r0, r4
 800eff8:	f002 f9e4 	bl	80113c4 <_Bfree>
 800effc:	9905      	ldr	r1, [sp, #20]
 800effe:	4620      	mov	r0, r4
 800f000:	f002 f9e0 	bl	80113c4 <_Bfree>
 800f004:	4631      	mov	r1, r6
 800f006:	4620      	mov	r0, r4
 800f008:	f002 f9dc 	bl	80113c4 <_Bfree>
 800f00c:	9907      	ldr	r1, [sp, #28]
 800f00e:	4620      	mov	r0, r4
 800f010:	f002 f9d8 	bl	80113c4 <_Bfree>
 800f014:	4629      	mov	r1, r5
 800f016:	4620      	mov	r0, r4
 800f018:	f002 f9d4 	bl	80113c4 <_Bfree>
 800f01c:	e5dc      	b.n	800ebd8 <_strtod_l+0x88>
 800f01e:	4b36      	ldr	r3, [pc, #216]	; (800f0f8 <_strtod_l+0x5a8>)
 800f020:	9304      	str	r3, [sp, #16]
 800f022:	2300      	movs	r3, #0
 800f024:	ea4f 1828 	mov.w	r8, r8, asr #4
 800f028:	4650      	mov	r0, sl
 800f02a:	4659      	mov	r1, fp
 800f02c:	4699      	mov	r9, r3
 800f02e:	f1b8 0f01 	cmp.w	r8, #1
 800f032:	dc21      	bgt.n	800f078 <_strtod_l+0x528>
 800f034:	b10b      	cbz	r3, 800f03a <_strtod_l+0x4ea>
 800f036:	4682      	mov	sl, r0
 800f038:	468b      	mov	fp, r1
 800f03a:	4b2f      	ldr	r3, [pc, #188]	; (800f0f8 <_strtod_l+0x5a8>)
 800f03c:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 800f040:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
 800f044:	4652      	mov	r2, sl
 800f046:	465b      	mov	r3, fp
 800f048:	e9d9 0100 	ldrd	r0, r1, [r9]
 800f04c:	f7f1 fadc 	bl	8000608 <__aeabi_dmul>
 800f050:	4b2a      	ldr	r3, [pc, #168]	; (800f0fc <_strtod_l+0x5ac>)
 800f052:	460a      	mov	r2, r1
 800f054:	400b      	ands	r3, r1
 800f056:	492a      	ldr	r1, [pc, #168]	; (800f100 <_strtod_l+0x5b0>)
 800f058:	428b      	cmp	r3, r1
 800f05a:	4682      	mov	sl, r0
 800f05c:	d8bc      	bhi.n	800efd8 <_strtod_l+0x488>
 800f05e:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 800f062:	428b      	cmp	r3, r1
 800f064:	bf86      	itte	hi
 800f066:	f8df b09c 	ldrhi.w	fp, [pc, #156]	; 800f104 <_strtod_l+0x5b4>
 800f06a:	f04f 3aff 	movhi.w	sl, #4294967295
 800f06e:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
 800f072:	2300      	movs	r3, #0
 800f074:	9304      	str	r3, [sp, #16]
 800f076:	e084      	b.n	800f182 <_strtod_l+0x632>
 800f078:	f018 0f01 	tst.w	r8, #1
 800f07c:	d005      	beq.n	800f08a <_strtod_l+0x53a>
 800f07e:	9b04      	ldr	r3, [sp, #16]
 800f080:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f084:	f7f1 fac0 	bl	8000608 <__aeabi_dmul>
 800f088:	2301      	movs	r3, #1
 800f08a:	9a04      	ldr	r2, [sp, #16]
 800f08c:	3208      	adds	r2, #8
 800f08e:	f109 0901 	add.w	r9, r9, #1
 800f092:	ea4f 0868 	mov.w	r8, r8, asr #1
 800f096:	9204      	str	r2, [sp, #16]
 800f098:	e7c9      	b.n	800f02e <_strtod_l+0x4de>
 800f09a:	d0ea      	beq.n	800f072 <_strtod_l+0x522>
 800f09c:	f1c8 0800 	rsb	r8, r8, #0
 800f0a0:	f018 020f 	ands.w	r2, r8, #15
 800f0a4:	d00a      	beq.n	800f0bc <_strtod_l+0x56c>
 800f0a6:	4b13      	ldr	r3, [pc, #76]	; (800f0f4 <_strtod_l+0x5a4>)
 800f0a8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800f0ac:	4650      	mov	r0, sl
 800f0ae:	4659      	mov	r1, fp
 800f0b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f0b4:	f7f1 fbd2 	bl	800085c <__aeabi_ddiv>
 800f0b8:	4682      	mov	sl, r0
 800f0ba:	468b      	mov	fp, r1
 800f0bc:	ea5f 1828 	movs.w	r8, r8, asr #4
 800f0c0:	d0d7      	beq.n	800f072 <_strtod_l+0x522>
 800f0c2:	f1b8 0f1f 	cmp.w	r8, #31
 800f0c6:	dd1f      	ble.n	800f108 <_strtod_l+0x5b8>
 800f0c8:	2500      	movs	r5, #0
 800f0ca:	462e      	mov	r6, r5
 800f0cc:	9507      	str	r5, [sp, #28]
 800f0ce:	9505      	str	r5, [sp, #20]
 800f0d0:	2322      	movs	r3, #34	; 0x22
 800f0d2:	f04f 0a00 	mov.w	sl, #0
 800f0d6:	f04f 0b00 	mov.w	fp, #0
 800f0da:	6023      	str	r3, [r4, #0]
 800f0dc:	e786      	b.n	800efec <_strtod_l+0x49c>
 800f0de:	bf00      	nop
 800f0e0:	0801492a 	.word	0x0801492a
 800f0e4:	08014970 	.word	0x08014970
 800f0e8:	08014922 	.word	0x08014922
 800f0ec:	08014ab4 	.word	0x08014ab4
 800f0f0:	08014907 	.word	0x08014907
 800f0f4:	08014ca8 	.word	0x08014ca8
 800f0f8:	08014c80 	.word	0x08014c80
 800f0fc:	7ff00000 	.word	0x7ff00000
 800f100:	7ca00000 	.word	0x7ca00000
 800f104:	7fefffff 	.word	0x7fefffff
 800f108:	f018 0310 	ands.w	r3, r8, #16
 800f10c:	bf18      	it	ne
 800f10e:	236a      	movne	r3, #106	; 0x6a
 800f110:	f8df 93ac 	ldr.w	r9, [pc, #940]	; 800f4c0 <_strtod_l+0x970>
 800f114:	9304      	str	r3, [sp, #16]
 800f116:	4650      	mov	r0, sl
 800f118:	4659      	mov	r1, fp
 800f11a:	2300      	movs	r3, #0
 800f11c:	f018 0f01 	tst.w	r8, #1
 800f120:	d004      	beq.n	800f12c <_strtod_l+0x5dc>
 800f122:	e9d9 2300 	ldrd	r2, r3, [r9]
 800f126:	f7f1 fa6f 	bl	8000608 <__aeabi_dmul>
 800f12a:	2301      	movs	r3, #1
 800f12c:	ea5f 0868 	movs.w	r8, r8, asr #1
 800f130:	f109 0908 	add.w	r9, r9, #8
 800f134:	d1f2      	bne.n	800f11c <_strtod_l+0x5cc>
 800f136:	b10b      	cbz	r3, 800f13c <_strtod_l+0x5ec>
 800f138:	4682      	mov	sl, r0
 800f13a:	468b      	mov	fp, r1
 800f13c:	9b04      	ldr	r3, [sp, #16]
 800f13e:	b1c3      	cbz	r3, 800f172 <_strtod_l+0x622>
 800f140:	f3cb 520a 	ubfx	r2, fp, #20, #11
 800f144:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 800f148:	2b00      	cmp	r3, #0
 800f14a:	4659      	mov	r1, fp
 800f14c:	dd11      	ble.n	800f172 <_strtod_l+0x622>
 800f14e:	2b1f      	cmp	r3, #31
 800f150:	f340 8124 	ble.w	800f39c <_strtod_l+0x84c>
 800f154:	2b34      	cmp	r3, #52	; 0x34
 800f156:	bfde      	ittt	le
 800f158:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 800f15c:	f04f 33ff 	movle.w	r3, #4294967295
 800f160:	fa03 f202 	lslle.w	r2, r3, r2
 800f164:	f04f 0a00 	mov.w	sl, #0
 800f168:	bfcc      	ite	gt
 800f16a:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
 800f16e:	ea02 0b01 	andle.w	fp, r2, r1
 800f172:	2200      	movs	r2, #0
 800f174:	2300      	movs	r3, #0
 800f176:	4650      	mov	r0, sl
 800f178:	4659      	mov	r1, fp
 800f17a:	f7f1 fcad 	bl	8000ad8 <__aeabi_dcmpeq>
 800f17e:	2800      	cmp	r0, #0
 800f180:	d1a2      	bne.n	800f0c8 <_strtod_l+0x578>
 800f182:	9b07      	ldr	r3, [sp, #28]
 800f184:	9300      	str	r3, [sp, #0]
 800f186:	9908      	ldr	r1, [sp, #32]
 800f188:	462b      	mov	r3, r5
 800f18a:	463a      	mov	r2, r7
 800f18c:	4620      	mov	r0, r4
 800f18e:	f002 f981 	bl	8011494 <__s2b>
 800f192:	9007      	str	r0, [sp, #28]
 800f194:	2800      	cmp	r0, #0
 800f196:	f43f af1f 	beq.w	800efd8 <_strtod_l+0x488>
 800f19a:	9b05      	ldr	r3, [sp, #20]
 800f19c:	1b9e      	subs	r6, r3, r6
 800f19e:	9b06      	ldr	r3, [sp, #24]
 800f1a0:	2b00      	cmp	r3, #0
 800f1a2:	bfb4      	ite	lt
 800f1a4:	4633      	movlt	r3, r6
 800f1a6:	2300      	movge	r3, #0
 800f1a8:	930c      	str	r3, [sp, #48]	; 0x30
 800f1aa:	9b06      	ldr	r3, [sp, #24]
 800f1ac:	2500      	movs	r5, #0
 800f1ae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f1b2:	9312      	str	r3, [sp, #72]	; 0x48
 800f1b4:	462e      	mov	r6, r5
 800f1b6:	9b07      	ldr	r3, [sp, #28]
 800f1b8:	4620      	mov	r0, r4
 800f1ba:	6859      	ldr	r1, [r3, #4]
 800f1bc:	f002 f8c2 	bl	8011344 <_Balloc>
 800f1c0:	9005      	str	r0, [sp, #20]
 800f1c2:	2800      	cmp	r0, #0
 800f1c4:	f43f af0c 	beq.w	800efe0 <_strtod_l+0x490>
 800f1c8:	9b07      	ldr	r3, [sp, #28]
 800f1ca:	691a      	ldr	r2, [r3, #16]
 800f1cc:	3202      	adds	r2, #2
 800f1ce:	f103 010c 	add.w	r1, r3, #12
 800f1d2:	0092      	lsls	r2, r2, #2
 800f1d4:	300c      	adds	r0, #12
 800f1d6:	f7fe fb5b 	bl	800d890 <memcpy>
 800f1da:	ec4b ab10 	vmov	d0, sl, fp
 800f1de:	aa1a      	add	r2, sp, #104	; 0x68
 800f1e0:	a919      	add	r1, sp, #100	; 0x64
 800f1e2:	4620      	mov	r0, r4
 800f1e4:	f002 fc9c 	bl	8011b20 <__d2b>
 800f1e8:	ec4b ab18 	vmov	d8, sl, fp
 800f1ec:	9018      	str	r0, [sp, #96]	; 0x60
 800f1ee:	2800      	cmp	r0, #0
 800f1f0:	f43f aef6 	beq.w	800efe0 <_strtod_l+0x490>
 800f1f4:	2101      	movs	r1, #1
 800f1f6:	4620      	mov	r0, r4
 800f1f8:	f002 f9e6 	bl	80115c8 <__i2b>
 800f1fc:	4606      	mov	r6, r0
 800f1fe:	2800      	cmp	r0, #0
 800f200:	f43f aeee 	beq.w	800efe0 <_strtod_l+0x490>
 800f204:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800f206:	9904      	ldr	r1, [sp, #16]
 800f208:	2b00      	cmp	r3, #0
 800f20a:	bfab      	itete	ge
 800f20c:	9a0c      	ldrge	r2, [sp, #48]	; 0x30
 800f20e:	9a12      	ldrlt	r2, [sp, #72]	; 0x48
 800f210:	9f12      	ldrge	r7, [sp, #72]	; 0x48
 800f212:	f8dd 9030 	ldrlt.w	r9, [sp, #48]	; 0x30
 800f216:	bfac      	ite	ge
 800f218:	eb03 0902 	addge.w	r9, r3, r2
 800f21c:	1ad7      	sublt	r7, r2, r3
 800f21e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800f220:	eba3 0801 	sub.w	r8, r3, r1
 800f224:	4490      	add	r8, r2
 800f226:	4ba1      	ldr	r3, [pc, #644]	; (800f4ac <_strtod_l+0x95c>)
 800f228:	f108 38ff 	add.w	r8, r8, #4294967295
 800f22c:	4598      	cmp	r8, r3
 800f22e:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 800f232:	f280 80c7 	bge.w	800f3c4 <_strtod_l+0x874>
 800f236:	eba3 0308 	sub.w	r3, r3, r8
 800f23a:	2b1f      	cmp	r3, #31
 800f23c:	eba2 0203 	sub.w	r2, r2, r3
 800f240:	f04f 0101 	mov.w	r1, #1
 800f244:	f300 80b1 	bgt.w	800f3aa <_strtod_l+0x85a>
 800f248:	fa01 f303 	lsl.w	r3, r1, r3
 800f24c:	930d      	str	r3, [sp, #52]	; 0x34
 800f24e:	2300      	movs	r3, #0
 800f250:	9308      	str	r3, [sp, #32]
 800f252:	eb09 0802 	add.w	r8, r9, r2
 800f256:	9b04      	ldr	r3, [sp, #16]
 800f258:	45c1      	cmp	r9, r8
 800f25a:	4417      	add	r7, r2
 800f25c:	441f      	add	r7, r3
 800f25e:	464b      	mov	r3, r9
 800f260:	bfa8      	it	ge
 800f262:	4643      	movge	r3, r8
 800f264:	42bb      	cmp	r3, r7
 800f266:	bfa8      	it	ge
 800f268:	463b      	movge	r3, r7
 800f26a:	2b00      	cmp	r3, #0
 800f26c:	bfc2      	ittt	gt
 800f26e:	eba8 0803 	subgt.w	r8, r8, r3
 800f272:	1aff      	subgt	r7, r7, r3
 800f274:	eba9 0903 	subgt.w	r9, r9, r3
 800f278:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f27a:	2b00      	cmp	r3, #0
 800f27c:	dd17      	ble.n	800f2ae <_strtod_l+0x75e>
 800f27e:	4631      	mov	r1, r6
 800f280:	461a      	mov	r2, r3
 800f282:	4620      	mov	r0, r4
 800f284:	f002 fa60 	bl	8011748 <__pow5mult>
 800f288:	4606      	mov	r6, r0
 800f28a:	2800      	cmp	r0, #0
 800f28c:	f43f aea8 	beq.w	800efe0 <_strtod_l+0x490>
 800f290:	4601      	mov	r1, r0
 800f292:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800f294:	4620      	mov	r0, r4
 800f296:	f002 f9ad 	bl	80115f4 <__multiply>
 800f29a:	900b      	str	r0, [sp, #44]	; 0x2c
 800f29c:	2800      	cmp	r0, #0
 800f29e:	f43f ae9f 	beq.w	800efe0 <_strtod_l+0x490>
 800f2a2:	9918      	ldr	r1, [sp, #96]	; 0x60
 800f2a4:	4620      	mov	r0, r4
 800f2a6:	f002 f88d 	bl	80113c4 <_Bfree>
 800f2aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f2ac:	9318      	str	r3, [sp, #96]	; 0x60
 800f2ae:	f1b8 0f00 	cmp.w	r8, #0
 800f2b2:	f300 808c 	bgt.w	800f3ce <_strtod_l+0x87e>
 800f2b6:	9b06      	ldr	r3, [sp, #24]
 800f2b8:	2b00      	cmp	r3, #0
 800f2ba:	dd08      	ble.n	800f2ce <_strtod_l+0x77e>
 800f2bc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f2be:	9905      	ldr	r1, [sp, #20]
 800f2c0:	4620      	mov	r0, r4
 800f2c2:	f002 fa41 	bl	8011748 <__pow5mult>
 800f2c6:	9005      	str	r0, [sp, #20]
 800f2c8:	2800      	cmp	r0, #0
 800f2ca:	f43f ae89 	beq.w	800efe0 <_strtod_l+0x490>
 800f2ce:	2f00      	cmp	r7, #0
 800f2d0:	dd08      	ble.n	800f2e4 <_strtod_l+0x794>
 800f2d2:	9905      	ldr	r1, [sp, #20]
 800f2d4:	463a      	mov	r2, r7
 800f2d6:	4620      	mov	r0, r4
 800f2d8:	f002 fa90 	bl	80117fc <__lshift>
 800f2dc:	9005      	str	r0, [sp, #20]
 800f2de:	2800      	cmp	r0, #0
 800f2e0:	f43f ae7e 	beq.w	800efe0 <_strtod_l+0x490>
 800f2e4:	f1b9 0f00 	cmp.w	r9, #0
 800f2e8:	dd08      	ble.n	800f2fc <_strtod_l+0x7ac>
 800f2ea:	4631      	mov	r1, r6
 800f2ec:	464a      	mov	r2, r9
 800f2ee:	4620      	mov	r0, r4
 800f2f0:	f002 fa84 	bl	80117fc <__lshift>
 800f2f4:	4606      	mov	r6, r0
 800f2f6:	2800      	cmp	r0, #0
 800f2f8:	f43f ae72 	beq.w	800efe0 <_strtod_l+0x490>
 800f2fc:	9a05      	ldr	r2, [sp, #20]
 800f2fe:	9918      	ldr	r1, [sp, #96]	; 0x60
 800f300:	4620      	mov	r0, r4
 800f302:	f002 fb07 	bl	8011914 <__mdiff>
 800f306:	4605      	mov	r5, r0
 800f308:	2800      	cmp	r0, #0
 800f30a:	f43f ae69 	beq.w	800efe0 <_strtod_l+0x490>
 800f30e:	68c3      	ldr	r3, [r0, #12]
 800f310:	930b      	str	r3, [sp, #44]	; 0x2c
 800f312:	2300      	movs	r3, #0
 800f314:	60c3      	str	r3, [r0, #12]
 800f316:	4631      	mov	r1, r6
 800f318:	f002 fae0 	bl	80118dc <__mcmp>
 800f31c:	2800      	cmp	r0, #0
 800f31e:	da60      	bge.n	800f3e2 <_strtod_l+0x892>
 800f320:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f322:	ea53 030a 	orrs.w	r3, r3, sl
 800f326:	f040 8082 	bne.w	800f42e <_strtod_l+0x8de>
 800f32a:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800f32e:	2b00      	cmp	r3, #0
 800f330:	d17d      	bne.n	800f42e <_strtod_l+0x8de>
 800f332:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800f336:	0d1b      	lsrs	r3, r3, #20
 800f338:	051b      	lsls	r3, r3, #20
 800f33a:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 800f33e:	d976      	bls.n	800f42e <_strtod_l+0x8de>
 800f340:	696b      	ldr	r3, [r5, #20]
 800f342:	b913      	cbnz	r3, 800f34a <_strtod_l+0x7fa>
 800f344:	692b      	ldr	r3, [r5, #16]
 800f346:	2b01      	cmp	r3, #1
 800f348:	dd71      	ble.n	800f42e <_strtod_l+0x8de>
 800f34a:	4629      	mov	r1, r5
 800f34c:	2201      	movs	r2, #1
 800f34e:	4620      	mov	r0, r4
 800f350:	f002 fa54 	bl	80117fc <__lshift>
 800f354:	4631      	mov	r1, r6
 800f356:	4605      	mov	r5, r0
 800f358:	f002 fac0 	bl	80118dc <__mcmp>
 800f35c:	2800      	cmp	r0, #0
 800f35e:	dd66      	ble.n	800f42e <_strtod_l+0x8de>
 800f360:	9904      	ldr	r1, [sp, #16]
 800f362:	4a53      	ldr	r2, [pc, #332]	; (800f4b0 <_strtod_l+0x960>)
 800f364:	465b      	mov	r3, fp
 800f366:	2900      	cmp	r1, #0
 800f368:	f000 8081 	beq.w	800f46e <_strtod_l+0x91e>
 800f36c:	ea02 010b 	and.w	r1, r2, fp
 800f370:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 800f374:	dc7b      	bgt.n	800f46e <_strtod_l+0x91e>
 800f376:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 800f37a:	f77f aea9 	ble.w	800f0d0 <_strtod_l+0x580>
 800f37e:	4b4d      	ldr	r3, [pc, #308]	; (800f4b4 <_strtod_l+0x964>)
 800f380:	4650      	mov	r0, sl
 800f382:	4659      	mov	r1, fp
 800f384:	2200      	movs	r2, #0
 800f386:	f7f1 f93f 	bl	8000608 <__aeabi_dmul>
 800f38a:	460b      	mov	r3, r1
 800f38c:	4303      	orrs	r3, r0
 800f38e:	bf08      	it	eq
 800f390:	2322      	moveq	r3, #34	; 0x22
 800f392:	4682      	mov	sl, r0
 800f394:	468b      	mov	fp, r1
 800f396:	bf08      	it	eq
 800f398:	6023      	streq	r3, [r4, #0]
 800f39a:	e62b      	b.n	800eff4 <_strtod_l+0x4a4>
 800f39c:	f04f 32ff 	mov.w	r2, #4294967295
 800f3a0:	fa02 f303 	lsl.w	r3, r2, r3
 800f3a4:	ea03 0a0a 	and.w	sl, r3, sl
 800f3a8:	e6e3      	b.n	800f172 <_strtod_l+0x622>
 800f3aa:	f1c8 487f 	rsb	r8, r8, #4278190080	; 0xff000000
 800f3ae:	f508 087f 	add.w	r8, r8, #16711680	; 0xff0000
 800f3b2:	f508 487b 	add.w	r8, r8, #64256	; 0xfb00
 800f3b6:	f108 08e2 	add.w	r8, r8, #226	; 0xe2
 800f3ba:	fa01 f308 	lsl.w	r3, r1, r8
 800f3be:	9308      	str	r3, [sp, #32]
 800f3c0:	910d      	str	r1, [sp, #52]	; 0x34
 800f3c2:	e746      	b.n	800f252 <_strtod_l+0x702>
 800f3c4:	2300      	movs	r3, #0
 800f3c6:	9308      	str	r3, [sp, #32]
 800f3c8:	2301      	movs	r3, #1
 800f3ca:	930d      	str	r3, [sp, #52]	; 0x34
 800f3cc:	e741      	b.n	800f252 <_strtod_l+0x702>
 800f3ce:	9918      	ldr	r1, [sp, #96]	; 0x60
 800f3d0:	4642      	mov	r2, r8
 800f3d2:	4620      	mov	r0, r4
 800f3d4:	f002 fa12 	bl	80117fc <__lshift>
 800f3d8:	9018      	str	r0, [sp, #96]	; 0x60
 800f3da:	2800      	cmp	r0, #0
 800f3dc:	f47f af6b 	bne.w	800f2b6 <_strtod_l+0x766>
 800f3e0:	e5fe      	b.n	800efe0 <_strtod_l+0x490>
 800f3e2:	465f      	mov	r7, fp
 800f3e4:	d16e      	bne.n	800f4c4 <_strtod_l+0x974>
 800f3e6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f3e8:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800f3ec:	b342      	cbz	r2, 800f440 <_strtod_l+0x8f0>
 800f3ee:	4a32      	ldr	r2, [pc, #200]	; (800f4b8 <_strtod_l+0x968>)
 800f3f0:	4293      	cmp	r3, r2
 800f3f2:	d128      	bne.n	800f446 <_strtod_l+0x8f6>
 800f3f4:	9b04      	ldr	r3, [sp, #16]
 800f3f6:	4651      	mov	r1, sl
 800f3f8:	b1eb      	cbz	r3, 800f436 <_strtod_l+0x8e6>
 800f3fa:	4b2d      	ldr	r3, [pc, #180]	; (800f4b0 <_strtod_l+0x960>)
 800f3fc:	403b      	ands	r3, r7
 800f3fe:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800f402:	f04f 32ff 	mov.w	r2, #4294967295
 800f406:	d819      	bhi.n	800f43c <_strtod_l+0x8ec>
 800f408:	0d1b      	lsrs	r3, r3, #20
 800f40a:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800f40e:	fa02 f303 	lsl.w	r3, r2, r3
 800f412:	4299      	cmp	r1, r3
 800f414:	d117      	bne.n	800f446 <_strtod_l+0x8f6>
 800f416:	4b29      	ldr	r3, [pc, #164]	; (800f4bc <_strtod_l+0x96c>)
 800f418:	429f      	cmp	r7, r3
 800f41a:	d102      	bne.n	800f422 <_strtod_l+0x8d2>
 800f41c:	3101      	adds	r1, #1
 800f41e:	f43f addf 	beq.w	800efe0 <_strtod_l+0x490>
 800f422:	4b23      	ldr	r3, [pc, #140]	; (800f4b0 <_strtod_l+0x960>)
 800f424:	403b      	ands	r3, r7
 800f426:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
 800f42a:	f04f 0a00 	mov.w	sl, #0
 800f42e:	9b04      	ldr	r3, [sp, #16]
 800f430:	2b00      	cmp	r3, #0
 800f432:	d1a4      	bne.n	800f37e <_strtod_l+0x82e>
 800f434:	e5de      	b.n	800eff4 <_strtod_l+0x4a4>
 800f436:	f04f 33ff 	mov.w	r3, #4294967295
 800f43a:	e7ea      	b.n	800f412 <_strtod_l+0x8c2>
 800f43c:	4613      	mov	r3, r2
 800f43e:	e7e8      	b.n	800f412 <_strtod_l+0x8c2>
 800f440:	ea53 030a 	orrs.w	r3, r3, sl
 800f444:	d08c      	beq.n	800f360 <_strtod_l+0x810>
 800f446:	9b08      	ldr	r3, [sp, #32]
 800f448:	b1db      	cbz	r3, 800f482 <_strtod_l+0x932>
 800f44a:	423b      	tst	r3, r7
 800f44c:	d0ef      	beq.n	800f42e <_strtod_l+0x8de>
 800f44e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f450:	9a04      	ldr	r2, [sp, #16]
 800f452:	4650      	mov	r0, sl
 800f454:	4659      	mov	r1, fp
 800f456:	b1c3      	cbz	r3, 800f48a <_strtod_l+0x93a>
 800f458:	f7ff fb5e 	bl	800eb18 <sulp>
 800f45c:	4602      	mov	r2, r0
 800f45e:	460b      	mov	r3, r1
 800f460:	ec51 0b18 	vmov	r0, r1, d8
 800f464:	f7f0 ff1a 	bl	800029c <__adddf3>
 800f468:	4682      	mov	sl, r0
 800f46a:	468b      	mov	fp, r1
 800f46c:	e7df      	b.n	800f42e <_strtod_l+0x8de>
 800f46e:	4013      	ands	r3, r2
 800f470:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 800f474:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 800f478:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 800f47c:	f04f 3aff 	mov.w	sl, #4294967295
 800f480:	e7d5      	b.n	800f42e <_strtod_l+0x8de>
 800f482:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f484:	ea13 0f0a 	tst.w	r3, sl
 800f488:	e7e0      	b.n	800f44c <_strtod_l+0x8fc>
 800f48a:	f7ff fb45 	bl	800eb18 <sulp>
 800f48e:	4602      	mov	r2, r0
 800f490:	460b      	mov	r3, r1
 800f492:	ec51 0b18 	vmov	r0, r1, d8
 800f496:	f7f0 feff 	bl	8000298 <__aeabi_dsub>
 800f49a:	2200      	movs	r2, #0
 800f49c:	2300      	movs	r3, #0
 800f49e:	4682      	mov	sl, r0
 800f4a0:	468b      	mov	fp, r1
 800f4a2:	f7f1 fb19 	bl	8000ad8 <__aeabi_dcmpeq>
 800f4a6:	2800      	cmp	r0, #0
 800f4a8:	d0c1      	beq.n	800f42e <_strtod_l+0x8de>
 800f4aa:	e611      	b.n	800f0d0 <_strtod_l+0x580>
 800f4ac:	fffffc02 	.word	0xfffffc02
 800f4b0:	7ff00000 	.word	0x7ff00000
 800f4b4:	39500000 	.word	0x39500000
 800f4b8:	000fffff 	.word	0x000fffff
 800f4bc:	7fefffff 	.word	0x7fefffff
 800f4c0:	08014988 	.word	0x08014988
 800f4c4:	4631      	mov	r1, r6
 800f4c6:	4628      	mov	r0, r5
 800f4c8:	f002 fb86 	bl	8011bd8 <__ratio>
 800f4cc:	ec59 8b10 	vmov	r8, r9, d0
 800f4d0:	ee10 0a10 	vmov	r0, s0
 800f4d4:	2200      	movs	r2, #0
 800f4d6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800f4da:	4649      	mov	r1, r9
 800f4dc:	f7f1 fb10 	bl	8000b00 <__aeabi_dcmple>
 800f4e0:	2800      	cmp	r0, #0
 800f4e2:	d07a      	beq.n	800f5da <_strtod_l+0xa8a>
 800f4e4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f4e6:	2b00      	cmp	r3, #0
 800f4e8:	d04a      	beq.n	800f580 <_strtod_l+0xa30>
 800f4ea:	4b95      	ldr	r3, [pc, #596]	; (800f740 <_strtod_l+0xbf0>)
 800f4ec:	2200      	movs	r2, #0
 800f4ee:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800f4f2:	f8df 924c 	ldr.w	r9, [pc, #588]	; 800f740 <_strtod_l+0xbf0>
 800f4f6:	f04f 0800 	mov.w	r8, #0
 800f4fa:	4b92      	ldr	r3, [pc, #584]	; (800f744 <_strtod_l+0xbf4>)
 800f4fc:	403b      	ands	r3, r7
 800f4fe:	930d      	str	r3, [sp, #52]	; 0x34
 800f500:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f502:	4b91      	ldr	r3, [pc, #580]	; (800f748 <_strtod_l+0xbf8>)
 800f504:	429a      	cmp	r2, r3
 800f506:	f040 80b0 	bne.w	800f66a <_strtod_l+0xb1a>
 800f50a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800f50e:	f1a7 7b54 	sub.w	fp, r7, #55574528	; 0x3500000
 800f512:	ec4b ab10 	vmov	d0, sl, fp
 800f516:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800f51a:	f002 fa85 	bl	8011a28 <__ulp>
 800f51e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800f522:	ec53 2b10 	vmov	r2, r3, d0
 800f526:	f7f1 f86f 	bl	8000608 <__aeabi_dmul>
 800f52a:	4652      	mov	r2, sl
 800f52c:	465b      	mov	r3, fp
 800f52e:	f7f0 feb5 	bl	800029c <__adddf3>
 800f532:	460b      	mov	r3, r1
 800f534:	4983      	ldr	r1, [pc, #524]	; (800f744 <_strtod_l+0xbf4>)
 800f536:	4a85      	ldr	r2, [pc, #532]	; (800f74c <_strtod_l+0xbfc>)
 800f538:	4019      	ands	r1, r3
 800f53a:	4291      	cmp	r1, r2
 800f53c:	4682      	mov	sl, r0
 800f53e:	d960      	bls.n	800f602 <_strtod_l+0xab2>
 800f540:	ee18 3a90 	vmov	r3, s17
 800f544:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 800f548:	4293      	cmp	r3, r2
 800f54a:	d104      	bne.n	800f556 <_strtod_l+0xa06>
 800f54c:	ee18 3a10 	vmov	r3, s16
 800f550:	3301      	adds	r3, #1
 800f552:	f43f ad45 	beq.w	800efe0 <_strtod_l+0x490>
 800f556:	f8df b200 	ldr.w	fp, [pc, #512]	; 800f758 <_strtod_l+0xc08>
 800f55a:	f04f 3aff 	mov.w	sl, #4294967295
 800f55e:	9918      	ldr	r1, [sp, #96]	; 0x60
 800f560:	4620      	mov	r0, r4
 800f562:	f001 ff2f 	bl	80113c4 <_Bfree>
 800f566:	9905      	ldr	r1, [sp, #20]
 800f568:	4620      	mov	r0, r4
 800f56a:	f001 ff2b 	bl	80113c4 <_Bfree>
 800f56e:	4631      	mov	r1, r6
 800f570:	4620      	mov	r0, r4
 800f572:	f001 ff27 	bl	80113c4 <_Bfree>
 800f576:	4629      	mov	r1, r5
 800f578:	4620      	mov	r0, r4
 800f57a:	f001 ff23 	bl	80113c4 <_Bfree>
 800f57e:	e61a      	b.n	800f1b6 <_strtod_l+0x666>
 800f580:	f1ba 0f00 	cmp.w	sl, #0
 800f584:	d11b      	bne.n	800f5be <_strtod_l+0xa6e>
 800f586:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800f58a:	b9f3      	cbnz	r3, 800f5ca <_strtod_l+0xa7a>
 800f58c:	4b6c      	ldr	r3, [pc, #432]	; (800f740 <_strtod_l+0xbf0>)
 800f58e:	2200      	movs	r2, #0
 800f590:	4640      	mov	r0, r8
 800f592:	4649      	mov	r1, r9
 800f594:	f7f1 faaa 	bl	8000aec <__aeabi_dcmplt>
 800f598:	b9d0      	cbnz	r0, 800f5d0 <_strtod_l+0xa80>
 800f59a:	4640      	mov	r0, r8
 800f59c:	4649      	mov	r1, r9
 800f59e:	4b6c      	ldr	r3, [pc, #432]	; (800f750 <_strtod_l+0xc00>)
 800f5a0:	2200      	movs	r2, #0
 800f5a2:	f7f1 f831 	bl	8000608 <__aeabi_dmul>
 800f5a6:	4680      	mov	r8, r0
 800f5a8:	4689      	mov	r9, r1
 800f5aa:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800f5ae:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
 800f5b2:	9315      	str	r3, [sp, #84]	; 0x54
 800f5b4:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 800f5b8:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800f5bc:	e79d      	b.n	800f4fa <_strtod_l+0x9aa>
 800f5be:	f1ba 0f01 	cmp.w	sl, #1
 800f5c2:	d102      	bne.n	800f5ca <_strtod_l+0xa7a>
 800f5c4:	2f00      	cmp	r7, #0
 800f5c6:	f43f ad83 	beq.w	800f0d0 <_strtod_l+0x580>
 800f5ca:	4b62      	ldr	r3, [pc, #392]	; (800f754 <_strtod_l+0xc04>)
 800f5cc:	2200      	movs	r2, #0
 800f5ce:	e78e      	b.n	800f4ee <_strtod_l+0x99e>
 800f5d0:	f8df 917c 	ldr.w	r9, [pc, #380]	; 800f750 <_strtod_l+0xc00>
 800f5d4:	f04f 0800 	mov.w	r8, #0
 800f5d8:	e7e7      	b.n	800f5aa <_strtod_l+0xa5a>
 800f5da:	4b5d      	ldr	r3, [pc, #372]	; (800f750 <_strtod_l+0xc00>)
 800f5dc:	4640      	mov	r0, r8
 800f5de:	4649      	mov	r1, r9
 800f5e0:	2200      	movs	r2, #0
 800f5e2:	f7f1 f811 	bl	8000608 <__aeabi_dmul>
 800f5e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f5e8:	4680      	mov	r8, r0
 800f5ea:	4689      	mov	r9, r1
 800f5ec:	b933      	cbnz	r3, 800f5fc <_strtod_l+0xaac>
 800f5ee:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800f5f2:	900e      	str	r0, [sp, #56]	; 0x38
 800f5f4:	930f      	str	r3, [sp, #60]	; 0x3c
 800f5f6:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 800f5fa:	e7dd      	b.n	800f5b8 <_strtod_l+0xa68>
 800f5fc:	e9cd 890e 	strd	r8, r9, [sp, #56]	; 0x38
 800f600:	e7f9      	b.n	800f5f6 <_strtod_l+0xaa6>
 800f602:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
 800f606:	9b04      	ldr	r3, [sp, #16]
 800f608:	2b00      	cmp	r3, #0
 800f60a:	d1a8      	bne.n	800f55e <_strtod_l+0xa0e>
 800f60c:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800f610:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f612:	0d1b      	lsrs	r3, r3, #20
 800f614:	051b      	lsls	r3, r3, #20
 800f616:	429a      	cmp	r2, r3
 800f618:	d1a1      	bne.n	800f55e <_strtod_l+0xa0e>
 800f61a:	4640      	mov	r0, r8
 800f61c:	4649      	mov	r1, r9
 800f61e:	f7f1 fb53 	bl	8000cc8 <__aeabi_d2lz>
 800f622:	f7f0 ffc3 	bl	80005ac <__aeabi_l2d>
 800f626:	4602      	mov	r2, r0
 800f628:	460b      	mov	r3, r1
 800f62a:	4640      	mov	r0, r8
 800f62c:	4649      	mov	r1, r9
 800f62e:	f7f0 fe33 	bl	8000298 <__aeabi_dsub>
 800f632:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f634:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800f638:	ea43 030a 	orr.w	r3, r3, sl
 800f63c:	4313      	orrs	r3, r2
 800f63e:	4680      	mov	r8, r0
 800f640:	4689      	mov	r9, r1
 800f642:	d055      	beq.n	800f6f0 <_strtod_l+0xba0>
 800f644:	a336      	add	r3, pc, #216	; (adr r3, 800f720 <_strtod_l+0xbd0>)
 800f646:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f64a:	f7f1 fa4f 	bl	8000aec <__aeabi_dcmplt>
 800f64e:	2800      	cmp	r0, #0
 800f650:	f47f acd0 	bne.w	800eff4 <_strtod_l+0x4a4>
 800f654:	a334      	add	r3, pc, #208	; (adr r3, 800f728 <_strtod_l+0xbd8>)
 800f656:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f65a:	4640      	mov	r0, r8
 800f65c:	4649      	mov	r1, r9
 800f65e:	f7f1 fa63 	bl	8000b28 <__aeabi_dcmpgt>
 800f662:	2800      	cmp	r0, #0
 800f664:	f43f af7b 	beq.w	800f55e <_strtod_l+0xa0e>
 800f668:	e4c4      	b.n	800eff4 <_strtod_l+0x4a4>
 800f66a:	9b04      	ldr	r3, [sp, #16]
 800f66c:	b333      	cbz	r3, 800f6bc <_strtod_l+0xb6c>
 800f66e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f670:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800f674:	d822      	bhi.n	800f6bc <_strtod_l+0xb6c>
 800f676:	a32e      	add	r3, pc, #184	; (adr r3, 800f730 <_strtod_l+0xbe0>)
 800f678:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f67c:	4640      	mov	r0, r8
 800f67e:	4649      	mov	r1, r9
 800f680:	f7f1 fa3e 	bl	8000b00 <__aeabi_dcmple>
 800f684:	b1a0      	cbz	r0, 800f6b0 <_strtod_l+0xb60>
 800f686:	4649      	mov	r1, r9
 800f688:	4640      	mov	r0, r8
 800f68a:	f7f1 fa95 	bl	8000bb8 <__aeabi_d2uiz>
 800f68e:	2801      	cmp	r0, #1
 800f690:	bf38      	it	cc
 800f692:	2001      	movcc	r0, #1
 800f694:	f7f0 ff3e 	bl	8000514 <__aeabi_ui2d>
 800f698:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f69a:	4680      	mov	r8, r0
 800f69c:	4689      	mov	r9, r1
 800f69e:	bb23      	cbnz	r3, 800f6ea <_strtod_l+0xb9a>
 800f6a0:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800f6a4:	9010      	str	r0, [sp, #64]	; 0x40
 800f6a6:	9311      	str	r3, [sp, #68]	; 0x44
 800f6a8:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800f6ac:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800f6b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f6b2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f6b4:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 800f6b8:	1a9b      	subs	r3, r3, r2
 800f6ba:	9309      	str	r3, [sp, #36]	; 0x24
 800f6bc:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800f6c0:	eeb0 0a48 	vmov.f32	s0, s16
 800f6c4:	eef0 0a68 	vmov.f32	s1, s17
 800f6c8:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800f6cc:	f002 f9ac 	bl	8011a28 <__ulp>
 800f6d0:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800f6d4:	ec53 2b10 	vmov	r2, r3, d0
 800f6d8:	f7f0 ff96 	bl	8000608 <__aeabi_dmul>
 800f6dc:	ec53 2b18 	vmov	r2, r3, d8
 800f6e0:	f7f0 fddc 	bl	800029c <__adddf3>
 800f6e4:	4682      	mov	sl, r0
 800f6e6:	468b      	mov	fp, r1
 800f6e8:	e78d      	b.n	800f606 <_strtod_l+0xab6>
 800f6ea:	e9cd 8910 	strd	r8, r9, [sp, #64]	; 0x40
 800f6ee:	e7db      	b.n	800f6a8 <_strtod_l+0xb58>
 800f6f0:	a311      	add	r3, pc, #68	; (adr r3, 800f738 <_strtod_l+0xbe8>)
 800f6f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f6f6:	f7f1 f9f9 	bl	8000aec <__aeabi_dcmplt>
 800f6fa:	e7b2      	b.n	800f662 <_strtod_l+0xb12>
 800f6fc:	2300      	movs	r3, #0
 800f6fe:	930a      	str	r3, [sp, #40]	; 0x28
 800f700:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f702:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800f704:	6013      	str	r3, [r2, #0]
 800f706:	f7ff ba6b 	b.w	800ebe0 <_strtod_l+0x90>
 800f70a:	2a65      	cmp	r2, #101	; 0x65
 800f70c:	f43f ab5f 	beq.w	800edce <_strtod_l+0x27e>
 800f710:	2a45      	cmp	r2, #69	; 0x45
 800f712:	f43f ab5c 	beq.w	800edce <_strtod_l+0x27e>
 800f716:	2301      	movs	r3, #1
 800f718:	f7ff bb94 	b.w	800ee44 <_strtod_l+0x2f4>
 800f71c:	f3af 8000 	nop.w
 800f720:	94a03595 	.word	0x94a03595
 800f724:	3fdfffff 	.word	0x3fdfffff
 800f728:	35afe535 	.word	0x35afe535
 800f72c:	3fe00000 	.word	0x3fe00000
 800f730:	ffc00000 	.word	0xffc00000
 800f734:	41dfffff 	.word	0x41dfffff
 800f738:	94a03595 	.word	0x94a03595
 800f73c:	3fcfffff 	.word	0x3fcfffff
 800f740:	3ff00000 	.word	0x3ff00000
 800f744:	7ff00000 	.word	0x7ff00000
 800f748:	7fe00000 	.word	0x7fe00000
 800f74c:	7c9fffff 	.word	0x7c9fffff
 800f750:	3fe00000 	.word	0x3fe00000
 800f754:	bff00000 	.word	0xbff00000
 800f758:	7fefffff 	.word	0x7fefffff

0800f75c <_strtod_r>:
 800f75c:	4b01      	ldr	r3, [pc, #4]	; (800f764 <_strtod_r+0x8>)
 800f75e:	f7ff b9f7 	b.w	800eb50 <_strtod_l>
 800f762:	bf00      	nop
 800f764:	20000174 	.word	0x20000174

0800f768 <_strtol_l.constprop.0>:
 800f768:	2b01      	cmp	r3, #1
 800f76a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f76e:	d001      	beq.n	800f774 <_strtol_l.constprop.0+0xc>
 800f770:	2b24      	cmp	r3, #36	; 0x24
 800f772:	d906      	bls.n	800f782 <_strtol_l.constprop.0+0x1a>
 800f774:	f7fe f840 	bl	800d7f8 <__errno>
 800f778:	2316      	movs	r3, #22
 800f77a:	6003      	str	r3, [r0, #0]
 800f77c:	2000      	movs	r0, #0
 800f77e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f782:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 800f868 <_strtol_l.constprop.0+0x100>
 800f786:	460d      	mov	r5, r1
 800f788:	462e      	mov	r6, r5
 800f78a:	f815 4b01 	ldrb.w	r4, [r5], #1
 800f78e:	f814 700c 	ldrb.w	r7, [r4, ip]
 800f792:	f017 0708 	ands.w	r7, r7, #8
 800f796:	d1f7      	bne.n	800f788 <_strtol_l.constprop.0+0x20>
 800f798:	2c2d      	cmp	r4, #45	; 0x2d
 800f79a:	d132      	bne.n	800f802 <_strtol_l.constprop.0+0x9a>
 800f79c:	782c      	ldrb	r4, [r5, #0]
 800f79e:	2701      	movs	r7, #1
 800f7a0:	1cb5      	adds	r5, r6, #2
 800f7a2:	2b00      	cmp	r3, #0
 800f7a4:	d05b      	beq.n	800f85e <_strtol_l.constprop.0+0xf6>
 800f7a6:	2b10      	cmp	r3, #16
 800f7a8:	d109      	bne.n	800f7be <_strtol_l.constprop.0+0x56>
 800f7aa:	2c30      	cmp	r4, #48	; 0x30
 800f7ac:	d107      	bne.n	800f7be <_strtol_l.constprop.0+0x56>
 800f7ae:	782c      	ldrb	r4, [r5, #0]
 800f7b0:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 800f7b4:	2c58      	cmp	r4, #88	; 0x58
 800f7b6:	d14d      	bne.n	800f854 <_strtol_l.constprop.0+0xec>
 800f7b8:	786c      	ldrb	r4, [r5, #1]
 800f7ba:	2310      	movs	r3, #16
 800f7bc:	3502      	adds	r5, #2
 800f7be:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 800f7c2:	f108 38ff 	add.w	r8, r8, #4294967295
 800f7c6:	f04f 0c00 	mov.w	ip, #0
 800f7ca:	fbb8 f9f3 	udiv	r9, r8, r3
 800f7ce:	4666      	mov	r6, ip
 800f7d0:	fb03 8a19 	mls	sl, r3, r9, r8
 800f7d4:	f1a4 0e30 	sub.w	lr, r4, #48	; 0x30
 800f7d8:	f1be 0f09 	cmp.w	lr, #9
 800f7dc:	d816      	bhi.n	800f80c <_strtol_l.constprop.0+0xa4>
 800f7de:	4674      	mov	r4, lr
 800f7e0:	42a3      	cmp	r3, r4
 800f7e2:	dd24      	ble.n	800f82e <_strtol_l.constprop.0+0xc6>
 800f7e4:	f1bc 0f00 	cmp.w	ip, #0
 800f7e8:	db1e      	blt.n	800f828 <_strtol_l.constprop.0+0xc0>
 800f7ea:	45b1      	cmp	r9, r6
 800f7ec:	d31c      	bcc.n	800f828 <_strtol_l.constprop.0+0xc0>
 800f7ee:	d101      	bne.n	800f7f4 <_strtol_l.constprop.0+0x8c>
 800f7f0:	45a2      	cmp	sl, r4
 800f7f2:	db19      	blt.n	800f828 <_strtol_l.constprop.0+0xc0>
 800f7f4:	fb06 4603 	mla	r6, r6, r3, r4
 800f7f8:	f04f 0c01 	mov.w	ip, #1
 800f7fc:	f815 4b01 	ldrb.w	r4, [r5], #1
 800f800:	e7e8      	b.n	800f7d4 <_strtol_l.constprop.0+0x6c>
 800f802:	2c2b      	cmp	r4, #43	; 0x2b
 800f804:	bf04      	itt	eq
 800f806:	782c      	ldrbeq	r4, [r5, #0]
 800f808:	1cb5      	addeq	r5, r6, #2
 800f80a:	e7ca      	b.n	800f7a2 <_strtol_l.constprop.0+0x3a>
 800f80c:	f1a4 0e41 	sub.w	lr, r4, #65	; 0x41
 800f810:	f1be 0f19 	cmp.w	lr, #25
 800f814:	d801      	bhi.n	800f81a <_strtol_l.constprop.0+0xb2>
 800f816:	3c37      	subs	r4, #55	; 0x37
 800f818:	e7e2      	b.n	800f7e0 <_strtol_l.constprop.0+0x78>
 800f81a:	f1a4 0e61 	sub.w	lr, r4, #97	; 0x61
 800f81e:	f1be 0f19 	cmp.w	lr, #25
 800f822:	d804      	bhi.n	800f82e <_strtol_l.constprop.0+0xc6>
 800f824:	3c57      	subs	r4, #87	; 0x57
 800f826:	e7db      	b.n	800f7e0 <_strtol_l.constprop.0+0x78>
 800f828:	f04f 3cff 	mov.w	ip, #4294967295
 800f82c:	e7e6      	b.n	800f7fc <_strtol_l.constprop.0+0x94>
 800f82e:	f1bc 0f00 	cmp.w	ip, #0
 800f832:	da05      	bge.n	800f840 <_strtol_l.constprop.0+0xd8>
 800f834:	2322      	movs	r3, #34	; 0x22
 800f836:	6003      	str	r3, [r0, #0]
 800f838:	4646      	mov	r6, r8
 800f83a:	b942      	cbnz	r2, 800f84e <_strtol_l.constprop.0+0xe6>
 800f83c:	4630      	mov	r0, r6
 800f83e:	e79e      	b.n	800f77e <_strtol_l.constprop.0+0x16>
 800f840:	b107      	cbz	r7, 800f844 <_strtol_l.constprop.0+0xdc>
 800f842:	4276      	negs	r6, r6
 800f844:	2a00      	cmp	r2, #0
 800f846:	d0f9      	beq.n	800f83c <_strtol_l.constprop.0+0xd4>
 800f848:	f1bc 0f00 	cmp.w	ip, #0
 800f84c:	d000      	beq.n	800f850 <_strtol_l.constprop.0+0xe8>
 800f84e:	1e69      	subs	r1, r5, #1
 800f850:	6011      	str	r1, [r2, #0]
 800f852:	e7f3      	b.n	800f83c <_strtol_l.constprop.0+0xd4>
 800f854:	2430      	movs	r4, #48	; 0x30
 800f856:	2b00      	cmp	r3, #0
 800f858:	d1b1      	bne.n	800f7be <_strtol_l.constprop.0+0x56>
 800f85a:	2308      	movs	r3, #8
 800f85c:	e7af      	b.n	800f7be <_strtol_l.constprop.0+0x56>
 800f85e:	2c30      	cmp	r4, #48	; 0x30
 800f860:	d0a5      	beq.n	800f7ae <_strtol_l.constprop.0+0x46>
 800f862:	230a      	movs	r3, #10
 800f864:	e7ab      	b.n	800f7be <_strtol_l.constprop.0+0x56>
 800f866:	bf00      	nop
 800f868:	080149b1 	.word	0x080149b1

0800f86c <_strtol_r>:
 800f86c:	f7ff bf7c 	b.w	800f768 <_strtol_l.constprop.0>

0800f870 <__swbuf_r>:
 800f870:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f872:	460e      	mov	r6, r1
 800f874:	4614      	mov	r4, r2
 800f876:	4605      	mov	r5, r0
 800f878:	b118      	cbz	r0, 800f882 <__swbuf_r+0x12>
 800f87a:	6983      	ldr	r3, [r0, #24]
 800f87c:	b90b      	cbnz	r3, 800f882 <__swbuf_r+0x12>
 800f87e:	f001 f8af 	bl	80109e0 <__sinit>
 800f882:	4b21      	ldr	r3, [pc, #132]	; (800f908 <__swbuf_r+0x98>)
 800f884:	429c      	cmp	r4, r3
 800f886:	d12b      	bne.n	800f8e0 <__swbuf_r+0x70>
 800f888:	686c      	ldr	r4, [r5, #4]
 800f88a:	69a3      	ldr	r3, [r4, #24]
 800f88c:	60a3      	str	r3, [r4, #8]
 800f88e:	89a3      	ldrh	r3, [r4, #12]
 800f890:	071a      	lsls	r2, r3, #28
 800f892:	d52f      	bpl.n	800f8f4 <__swbuf_r+0x84>
 800f894:	6923      	ldr	r3, [r4, #16]
 800f896:	b36b      	cbz	r3, 800f8f4 <__swbuf_r+0x84>
 800f898:	6923      	ldr	r3, [r4, #16]
 800f89a:	6820      	ldr	r0, [r4, #0]
 800f89c:	1ac0      	subs	r0, r0, r3
 800f89e:	6963      	ldr	r3, [r4, #20]
 800f8a0:	b2f6      	uxtb	r6, r6
 800f8a2:	4283      	cmp	r3, r0
 800f8a4:	4637      	mov	r7, r6
 800f8a6:	dc04      	bgt.n	800f8b2 <__swbuf_r+0x42>
 800f8a8:	4621      	mov	r1, r4
 800f8aa:	4628      	mov	r0, r5
 800f8ac:	f001 f804 	bl	80108b8 <_fflush_r>
 800f8b0:	bb30      	cbnz	r0, 800f900 <__swbuf_r+0x90>
 800f8b2:	68a3      	ldr	r3, [r4, #8]
 800f8b4:	3b01      	subs	r3, #1
 800f8b6:	60a3      	str	r3, [r4, #8]
 800f8b8:	6823      	ldr	r3, [r4, #0]
 800f8ba:	1c5a      	adds	r2, r3, #1
 800f8bc:	6022      	str	r2, [r4, #0]
 800f8be:	701e      	strb	r6, [r3, #0]
 800f8c0:	6963      	ldr	r3, [r4, #20]
 800f8c2:	3001      	adds	r0, #1
 800f8c4:	4283      	cmp	r3, r0
 800f8c6:	d004      	beq.n	800f8d2 <__swbuf_r+0x62>
 800f8c8:	89a3      	ldrh	r3, [r4, #12]
 800f8ca:	07db      	lsls	r3, r3, #31
 800f8cc:	d506      	bpl.n	800f8dc <__swbuf_r+0x6c>
 800f8ce:	2e0a      	cmp	r6, #10
 800f8d0:	d104      	bne.n	800f8dc <__swbuf_r+0x6c>
 800f8d2:	4621      	mov	r1, r4
 800f8d4:	4628      	mov	r0, r5
 800f8d6:	f000 ffef 	bl	80108b8 <_fflush_r>
 800f8da:	b988      	cbnz	r0, 800f900 <__swbuf_r+0x90>
 800f8dc:	4638      	mov	r0, r7
 800f8de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f8e0:	4b0a      	ldr	r3, [pc, #40]	; (800f90c <__swbuf_r+0x9c>)
 800f8e2:	429c      	cmp	r4, r3
 800f8e4:	d101      	bne.n	800f8ea <__swbuf_r+0x7a>
 800f8e6:	68ac      	ldr	r4, [r5, #8]
 800f8e8:	e7cf      	b.n	800f88a <__swbuf_r+0x1a>
 800f8ea:	4b09      	ldr	r3, [pc, #36]	; (800f910 <__swbuf_r+0xa0>)
 800f8ec:	429c      	cmp	r4, r3
 800f8ee:	bf08      	it	eq
 800f8f0:	68ec      	ldreq	r4, [r5, #12]
 800f8f2:	e7ca      	b.n	800f88a <__swbuf_r+0x1a>
 800f8f4:	4621      	mov	r1, r4
 800f8f6:	4628      	mov	r0, r5
 800f8f8:	f000 f80c 	bl	800f914 <__swsetup_r>
 800f8fc:	2800      	cmp	r0, #0
 800f8fe:	d0cb      	beq.n	800f898 <__swbuf_r+0x28>
 800f900:	f04f 37ff 	mov.w	r7, #4294967295
 800f904:	e7ea      	b.n	800f8dc <__swbuf_r+0x6c>
 800f906:	bf00      	nop
 800f908:	08014b64 	.word	0x08014b64
 800f90c:	08014b84 	.word	0x08014b84
 800f910:	08014b44 	.word	0x08014b44

0800f914 <__swsetup_r>:
 800f914:	4b32      	ldr	r3, [pc, #200]	; (800f9e0 <__swsetup_r+0xcc>)
 800f916:	b570      	push	{r4, r5, r6, lr}
 800f918:	681d      	ldr	r5, [r3, #0]
 800f91a:	4606      	mov	r6, r0
 800f91c:	460c      	mov	r4, r1
 800f91e:	b125      	cbz	r5, 800f92a <__swsetup_r+0x16>
 800f920:	69ab      	ldr	r3, [r5, #24]
 800f922:	b913      	cbnz	r3, 800f92a <__swsetup_r+0x16>
 800f924:	4628      	mov	r0, r5
 800f926:	f001 f85b 	bl	80109e0 <__sinit>
 800f92a:	4b2e      	ldr	r3, [pc, #184]	; (800f9e4 <__swsetup_r+0xd0>)
 800f92c:	429c      	cmp	r4, r3
 800f92e:	d10f      	bne.n	800f950 <__swsetup_r+0x3c>
 800f930:	686c      	ldr	r4, [r5, #4]
 800f932:	89a3      	ldrh	r3, [r4, #12]
 800f934:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800f938:	0719      	lsls	r1, r3, #28
 800f93a:	d42c      	bmi.n	800f996 <__swsetup_r+0x82>
 800f93c:	06dd      	lsls	r5, r3, #27
 800f93e:	d411      	bmi.n	800f964 <__swsetup_r+0x50>
 800f940:	2309      	movs	r3, #9
 800f942:	6033      	str	r3, [r6, #0]
 800f944:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800f948:	81a3      	strh	r3, [r4, #12]
 800f94a:	f04f 30ff 	mov.w	r0, #4294967295
 800f94e:	e03e      	b.n	800f9ce <__swsetup_r+0xba>
 800f950:	4b25      	ldr	r3, [pc, #148]	; (800f9e8 <__swsetup_r+0xd4>)
 800f952:	429c      	cmp	r4, r3
 800f954:	d101      	bne.n	800f95a <__swsetup_r+0x46>
 800f956:	68ac      	ldr	r4, [r5, #8]
 800f958:	e7eb      	b.n	800f932 <__swsetup_r+0x1e>
 800f95a:	4b24      	ldr	r3, [pc, #144]	; (800f9ec <__swsetup_r+0xd8>)
 800f95c:	429c      	cmp	r4, r3
 800f95e:	bf08      	it	eq
 800f960:	68ec      	ldreq	r4, [r5, #12]
 800f962:	e7e6      	b.n	800f932 <__swsetup_r+0x1e>
 800f964:	0758      	lsls	r0, r3, #29
 800f966:	d512      	bpl.n	800f98e <__swsetup_r+0x7a>
 800f968:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800f96a:	b141      	cbz	r1, 800f97e <__swsetup_r+0x6a>
 800f96c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800f970:	4299      	cmp	r1, r3
 800f972:	d002      	beq.n	800f97a <__swsetup_r+0x66>
 800f974:	4630      	mov	r0, r6
 800f976:	f7fd ffa1 	bl	800d8bc <_free_r>
 800f97a:	2300      	movs	r3, #0
 800f97c:	6363      	str	r3, [r4, #52]	; 0x34
 800f97e:	89a3      	ldrh	r3, [r4, #12]
 800f980:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800f984:	81a3      	strh	r3, [r4, #12]
 800f986:	2300      	movs	r3, #0
 800f988:	6063      	str	r3, [r4, #4]
 800f98a:	6923      	ldr	r3, [r4, #16]
 800f98c:	6023      	str	r3, [r4, #0]
 800f98e:	89a3      	ldrh	r3, [r4, #12]
 800f990:	f043 0308 	orr.w	r3, r3, #8
 800f994:	81a3      	strh	r3, [r4, #12]
 800f996:	6923      	ldr	r3, [r4, #16]
 800f998:	b94b      	cbnz	r3, 800f9ae <__swsetup_r+0x9a>
 800f99a:	89a3      	ldrh	r3, [r4, #12]
 800f99c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800f9a0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800f9a4:	d003      	beq.n	800f9ae <__swsetup_r+0x9a>
 800f9a6:	4621      	mov	r1, r4
 800f9a8:	4630      	mov	r0, r6
 800f9aa:	f001 fc53 	bl	8011254 <__smakebuf_r>
 800f9ae:	89a0      	ldrh	r0, [r4, #12]
 800f9b0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800f9b4:	f010 0301 	ands.w	r3, r0, #1
 800f9b8:	d00a      	beq.n	800f9d0 <__swsetup_r+0xbc>
 800f9ba:	2300      	movs	r3, #0
 800f9bc:	60a3      	str	r3, [r4, #8]
 800f9be:	6963      	ldr	r3, [r4, #20]
 800f9c0:	425b      	negs	r3, r3
 800f9c2:	61a3      	str	r3, [r4, #24]
 800f9c4:	6923      	ldr	r3, [r4, #16]
 800f9c6:	b943      	cbnz	r3, 800f9da <__swsetup_r+0xc6>
 800f9c8:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800f9cc:	d1ba      	bne.n	800f944 <__swsetup_r+0x30>
 800f9ce:	bd70      	pop	{r4, r5, r6, pc}
 800f9d0:	0781      	lsls	r1, r0, #30
 800f9d2:	bf58      	it	pl
 800f9d4:	6963      	ldrpl	r3, [r4, #20]
 800f9d6:	60a3      	str	r3, [r4, #8]
 800f9d8:	e7f4      	b.n	800f9c4 <__swsetup_r+0xb0>
 800f9da:	2000      	movs	r0, #0
 800f9dc:	e7f7      	b.n	800f9ce <__swsetup_r+0xba>
 800f9de:	bf00      	nop
 800f9e0:	20000108 	.word	0x20000108
 800f9e4:	08014b64 	.word	0x08014b64
 800f9e8:	08014b84 	.word	0x08014b84
 800f9ec:	08014b44 	.word	0x08014b44

0800f9f0 <__register_exitproc>:
 800f9f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f9f4:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 800fab0 <__register_exitproc+0xc0>
 800f9f8:	4606      	mov	r6, r0
 800f9fa:	f8d8 0000 	ldr.w	r0, [r8]
 800f9fe:	461f      	mov	r7, r3
 800fa00:	460d      	mov	r5, r1
 800fa02:	4691      	mov	r9, r2
 800fa04:	f001 fbfd 	bl	8011202 <__retarget_lock_acquire_recursive>
 800fa08:	4b25      	ldr	r3, [pc, #148]	; (800faa0 <__register_exitproc+0xb0>)
 800fa0a:	681c      	ldr	r4, [r3, #0]
 800fa0c:	b934      	cbnz	r4, 800fa1c <__register_exitproc+0x2c>
 800fa0e:	4c25      	ldr	r4, [pc, #148]	; (800faa4 <__register_exitproc+0xb4>)
 800fa10:	601c      	str	r4, [r3, #0]
 800fa12:	4b25      	ldr	r3, [pc, #148]	; (800faa8 <__register_exitproc+0xb8>)
 800fa14:	b113      	cbz	r3, 800fa1c <__register_exitproc+0x2c>
 800fa16:	681b      	ldr	r3, [r3, #0]
 800fa18:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 800fa1c:	6863      	ldr	r3, [r4, #4]
 800fa1e:	2b1f      	cmp	r3, #31
 800fa20:	dd07      	ble.n	800fa32 <__register_exitproc+0x42>
 800fa22:	f8d8 0000 	ldr.w	r0, [r8]
 800fa26:	f001 fbee 	bl	8011206 <__retarget_lock_release_recursive>
 800fa2a:	f04f 30ff 	mov.w	r0, #4294967295
 800fa2e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800fa32:	b34e      	cbz	r6, 800fa88 <__register_exitproc+0x98>
 800fa34:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 800fa38:	b988      	cbnz	r0, 800fa5e <__register_exitproc+0x6e>
 800fa3a:	4b1c      	ldr	r3, [pc, #112]	; (800faac <__register_exitproc+0xbc>)
 800fa3c:	b923      	cbnz	r3, 800fa48 <__register_exitproc+0x58>
 800fa3e:	f8d8 0000 	ldr.w	r0, [r8]
 800fa42:	f001 fbdf 	bl	8011204 <__retarget_lock_release>
 800fa46:	e7f0      	b.n	800fa2a <__register_exitproc+0x3a>
 800fa48:	f44f 7084 	mov.w	r0, #264	; 0x108
 800fa4c:	f7fd ff10 	bl	800d870 <malloc>
 800fa50:	2800      	cmp	r0, #0
 800fa52:	d0f4      	beq.n	800fa3e <__register_exitproc+0x4e>
 800fa54:	2300      	movs	r3, #0
 800fa56:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 800fa5a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 800fa5e:	6863      	ldr	r3, [r4, #4]
 800fa60:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 800fa64:	2201      	movs	r2, #1
 800fa66:	409a      	lsls	r2, r3
 800fa68:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 800fa6c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 800fa70:	4313      	orrs	r3, r2
 800fa72:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 800fa76:	2e02      	cmp	r6, #2
 800fa78:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 800fa7c:	bf02      	ittt	eq
 800fa7e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 800fa82:	4313      	orreq	r3, r2
 800fa84:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 800fa88:	6863      	ldr	r3, [r4, #4]
 800fa8a:	f8d8 0000 	ldr.w	r0, [r8]
 800fa8e:	1c5a      	adds	r2, r3, #1
 800fa90:	3302      	adds	r3, #2
 800fa92:	6062      	str	r2, [r4, #4]
 800fa94:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 800fa98:	f001 fbb5 	bl	8011206 <__retarget_lock_release_recursive>
 800fa9c:	2000      	movs	r0, #0
 800fa9e:	e7c6      	b.n	800fa2e <__register_exitproc+0x3e>
 800faa0:	200023f8 	.word	0x200023f8
 800faa4:	2000236c 	.word	0x2000236c
 800faa8:	08014958 	.word	0x08014958
 800faac:	0800d871 	.word	0x0800d871
 800fab0:	2000016c 	.word	0x2000016c

0800fab4 <quorem>:
 800fab4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fab8:	6903      	ldr	r3, [r0, #16]
 800faba:	690c      	ldr	r4, [r1, #16]
 800fabc:	42a3      	cmp	r3, r4
 800fabe:	4607      	mov	r7, r0
 800fac0:	f2c0 8081 	blt.w	800fbc6 <quorem+0x112>
 800fac4:	3c01      	subs	r4, #1
 800fac6:	f101 0814 	add.w	r8, r1, #20
 800faca:	f100 0514 	add.w	r5, r0, #20
 800face:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800fad2:	9301      	str	r3, [sp, #4]
 800fad4:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800fad8:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800fadc:	3301      	adds	r3, #1
 800fade:	429a      	cmp	r2, r3
 800fae0:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800fae4:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800fae8:	fbb2 f6f3 	udiv	r6, r2, r3
 800faec:	d331      	bcc.n	800fb52 <quorem+0x9e>
 800faee:	f04f 0e00 	mov.w	lr, #0
 800faf2:	4640      	mov	r0, r8
 800faf4:	46ac      	mov	ip, r5
 800faf6:	46f2      	mov	sl, lr
 800faf8:	f850 2b04 	ldr.w	r2, [r0], #4
 800fafc:	b293      	uxth	r3, r2
 800fafe:	fb06 e303 	mla	r3, r6, r3, lr
 800fb02:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 800fb06:	b29b      	uxth	r3, r3
 800fb08:	ebaa 0303 	sub.w	r3, sl, r3
 800fb0c:	f8dc a000 	ldr.w	sl, [ip]
 800fb10:	0c12      	lsrs	r2, r2, #16
 800fb12:	fa13 f38a 	uxtah	r3, r3, sl
 800fb16:	fb06 e202 	mla	r2, r6, r2, lr
 800fb1a:	9300      	str	r3, [sp, #0]
 800fb1c:	9b00      	ldr	r3, [sp, #0]
 800fb1e:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800fb22:	b292      	uxth	r2, r2
 800fb24:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 800fb28:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800fb2c:	f8bd 3000 	ldrh.w	r3, [sp]
 800fb30:	4581      	cmp	r9, r0
 800fb32:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800fb36:	f84c 3b04 	str.w	r3, [ip], #4
 800fb3a:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800fb3e:	d2db      	bcs.n	800faf8 <quorem+0x44>
 800fb40:	f855 300b 	ldr.w	r3, [r5, fp]
 800fb44:	b92b      	cbnz	r3, 800fb52 <quorem+0x9e>
 800fb46:	9b01      	ldr	r3, [sp, #4]
 800fb48:	3b04      	subs	r3, #4
 800fb4a:	429d      	cmp	r5, r3
 800fb4c:	461a      	mov	r2, r3
 800fb4e:	d32e      	bcc.n	800fbae <quorem+0xfa>
 800fb50:	613c      	str	r4, [r7, #16]
 800fb52:	4638      	mov	r0, r7
 800fb54:	f001 fec2 	bl	80118dc <__mcmp>
 800fb58:	2800      	cmp	r0, #0
 800fb5a:	db24      	blt.n	800fba6 <quorem+0xf2>
 800fb5c:	3601      	adds	r6, #1
 800fb5e:	4628      	mov	r0, r5
 800fb60:	f04f 0c00 	mov.w	ip, #0
 800fb64:	f858 2b04 	ldr.w	r2, [r8], #4
 800fb68:	f8d0 e000 	ldr.w	lr, [r0]
 800fb6c:	b293      	uxth	r3, r2
 800fb6e:	ebac 0303 	sub.w	r3, ip, r3
 800fb72:	0c12      	lsrs	r2, r2, #16
 800fb74:	fa13 f38e 	uxtah	r3, r3, lr
 800fb78:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800fb7c:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800fb80:	b29b      	uxth	r3, r3
 800fb82:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800fb86:	45c1      	cmp	r9, r8
 800fb88:	f840 3b04 	str.w	r3, [r0], #4
 800fb8c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800fb90:	d2e8      	bcs.n	800fb64 <quorem+0xb0>
 800fb92:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800fb96:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800fb9a:	b922      	cbnz	r2, 800fba6 <quorem+0xf2>
 800fb9c:	3b04      	subs	r3, #4
 800fb9e:	429d      	cmp	r5, r3
 800fba0:	461a      	mov	r2, r3
 800fba2:	d30a      	bcc.n	800fbba <quorem+0x106>
 800fba4:	613c      	str	r4, [r7, #16]
 800fba6:	4630      	mov	r0, r6
 800fba8:	b003      	add	sp, #12
 800fbaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fbae:	6812      	ldr	r2, [r2, #0]
 800fbb0:	3b04      	subs	r3, #4
 800fbb2:	2a00      	cmp	r2, #0
 800fbb4:	d1cc      	bne.n	800fb50 <quorem+0x9c>
 800fbb6:	3c01      	subs	r4, #1
 800fbb8:	e7c7      	b.n	800fb4a <quorem+0x96>
 800fbba:	6812      	ldr	r2, [r2, #0]
 800fbbc:	3b04      	subs	r3, #4
 800fbbe:	2a00      	cmp	r2, #0
 800fbc0:	d1f0      	bne.n	800fba4 <quorem+0xf0>
 800fbc2:	3c01      	subs	r4, #1
 800fbc4:	e7eb      	b.n	800fb9e <quorem+0xea>
 800fbc6:	2000      	movs	r0, #0
 800fbc8:	e7ee      	b.n	800fba8 <quorem+0xf4>
 800fbca:	0000      	movs	r0, r0
 800fbcc:	0000      	movs	r0, r0
	...

0800fbd0 <_dtoa_r>:
 800fbd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fbd4:	ed2d 8b04 	vpush	{d8-d9}
 800fbd8:	ec57 6b10 	vmov	r6, r7, d0
 800fbdc:	b093      	sub	sp, #76	; 0x4c
 800fbde:	6a45      	ldr	r5, [r0, #36]	; 0x24
 800fbe0:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 800fbe4:	9106      	str	r1, [sp, #24]
 800fbe6:	ee10 aa10 	vmov	sl, s0
 800fbea:	4604      	mov	r4, r0
 800fbec:	9209      	str	r2, [sp, #36]	; 0x24
 800fbee:	930c      	str	r3, [sp, #48]	; 0x30
 800fbf0:	46bb      	mov	fp, r7
 800fbf2:	b975      	cbnz	r5, 800fc12 <_dtoa_r+0x42>
 800fbf4:	2010      	movs	r0, #16
 800fbf6:	f7fd fe3b 	bl	800d870 <malloc>
 800fbfa:	4602      	mov	r2, r0
 800fbfc:	6260      	str	r0, [r4, #36]	; 0x24
 800fbfe:	b920      	cbnz	r0, 800fc0a <_dtoa_r+0x3a>
 800fc00:	4ba7      	ldr	r3, [pc, #668]	; (800fea0 <_dtoa_r+0x2d0>)
 800fc02:	21ea      	movs	r1, #234	; 0xea
 800fc04:	48a7      	ldr	r0, [pc, #668]	; (800fea4 <_dtoa_r+0x2d4>)
 800fc06:	f7fd fdd3 	bl	800d7b0 <__assert_func>
 800fc0a:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800fc0e:	6005      	str	r5, [r0, #0]
 800fc10:	60c5      	str	r5, [r0, #12]
 800fc12:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800fc14:	6819      	ldr	r1, [r3, #0]
 800fc16:	b151      	cbz	r1, 800fc2e <_dtoa_r+0x5e>
 800fc18:	685a      	ldr	r2, [r3, #4]
 800fc1a:	604a      	str	r2, [r1, #4]
 800fc1c:	2301      	movs	r3, #1
 800fc1e:	4093      	lsls	r3, r2
 800fc20:	608b      	str	r3, [r1, #8]
 800fc22:	4620      	mov	r0, r4
 800fc24:	f001 fbce 	bl	80113c4 <_Bfree>
 800fc28:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800fc2a:	2200      	movs	r2, #0
 800fc2c:	601a      	str	r2, [r3, #0]
 800fc2e:	1e3b      	subs	r3, r7, #0
 800fc30:	bfaa      	itet	ge
 800fc32:	2300      	movge	r3, #0
 800fc34:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 800fc38:	f8c8 3000 	strge.w	r3, [r8]
 800fc3c:	4b9a      	ldr	r3, [pc, #616]	; (800fea8 <_dtoa_r+0x2d8>)
 800fc3e:	bfbc      	itt	lt
 800fc40:	2201      	movlt	r2, #1
 800fc42:	f8c8 2000 	strlt.w	r2, [r8]
 800fc46:	ea33 030b 	bics.w	r3, r3, fp
 800fc4a:	d11b      	bne.n	800fc84 <_dtoa_r+0xb4>
 800fc4c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800fc4e:	f242 730f 	movw	r3, #9999	; 0x270f
 800fc52:	6013      	str	r3, [r2, #0]
 800fc54:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800fc58:	4333      	orrs	r3, r6
 800fc5a:	f000 8592 	beq.w	8010782 <_dtoa_r+0xbb2>
 800fc5e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800fc60:	b963      	cbnz	r3, 800fc7c <_dtoa_r+0xac>
 800fc62:	4b92      	ldr	r3, [pc, #584]	; (800feac <_dtoa_r+0x2dc>)
 800fc64:	e022      	b.n	800fcac <_dtoa_r+0xdc>
 800fc66:	4b92      	ldr	r3, [pc, #584]	; (800feb0 <_dtoa_r+0x2e0>)
 800fc68:	9301      	str	r3, [sp, #4]
 800fc6a:	3308      	adds	r3, #8
 800fc6c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800fc6e:	6013      	str	r3, [r2, #0]
 800fc70:	9801      	ldr	r0, [sp, #4]
 800fc72:	b013      	add	sp, #76	; 0x4c
 800fc74:	ecbd 8b04 	vpop	{d8-d9}
 800fc78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fc7c:	4b8b      	ldr	r3, [pc, #556]	; (800feac <_dtoa_r+0x2dc>)
 800fc7e:	9301      	str	r3, [sp, #4]
 800fc80:	3303      	adds	r3, #3
 800fc82:	e7f3      	b.n	800fc6c <_dtoa_r+0x9c>
 800fc84:	2200      	movs	r2, #0
 800fc86:	2300      	movs	r3, #0
 800fc88:	4650      	mov	r0, sl
 800fc8a:	4659      	mov	r1, fp
 800fc8c:	f7f0 ff24 	bl	8000ad8 <__aeabi_dcmpeq>
 800fc90:	ec4b ab19 	vmov	d9, sl, fp
 800fc94:	4680      	mov	r8, r0
 800fc96:	b158      	cbz	r0, 800fcb0 <_dtoa_r+0xe0>
 800fc98:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800fc9a:	2301      	movs	r3, #1
 800fc9c:	6013      	str	r3, [r2, #0]
 800fc9e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800fca0:	2b00      	cmp	r3, #0
 800fca2:	f000 856b 	beq.w	801077c <_dtoa_r+0xbac>
 800fca6:	4883      	ldr	r0, [pc, #524]	; (800feb4 <_dtoa_r+0x2e4>)
 800fca8:	6018      	str	r0, [r3, #0]
 800fcaa:	1e43      	subs	r3, r0, #1
 800fcac:	9301      	str	r3, [sp, #4]
 800fcae:	e7df      	b.n	800fc70 <_dtoa_r+0xa0>
 800fcb0:	ec4b ab10 	vmov	d0, sl, fp
 800fcb4:	aa10      	add	r2, sp, #64	; 0x40
 800fcb6:	a911      	add	r1, sp, #68	; 0x44
 800fcb8:	4620      	mov	r0, r4
 800fcba:	f001 ff31 	bl	8011b20 <__d2b>
 800fcbe:	f3cb 550a 	ubfx	r5, fp, #20, #11
 800fcc2:	ee08 0a10 	vmov	s16, r0
 800fcc6:	2d00      	cmp	r5, #0
 800fcc8:	f000 8084 	beq.w	800fdd4 <_dtoa_r+0x204>
 800fccc:	ee19 3a90 	vmov	r3, s19
 800fcd0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800fcd4:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 800fcd8:	4656      	mov	r6, sl
 800fcda:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 800fcde:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800fce2:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 800fce6:	4b74      	ldr	r3, [pc, #464]	; (800feb8 <_dtoa_r+0x2e8>)
 800fce8:	2200      	movs	r2, #0
 800fcea:	4630      	mov	r0, r6
 800fcec:	4639      	mov	r1, r7
 800fcee:	f7f0 fad3 	bl	8000298 <__aeabi_dsub>
 800fcf2:	a365      	add	r3, pc, #404	; (adr r3, 800fe88 <_dtoa_r+0x2b8>)
 800fcf4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fcf8:	f7f0 fc86 	bl	8000608 <__aeabi_dmul>
 800fcfc:	a364      	add	r3, pc, #400	; (adr r3, 800fe90 <_dtoa_r+0x2c0>)
 800fcfe:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fd02:	f7f0 facb 	bl	800029c <__adddf3>
 800fd06:	4606      	mov	r6, r0
 800fd08:	4628      	mov	r0, r5
 800fd0a:	460f      	mov	r7, r1
 800fd0c:	f7f0 fc12 	bl	8000534 <__aeabi_i2d>
 800fd10:	a361      	add	r3, pc, #388	; (adr r3, 800fe98 <_dtoa_r+0x2c8>)
 800fd12:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fd16:	f7f0 fc77 	bl	8000608 <__aeabi_dmul>
 800fd1a:	4602      	mov	r2, r0
 800fd1c:	460b      	mov	r3, r1
 800fd1e:	4630      	mov	r0, r6
 800fd20:	4639      	mov	r1, r7
 800fd22:	f7f0 fabb 	bl	800029c <__adddf3>
 800fd26:	4606      	mov	r6, r0
 800fd28:	460f      	mov	r7, r1
 800fd2a:	f7f0 ff1d 	bl	8000b68 <__aeabi_d2iz>
 800fd2e:	2200      	movs	r2, #0
 800fd30:	9000      	str	r0, [sp, #0]
 800fd32:	2300      	movs	r3, #0
 800fd34:	4630      	mov	r0, r6
 800fd36:	4639      	mov	r1, r7
 800fd38:	f7f0 fed8 	bl	8000aec <__aeabi_dcmplt>
 800fd3c:	b150      	cbz	r0, 800fd54 <_dtoa_r+0x184>
 800fd3e:	9800      	ldr	r0, [sp, #0]
 800fd40:	f7f0 fbf8 	bl	8000534 <__aeabi_i2d>
 800fd44:	4632      	mov	r2, r6
 800fd46:	463b      	mov	r3, r7
 800fd48:	f7f0 fec6 	bl	8000ad8 <__aeabi_dcmpeq>
 800fd4c:	b910      	cbnz	r0, 800fd54 <_dtoa_r+0x184>
 800fd4e:	9b00      	ldr	r3, [sp, #0]
 800fd50:	3b01      	subs	r3, #1
 800fd52:	9300      	str	r3, [sp, #0]
 800fd54:	9b00      	ldr	r3, [sp, #0]
 800fd56:	2b16      	cmp	r3, #22
 800fd58:	d85a      	bhi.n	800fe10 <_dtoa_r+0x240>
 800fd5a:	9a00      	ldr	r2, [sp, #0]
 800fd5c:	4b57      	ldr	r3, [pc, #348]	; (800febc <_dtoa_r+0x2ec>)
 800fd5e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800fd62:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fd66:	ec51 0b19 	vmov	r0, r1, d9
 800fd6a:	f7f0 febf 	bl	8000aec <__aeabi_dcmplt>
 800fd6e:	2800      	cmp	r0, #0
 800fd70:	d050      	beq.n	800fe14 <_dtoa_r+0x244>
 800fd72:	9b00      	ldr	r3, [sp, #0]
 800fd74:	3b01      	subs	r3, #1
 800fd76:	9300      	str	r3, [sp, #0]
 800fd78:	2300      	movs	r3, #0
 800fd7a:	930b      	str	r3, [sp, #44]	; 0x2c
 800fd7c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fd7e:	1b5d      	subs	r5, r3, r5
 800fd80:	1e6b      	subs	r3, r5, #1
 800fd82:	9305      	str	r3, [sp, #20]
 800fd84:	bf45      	ittet	mi
 800fd86:	f1c5 0301 	rsbmi	r3, r5, #1
 800fd8a:	9304      	strmi	r3, [sp, #16]
 800fd8c:	2300      	movpl	r3, #0
 800fd8e:	2300      	movmi	r3, #0
 800fd90:	bf4c      	ite	mi
 800fd92:	9305      	strmi	r3, [sp, #20]
 800fd94:	9304      	strpl	r3, [sp, #16]
 800fd96:	9b00      	ldr	r3, [sp, #0]
 800fd98:	2b00      	cmp	r3, #0
 800fd9a:	db3d      	blt.n	800fe18 <_dtoa_r+0x248>
 800fd9c:	9b05      	ldr	r3, [sp, #20]
 800fd9e:	9a00      	ldr	r2, [sp, #0]
 800fda0:	920a      	str	r2, [sp, #40]	; 0x28
 800fda2:	4413      	add	r3, r2
 800fda4:	9305      	str	r3, [sp, #20]
 800fda6:	2300      	movs	r3, #0
 800fda8:	9307      	str	r3, [sp, #28]
 800fdaa:	9b06      	ldr	r3, [sp, #24]
 800fdac:	2b09      	cmp	r3, #9
 800fdae:	f200 8089 	bhi.w	800fec4 <_dtoa_r+0x2f4>
 800fdb2:	2b05      	cmp	r3, #5
 800fdb4:	bfc4      	itt	gt
 800fdb6:	3b04      	subgt	r3, #4
 800fdb8:	9306      	strgt	r3, [sp, #24]
 800fdba:	9b06      	ldr	r3, [sp, #24]
 800fdbc:	f1a3 0302 	sub.w	r3, r3, #2
 800fdc0:	bfcc      	ite	gt
 800fdc2:	2500      	movgt	r5, #0
 800fdc4:	2501      	movle	r5, #1
 800fdc6:	2b03      	cmp	r3, #3
 800fdc8:	f200 8087 	bhi.w	800feda <_dtoa_r+0x30a>
 800fdcc:	e8df f003 	tbb	[pc, r3]
 800fdd0:	59383a2d 	.word	0x59383a2d
 800fdd4:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 800fdd8:	441d      	add	r5, r3
 800fdda:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800fdde:	2b20      	cmp	r3, #32
 800fde0:	bfc1      	itttt	gt
 800fde2:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800fde6:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 800fdea:	fa0b f303 	lslgt.w	r3, fp, r3
 800fdee:	fa26 f000 	lsrgt.w	r0, r6, r0
 800fdf2:	bfda      	itte	le
 800fdf4:	f1c3 0320 	rsble	r3, r3, #32
 800fdf8:	fa06 f003 	lslle.w	r0, r6, r3
 800fdfc:	4318      	orrgt	r0, r3
 800fdfe:	f7f0 fb89 	bl	8000514 <__aeabi_ui2d>
 800fe02:	2301      	movs	r3, #1
 800fe04:	4606      	mov	r6, r0
 800fe06:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 800fe0a:	3d01      	subs	r5, #1
 800fe0c:	930e      	str	r3, [sp, #56]	; 0x38
 800fe0e:	e76a      	b.n	800fce6 <_dtoa_r+0x116>
 800fe10:	2301      	movs	r3, #1
 800fe12:	e7b2      	b.n	800fd7a <_dtoa_r+0x1aa>
 800fe14:	900b      	str	r0, [sp, #44]	; 0x2c
 800fe16:	e7b1      	b.n	800fd7c <_dtoa_r+0x1ac>
 800fe18:	9b04      	ldr	r3, [sp, #16]
 800fe1a:	9a00      	ldr	r2, [sp, #0]
 800fe1c:	1a9b      	subs	r3, r3, r2
 800fe1e:	9304      	str	r3, [sp, #16]
 800fe20:	4253      	negs	r3, r2
 800fe22:	9307      	str	r3, [sp, #28]
 800fe24:	2300      	movs	r3, #0
 800fe26:	930a      	str	r3, [sp, #40]	; 0x28
 800fe28:	e7bf      	b.n	800fdaa <_dtoa_r+0x1da>
 800fe2a:	2300      	movs	r3, #0
 800fe2c:	9308      	str	r3, [sp, #32]
 800fe2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fe30:	2b00      	cmp	r3, #0
 800fe32:	dc55      	bgt.n	800fee0 <_dtoa_r+0x310>
 800fe34:	2301      	movs	r3, #1
 800fe36:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800fe3a:	461a      	mov	r2, r3
 800fe3c:	9209      	str	r2, [sp, #36]	; 0x24
 800fe3e:	e00c      	b.n	800fe5a <_dtoa_r+0x28a>
 800fe40:	2301      	movs	r3, #1
 800fe42:	e7f3      	b.n	800fe2c <_dtoa_r+0x25c>
 800fe44:	2300      	movs	r3, #0
 800fe46:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800fe48:	9308      	str	r3, [sp, #32]
 800fe4a:	9b00      	ldr	r3, [sp, #0]
 800fe4c:	4413      	add	r3, r2
 800fe4e:	9302      	str	r3, [sp, #8]
 800fe50:	3301      	adds	r3, #1
 800fe52:	2b01      	cmp	r3, #1
 800fe54:	9303      	str	r3, [sp, #12]
 800fe56:	bfb8      	it	lt
 800fe58:	2301      	movlt	r3, #1
 800fe5a:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800fe5c:	2200      	movs	r2, #0
 800fe5e:	6042      	str	r2, [r0, #4]
 800fe60:	2204      	movs	r2, #4
 800fe62:	f102 0614 	add.w	r6, r2, #20
 800fe66:	429e      	cmp	r6, r3
 800fe68:	6841      	ldr	r1, [r0, #4]
 800fe6a:	d93d      	bls.n	800fee8 <_dtoa_r+0x318>
 800fe6c:	4620      	mov	r0, r4
 800fe6e:	f001 fa69 	bl	8011344 <_Balloc>
 800fe72:	9001      	str	r0, [sp, #4]
 800fe74:	2800      	cmp	r0, #0
 800fe76:	d13b      	bne.n	800fef0 <_dtoa_r+0x320>
 800fe78:	4b11      	ldr	r3, [pc, #68]	; (800fec0 <_dtoa_r+0x2f0>)
 800fe7a:	4602      	mov	r2, r0
 800fe7c:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 800fe80:	e6c0      	b.n	800fc04 <_dtoa_r+0x34>
 800fe82:	2301      	movs	r3, #1
 800fe84:	e7df      	b.n	800fe46 <_dtoa_r+0x276>
 800fe86:	bf00      	nop
 800fe88:	636f4361 	.word	0x636f4361
 800fe8c:	3fd287a7 	.word	0x3fd287a7
 800fe90:	8b60c8b3 	.word	0x8b60c8b3
 800fe94:	3fc68a28 	.word	0x3fc68a28
 800fe98:	509f79fb 	.word	0x509f79fb
 800fe9c:	3fd34413 	.word	0x3fd34413
 800fea0:	08014abe 	.word	0x08014abe
 800fea4:	08014ad5 	.word	0x08014ad5
 800fea8:	7ff00000 	.word	0x7ff00000
 800feac:	08014aba 	.word	0x08014aba
 800feb0:	08014ab1 	.word	0x08014ab1
 800feb4:	0801492e 	.word	0x0801492e
 800feb8:	3ff80000 	.word	0x3ff80000
 800febc:	08014ca8 	.word	0x08014ca8
 800fec0:	08014b30 	.word	0x08014b30
 800fec4:	2501      	movs	r5, #1
 800fec6:	2300      	movs	r3, #0
 800fec8:	9306      	str	r3, [sp, #24]
 800feca:	9508      	str	r5, [sp, #32]
 800fecc:	f04f 33ff 	mov.w	r3, #4294967295
 800fed0:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800fed4:	2200      	movs	r2, #0
 800fed6:	2312      	movs	r3, #18
 800fed8:	e7b0      	b.n	800fe3c <_dtoa_r+0x26c>
 800feda:	2301      	movs	r3, #1
 800fedc:	9308      	str	r3, [sp, #32]
 800fede:	e7f5      	b.n	800fecc <_dtoa_r+0x2fc>
 800fee0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fee2:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800fee6:	e7b8      	b.n	800fe5a <_dtoa_r+0x28a>
 800fee8:	3101      	adds	r1, #1
 800feea:	6041      	str	r1, [r0, #4]
 800feec:	0052      	lsls	r2, r2, #1
 800feee:	e7b8      	b.n	800fe62 <_dtoa_r+0x292>
 800fef0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800fef2:	9a01      	ldr	r2, [sp, #4]
 800fef4:	601a      	str	r2, [r3, #0]
 800fef6:	9b03      	ldr	r3, [sp, #12]
 800fef8:	2b0e      	cmp	r3, #14
 800fefa:	f200 809d 	bhi.w	8010038 <_dtoa_r+0x468>
 800fefe:	2d00      	cmp	r5, #0
 800ff00:	f000 809a 	beq.w	8010038 <_dtoa_r+0x468>
 800ff04:	9b00      	ldr	r3, [sp, #0]
 800ff06:	2b00      	cmp	r3, #0
 800ff08:	dd32      	ble.n	800ff70 <_dtoa_r+0x3a0>
 800ff0a:	4ab7      	ldr	r2, [pc, #732]	; (80101e8 <_dtoa_r+0x618>)
 800ff0c:	f003 030f 	and.w	r3, r3, #15
 800ff10:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800ff14:	e9d3 8900 	ldrd	r8, r9, [r3]
 800ff18:	9b00      	ldr	r3, [sp, #0]
 800ff1a:	05d8      	lsls	r0, r3, #23
 800ff1c:	ea4f 1723 	mov.w	r7, r3, asr #4
 800ff20:	d516      	bpl.n	800ff50 <_dtoa_r+0x380>
 800ff22:	4bb2      	ldr	r3, [pc, #712]	; (80101ec <_dtoa_r+0x61c>)
 800ff24:	ec51 0b19 	vmov	r0, r1, d9
 800ff28:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800ff2c:	f7f0 fc96 	bl	800085c <__aeabi_ddiv>
 800ff30:	f007 070f 	and.w	r7, r7, #15
 800ff34:	4682      	mov	sl, r0
 800ff36:	468b      	mov	fp, r1
 800ff38:	2503      	movs	r5, #3
 800ff3a:	4eac      	ldr	r6, [pc, #688]	; (80101ec <_dtoa_r+0x61c>)
 800ff3c:	b957      	cbnz	r7, 800ff54 <_dtoa_r+0x384>
 800ff3e:	4642      	mov	r2, r8
 800ff40:	464b      	mov	r3, r9
 800ff42:	4650      	mov	r0, sl
 800ff44:	4659      	mov	r1, fp
 800ff46:	f7f0 fc89 	bl	800085c <__aeabi_ddiv>
 800ff4a:	4682      	mov	sl, r0
 800ff4c:	468b      	mov	fp, r1
 800ff4e:	e028      	b.n	800ffa2 <_dtoa_r+0x3d2>
 800ff50:	2502      	movs	r5, #2
 800ff52:	e7f2      	b.n	800ff3a <_dtoa_r+0x36a>
 800ff54:	07f9      	lsls	r1, r7, #31
 800ff56:	d508      	bpl.n	800ff6a <_dtoa_r+0x39a>
 800ff58:	4640      	mov	r0, r8
 800ff5a:	4649      	mov	r1, r9
 800ff5c:	e9d6 2300 	ldrd	r2, r3, [r6]
 800ff60:	f7f0 fb52 	bl	8000608 <__aeabi_dmul>
 800ff64:	3501      	adds	r5, #1
 800ff66:	4680      	mov	r8, r0
 800ff68:	4689      	mov	r9, r1
 800ff6a:	107f      	asrs	r7, r7, #1
 800ff6c:	3608      	adds	r6, #8
 800ff6e:	e7e5      	b.n	800ff3c <_dtoa_r+0x36c>
 800ff70:	f000 809b 	beq.w	80100aa <_dtoa_r+0x4da>
 800ff74:	9b00      	ldr	r3, [sp, #0]
 800ff76:	4f9d      	ldr	r7, [pc, #628]	; (80101ec <_dtoa_r+0x61c>)
 800ff78:	425e      	negs	r6, r3
 800ff7a:	4b9b      	ldr	r3, [pc, #620]	; (80101e8 <_dtoa_r+0x618>)
 800ff7c:	f006 020f 	and.w	r2, r6, #15
 800ff80:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800ff84:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ff88:	ec51 0b19 	vmov	r0, r1, d9
 800ff8c:	f7f0 fb3c 	bl	8000608 <__aeabi_dmul>
 800ff90:	1136      	asrs	r6, r6, #4
 800ff92:	4682      	mov	sl, r0
 800ff94:	468b      	mov	fp, r1
 800ff96:	2300      	movs	r3, #0
 800ff98:	2502      	movs	r5, #2
 800ff9a:	2e00      	cmp	r6, #0
 800ff9c:	d17a      	bne.n	8010094 <_dtoa_r+0x4c4>
 800ff9e:	2b00      	cmp	r3, #0
 800ffa0:	d1d3      	bne.n	800ff4a <_dtoa_r+0x37a>
 800ffa2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ffa4:	2b00      	cmp	r3, #0
 800ffa6:	f000 8082 	beq.w	80100ae <_dtoa_r+0x4de>
 800ffaa:	4b91      	ldr	r3, [pc, #580]	; (80101f0 <_dtoa_r+0x620>)
 800ffac:	2200      	movs	r2, #0
 800ffae:	4650      	mov	r0, sl
 800ffb0:	4659      	mov	r1, fp
 800ffb2:	f7f0 fd9b 	bl	8000aec <__aeabi_dcmplt>
 800ffb6:	2800      	cmp	r0, #0
 800ffb8:	d079      	beq.n	80100ae <_dtoa_r+0x4de>
 800ffba:	9b03      	ldr	r3, [sp, #12]
 800ffbc:	2b00      	cmp	r3, #0
 800ffbe:	d076      	beq.n	80100ae <_dtoa_r+0x4de>
 800ffc0:	9b02      	ldr	r3, [sp, #8]
 800ffc2:	2b00      	cmp	r3, #0
 800ffc4:	dd36      	ble.n	8010034 <_dtoa_r+0x464>
 800ffc6:	9b00      	ldr	r3, [sp, #0]
 800ffc8:	4650      	mov	r0, sl
 800ffca:	4659      	mov	r1, fp
 800ffcc:	1e5f      	subs	r7, r3, #1
 800ffce:	2200      	movs	r2, #0
 800ffd0:	4b88      	ldr	r3, [pc, #544]	; (80101f4 <_dtoa_r+0x624>)
 800ffd2:	f7f0 fb19 	bl	8000608 <__aeabi_dmul>
 800ffd6:	9e02      	ldr	r6, [sp, #8]
 800ffd8:	4682      	mov	sl, r0
 800ffda:	468b      	mov	fp, r1
 800ffdc:	3501      	adds	r5, #1
 800ffde:	4628      	mov	r0, r5
 800ffe0:	f7f0 faa8 	bl	8000534 <__aeabi_i2d>
 800ffe4:	4652      	mov	r2, sl
 800ffe6:	465b      	mov	r3, fp
 800ffe8:	f7f0 fb0e 	bl	8000608 <__aeabi_dmul>
 800ffec:	4b82      	ldr	r3, [pc, #520]	; (80101f8 <_dtoa_r+0x628>)
 800ffee:	2200      	movs	r2, #0
 800fff0:	f7f0 f954 	bl	800029c <__adddf3>
 800fff4:	46d0      	mov	r8, sl
 800fff6:	46d9      	mov	r9, fp
 800fff8:	4682      	mov	sl, r0
 800fffa:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 800fffe:	2e00      	cmp	r6, #0
 8010000:	d158      	bne.n	80100b4 <_dtoa_r+0x4e4>
 8010002:	4b7e      	ldr	r3, [pc, #504]	; (80101fc <_dtoa_r+0x62c>)
 8010004:	2200      	movs	r2, #0
 8010006:	4640      	mov	r0, r8
 8010008:	4649      	mov	r1, r9
 801000a:	f7f0 f945 	bl	8000298 <__aeabi_dsub>
 801000e:	4652      	mov	r2, sl
 8010010:	465b      	mov	r3, fp
 8010012:	4680      	mov	r8, r0
 8010014:	4689      	mov	r9, r1
 8010016:	f7f0 fd87 	bl	8000b28 <__aeabi_dcmpgt>
 801001a:	2800      	cmp	r0, #0
 801001c:	f040 8295 	bne.w	801054a <_dtoa_r+0x97a>
 8010020:	4652      	mov	r2, sl
 8010022:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 8010026:	4640      	mov	r0, r8
 8010028:	4649      	mov	r1, r9
 801002a:	f7f0 fd5f 	bl	8000aec <__aeabi_dcmplt>
 801002e:	2800      	cmp	r0, #0
 8010030:	f040 8289 	bne.w	8010546 <_dtoa_r+0x976>
 8010034:	ec5b ab19 	vmov	sl, fp, d9
 8010038:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801003a:	2b00      	cmp	r3, #0
 801003c:	f2c0 8148 	blt.w	80102d0 <_dtoa_r+0x700>
 8010040:	9a00      	ldr	r2, [sp, #0]
 8010042:	2a0e      	cmp	r2, #14
 8010044:	f300 8144 	bgt.w	80102d0 <_dtoa_r+0x700>
 8010048:	4b67      	ldr	r3, [pc, #412]	; (80101e8 <_dtoa_r+0x618>)
 801004a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801004e:	e9d3 8900 	ldrd	r8, r9, [r3]
 8010052:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010054:	2b00      	cmp	r3, #0
 8010056:	f280 80d5 	bge.w	8010204 <_dtoa_r+0x634>
 801005a:	9b03      	ldr	r3, [sp, #12]
 801005c:	2b00      	cmp	r3, #0
 801005e:	f300 80d1 	bgt.w	8010204 <_dtoa_r+0x634>
 8010062:	f040 826f 	bne.w	8010544 <_dtoa_r+0x974>
 8010066:	4b65      	ldr	r3, [pc, #404]	; (80101fc <_dtoa_r+0x62c>)
 8010068:	2200      	movs	r2, #0
 801006a:	4640      	mov	r0, r8
 801006c:	4649      	mov	r1, r9
 801006e:	f7f0 facb 	bl	8000608 <__aeabi_dmul>
 8010072:	4652      	mov	r2, sl
 8010074:	465b      	mov	r3, fp
 8010076:	f7f0 fd4d 	bl	8000b14 <__aeabi_dcmpge>
 801007a:	9e03      	ldr	r6, [sp, #12]
 801007c:	4637      	mov	r7, r6
 801007e:	2800      	cmp	r0, #0
 8010080:	f040 8245 	bne.w	801050e <_dtoa_r+0x93e>
 8010084:	9d01      	ldr	r5, [sp, #4]
 8010086:	2331      	movs	r3, #49	; 0x31
 8010088:	f805 3b01 	strb.w	r3, [r5], #1
 801008c:	9b00      	ldr	r3, [sp, #0]
 801008e:	3301      	adds	r3, #1
 8010090:	9300      	str	r3, [sp, #0]
 8010092:	e240      	b.n	8010516 <_dtoa_r+0x946>
 8010094:	07f2      	lsls	r2, r6, #31
 8010096:	d505      	bpl.n	80100a4 <_dtoa_r+0x4d4>
 8010098:	e9d7 2300 	ldrd	r2, r3, [r7]
 801009c:	f7f0 fab4 	bl	8000608 <__aeabi_dmul>
 80100a0:	3501      	adds	r5, #1
 80100a2:	2301      	movs	r3, #1
 80100a4:	1076      	asrs	r6, r6, #1
 80100a6:	3708      	adds	r7, #8
 80100a8:	e777      	b.n	800ff9a <_dtoa_r+0x3ca>
 80100aa:	2502      	movs	r5, #2
 80100ac:	e779      	b.n	800ffa2 <_dtoa_r+0x3d2>
 80100ae:	9f00      	ldr	r7, [sp, #0]
 80100b0:	9e03      	ldr	r6, [sp, #12]
 80100b2:	e794      	b.n	800ffde <_dtoa_r+0x40e>
 80100b4:	9901      	ldr	r1, [sp, #4]
 80100b6:	4b4c      	ldr	r3, [pc, #304]	; (80101e8 <_dtoa_r+0x618>)
 80100b8:	4431      	add	r1, r6
 80100ba:	910d      	str	r1, [sp, #52]	; 0x34
 80100bc:	9908      	ldr	r1, [sp, #32]
 80100be:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 80100c2:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 80100c6:	2900      	cmp	r1, #0
 80100c8:	d043      	beq.n	8010152 <_dtoa_r+0x582>
 80100ca:	494d      	ldr	r1, [pc, #308]	; (8010200 <_dtoa_r+0x630>)
 80100cc:	2000      	movs	r0, #0
 80100ce:	f7f0 fbc5 	bl	800085c <__aeabi_ddiv>
 80100d2:	4652      	mov	r2, sl
 80100d4:	465b      	mov	r3, fp
 80100d6:	f7f0 f8df 	bl	8000298 <__aeabi_dsub>
 80100da:	9d01      	ldr	r5, [sp, #4]
 80100dc:	4682      	mov	sl, r0
 80100de:	468b      	mov	fp, r1
 80100e0:	4649      	mov	r1, r9
 80100e2:	4640      	mov	r0, r8
 80100e4:	f7f0 fd40 	bl	8000b68 <__aeabi_d2iz>
 80100e8:	4606      	mov	r6, r0
 80100ea:	f7f0 fa23 	bl	8000534 <__aeabi_i2d>
 80100ee:	4602      	mov	r2, r0
 80100f0:	460b      	mov	r3, r1
 80100f2:	4640      	mov	r0, r8
 80100f4:	4649      	mov	r1, r9
 80100f6:	f7f0 f8cf 	bl	8000298 <__aeabi_dsub>
 80100fa:	3630      	adds	r6, #48	; 0x30
 80100fc:	f805 6b01 	strb.w	r6, [r5], #1
 8010100:	4652      	mov	r2, sl
 8010102:	465b      	mov	r3, fp
 8010104:	4680      	mov	r8, r0
 8010106:	4689      	mov	r9, r1
 8010108:	f7f0 fcf0 	bl	8000aec <__aeabi_dcmplt>
 801010c:	2800      	cmp	r0, #0
 801010e:	d163      	bne.n	80101d8 <_dtoa_r+0x608>
 8010110:	4642      	mov	r2, r8
 8010112:	464b      	mov	r3, r9
 8010114:	4936      	ldr	r1, [pc, #216]	; (80101f0 <_dtoa_r+0x620>)
 8010116:	2000      	movs	r0, #0
 8010118:	f7f0 f8be 	bl	8000298 <__aeabi_dsub>
 801011c:	4652      	mov	r2, sl
 801011e:	465b      	mov	r3, fp
 8010120:	f7f0 fce4 	bl	8000aec <__aeabi_dcmplt>
 8010124:	2800      	cmp	r0, #0
 8010126:	f040 80b5 	bne.w	8010294 <_dtoa_r+0x6c4>
 801012a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801012c:	429d      	cmp	r5, r3
 801012e:	d081      	beq.n	8010034 <_dtoa_r+0x464>
 8010130:	4b30      	ldr	r3, [pc, #192]	; (80101f4 <_dtoa_r+0x624>)
 8010132:	2200      	movs	r2, #0
 8010134:	4650      	mov	r0, sl
 8010136:	4659      	mov	r1, fp
 8010138:	f7f0 fa66 	bl	8000608 <__aeabi_dmul>
 801013c:	4b2d      	ldr	r3, [pc, #180]	; (80101f4 <_dtoa_r+0x624>)
 801013e:	4682      	mov	sl, r0
 8010140:	468b      	mov	fp, r1
 8010142:	4640      	mov	r0, r8
 8010144:	4649      	mov	r1, r9
 8010146:	2200      	movs	r2, #0
 8010148:	f7f0 fa5e 	bl	8000608 <__aeabi_dmul>
 801014c:	4680      	mov	r8, r0
 801014e:	4689      	mov	r9, r1
 8010150:	e7c6      	b.n	80100e0 <_dtoa_r+0x510>
 8010152:	4650      	mov	r0, sl
 8010154:	4659      	mov	r1, fp
 8010156:	f7f0 fa57 	bl	8000608 <__aeabi_dmul>
 801015a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801015c:	9d01      	ldr	r5, [sp, #4]
 801015e:	930f      	str	r3, [sp, #60]	; 0x3c
 8010160:	4682      	mov	sl, r0
 8010162:	468b      	mov	fp, r1
 8010164:	4649      	mov	r1, r9
 8010166:	4640      	mov	r0, r8
 8010168:	f7f0 fcfe 	bl	8000b68 <__aeabi_d2iz>
 801016c:	4606      	mov	r6, r0
 801016e:	f7f0 f9e1 	bl	8000534 <__aeabi_i2d>
 8010172:	3630      	adds	r6, #48	; 0x30
 8010174:	4602      	mov	r2, r0
 8010176:	460b      	mov	r3, r1
 8010178:	4640      	mov	r0, r8
 801017a:	4649      	mov	r1, r9
 801017c:	f7f0 f88c 	bl	8000298 <__aeabi_dsub>
 8010180:	f805 6b01 	strb.w	r6, [r5], #1
 8010184:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010186:	429d      	cmp	r5, r3
 8010188:	4680      	mov	r8, r0
 801018a:	4689      	mov	r9, r1
 801018c:	f04f 0200 	mov.w	r2, #0
 8010190:	d124      	bne.n	80101dc <_dtoa_r+0x60c>
 8010192:	4b1b      	ldr	r3, [pc, #108]	; (8010200 <_dtoa_r+0x630>)
 8010194:	4650      	mov	r0, sl
 8010196:	4659      	mov	r1, fp
 8010198:	f7f0 f880 	bl	800029c <__adddf3>
 801019c:	4602      	mov	r2, r0
 801019e:	460b      	mov	r3, r1
 80101a0:	4640      	mov	r0, r8
 80101a2:	4649      	mov	r1, r9
 80101a4:	f7f0 fcc0 	bl	8000b28 <__aeabi_dcmpgt>
 80101a8:	2800      	cmp	r0, #0
 80101aa:	d173      	bne.n	8010294 <_dtoa_r+0x6c4>
 80101ac:	4652      	mov	r2, sl
 80101ae:	465b      	mov	r3, fp
 80101b0:	4913      	ldr	r1, [pc, #76]	; (8010200 <_dtoa_r+0x630>)
 80101b2:	2000      	movs	r0, #0
 80101b4:	f7f0 f870 	bl	8000298 <__aeabi_dsub>
 80101b8:	4602      	mov	r2, r0
 80101ba:	460b      	mov	r3, r1
 80101bc:	4640      	mov	r0, r8
 80101be:	4649      	mov	r1, r9
 80101c0:	f7f0 fc94 	bl	8000aec <__aeabi_dcmplt>
 80101c4:	2800      	cmp	r0, #0
 80101c6:	f43f af35 	beq.w	8010034 <_dtoa_r+0x464>
 80101ca:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80101cc:	1e6b      	subs	r3, r5, #1
 80101ce:	930f      	str	r3, [sp, #60]	; 0x3c
 80101d0:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 80101d4:	2b30      	cmp	r3, #48	; 0x30
 80101d6:	d0f8      	beq.n	80101ca <_dtoa_r+0x5fa>
 80101d8:	9700      	str	r7, [sp, #0]
 80101da:	e049      	b.n	8010270 <_dtoa_r+0x6a0>
 80101dc:	4b05      	ldr	r3, [pc, #20]	; (80101f4 <_dtoa_r+0x624>)
 80101de:	f7f0 fa13 	bl	8000608 <__aeabi_dmul>
 80101e2:	4680      	mov	r8, r0
 80101e4:	4689      	mov	r9, r1
 80101e6:	e7bd      	b.n	8010164 <_dtoa_r+0x594>
 80101e8:	08014ca8 	.word	0x08014ca8
 80101ec:	08014c80 	.word	0x08014c80
 80101f0:	3ff00000 	.word	0x3ff00000
 80101f4:	40240000 	.word	0x40240000
 80101f8:	401c0000 	.word	0x401c0000
 80101fc:	40140000 	.word	0x40140000
 8010200:	3fe00000 	.word	0x3fe00000
 8010204:	9d01      	ldr	r5, [sp, #4]
 8010206:	4656      	mov	r6, sl
 8010208:	465f      	mov	r7, fp
 801020a:	4642      	mov	r2, r8
 801020c:	464b      	mov	r3, r9
 801020e:	4630      	mov	r0, r6
 8010210:	4639      	mov	r1, r7
 8010212:	f7f0 fb23 	bl	800085c <__aeabi_ddiv>
 8010216:	f7f0 fca7 	bl	8000b68 <__aeabi_d2iz>
 801021a:	4682      	mov	sl, r0
 801021c:	f7f0 f98a 	bl	8000534 <__aeabi_i2d>
 8010220:	4642      	mov	r2, r8
 8010222:	464b      	mov	r3, r9
 8010224:	f7f0 f9f0 	bl	8000608 <__aeabi_dmul>
 8010228:	4602      	mov	r2, r0
 801022a:	460b      	mov	r3, r1
 801022c:	4630      	mov	r0, r6
 801022e:	4639      	mov	r1, r7
 8010230:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 8010234:	f7f0 f830 	bl	8000298 <__aeabi_dsub>
 8010238:	f805 6b01 	strb.w	r6, [r5], #1
 801023c:	9e01      	ldr	r6, [sp, #4]
 801023e:	9f03      	ldr	r7, [sp, #12]
 8010240:	1bae      	subs	r6, r5, r6
 8010242:	42b7      	cmp	r7, r6
 8010244:	4602      	mov	r2, r0
 8010246:	460b      	mov	r3, r1
 8010248:	d135      	bne.n	80102b6 <_dtoa_r+0x6e6>
 801024a:	f7f0 f827 	bl	800029c <__adddf3>
 801024e:	4642      	mov	r2, r8
 8010250:	464b      	mov	r3, r9
 8010252:	4606      	mov	r6, r0
 8010254:	460f      	mov	r7, r1
 8010256:	f7f0 fc67 	bl	8000b28 <__aeabi_dcmpgt>
 801025a:	b9d0      	cbnz	r0, 8010292 <_dtoa_r+0x6c2>
 801025c:	4642      	mov	r2, r8
 801025e:	464b      	mov	r3, r9
 8010260:	4630      	mov	r0, r6
 8010262:	4639      	mov	r1, r7
 8010264:	f7f0 fc38 	bl	8000ad8 <__aeabi_dcmpeq>
 8010268:	b110      	cbz	r0, 8010270 <_dtoa_r+0x6a0>
 801026a:	f01a 0f01 	tst.w	sl, #1
 801026e:	d110      	bne.n	8010292 <_dtoa_r+0x6c2>
 8010270:	4620      	mov	r0, r4
 8010272:	ee18 1a10 	vmov	r1, s16
 8010276:	f001 f8a5 	bl	80113c4 <_Bfree>
 801027a:	2300      	movs	r3, #0
 801027c:	9800      	ldr	r0, [sp, #0]
 801027e:	702b      	strb	r3, [r5, #0]
 8010280:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8010282:	3001      	adds	r0, #1
 8010284:	6018      	str	r0, [r3, #0]
 8010286:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8010288:	2b00      	cmp	r3, #0
 801028a:	f43f acf1 	beq.w	800fc70 <_dtoa_r+0xa0>
 801028e:	601d      	str	r5, [r3, #0]
 8010290:	e4ee      	b.n	800fc70 <_dtoa_r+0xa0>
 8010292:	9f00      	ldr	r7, [sp, #0]
 8010294:	462b      	mov	r3, r5
 8010296:	461d      	mov	r5, r3
 8010298:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 801029c:	2a39      	cmp	r2, #57	; 0x39
 801029e:	d106      	bne.n	80102ae <_dtoa_r+0x6de>
 80102a0:	9a01      	ldr	r2, [sp, #4]
 80102a2:	429a      	cmp	r2, r3
 80102a4:	d1f7      	bne.n	8010296 <_dtoa_r+0x6c6>
 80102a6:	9901      	ldr	r1, [sp, #4]
 80102a8:	2230      	movs	r2, #48	; 0x30
 80102aa:	3701      	adds	r7, #1
 80102ac:	700a      	strb	r2, [r1, #0]
 80102ae:	781a      	ldrb	r2, [r3, #0]
 80102b0:	3201      	adds	r2, #1
 80102b2:	701a      	strb	r2, [r3, #0]
 80102b4:	e790      	b.n	80101d8 <_dtoa_r+0x608>
 80102b6:	4ba6      	ldr	r3, [pc, #664]	; (8010550 <_dtoa_r+0x980>)
 80102b8:	2200      	movs	r2, #0
 80102ba:	f7f0 f9a5 	bl	8000608 <__aeabi_dmul>
 80102be:	2200      	movs	r2, #0
 80102c0:	2300      	movs	r3, #0
 80102c2:	4606      	mov	r6, r0
 80102c4:	460f      	mov	r7, r1
 80102c6:	f7f0 fc07 	bl	8000ad8 <__aeabi_dcmpeq>
 80102ca:	2800      	cmp	r0, #0
 80102cc:	d09d      	beq.n	801020a <_dtoa_r+0x63a>
 80102ce:	e7cf      	b.n	8010270 <_dtoa_r+0x6a0>
 80102d0:	9a08      	ldr	r2, [sp, #32]
 80102d2:	2a00      	cmp	r2, #0
 80102d4:	f000 80d7 	beq.w	8010486 <_dtoa_r+0x8b6>
 80102d8:	9a06      	ldr	r2, [sp, #24]
 80102da:	2a01      	cmp	r2, #1
 80102dc:	f300 80ba 	bgt.w	8010454 <_dtoa_r+0x884>
 80102e0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80102e2:	2a00      	cmp	r2, #0
 80102e4:	f000 80b2 	beq.w	801044c <_dtoa_r+0x87c>
 80102e8:	f203 4333 	addw	r3, r3, #1075	; 0x433
 80102ec:	9e07      	ldr	r6, [sp, #28]
 80102ee:	9d04      	ldr	r5, [sp, #16]
 80102f0:	9a04      	ldr	r2, [sp, #16]
 80102f2:	441a      	add	r2, r3
 80102f4:	9204      	str	r2, [sp, #16]
 80102f6:	9a05      	ldr	r2, [sp, #20]
 80102f8:	2101      	movs	r1, #1
 80102fa:	441a      	add	r2, r3
 80102fc:	4620      	mov	r0, r4
 80102fe:	9205      	str	r2, [sp, #20]
 8010300:	f001 f962 	bl	80115c8 <__i2b>
 8010304:	4607      	mov	r7, r0
 8010306:	2d00      	cmp	r5, #0
 8010308:	dd0c      	ble.n	8010324 <_dtoa_r+0x754>
 801030a:	9b05      	ldr	r3, [sp, #20]
 801030c:	2b00      	cmp	r3, #0
 801030e:	dd09      	ble.n	8010324 <_dtoa_r+0x754>
 8010310:	42ab      	cmp	r3, r5
 8010312:	9a04      	ldr	r2, [sp, #16]
 8010314:	bfa8      	it	ge
 8010316:	462b      	movge	r3, r5
 8010318:	1ad2      	subs	r2, r2, r3
 801031a:	9204      	str	r2, [sp, #16]
 801031c:	9a05      	ldr	r2, [sp, #20]
 801031e:	1aed      	subs	r5, r5, r3
 8010320:	1ad3      	subs	r3, r2, r3
 8010322:	9305      	str	r3, [sp, #20]
 8010324:	9b07      	ldr	r3, [sp, #28]
 8010326:	b31b      	cbz	r3, 8010370 <_dtoa_r+0x7a0>
 8010328:	9b08      	ldr	r3, [sp, #32]
 801032a:	2b00      	cmp	r3, #0
 801032c:	f000 80af 	beq.w	801048e <_dtoa_r+0x8be>
 8010330:	2e00      	cmp	r6, #0
 8010332:	dd13      	ble.n	801035c <_dtoa_r+0x78c>
 8010334:	4639      	mov	r1, r7
 8010336:	4632      	mov	r2, r6
 8010338:	4620      	mov	r0, r4
 801033a:	f001 fa05 	bl	8011748 <__pow5mult>
 801033e:	ee18 2a10 	vmov	r2, s16
 8010342:	4601      	mov	r1, r0
 8010344:	4607      	mov	r7, r0
 8010346:	4620      	mov	r0, r4
 8010348:	f001 f954 	bl	80115f4 <__multiply>
 801034c:	ee18 1a10 	vmov	r1, s16
 8010350:	4680      	mov	r8, r0
 8010352:	4620      	mov	r0, r4
 8010354:	f001 f836 	bl	80113c4 <_Bfree>
 8010358:	ee08 8a10 	vmov	s16, r8
 801035c:	9b07      	ldr	r3, [sp, #28]
 801035e:	1b9a      	subs	r2, r3, r6
 8010360:	d006      	beq.n	8010370 <_dtoa_r+0x7a0>
 8010362:	ee18 1a10 	vmov	r1, s16
 8010366:	4620      	mov	r0, r4
 8010368:	f001 f9ee 	bl	8011748 <__pow5mult>
 801036c:	ee08 0a10 	vmov	s16, r0
 8010370:	2101      	movs	r1, #1
 8010372:	4620      	mov	r0, r4
 8010374:	f001 f928 	bl	80115c8 <__i2b>
 8010378:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801037a:	2b00      	cmp	r3, #0
 801037c:	4606      	mov	r6, r0
 801037e:	f340 8088 	ble.w	8010492 <_dtoa_r+0x8c2>
 8010382:	461a      	mov	r2, r3
 8010384:	4601      	mov	r1, r0
 8010386:	4620      	mov	r0, r4
 8010388:	f001 f9de 	bl	8011748 <__pow5mult>
 801038c:	9b06      	ldr	r3, [sp, #24]
 801038e:	2b01      	cmp	r3, #1
 8010390:	4606      	mov	r6, r0
 8010392:	f340 8081 	ble.w	8010498 <_dtoa_r+0x8c8>
 8010396:	f04f 0800 	mov.w	r8, #0
 801039a:	6933      	ldr	r3, [r6, #16]
 801039c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 80103a0:	6918      	ldr	r0, [r3, #16]
 80103a2:	f001 f8c1 	bl	8011528 <__hi0bits>
 80103a6:	f1c0 0020 	rsb	r0, r0, #32
 80103aa:	9b05      	ldr	r3, [sp, #20]
 80103ac:	4418      	add	r0, r3
 80103ae:	f010 001f 	ands.w	r0, r0, #31
 80103b2:	f000 8092 	beq.w	80104da <_dtoa_r+0x90a>
 80103b6:	f1c0 0320 	rsb	r3, r0, #32
 80103ba:	2b04      	cmp	r3, #4
 80103bc:	f340 808a 	ble.w	80104d4 <_dtoa_r+0x904>
 80103c0:	f1c0 001c 	rsb	r0, r0, #28
 80103c4:	9b04      	ldr	r3, [sp, #16]
 80103c6:	4403      	add	r3, r0
 80103c8:	9304      	str	r3, [sp, #16]
 80103ca:	9b05      	ldr	r3, [sp, #20]
 80103cc:	4403      	add	r3, r0
 80103ce:	4405      	add	r5, r0
 80103d0:	9305      	str	r3, [sp, #20]
 80103d2:	9b04      	ldr	r3, [sp, #16]
 80103d4:	2b00      	cmp	r3, #0
 80103d6:	dd07      	ble.n	80103e8 <_dtoa_r+0x818>
 80103d8:	ee18 1a10 	vmov	r1, s16
 80103dc:	461a      	mov	r2, r3
 80103de:	4620      	mov	r0, r4
 80103e0:	f001 fa0c 	bl	80117fc <__lshift>
 80103e4:	ee08 0a10 	vmov	s16, r0
 80103e8:	9b05      	ldr	r3, [sp, #20]
 80103ea:	2b00      	cmp	r3, #0
 80103ec:	dd05      	ble.n	80103fa <_dtoa_r+0x82a>
 80103ee:	4631      	mov	r1, r6
 80103f0:	461a      	mov	r2, r3
 80103f2:	4620      	mov	r0, r4
 80103f4:	f001 fa02 	bl	80117fc <__lshift>
 80103f8:	4606      	mov	r6, r0
 80103fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80103fc:	2b00      	cmp	r3, #0
 80103fe:	d06e      	beq.n	80104de <_dtoa_r+0x90e>
 8010400:	ee18 0a10 	vmov	r0, s16
 8010404:	4631      	mov	r1, r6
 8010406:	f001 fa69 	bl	80118dc <__mcmp>
 801040a:	2800      	cmp	r0, #0
 801040c:	da67      	bge.n	80104de <_dtoa_r+0x90e>
 801040e:	9b00      	ldr	r3, [sp, #0]
 8010410:	3b01      	subs	r3, #1
 8010412:	ee18 1a10 	vmov	r1, s16
 8010416:	9300      	str	r3, [sp, #0]
 8010418:	220a      	movs	r2, #10
 801041a:	2300      	movs	r3, #0
 801041c:	4620      	mov	r0, r4
 801041e:	f000 fff3 	bl	8011408 <__multadd>
 8010422:	9b08      	ldr	r3, [sp, #32]
 8010424:	ee08 0a10 	vmov	s16, r0
 8010428:	2b00      	cmp	r3, #0
 801042a:	f000 81b1 	beq.w	8010790 <_dtoa_r+0xbc0>
 801042e:	2300      	movs	r3, #0
 8010430:	4639      	mov	r1, r7
 8010432:	220a      	movs	r2, #10
 8010434:	4620      	mov	r0, r4
 8010436:	f000 ffe7 	bl	8011408 <__multadd>
 801043a:	9b02      	ldr	r3, [sp, #8]
 801043c:	2b00      	cmp	r3, #0
 801043e:	4607      	mov	r7, r0
 8010440:	f300 808e 	bgt.w	8010560 <_dtoa_r+0x990>
 8010444:	9b06      	ldr	r3, [sp, #24]
 8010446:	2b02      	cmp	r3, #2
 8010448:	dc51      	bgt.n	80104ee <_dtoa_r+0x91e>
 801044a:	e089      	b.n	8010560 <_dtoa_r+0x990>
 801044c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801044e:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8010452:	e74b      	b.n	80102ec <_dtoa_r+0x71c>
 8010454:	9b03      	ldr	r3, [sp, #12]
 8010456:	1e5e      	subs	r6, r3, #1
 8010458:	9b07      	ldr	r3, [sp, #28]
 801045a:	42b3      	cmp	r3, r6
 801045c:	bfbf      	itttt	lt
 801045e:	9b07      	ldrlt	r3, [sp, #28]
 8010460:	9607      	strlt	r6, [sp, #28]
 8010462:	1af2      	sublt	r2, r6, r3
 8010464:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8010466:	bfb6      	itet	lt
 8010468:	189b      	addlt	r3, r3, r2
 801046a:	1b9e      	subge	r6, r3, r6
 801046c:	930a      	strlt	r3, [sp, #40]	; 0x28
 801046e:	9b03      	ldr	r3, [sp, #12]
 8010470:	bfb8      	it	lt
 8010472:	2600      	movlt	r6, #0
 8010474:	2b00      	cmp	r3, #0
 8010476:	bfb7      	itett	lt
 8010478:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 801047c:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 8010480:	1a9d      	sublt	r5, r3, r2
 8010482:	2300      	movlt	r3, #0
 8010484:	e734      	b.n	80102f0 <_dtoa_r+0x720>
 8010486:	9e07      	ldr	r6, [sp, #28]
 8010488:	9d04      	ldr	r5, [sp, #16]
 801048a:	9f08      	ldr	r7, [sp, #32]
 801048c:	e73b      	b.n	8010306 <_dtoa_r+0x736>
 801048e:	9a07      	ldr	r2, [sp, #28]
 8010490:	e767      	b.n	8010362 <_dtoa_r+0x792>
 8010492:	9b06      	ldr	r3, [sp, #24]
 8010494:	2b01      	cmp	r3, #1
 8010496:	dc18      	bgt.n	80104ca <_dtoa_r+0x8fa>
 8010498:	f1ba 0f00 	cmp.w	sl, #0
 801049c:	d115      	bne.n	80104ca <_dtoa_r+0x8fa>
 801049e:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80104a2:	b993      	cbnz	r3, 80104ca <_dtoa_r+0x8fa>
 80104a4:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 80104a8:	0d1b      	lsrs	r3, r3, #20
 80104aa:	051b      	lsls	r3, r3, #20
 80104ac:	b183      	cbz	r3, 80104d0 <_dtoa_r+0x900>
 80104ae:	9b04      	ldr	r3, [sp, #16]
 80104b0:	3301      	adds	r3, #1
 80104b2:	9304      	str	r3, [sp, #16]
 80104b4:	9b05      	ldr	r3, [sp, #20]
 80104b6:	3301      	adds	r3, #1
 80104b8:	9305      	str	r3, [sp, #20]
 80104ba:	f04f 0801 	mov.w	r8, #1
 80104be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80104c0:	2b00      	cmp	r3, #0
 80104c2:	f47f af6a 	bne.w	801039a <_dtoa_r+0x7ca>
 80104c6:	2001      	movs	r0, #1
 80104c8:	e76f      	b.n	80103aa <_dtoa_r+0x7da>
 80104ca:	f04f 0800 	mov.w	r8, #0
 80104ce:	e7f6      	b.n	80104be <_dtoa_r+0x8ee>
 80104d0:	4698      	mov	r8, r3
 80104d2:	e7f4      	b.n	80104be <_dtoa_r+0x8ee>
 80104d4:	f43f af7d 	beq.w	80103d2 <_dtoa_r+0x802>
 80104d8:	4618      	mov	r0, r3
 80104da:	301c      	adds	r0, #28
 80104dc:	e772      	b.n	80103c4 <_dtoa_r+0x7f4>
 80104de:	9b03      	ldr	r3, [sp, #12]
 80104e0:	2b00      	cmp	r3, #0
 80104e2:	dc37      	bgt.n	8010554 <_dtoa_r+0x984>
 80104e4:	9b06      	ldr	r3, [sp, #24]
 80104e6:	2b02      	cmp	r3, #2
 80104e8:	dd34      	ble.n	8010554 <_dtoa_r+0x984>
 80104ea:	9b03      	ldr	r3, [sp, #12]
 80104ec:	9302      	str	r3, [sp, #8]
 80104ee:	9b02      	ldr	r3, [sp, #8]
 80104f0:	b96b      	cbnz	r3, 801050e <_dtoa_r+0x93e>
 80104f2:	4631      	mov	r1, r6
 80104f4:	2205      	movs	r2, #5
 80104f6:	4620      	mov	r0, r4
 80104f8:	f000 ff86 	bl	8011408 <__multadd>
 80104fc:	4601      	mov	r1, r0
 80104fe:	4606      	mov	r6, r0
 8010500:	ee18 0a10 	vmov	r0, s16
 8010504:	f001 f9ea 	bl	80118dc <__mcmp>
 8010508:	2800      	cmp	r0, #0
 801050a:	f73f adbb 	bgt.w	8010084 <_dtoa_r+0x4b4>
 801050e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010510:	9d01      	ldr	r5, [sp, #4]
 8010512:	43db      	mvns	r3, r3
 8010514:	9300      	str	r3, [sp, #0]
 8010516:	f04f 0800 	mov.w	r8, #0
 801051a:	4631      	mov	r1, r6
 801051c:	4620      	mov	r0, r4
 801051e:	f000 ff51 	bl	80113c4 <_Bfree>
 8010522:	2f00      	cmp	r7, #0
 8010524:	f43f aea4 	beq.w	8010270 <_dtoa_r+0x6a0>
 8010528:	f1b8 0f00 	cmp.w	r8, #0
 801052c:	d005      	beq.n	801053a <_dtoa_r+0x96a>
 801052e:	45b8      	cmp	r8, r7
 8010530:	d003      	beq.n	801053a <_dtoa_r+0x96a>
 8010532:	4641      	mov	r1, r8
 8010534:	4620      	mov	r0, r4
 8010536:	f000 ff45 	bl	80113c4 <_Bfree>
 801053a:	4639      	mov	r1, r7
 801053c:	4620      	mov	r0, r4
 801053e:	f000 ff41 	bl	80113c4 <_Bfree>
 8010542:	e695      	b.n	8010270 <_dtoa_r+0x6a0>
 8010544:	2600      	movs	r6, #0
 8010546:	4637      	mov	r7, r6
 8010548:	e7e1      	b.n	801050e <_dtoa_r+0x93e>
 801054a:	9700      	str	r7, [sp, #0]
 801054c:	4637      	mov	r7, r6
 801054e:	e599      	b.n	8010084 <_dtoa_r+0x4b4>
 8010550:	40240000 	.word	0x40240000
 8010554:	9b08      	ldr	r3, [sp, #32]
 8010556:	2b00      	cmp	r3, #0
 8010558:	f000 80ca 	beq.w	80106f0 <_dtoa_r+0xb20>
 801055c:	9b03      	ldr	r3, [sp, #12]
 801055e:	9302      	str	r3, [sp, #8]
 8010560:	2d00      	cmp	r5, #0
 8010562:	dd05      	ble.n	8010570 <_dtoa_r+0x9a0>
 8010564:	4639      	mov	r1, r7
 8010566:	462a      	mov	r2, r5
 8010568:	4620      	mov	r0, r4
 801056a:	f001 f947 	bl	80117fc <__lshift>
 801056e:	4607      	mov	r7, r0
 8010570:	f1b8 0f00 	cmp.w	r8, #0
 8010574:	d05b      	beq.n	801062e <_dtoa_r+0xa5e>
 8010576:	6879      	ldr	r1, [r7, #4]
 8010578:	4620      	mov	r0, r4
 801057a:	f000 fee3 	bl	8011344 <_Balloc>
 801057e:	4605      	mov	r5, r0
 8010580:	b928      	cbnz	r0, 801058e <_dtoa_r+0x9be>
 8010582:	4b87      	ldr	r3, [pc, #540]	; (80107a0 <_dtoa_r+0xbd0>)
 8010584:	4602      	mov	r2, r0
 8010586:	f240 21ea 	movw	r1, #746	; 0x2ea
 801058a:	f7ff bb3b 	b.w	800fc04 <_dtoa_r+0x34>
 801058e:	693a      	ldr	r2, [r7, #16]
 8010590:	3202      	adds	r2, #2
 8010592:	0092      	lsls	r2, r2, #2
 8010594:	f107 010c 	add.w	r1, r7, #12
 8010598:	300c      	adds	r0, #12
 801059a:	f7fd f979 	bl	800d890 <memcpy>
 801059e:	2201      	movs	r2, #1
 80105a0:	4629      	mov	r1, r5
 80105a2:	4620      	mov	r0, r4
 80105a4:	f001 f92a 	bl	80117fc <__lshift>
 80105a8:	9b01      	ldr	r3, [sp, #4]
 80105aa:	f103 0901 	add.w	r9, r3, #1
 80105ae:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 80105b2:	4413      	add	r3, r2
 80105b4:	9305      	str	r3, [sp, #20]
 80105b6:	f00a 0301 	and.w	r3, sl, #1
 80105ba:	46b8      	mov	r8, r7
 80105bc:	9304      	str	r3, [sp, #16]
 80105be:	4607      	mov	r7, r0
 80105c0:	4631      	mov	r1, r6
 80105c2:	ee18 0a10 	vmov	r0, s16
 80105c6:	f7ff fa75 	bl	800fab4 <quorem>
 80105ca:	4641      	mov	r1, r8
 80105cc:	9002      	str	r0, [sp, #8]
 80105ce:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 80105d2:	ee18 0a10 	vmov	r0, s16
 80105d6:	f001 f981 	bl	80118dc <__mcmp>
 80105da:	463a      	mov	r2, r7
 80105dc:	9003      	str	r0, [sp, #12]
 80105de:	4631      	mov	r1, r6
 80105e0:	4620      	mov	r0, r4
 80105e2:	f001 f997 	bl	8011914 <__mdiff>
 80105e6:	68c2      	ldr	r2, [r0, #12]
 80105e8:	f109 3bff 	add.w	fp, r9, #4294967295
 80105ec:	4605      	mov	r5, r0
 80105ee:	bb02      	cbnz	r2, 8010632 <_dtoa_r+0xa62>
 80105f0:	4601      	mov	r1, r0
 80105f2:	ee18 0a10 	vmov	r0, s16
 80105f6:	f001 f971 	bl	80118dc <__mcmp>
 80105fa:	4602      	mov	r2, r0
 80105fc:	4629      	mov	r1, r5
 80105fe:	4620      	mov	r0, r4
 8010600:	9207      	str	r2, [sp, #28]
 8010602:	f000 fedf 	bl	80113c4 <_Bfree>
 8010606:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 801060a:	ea43 0102 	orr.w	r1, r3, r2
 801060e:	9b04      	ldr	r3, [sp, #16]
 8010610:	430b      	orrs	r3, r1
 8010612:	464d      	mov	r5, r9
 8010614:	d10f      	bne.n	8010636 <_dtoa_r+0xa66>
 8010616:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 801061a:	d02a      	beq.n	8010672 <_dtoa_r+0xaa2>
 801061c:	9b03      	ldr	r3, [sp, #12]
 801061e:	2b00      	cmp	r3, #0
 8010620:	dd02      	ble.n	8010628 <_dtoa_r+0xa58>
 8010622:	9b02      	ldr	r3, [sp, #8]
 8010624:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 8010628:	f88b a000 	strb.w	sl, [fp]
 801062c:	e775      	b.n	801051a <_dtoa_r+0x94a>
 801062e:	4638      	mov	r0, r7
 8010630:	e7ba      	b.n	80105a8 <_dtoa_r+0x9d8>
 8010632:	2201      	movs	r2, #1
 8010634:	e7e2      	b.n	80105fc <_dtoa_r+0xa2c>
 8010636:	9b03      	ldr	r3, [sp, #12]
 8010638:	2b00      	cmp	r3, #0
 801063a:	db04      	blt.n	8010646 <_dtoa_r+0xa76>
 801063c:	9906      	ldr	r1, [sp, #24]
 801063e:	430b      	orrs	r3, r1
 8010640:	9904      	ldr	r1, [sp, #16]
 8010642:	430b      	orrs	r3, r1
 8010644:	d122      	bne.n	801068c <_dtoa_r+0xabc>
 8010646:	2a00      	cmp	r2, #0
 8010648:	ddee      	ble.n	8010628 <_dtoa_r+0xa58>
 801064a:	ee18 1a10 	vmov	r1, s16
 801064e:	2201      	movs	r2, #1
 8010650:	4620      	mov	r0, r4
 8010652:	f001 f8d3 	bl	80117fc <__lshift>
 8010656:	4631      	mov	r1, r6
 8010658:	ee08 0a10 	vmov	s16, r0
 801065c:	f001 f93e 	bl	80118dc <__mcmp>
 8010660:	2800      	cmp	r0, #0
 8010662:	dc03      	bgt.n	801066c <_dtoa_r+0xa9c>
 8010664:	d1e0      	bne.n	8010628 <_dtoa_r+0xa58>
 8010666:	f01a 0f01 	tst.w	sl, #1
 801066a:	d0dd      	beq.n	8010628 <_dtoa_r+0xa58>
 801066c:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8010670:	d1d7      	bne.n	8010622 <_dtoa_r+0xa52>
 8010672:	2339      	movs	r3, #57	; 0x39
 8010674:	f88b 3000 	strb.w	r3, [fp]
 8010678:	462b      	mov	r3, r5
 801067a:	461d      	mov	r5, r3
 801067c:	3b01      	subs	r3, #1
 801067e:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8010682:	2a39      	cmp	r2, #57	; 0x39
 8010684:	d071      	beq.n	801076a <_dtoa_r+0xb9a>
 8010686:	3201      	adds	r2, #1
 8010688:	701a      	strb	r2, [r3, #0]
 801068a:	e746      	b.n	801051a <_dtoa_r+0x94a>
 801068c:	2a00      	cmp	r2, #0
 801068e:	dd07      	ble.n	80106a0 <_dtoa_r+0xad0>
 8010690:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8010694:	d0ed      	beq.n	8010672 <_dtoa_r+0xaa2>
 8010696:	f10a 0301 	add.w	r3, sl, #1
 801069a:	f88b 3000 	strb.w	r3, [fp]
 801069e:	e73c      	b.n	801051a <_dtoa_r+0x94a>
 80106a0:	9b05      	ldr	r3, [sp, #20]
 80106a2:	f809 ac01 	strb.w	sl, [r9, #-1]
 80106a6:	4599      	cmp	r9, r3
 80106a8:	d047      	beq.n	801073a <_dtoa_r+0xb6a>
 80106aa:	ee18 1a10 	vmov	r1, s16
 80106ae:	2300      	movs	r3, #0
 80106b0:	220a      	movs	r2, #10
 80106b2:	4620      	mov	r0, r4
 80106b4:	f000 fea8 	bl	8011408 <__multadd>
 80106b8:	45b8      	cmp	r8, r7
 80106ba:	ee08 0a10 	vmov	s16, r0
 80106be:	f04f 0300 	mov.w	r3, #0
 80106c2:	f04f 020a 	mov.w	r2, #10
 80106c6:	4641      	mov	r1, r8
 80106c8:	4620      	mov	r0, r4
 80106ca:	d106      	bne.n	80106da <_dtoa_r+0xb0a>
 80106cc:	f000 fe9c 	bl	8011408 <__multadd>
 80106d0:	4680      	mov	r8, r0
 80106d2:	4607      	mov	r7, r0
 80106d4:	f109 0901 	add.w	r9, r9, #1
 80106d8:	e772      	b.n	80105c0 <_dtoa_r+0x9f0>
 80106da:	f000 fe95 	bl	8011408 <__multadd>
 80106de:	4639      	mov	r1, r7
 80106e0:	4680      	mov	r8, r0
 80106e2:	2300      	movs	r3, #0
 80106e4:	220a      	movs	r2, #10
 80106e6:	4620      	mov	r0, r4
 80106e8:	f000 fe8e 	bl	8011408 <__multadd>
 80106ec:	4607      	mov	r7, r0
 80106ee:	e7f1      	b.n	80106d4 <_dtoa_r+0xb04>
 80106f0:	9b03      	ldr	r3, [sp, #12]
 80106f2:	9302      	str	r3, [sp, #8]
 80106f4:	9d01      	ldr	r5, [sp, #4]
 80106f6:	ee18 0a10 	vmov	r0, s16
 80106fa:	4631      	mov	r1, r6
 80106fc:	f7ff f9da 	bl	800fab4 <quorem>
 8010700:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 8010704:	9b01      	ldr	r3, [sp, #4]
 8010706:	f805 ab01 	strb.w	sl, [r5], #1
 801070a:	1aea      	subs	r2, r5, r3
 801070c:	9b02      	ldr	r3, [sp, #8]
 801070e:	4293      	cmp	r3, r2
 8010710:	dd09      	ble.n	8010726 <_dtoa_r+0xb56>
 8010712:	ee18 1a10 	vmov	r1, s16
 8010716:	2300      	movs	r3, #0
 8010718:	220a      	movs	r2, #10
 801071a:	4620      	mov	r0, r4
 801071c:	f000 fe74 	bl	8011408 <__multadd>
 8010720:	ee08 0a10 	vmov	s16, r0
 8010724:	e7e7      	b.n	80106f6 <_dtoa_r+0xb26>
 8010726:	9b02      	ldr	r3, [sp, #8]
 8010728:	2b00      	cmp	r3, #0
 801072a:	bfc8      	it	gt
 801072c:	461d      	movgt	r5, r3
 801072e:	9b01      	ldr	r3, [sp, #4]
 8010730:	bfd8      	it	le
 8010732:	2501      	movle	r5, #1
 8010734:	441d      	add	r5, r3
 8010736:	f04f 0800 	mov.w	r8, #0
 801073a:	ee18 1a10 	vmov	r1, s16
 801073e:	2201      	movs	r2, #1
 8010740:	4620      	mov	r0, r4
 8010742:	f001 f85b 	bl	80117fc <__lshift>
 8010746:	4631      	mov	r1, r6
 8010748:	ee08 0a10 	vmov	s16, r0
 801074c:	f001 f8c6 	bl	80118dc <__mcmp>
 8010750:	2800      	cmp	r0, #0
 8010752:	dc91      	bgt.n	8010678 <_dtoa_r+0xaa8>
 8010754:	d102      	bne.n	801075c <_dtoa_r+0xb8c>
 8010756:	f01a 0f01 	tst.w	sl, #1
 801075a:	d18d      	bne.n	8010678 <_dtoa_r+0xaa8>
 801075c:	462b      	mov	r3, r5
 801075e:	461d      	mov	r5, r3
 8010760:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8010764:	2a30      	cmp	r2, #48	; 0x30
 8010766:	d0fa      	beq.n	801075e <_dtoa_r+0xb8e>
 8010768:	e6d7      	b.n	801051a <_dtoa_r+0x94a>
 801076a:	9a01      	ldr	r2, [sp, #4]
 801076c:	429a      	cmp	r2, r3
 801076e:	d184      	bne.n	801067a <_dtoa_r+0xaaa>
 8010770:	9b00      	ldr	r3, [sp, #0]
 8010772:	3301      	adds	r3, #1
 8010774:	9300      	str	r3, [sp, #0]
 8010776:	2331      	movs	r3, #49	; 0x31
 8010778:	7013      	strb	r3, [r2, #0]
 801077a:	e6ce      	b.n	801051a <_dtoa_r+0x94a>
 801077c:	4b09      	ldr	r3, [pc, #36]	; (80107a4 <_dtoa_r+0xbd4>)
 801077e:	f7ff ba95 	b.w	800fcac <_dtoa_r+0xdc>
 8010782:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8010784:	2b00      	cmp	r3, #0
 8010786:	f47f aa6e 	bne.w	800fc66 <_dtoa_r+0x96>
 801078a:	4b07      	ldr	r3, [pc, #28]	; (80107a8 <_dtoa_r+0xbd8>)
 801078c:	f7ff ba8e 	b.w	800fcac <_dtoa_r+0xdc>
 8010790:	9b02      	ldr	r3, [sp, #8]
 8010792:	2b00      	cmp	r3, #0
 8010794:	dcae      	bgt.n	80106f4 <_dtoa_r+0xb24>
 8010796:	9b06      	ldr	r3, [sp, #24]
 8010798:	2b02      	cmp	r3, #2
 801079a:	f73f aea8 	bgt.w	80104ee <_dtoa_r+0x91e>
 801079e:	e7a9      	b.n	80106f4 <_dtoa_r+0xb24>
 80107a0:	08014b30 	.word	0x08014b30
 80107a4:	0801492d 	.word	0x0801492d
 80107a8:	08014ab1 	.word	0x08014ab1

080107ac <__sflush_r>:
 80107ac:	898a      	ldrh	r2, [r1, #12]
 80107ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80107b2:	4605      	mov	r5, r0
 80107b4:	0710      	lsls	r0, r2, #28
 80107b6:	460c      	mov	r4, r1
 80107b8:	d458      	bmi.n	801086c <__sflush_r+0xc0>
 80107ba:	684b      	ldr	r3, [r1, #4]
 80107bc:	2b00      	cmp	r3, #0
 80107be:	dc05      	bgt.n	80107cc <__sflush_r+0x20>
 80107c0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80107c2:	2b00      	cmp	r3, #0
 80107c4:	dc02      	bgt.n	80107cc <__sflush_r+0x20>
 80107c6:	2000      	movs	r0, #0
 80107c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80107cc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80107ce:	2e00      	cmp	r6, #0
 80107d0:	d0f9      	beq.n	80107c6 <__sflush_r+0x1a>
 80107d2:	2300      	movs	r3, #0
 80107d4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80107d8:	682f      	ldr	r7, [r5, #0]
 80107da:	602b      	str	r3, [r5, #0]
 80107dc:	d032      	beq.n	8010844 <__sflush_r+0x98>
 80107de:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80107e0:	89a3      	ldrh	r3, [r4, #12]
 80107e2:	075a      	lsls	r2, r3, #29
 80107e4:	d505      	bpl.n	80107f2 <__sflush_r+0x46>
 80107e6:	6863      	ldr	r3, [r4, #4]
 80107e8:	1ac0      	subs	r0, r0, r3
 80107ea:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80107ec:	b10b      	cbz	r3, 80107f2 <__sflush_r+0x46>
 80107ee:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80107f0:	1ac0      	subs	r0, r0, r3
 80107f2:	2300      	movs	r3, #0
 80107f4:	4602      	mov	r2, r0
 80107f6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80107f8:	6a21      	ldr	r1, [r4, #32]
 80107fa:	4628      	mov	r0, r5
 80107fc:	47b0      	blx	r6
 80107fe:	1c43      	adds	r3, r0, #1
 8010800:	89a3      	ldrh	r3, [r4, #12]
 8010802:	d106      	bne.n	8010812 <__sflush_r+0x66>
 8010804:	6829      	ldr	r1, [r5, #0]
 8010806:	291d      	cmp	r1, #29
 8010808:	d82c      	bhi.n	8010864 <__sflush_r+0xb8>
 801080a:	4a2a      	ldr	r2, [pc, #168]	; (80108b4 <__sflush_r+0x108>)
 801080c:	40ca      	lsrs	r2, r1
 801080e:	07d6      	lsls	r6, r2, #31
 8010810:	d528      	bpl.n	8010864 <__sflush_r+0xb8>
 8010812:	2200      	movs	r2, #0
 8010814:	6062      	str	r2, [r4, #4]
 8010816:	04d9      	lsls	r1, r3, #19
 8010818:	6922      	ldr	r2, [r4, #16]
 801081a:	6022      	str	r2, [r4, #0]
 801081c:	d504      	bpl.n	8010828 <__sflush_r+0x7c>
 801081e:	1c42      	adds	r2, r0, #1
 8010820:	d101      	bne.n	8010826 <__sflush_r+0x7a>
 8010822:	682b      	ldr	r3, [r5, #0]
 8010824:	b903      	cbnz	r3, 8010828 <__sflush_r+0x7c>
 8010826:	6560      	str	r0, [r4, #84]	; 0x54
 8010828:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801082a:	602f      	str	r7, [r5, #0]
 801082c:	2900      	cmp	r1, #0
 801082e:	d0ca      	beq.n	80107c6 <__sflush_r+0x1a>
 8010830:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8010834:	4299      	cmp	r1, r3
 8010836:	d002      	beq.n	801083e <__sflush_r+0x92>
 8010838:	4628      	mov	r0, r5
 801083a:	f7fd f83f 	bl	800d8bc <_free_r>
 801083e:	2000      	movs	r0, #0
 8010840:	6360      	str	r0, [r4, #52]	; 0x34
 8010842:	e7c1      	b.n	80107c8 <__sflush_r+0x1c>
 8010844:	6a21      	ldr	r1, [r4, #32]
 8010846:	2301      	movs	r3, #1
 8010848:	4628      	mov	r0, r5
 801084a:	47b0      	blx	r6
 801084c:	1c41      	adds	r1, r0, #1
 801084e:	d1c7      	bne.n	80107e0 <__sflush_r+0x34>
 8010850:	682b      	ldr	r3, [r5, #0]
 8010852:	2b00      	cmp	r3, #0
 8010854:	d0c4      	beq.n	80107e0 <__sflush_r+0x34>
 8010856:	2b1d      	cmp	r3, #29
 8010858:	d001      	beq.n	801085e <__sflush_r+0xb2>
 801085a:	2b16      	cmp	r3, #22
 801085c:	d101      	bne.n	8010862 <__sflush_r+0xb6>
 801085e:	602f      	str	r7, [r5, #0]
 8010860:	e7b1      	b.n	80107c6 <__sflush_r+0x1a>
 8010862:	89a3      	ldrh	r3, [r4, #12]
 8010864:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8010868:	81a3      	strh	r3, [r4, #12]
 801086a:	e7ad      	b.n	80107c8 <__sflush_r+0x1c>
 801086c:	690f      	ldr	r7, [r1, #16]
 801086e:	2f00      	cmp	r7, #0
 8010870:	d0a9      	beq.n	80107c6 <__sflush_r+0x1a>
 8010872:	0793      	lsls	r3, r2, #30
 8010874:	680e      	ldr	r6, [r1, #0]
 8010876:	bf08      	it	eq
 8010878:	694b      	ldreq	r3, [r1, #20]
 801087a:	600f      	str	r7, [r1, #0]
 801087c:	bf18      	it	ne
 801087e:	2300      	movne	r3, #0
 8010880:	eba6 0807 	sub.w	r8, r6, r7
 8010884:	608b      	str	r3, [r1, #8]
 8010886:	f1b8 0f00 	cmp.w	r8, #0
 801088a:	dd9c      	ble.n	80107c6 <__sflush_r+0x1a>
 801088c:	6a21      	ldr	r1, [r4, #32]
 801088e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8010890:	4643      	mov	r3, r8
 8010892:	463a      	mov	r2, r7
 8010894:	4628      	mov	r0, r5
 8010896:	47b0      	blx	r6
 8010898:	2800      	cmp	r0, #0
 801089a:	dc06      	bgt.n	80108aa <__sflush_r+0xfe>
 801089c:	89a3      	ldrh	r3, [r4, #12]
 801089e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80108a2:	81a3      	strh	r3, [r4, #12]
 80108a4:	f04f 30ff 	mov.w	r0, #4294967295
 80108a8:	e78e      	b.n	80107c8 <__sflush_r+0x1c>
 80108aa:	4407      	add	r7, r0
 80108ac:	eba8 0800 	sub.w	r8, r8, r0
 80108b0:	e7e9      	b.n	8010886 <__sflush_r+0xda>
 80108b2:	bf00      	nop
 80108b4:	20400001 	.word	0x20400001

080108b8 <_fflush_r>:
 80108b8:	b538      	push	{r3, r4, r5, lr}
 80108ba:	690b      	ldr	r3, [r1, #16]
 80108bc:	4605      	mov	r5, r0
 80108be:	460c      	mov	r4, r1
 80108c0:	b913      	cbnz	r3, 80108c8 <_fflush_r+0x10>
 80108c2:	2500      	movs	r5, #0
 80108c4:	4628      	mov	r0, r5
 80108c6:	bd38      	pop	{r3, r4, r5, pc}
 80108c8:	b118      	cbz	r0, 80108d2 <_fflush_r+0x1a>
 80108ca:	6983      	ldr	r3, [r0, #24]
 80108cc:	b90b      	cbnz	r3, 80108d2 <_fflush_r+0x1a>
 80108ce:	f000 f887 	bl	80109e0 <__sinit>
 80108d2:	4b14      	ldr	r3, [pc, #80]	; (8010924 <_fflush_r+0x6c>)
 80108d4:	429c      	cmp	r4, r3
 80108d6:	d11b      	bne.n	8010910 <_fflush_r+0x58>
 80108d8:	686c      	ldr	r4, [r5, #4]
 80108da:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80108de:	2b00      	cmp	r3, #0
 80108e0:	d0ef      	beq.n	80108c2 <_fflush_r+0xa>
 80108e2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80108e4:	07d0      	lsls	r0, r2, #31
 80108e6:	d404      	bmi.n	80108f2 <_fflush_r+0x3a>
 80108e8:	0599      	lsls	r1, r3, #22
 80108ea:	d402      	bmi.n	80108f2 <_fflush_r+0x3a>
 80108ec:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80108ee:	f000 fc88 	bl	8011202 <__retarget_lock_acquire_recursive>
 80108f2:	4628      	mov	r0, r5
 80108f4:	4621      	mov	r1, r4
 80108f6:	f7ff ff59 	bl	80107ac <__sflush_r>
 80108fa:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80108fc:	07da      	lsls	r2, r3, #31
 80108fe:	4605      	mov	r5, r0
 8010900:	d4e0      	bmi.n	80108c4 <_fflush_r+0xc>
 8010902:	89a3      	ldrh	r3, [r4, #12]
 8010904:	059b      	lsls	r3, r3, #22
 8010906:	d4dd      	bmi.n	80108c4 <_fflush_r+0xc>
 8010908:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801090a:	f000 fc7c 	bl	8011206 <__retarget_lock_release_recursive>
 801090e:	e7d9      	b.n	80108c4 <_fflush_r+0xc>
 8010910:	4b05      	ldr	r3, [pc, #20]	; (8010928 <_fflush_r+0x70>)
 8010912:	429c      	cmp	r4, r3
 8010914:	d101      	bne.n	801091a <_fflush_r+0x62>
 8010916:	68ac      	ldr	r4, [r5, #8]
 8010918:	e7df      	b.n	80108da <_fflush_r+0x22>
 801091a:	4b04      	ldr	r3, [pc, #16]	; (801092c <_fflush_r+0x74>)
 801091c:	429c      	cmp	r4, r3
 801091e:	bf08      	it	eq
 8010920:	68ec      	ldreq	r4, [r5, #12]
 8010922:	e7da      	b.n	80108da <_fflush_r+0x22>
 8010924:	08014b64 	.word	0x08014b64
 8010928:	08014b84 	.word	0x08014b84
 801092c:	08014b44 	.word	0x08014b44

08010930 <std>:
 8010930:	2300      	movs	r3, #0
 8010932:	b510      	push	{r4, lr}
 8010934:	4604      	mov	r4, r0
 8010936:	e9c0 3300 	strd	r3, r3, [r0]
 801093a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801093e:	6083      	str	r3, [r0, #8]
 8010940:	8181      	strh	r1, [r0, #12]
 8010942:	6643      	str	r3, [r0, #100]	; 0x64
 8010944:	81c2      	strh	r2, [r0, #14]
 8010946:	6183      	str	r3, [r0, #24]
 8010948:	4619      	mov	r1, r3
 801094a:	2208      	movs	r2, #8
 801094c:	305c      	adds	r0, #92	; 0x5c
 801094e:	f7fc ffad 	bl	800d8ac <memset>
 8010952:	4b05      	ldr	r3, [pc, #20]	; (8010968 <std+0x38>)
 8010954:	6263      	str	r3, [r4, #36]	; 0x24
 8010956:	4b05      	ldr	r3, [pc, #20]	; (801096c <std+0x3c>)
 8010958:	62a3      	str	r3, [r4, #40]	; 0x28
 801095a:	4b05      	ldr	r3, [pc, #20]	; (8010970 <std+0x40>)
 801095c:	62e3      	str	r3, [r4, #44]	; 0x2c
 801095e:	4b05      	ldr	r3, [pc, #20]	; (8010974 <std+0x44>)
 8010960:	6224      	str	r4, [r4, #32]
 8010962:	6323      	str	r3, [r4, #48]	; 0x30
 8010964:	bd10      	pop	{r4, pc}
 8010966:	bf00      	nop
 8010968:	08012009 	.word	0x08012009
 801096c:	0801202b 	.word	0x0801202b
 8010970:	08012063 	.word	0x08012063
 8010974:	08012087 	.word	0x08012087

08010978 <_cleanup_r>:
 8010978:	4901      	ldr	r1, [pc, #4]	; (8010980 <_cleanup_r+0x8>)
 801097a:	f000 b8af 	b.w	8010adc <_fwalk_reent>
 801097e:	bf00      	nop
 8010980:	080108b9 	.word	0x080108b9

08010984 <__sfmoreglue>:
 8010984:	b570      	push	{r4, r5, r6, lr}
 8010986:	2268      	movs	r2, #104	; 0x68
 8010988:	1e4d      	subs	r5, r1, #1
 801098a:	4355      	muls	r5, r2
 801098c:	460e      	mov	r6, r1
 801098e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8010992:	f7fc ffff 	bl	800d994 <_malloc_r>
 8010996:	4604      	mov	r4, r0
 8010998:	b140      	cbz	r0, 80109ac <__sfmoreglue+0x28>
 801099a:	2100      	movs	r1, #0
 801099c:	e9c0 1600 	strd	r1, r6, [r0]
 80109a0:	300c      	adds	r0, #12
 80109a2:	60a0      	str	r0, [r4, #8]
 80109a4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80109a8:	f7fc ff80 	bl	800d8ac <memset>
 80109ac:	4620      	mov	r0, r4
 80109ae:	bd70      	pop	{r4, r5, r6, pc}

080109b0 <__sfp_lock_acquire>:
 80109b0:	4801      	ldr	r0, [pc, #4]	; (80109b8 <__sfp_lock_acquire+0x8>)
 80109b2:	f000 bc26 	b.w	8011202 <__retarget_lock_acquire_recursive>
 80109b6:	bf00      	nop
 80109b8:	200023fe 	.word	0x200023fe

080109bc <__sfp_lock_release>:
 80109bc:	4801      	ldr	r0, [pc, #4]	; (80109c4 <__sfp_lock_release+0x8>)
 80109be:	f000 bc22 	b.w	8011206 <__retarget_lock_release_recursive>
 80109c2:	bf00      	nop
 80109c4:	200023fe 	.word	0x200023fe

080109c8 <__sinit_lock_acquire>:
 80109c8:	4801      	ldr	r0, [pc, #4]	; (80109d0 <__sinit_lock_acquire+0x8>)
 80109ca:	f000 bc1a 	b.w	8011202 <__retarget_lock_acquire_recursive>
 80109ce:	bf00      	nop
 80109d0:	200023ff 	.word	0x200023ff

080109d4 <__sinit_lock_release>:
 80109d4:	4801      	ldr	r0, [pc, #4]	; (80109dc <__sinit_lock_release+0x8>)
 80109d6:	f000 bc16 	b.w	8011206 <__retarget_lock_release_recursive>
 80109da:	bf00      	nop
 80109dc:	200023ff 	.word	0x200023ff

080109e0 <__sinit>:
 80109e0:	b510      	push	{r4, lr}
 80109e2:	4604      	mov	r4, r0
 80109e4:	f7ff fff0 	bl	80109c8 <__sinit_lock_acquire>
 80109e8:	69a3      	ldr	r3, [r4, #24]
 80109ea:	b11b      	cbz	r3, 80109f4 <__sinit+0x14>
 80109ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80109f0:	f7ff bff0 	b.w	80109d4 <__sinit_lock_release>
 80109f4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80109f8:	6523      	str	r3, [r4, #80]	; 0x50
 80109fa:	4b13      	ldr	r3, [pc, #76]	; (8010a48 <__sinit+0x68>)
 80109fc:	4a13      	ldr	r2, [pc, #76]	; (8010a4c <__sinit+0x6c>)
 80109fe:	681b      	ldr	r3, [r3, #0]
 8010a00:	62a2      	str	r2, [r4, #40]	; 0x28
 8010a02:	42a3      	cmp	r3, r4
 8010a04:	bf04      	itt	eq
 8010a06:	2301      	moveq	r3, #1
 8010a08:	61a3      	streq	r3, [r4, #24]
 8010a0a:	4620      	mov	r0, r4
 8010a0c:	f000 f820 	bl	8010a50 <__sfp>
 8010a10:	6060      	str	r0, [r4, #4]
 8010a12:	4620      	mov	r0, r4
 8010a14:	f000 f81c 	bl	8010a50 <__sfp>
 8010a18:	60a0      	str	r0, [r4, #8]
 8010a1a:	4620      	mov	r0, r4
 8010a1c:	f000 f818 	bl	8010a50 <__sfp>
 8010a20:	2200      	movs	r2, #0
 8010a22:	60e0      	str	r0, [r4, #12]
 8010a24:	2104      	movs	r1, #4
 8010a26:	6860      	ldr	r0, [r4, #4]
 8010a28:	f7ff ff82 	bl	8010930 <std>
 8010a2c:	68a0      	ldr	r0, [r4, #8]
 8010a2e:	2201      	movs	r2, #1
 8010a30:	2109      	movs	r1, #9
 8010a32:	f7ff ff7d 	bl	8010930 <std>
 8010a36:	68e0      	ldr	r0, [r4, #12]
 8010a38:	2202      	movs	r2, #2
 8010a3a:	2112      	movs	r1, #18
 8010a3c:	f7ff ff78 	bl	8010930 <std>
 8010a40:	2301      	movs	r3, #1
 8010a42:	61a3      	str	r3, [r4, #24]
 8010a44:	e7d2      	b.n	80109ec <__sinit+0xc>
 8010a46:	bf00      	nop
 8010a48:	08014908 	.word	0x08014908
 8010a4c:	08010979 	.word	0x08010979

08010a50 <__sfp>:
 8010a50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010a52:	4607      	mov	r7, r0
 8010a54:	f7ff ffac 	bl	80109b0 <__sfp_lock_acquire>
 8010a58:	4b1e      	ldr	r3, [pc, #120]	; (8010ad4 <__sfp+0x84>)
 8010a5a:	681e      	ldr	r6, [r3, #0]
 8010a5c:	69b3      	ldr	r3, [r6, #24]
 8010a5e:	b913      	cbnz	r3, 8010a66 <__sfp+0x16>
 8010a60:	4630      	mov	r0, r6
 8010a62:	f7ff ffbd 	bl	80109e0 <__sinit>
 8010a66:	3648      	adds	r6, #72	; 0x48
 8010a68:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8010a6c:	3b01      	subs	r3, #1
 8010a6e:	d503      	bpl.n	8010a78 <__sfp+0x28>
 8010a70:	6833      	ldr	r3, [r6, #0]
 8010a72:	b30b      	cbz	r3, 8010ab8 <__sfp+0x68>
 8010a74:	6836      	ldr	r6, [r6, #0]
 8010a76:	e7f7      	b.n	8010a68 <__sfp+0x18>
 8010a78:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8010a7c:	b9d5      	cbnz	r5, 8010ab4 <__sfp+0x64>
 8010a7e:	4b16      	ldr	r3, [pc, #88]	; (8010ad8 <__sfp+0x88>)
 8010a80:	60e3      	str	r3, [r4, #12]
 8010a82:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8010a86:	6665      	str	r5, [r4, #100]	; 0x64
 8010a88:	f000 fbba 	bl	8011200 <__retarget_lock_init_recursive>
 8010a8c:	f7ff ff96 	bl	80109bc <__sfp_lock_release>
 8010a90:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8010a94:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8010a98:	6025      	str	r5, [r4, #0]
 8010a9a:	61a5      	str	r5, [r4, #24]
 8010a9c:	2208      	movs	r2, #8
 8010a9e:	4629      	mov	r1, r5
 8010aa0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8010aa4:	f7fc ff02 	bl	800d8ac <memset>
 8010aa8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8010aac:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8010ab0:	4620      	mov	r0, r4
 8010ab2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010ab4:	3468      	adds	r4, #104	; 0x68
 8010ab6:	e7d9      	b.n	8010a6c <__sfp+0x1c>
 8010ab8:	2104      	movs	r1, #4
 8010aba:	4638      	mov	r0, r7
 8010abc:	f7ff ff62 	bl	8010984 <__sfmoreglue>
 8010ac0:	4604      	mov	r4, r0
 8010ac2:	6030      	str	r0, [r6, #0]
 8010ac4:	2800      	cmp	r0, #0
 8010ac6:	d1d5      	bne.n	8010a74 <__sfp+0x24>
 8010ac8:	f7ff ff78 	bl	80109bc <__sfp_lock_release>
 8010acc:	230c      	movs	r3, #12
 8010ace:	603b      	str	r3, [r7, #0]
 8010ad0:	e7ee      	b.n	8010ab0 <__sfp+0x60>
 8010ad2:	bf00      	nop
 8010ad4:	08014908 	.word	0x08014908
 8010ad8:	ffff0001 	.word	0xffff0001

08010adc <_fwalk_reent>:
 8010adc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010ae0:	4606      	mov	r6, r0
 8010ae2:	4688      	mov	r8, r1
 8010ae4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8010ae8:	2700      	movs	r7, #0
 8010aea:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8010aee:	f1b9 0901 	subs.w	r9, r9, #1
 8010af2:	d505      	bpl.n	8010b00 <_fwalk_reent+0x24>
 8010af4:	6824      	ldr	r4, [r4, #0]
 8010af6:	2c00      	cmp	r4, #0
 8010af8:	d1f7      	bne.n	8010aea <_fwalk_reent+0xe>
 8010afa:	4638      	mov	r0, r7
 8010afc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010b00:	89ab      	ldrh	r3, [r5, #12]
 8010b02:	2b01      	cmp	r3, #1
 8010b04:	d907      	bls.n	8010b16 <_fwalk_reent+0x3a>
 8010b06:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8010b0a:	3301      	adds	r3, #1
 8010b0c:	d003      	beq.n	8010b16 <_fwalk_reent+0x3a>
 8010b0e:	4629      	mov	r1, r5
 8010b10:	4630      	mov	r0, r6
 8010b12:	47c0      	blx	r8
 8010b14:	4307      	orrs	r7, r0
 8010b16:	3568      	adds	r5, #104	; 0x68
 8010b18:	e7e9      	b.n	8010aee <_fwalk_reent+0x12>

08010b1a <rshift>:
 8010b1a:	6903      	ldr	r3, [r0, #16]
 8010b1c:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8010b20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010b24:	ea4f 1261 	mov.w	r2, r1, asr #5
 8010b28:	f100 0414 	add.w	r4, r0, #20
 8010b2c:	dd45      	ble.n	8010bba <rshift+0xa0>
 8010b2e:	f011 011f 	ands.w	r1, r1, #31
 8010b32:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8010b36:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8010b3a:	d10c      	bne.n	8010b56 <rshift+0x3c>
 8010b3c:	f100 0710 	add.w	r7, r0, #16
 8010b40:	4629      	mov	r1, r5
 8010b42:	42b1      	cmp	r1, r6
 8010b44:	d334      	bcc.n	8010bb0 <rshift+0x96>
 8010b46:	1a9b      	subs	r3, r3, r2
 8010b48:	009b      	lsls	r3, r3, #2
 8010b4a:	1eea      	subs	r2, r5, #3
 8010b4c:	4296      	cmp	r6, r2
 8010b4e:	bf38      	it	cc
 8010b50:	2300      	movcc	r3, #0
 8010b52:	4423      	add	r3, r4
 8010b54:	e015      	b.n	8010b82 <rshift+0x68>
 8010b56:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8010b5a:	f1c1 0820 	rsb	r8, r1, #32
 8010b5e:	40cf      	lsrs	r7, r1
 8010b60:	f105 0e04 	add.w	lr, r5, #4
 8010b64:	46a1      	mov	r9, r4
 8010b66:	4576      	cmp	r6, lr
 8010b68:	46f4      	mov	ip, lr
 8010b6a:	d815      	bhi.n	8010b98 <rshift+0x7e>
 8010b6c:	1a9a      	subs	r2, r3, r2
 8010b6e:	0092      	lsls	r2, r2, #2
 8010b70:	3a04      	subs	r2, #4
 8010b72:	3501      	adds	r5, #1
 8010b74:	42ae      	cmp	r6, r5
 8010b76:	bf38      	it	cc
 8010b78:	2200      	movcc	r2, #0
 8010b7a:	18a3      	adds	r3, r4, r2
 8010b7c:	50a7      	str	r7, [r4, r2]
 8010b7e:	b107      	cbz	r7, 8010b82 <rshift+0x68>
 8010b80:	3304      	adds	r3, #4
 8010b82:	1b1a      	subs	r2, r3, r4
 8010b84:	42a3      	cmp	r3, r4
 8010b86:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8010b8a:	bf08      	it	eq
 8010b8c:	2300      	moveq	r3, #0
 8010b8e:	6102      	str	r2, [r0, #16]
 8010b90:	bf08      	it	eq
 8010b92:	6143      	streq	r3, [r0, #20]
 8010b94:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010b98:	f8dc c000 	ldr.w	ip, [ip]
 8010b9c:	fa0c fc08 	lsl.w	ip, ip, r8
 8010ba0:	ea4c 0707 	orr.w	r7, ip, r7
 8010ba4:	f849 7b04 	str.w	r7, [r9], #4
 8010ba8:	f85e 7b04 	ldr.w	r7, [lr], #4
 8010bac:	40cf      	lsrs	r7, r1
 8010bae:	e7da      	b.n	8010b66 <rshift+0x4c>
 8010bb0:	f851 cb04 	ldr.w	ip, [r1], #4
 8010bb4:	f847 cf04 	str.w	ip, [r7, #4]!
 8010bb8:	e7c3      	b.n	8010b42 <rshift+0x28>
 8010bba:	4623      	mov	r3, r4
 8010bbc:	e7e1      	b.n	8010b82 <rshift+0x68>

08010bbe <__hexdig_fun>:
 8010bbe:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8010bc2:	2b09      	cmp	r3, #9
 8010bc4:	d802      	bhi.n	8010bcc <__hexdig_fun+0xe>
 8010bc6:	3820      	subs	r0, #32
 8010bc8:	b2c0      	uxtb	r0, r0
 8010bca:	4770      	bx	lr
 8010bcc:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 8010bd0:	2b05      	cmp	r3, #5
 8010bd2:	d801      	bhi.n	8010bd8 <__hexdig_fun+0x1a>
 8010bd4:	3847      	subs	r0, #71	; 0x47
 8010bd6:	e7f7      	b.n	8010bc8 <__hexdig_fun+0xa>
 8010bd8:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8010bdc:	2b05      	cmp	r3, #5
 8010bde:	d801      	bhi.n	8010be4 <__hexdig_fun+0x26>
 8010be0:	3827      	subs	r0, #39	; 0x27
 8010be2:	e7f1      	b.n	8010bc8 <__hexdig_fun+0xa>
 8010be4:	2000      	movs	r0, #0
 8010be6:	4770      	bx	lr

08010be8 <__gethex>:
 8010be8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010bec:	ed2d 8b02 	vpush	{d8}
 8010bf0:	b089      	sub	sp, #36	; 0x24
 8010bf2:	ee08 0a10 	vmov	s16, r0
 8010bf6:	9304      	str	r3, [sp, #16]
 8010bf8:	4bb4      	ldr	r3, [pc, #720]	; (8010ecc <__gethex+0x2e4>)
 8010bfa:	681b      	ldr	r3, [r3, #0]
 8010bfc:	9301      	str	r3, [sp, #4]
 8010bfe:	4618      	mov	r0, r3
 8010c00:	468b      	mov	fp, r1
 8010c02:	4690      	mov	r8, r2
 8010c04:	f7ef faec 	bl	80001e0 <strlen>
 8010c08:	9b01      	ldr	r3, [sp, #4]
 8010c0a:	f8db 2000 	ldr.w	r2, [fp]
 8010c0e:	4403      	add	r3, r0
 8010c10:	4682      	mov	sl, r0
 8010c12:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8010c16:	9305      	str	r3, [sp, #20]
 8010c18:	1c93      	adds	r3, r2, #2
 8010c1a:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 8010c1e:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 8010c22:	32fe      	adds	r2, #254	; 0xfe
 8010c24:	18d1      	adds	r1, r2, r3
 8010c26:	461f      	mov	r7, r3
 8010c28:	f813 0b01 	ldrb.w	r0, [r3], #1
 8010c2c:	9100      	str	r1, [sp, #0]
 8010c2e:	2830      	cmp	r0, #48	; 0x30
 8010c30:	d0f8      	beq.n	8010c24 <__gethex+0x3c>
 8010c32:	f7ff ffc4 	bl	8010bbe <__hexdig_fun>
 8010c36:	4604      	mov	r4, r0
 8010c38:	2800      	cmp	r0, #0
 8010c3a:	d13a      	bne.n	8010cb2 <__gethex+0xca>
 8010c3c:	9901      	ldr	r1, [sp, #4]
 8010c3e:	4652      	mov	r2, sl
 8010c40:	4638      	mov	r0, r7
 8010c42:	f001 fa24 	bl	801208e <strncmp>
 8010c46:	4605      	mov	r5, r0
 8010c48:	2800      	cmp	r0, #0
 8010c4a:	d168      	bne.n	8010d1e <__gethex+0x136>
 8010c4c:	f817 000a 	ldrb.w	r0, [r7, sl]
 8010c50:	eb07 060a 	add.w	r6, r7, sl
 8010c54:	f7ff ffb3 	bl	8010bbe <__hexdig_fun>
 8010c58:	2800      	cmp	r0, #0
 8010c5a:	d062      	beq.n	8010d22 <__gethex+0x13a>
 8010c5c:	4633      	mov	r3, r6
 8010c5e:	7818      	ldrb	r0, [r3, #0]
 8010c60:	2830      	cmp	r0, #48	; 0x30
 8010c62:	461f      	mov	r7, r3
 8010c64:	f103 0301 	add.w	r3, r3, #1
 8010c68:	d0f9      	beq.n	8010c5e <__gethex+0x76>
 8010c6a:	f7ff ffa8 	bl	8010bbe <__hexdig_fun>
 8010c6e:	2301      	movs	r3, #1
 8010c70:	fab0 f480 	clz	r4, r0
 8010c74:	0964      	lsrs	r4, r4, #5
 8010c76:	4635      	mov	r5, r6
 8010c78:	9300      	str	r3, [sp, #0]
 8010c7a:	463a      	mov	r2, r7
 8010c7c:	4616      	mov	r6, r2
 8010c7e:	3201      	adds	r2, #1
 8010c80:	7830      	ldrb	r0, [r6, #0]
 8010c82:	f7ff ff9c 	bl	8010bbe <__hexdig_fun>
 8010c86:	2800      	cmp	r0, #0
 8010c88:	d1f8      	bne.n	8010c7c <__gethex+0x94>
 8010c8a:	9901      	ldr	r1, [sp, #4]
 8010c8c:	4652      	mov	r2, sl
 8010c8e:	4630      	mov	r0, r6
 8010c90:	f001 f9fd 	bl	801208e <strncmp>
 8010c94:	b980      	cbnz	r0, 8010cb8 <__gethex+0xd0>
 8010c96:	b94d      	cbnz	r5, 8010cac <__gethex+0xc4>
 8010c98:	eb06 050a 	add.w	r5, r6, sl
 8010c9c:	462a      	mov	r2, r5
 8010c9e:	4616      	mov	r6, r2
 8010ca0:	3201      	adds	r2, #1
 8010ca2:	7830      	ldrb	r0, [r6, #0]
 8010ca4:	f7ff ff8b 	bl	8010bbe <__hexdig_fun>
 8010ca8:	2800      	cmp	r0, #0
 8010caa:	d1f8      	bne.n	8010c9e <__gethex+0xb6>
 8010cac:	1bad      	subs	r5, r5, r6
 8010cae:	00ad      	lsls	r5, r5, #2
 8010cb0:	e004      	b.n	8010cbc <__gethex+0xd4>
 8010cb2:	2400      	movs	r4, #0
 8010cb4:	4625      	mov	r5, r4
 8010cb6:	e7e0      	b.n	8010c7a <__gethex+0x92>
 8010cb8:	2d00      	cmp	r5, #0
 8010cba:	d1f7      	bne.n	8010cac <__gethex+0xc4>
 8010cbc:	7833      	ldrb	r3, [r6, #0]
 8010cbe:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8010cc2:	2b50      	cmp	r3, #80	; 0x50
 8010cc4:	d13b      	bne.n	8010d3e <__gethex+0x156>
 8010cc6:	7873      	ldrb	r3, [r6, #1]
 8010cc8:	2b2b      	cmp	r3, #43	; 0x2b
 8010cca:	d02c      	beq.n	8010d26 <__gethex+0x13e>
 8010ccc:	2b2d      	cmp	r3, #45	; 0x2d
 8010cce:	d02e      	beq.n	8010d2e <__gethex+0x146>
 8010cd0:	1c71      	adds	r1, r6, #1
 8010cd2:	f04f 0900 	mov.w	r9, #0
 8010cd6:	7808      	ldrb	r0, [r1, #0]
 8010cd8:	f7ff ff71 	bl	8010bbe <__hexdig_fun>
 8010cdc:	1e43      	subs	r3, r0, #1
 8010cde:	b2db      	uxtb	r3, r3
 8010ce0:	2b18      	cmp	r3, #24
 8010ce2:	d82c      	bhi.n	8010d3e <__gethex+0x156>
 8010ce4:	f1a0 0210 	sub.w	r2, r0, #16
 8010ce8:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8010cec:	f7ff ff67 	bl	8010bbe <__hexdig_fun>
 8010cf0:	1e43      	subs	r3, r0, #1
 8010cf2:	b2db      	uxtb	r3, r3
 8010cf4:	2b18      	cmp	r3, #24
 8010cf6:	d91d      	bls.n	8010d34 <__gethex+0x14c>
 8010cf8:	f1b9 0f00 	cmp.w	r9, #0
 8010cfc:	d000      	beq.n	8010d00 <__gethex+0x118>
 8010cfe:	4252      	negs	r2, r2
 8010d00:	4415      	add	r5, r2
 8010d02:	f8cb 1000 	str.w	r1, [fp]
 8010d06:	b1e4      	cbz	r4, 8010d42 <__gethex+0x15a>
 8010d08:	9b00      	ldr	r3, [sp, #0]
 8010d0a:	2b00      	cmp	r3, #0
 8010d0c:	bf14      	ite	ne
 8010d0e:	2700      	movne	r7, #0
 8010d10:	2706      	moveq	r7, #6
 8010d12:	4638      	mov	r0, r7
 8010d14:	b009      	add	sp, #36	; 0x24
 8010d16:	ecbd 8b02 	vpop	{d8}
 8010d1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d1e:	463e      	mov	r6, r7
 8010d20:	4625      	mov	r5, r4
 8010d22:	2401      	movs	r4, #1
 8010d24:	e7ca      	b.n	8010cbc <__gethex+0xd4>
 8010d26:	f04f 0900 	mov.w	r9, #0
 8010d2a:	1cb1      	adds	r1, r6, #2
 8010d2c:	e7d3      	b.n	8010cd6 <__gethex+0xee>
 8010d2e:	f04f 0901 	mov.w	r9, #1
 8010d32:	e7fa      	b.n	8010d2a <__gethex+0x142>
 8010d34:	230a      	movs	r3, #10
 8010d36:	fb03 0202 	mla	r2, r3, r2, r0
 8010d3a:	3a10      	subs	r2, #16
 8010d3c:	e7d4      	b.n	8010ce8 <__gethex+0x100>
 8010d3e:	4631      	mov	r1, r6
 8010d40:	e7df      	b.n	8010d02 <__gethex+0x11a>
 8010d42:	1bf3      	subs	r3, r6, r7
 8010d44:	3b01      	subs	r3, #1
 8010d46:	4621      	mov	r1, r4
 8010d48:	2b07      	cmp	r3, #7
 8010d4a:	dc0b      	bgt.n	8010d64 <__gethex+0x17c>
 8010d4c:	ee18 0a10 	vmov	r0, s16
 8010d50:	f000 faf8 	bl	8011344 <_Balloc>
 8010d54:	4604      	mov	r4, r0
 8010d56:	b940      	cbnz	r0, 8010d6a <__gethex+0x182>
 8010d58:	4b5d      	ldr	r3, [pc, #372]	; (8010ed0 <__gethex+0x2e8>)
 8010d5a:	4602      	mov	r2, r0
 8010d5c:	21de      	movs	r1, #222	; 0xde
 8010d5e:	485d      	ldr	r0, [pc, #372]	; (8010ed4 <__gethex+0x2ec>)
 8010d60:	f7fc fd26 	bl	800d7b0 <__assert_func>
 8010d64:	3101      	adds	r1, #1
 8010d66:	105b      	asrs	r3, r3, #1
 8010d68:	e7ee      	b.n	8010d48 <__gethex+0x160>
 8010d6a:	f100 0914 	add.w	r9, r0, #20
 8010d6e:	f04f 0b00 	mov.w	fp, #0
 8010d72:	f1ca 0301 	rsb	r3, sl, #1
 8010d76:	f8cd 9008 	str.w	r9, [sp, #8]
 8010d7a:	f8cd b000 	str.w	fp, [sp]
 8010d7e:	9306      	str	r3, [sp, #24]
 8010d80:	42b7      	cmp	r7, r6
 8010d82:	d340      	bcc.n	8010e06 <__gethex+0x21e>
 8010d84:	9802      	ldr	r0, [sp, #8]
 8010d86:	9b00      	ldr	r3, [sp, #0]
 8010d88:	f840 3b04 	str.w	r3, [r0], #4
 8010d8c:	eba0 0009 	sub.w	r0, r0, r9
 8010d90:	1080      	asrs	r0, r0, #2
 8010d92:	0146      	lsls	r6, r0, #5
 8010d94:	6120      	str	r0, [r4, #16]
 8010d96:	4618      	mov	r0, r3
 8010d98:	f000 fbc6 	bl	8011528 <__hi0bits>
 8010d9c:	1a30      	subs	r0, r6, r0
 8010d9e:	f8d8 6000 	ldr.w	r6, [r8]
 8010da2:	42b0      	cmp	r0, r6
 8010da4:	dd63      	ble.n	8010e6e <__gethex+0x286>
 8010da6:	1b87      	subs	r7, r0, r6
 8010da8:	4639      	mov	r1, r7
 8010daa:	4620      	mov	r0, r4
 8010dac:	f000 ff6a 	bl	8011c84 <__any_on>
 8010db0:	4682      	mov	sl, r0
 8010db2:	b1a8      	cbz	r0, 8010de0 <__gethex+0x1f8>
 8010db4:	1e7b      	subs	r3, r7, #1
 8010db6:	1159      	asrs	r1, r3, #5
 8010db8:	f003 021f 	and.w	r2, r3, #31
 8010dbc:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 8010dc0:	f04f 0a01 	mov.w	sl, #1
 8010dc4:	fa0a f202 	lsl.w	r2, sl, r2
 8010dc8:	420a      	tst	r2, r1
 8010dca:	d009      	beq.n	8010de0 <__gethex+0x1f8>
 8010dcc:	4553      	cmp	r3, sl
 8010dce:	dd05      	ble.n	8010ddc <__gethex+0x1f4>
 8010dd0:	1eb9      	subs	r1, r7, #2
 8010dd2:	4620      	mov	r0, r4
 8010dd4:	f000 ff56 	bl	8011c84 <__any_on>
 8010dd8:	2800      	cmp	r0, #0
 8010dda:	d145      	bne.n	8010e68 <__gethex+0x280>
 8010ddc:	f04f 0a02 	mov.w	sl, #2
 8010de0:	4639      	mov	r1, r7
 8010de2:	4620      	mov	r0, r4
 8010de4:	f7ff fe99 	bl	8010b1a <rshift>
 8010de8:	443d      	add	r5, r7
 8010dea:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8010dee:	42ab      	cmp	r3, r5
 8010df0:	da4c      	bge.n	8010e8c <__gethex+0x2a4>
 8010df2:	ee18 0a10 	vmov	r0, s16
 8010df6:	4621      	mov	r1, r4
 8010df8:	f000 fae4 	bl	80113c4 <_Bfree>
 8010dfc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010dfe:	2300      	movs	r3, #0
 8010e00:	6013      	str	r3, [r2, #0]
 8010e02:	27a3      	movs	r7, #163	; 0xa3
 8010e04:	e785      	b.n	8010d12 <__gethex+0x12a>
 8010e06:	1e73      	subs	r3, r6, #1
 8010e08:	9a05      	ldr	r2, [sp, #20]
 8010e0a:	9303      	str	r3, [sp, #12]
 8010e0c:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8010e10:	4293      	cmp	r3, r2
 8010e12:	d019      	beq.n	8010e48 <__gethex+0x260>
 8010e14:	f1bb 0f20 	cmp.w	fp, #32
 8010e18:	d107      	bne.n	8010e2a <__gethex+0x242>
 8010e1a:	9b02      	ldr	r3, [sp, #8]
 8010e1c:	9a00      	ldr	r2, [sp, #0]
 8010e1e:	f843 2b04 	str.w	r2, [r3], #4
 8010e22:	9302      	str	r3, [sp, #8]
 8010e24:	2300      	movs	r3, #0
 8010e26:	9300      	str	r3, [sp, #0]
 8010e28:	469b      	mov	fp, r3
 8010e2a:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 8010e2e:	f7ff fec6 	bl	8010bbe <__hexdig_fun>
 8010e32:	9b00      	ldr	r3, [sp, #0]
 8010e34:	f000 000f 	and.w	r0, r0, #15
 8010e38:	fa00 f00b 	lsl.w	r0, r0, fp
 8010e3c:	4303      	orrs	r3, r0
 8010e3e:	9300      	str	r3, [sp, #0]
 8010e40:	f10b 0b04 	add.w	fp, fp, #4
 8010e44:	9b03      	ldr	r3, [sp, #12]
 8010e46:	e00d      	b.n	8010e64 <__gethex+0x27c>
 8010e48:	9b03      	ldr	r3, [sp, #12]
 8010e4a:	9a06      	ldr	r2, [sp, #24]
 8010e4c:	4413      	add	r3, r2
 8010e4e:	42bb      	cmp	r3, r7
 8010e50:	d3e0      	bcc.n	8010e14 <__gethex+0x22c>
 8010e52:	4618      	mov	r0, r3
 8010e54:	9901      	ldr	r1, [sp, #4]
 8010e56:	9307      	str	r3, [sp, #28]
 8010e58:	4652      	mov	r2, sl
 8010e5a:	f001 f918 	bl	801208e <strncmp>
 8010e5e:	9b07      	ldr	r3, [sp, #28]
 8010e60:	2800      	cmp	r0, #0
 8010e62:	d1d7      	bne.n	8010e14 <__gethex+0x22c>
 8010e64:	461e      	mov	r6, r3
 8010e66:	e78b      	b.n	8010d80 <__gethex+0x198>
 8010e68:	f04f 0a03 	mov.w	sl, #3
 8010e6c:	e7b8      	b.n	8010de0 <__gethex+0x1f8>
 8010e6e:	da0a      	bge.n	8010e86 <__gethex+0x29e>
 8010e70:	1a37      	subs	r7, r6, r0
 8010e72:	4621      	mov	r1, r4
 8010e74:	ee18 0a10 	vmov	r0, s16
 8010e78:	463a      	mov	r2, r7
 8010e7a:	f000 fcbf 	bl	80117fc <__lshift>
 8010e7e:	1bed      	subs	r5, r5, r7
 8010e80:	4604      	mov	r4, r0
 8010e82:	f100 0914 	add.w	r9, r0, #20
 8010e86:	f04f 0a00 	mov.w	sl, #0
 8010e8a:	e7ae      	b.n	8010dea <__gethex+0x202>
 8010e8c:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8010e90:	42a8      	cmp	r0, r5
 8010e92:	dd72      	ble.n	8010f7a <__gethex+0x392>
 8010e94:	1b45      	subs	r5, r0, r5
 8010e96:	42ae      	cmp	r6, r5
 8010e98:	dc36      	bgt.n	8010f08 <__gethex+0x320>
 8010e9a:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8010e9e:	2b02      	cmp	r3, #2
 8010ea0:	d02a      	beq.n	8010ef8 <__gethex+0x310>
 8010ea2:	2b03      	cmp	r3, #3
 8010ea4:	d02c      	beq.n	8010f00 <__gethex+0x318>
 8010ea6:	2b01      	cmp	r3, #1
 8010ea8:	d11c      	bne.n	8010ee4 <__gethex+0x2fc>
 8010eaa:	42ae      	cmp	r6, r5
 8010eac:	d11a      	bne.n	8010ee4 <__gethex+0x2fc>
 8010eae:	2e01      	cmp	r6, #1
 8010eb0:	d112      	bne.n	8010ed8 <__gethex+0x2f0>
 8010eb2:	9a04      	ldr	r2, [sp, #16]
 8010eb4:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8010eb8:	6013      	str	r3, [r2, #0]
 8010eba:	2301      	movs	r3, #1
 8010ebc:	6123      	str	r3, [r4, #16]
 8010ebe:	f8c9 3000 	str.w	r3, [r9]
 8010ec2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8010ec4:	2762      	movs	r7, #98	; 0x62
 8010ec6:	601c      	str	r4, [r3, #0]
 8010ec8:	e723      	b.n	8010d12 <__gethex+0x12a>
 8010eca:	bf00      	nop
 8010ecc:	08014c0c 	.word	0x08014c0c
 8010ed0:	08014b30 	.word	0x08014b30
 8010ed4:	08014ba4 	.word	0x08014ba4
 8010ed8:	1e71      	subs	r1, r6, #1
 8010eda:	4620      	mov	r0, r4
 8010edc:	f000 fed2 	bl	8011c84 <__any_on>
 8010ee0:	2800      	cmp	r0, #0
 8010ee2:	d1e6      	bne.n	8010eb2 <__gethex+0x2ca>
 8010ee4:	ee18 0a10 	vmov	r0, s16
 8010ee8:	4621      	mov	r1, r4
 8010eea:	f000 fa6b 	bl	80113c4 <_Bfree>
 8010eee:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010ef0:	2300      	movs	r3, #0
 8010ef2:	6013      	str	r3, [r2, #0]
 8010ef4:	2750      	movs	r7, #80	; 0x50
 8010ef6:	e70c      	b.n	8010d12 <__gethex+0x12a>
 8010ef8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8010efa:	2b00      	cmp	r3, #0
 8010efc:	d1f2      	bne.n	8010ee4 <__gethex+0x2fc>
 8010efe:	e7d8      	b.n	8010eb2 <__gethex+0x2ca>
 8010f00:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8010f02:	2b00      	cmp	r3, #0
 8010f04:	d1d5      	bne.n	8010eb2 <__gethex+0x2ca>
 8010f06:	e7ed      	b.n	8010ee4 <__gethex+0x2fc>
 8010f08:	1e6f      	subs	r7, r5, #1
 8010f0a:	f1ba 0f00 	cmp.w	sl, #0
 8010f0e:	d131      	bne.n	8010f74 <__gethex+0x38c>
 8010f10:	b127      	cbz	r7, 8010f1c <__gethex+0x334>
 8010f12:	4639      	mov	r1, r7
 8010f14:	4620      	mov	r0, r4
 8010f16:	f000 feb5 	bl	8011c84 <__any_on>
 8010f1a:	4682      	mov	sl, r0
 8010f1c:	117b      	asrs	r3, r7, #5
 8010f1e:	2101      	movs	r1, #1
 8010f20:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 8010f24:	f007 071f 	and.w	r7, r7, #31
 8010f28:	fa01 f707 	lsl.w	r7, r1, r7
 8010f2c:	421f      	tst	r7, r3
 8010f2e:	4629      	mov	r1, r5
 8010f30:	4620      	mov	r0, r4
 8010f32:	bf18      	it	ne
 8010f34:	f04a 0a02 	orrne.w	sl, sl, #2
 8010f38:	1b76      	subs	r6, r6, r5
 8010f3a:	f7ff fdee 	bl	8010b1a <rshift>
 8010f3e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8010f42:	2702      	movs	r7, #2
 8010f44:	f1ba 0f00 	cmp.w	sl, #0
 8010f48:	d048      	beq.n	8010fdc <__gethex+0x3f4>
 8010f4a:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8010f4e:	2b02      	cmp	r3, #2
 8010f50:	d015      	beq.n	8010f7e <__gethex+0x396>
 8010f52:	2b03      	cmp	r3, #3
 8010f54:	d017      	beq.n	8010f86 <__gethex+0x39e>
 8010f56:	2b01      	cmp	r3, #1
 8010f58:	d109      	bne.n	8010f6e <__gethex+0x386>
 8010f5a:	f01a 0f02 	tst.w	sl, #2
 8010f5e:	d006      	beq.n	8010f6e <__gethex+0x386>
 8010f60:	f8d9 0000 	ldr.w	r0, [r9]
 8010f64:	ea4a 0a00 	orr.w	sl, sl, r0
 8010f68:	f01a 0f01 	tst.w	sl, #1
 8010f6c:	d10e      	bne.n	8010f8c <__gethex+0x3a4>
 8010f6e:	f047 0710 	orr.w	r7, r7, #16
 8010f72:	e033      	b.n	8010fdc <__gethex+0x3f4>
 8010f74:	f04f 0a01 	mov.w	sl, #1
 8010f78:	e7d0      	b.n	8010f1c <__gethex+0x334>
 8010f7a:	2701      	movs	r7, #1
 8010f7c:	e7e2      	b.n	8010f44 <__gethex+0x35c>
 8010f7e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8010f80:	f1c3 0301 	rsb	r3, r3, #1
 8010f84:	9315      	str	r3, [sp, #84]	; 0x54
 8010f86:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8010f88:	2b00      	cmp	r3, #0
 8010f8a:	d0f0      	beq.n	8010f6e <__gethex+0x386>
 8010f8c:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8010f90:	f104 0314 	add.w	r3, r4, #20
 8010f94:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8010f98:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8010f9c:	f04f 0c00 	mov.w	ip, #0
 8010fa0:	4618      	mov	r0, r3
 8010fa2:	f853 2b04 	ldr.w	r2, [r3], #4
 8010fa6:	f1b2 3fff 	cmp.w	r2, #4294967295
 8010faa:	d01c      	beq.n	8010fe6 <__gethex+0x3fe>
 8010fac:	3201      	adds	r2, #1
 8010fae:	6002      	str	r2, [r0, #0]
 8010fb0:	2f02      	cmp	r7, #2
 8010fb2:	f104 0314 	add.w	r3, r4, #20
 8010fb6:	d13f      	bne.n	8011038 <__gethex+0x450>
 8010fb8:	f8d8 2000 	ldr.w	r2, [r8]
 8010fbc:	3a01      	subs	r2, #1
 8010fbe:	42b2      	cmp	r2, r6
 8010fc0:	d10a      	bne.n	8010fd8 <__gethex+0x3f0>
 8010fc2:	1171      	asrs	r1, r6, #5
 8010fc4:	2201      	movs	r2, #1
 8010fc6:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8010fca:	f006 061f 	and.w	r6, r6, #31
 8010fce:	fa02 f606 	lsl.w	r6, r2, r6
 8010fd2:	421e      	tst	r6, r3
 8010fd4:	bf18      	it	ne
 8010fd6:	4617      	movne	r7, r2
 8010fd8:	f047 0720 	orr.w	r7, r7, #32
 8010fdc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8010fde:	601c      	str	r4, [r3, #0]
 8010fe0:	9b04      	ldr	r3, [sp, #16]
 8010fe2:	601d      	str	r5, [r3, #0]
 8010fe4:	e695      	b.n	8010d12 <__gethex+0x12a>
 8010fe6:	4299      	cmp	r1, r3
 8010fe8:	f843 cc04 	str.w	ip, [r3, #-4]
 8010fec:	d8d8      	bhi.n	8010fa0 <__gethex+0x3b8>
 8010fee:	68a3      	ldr	r3, [r4, #8]
 8010ff0:	459b      	cmp	fp, r3
 8010ff2:	db19      	blt.n	8011028 <__gethex+0x440>
 8010ff4:	6861      	ldr	r1, [r4, #4]
 8010ff6:	ee18 0a10 	vmov	r0, s16
 8010ffa:	3101      	adds	r1, #1
 8010ffc:	f000 f9a2 	bl	8011344 <_Balloc>
 8011000:	4681      	mov	r9, r0
 8011002:	b918      	cbnz	r0, 801100c <__gethex+0x424>
 8011004:	4b1a      	ldr	r3, [pc, #104]	; (8011070 <__gethex+0x488>)
 8011006:	4602      	mov	r2, r0
 8011008:	2184      	movs	r1, #132	; 0x84
 801100a:	e6a8      	b.n	8010d5e <__gethex+0x176>
 801100c:	6922      	ldr	r2, [r4, #16]
 801100e:	3202      	adds	r2, #2
 8011010:	f104 010c 	add.w	r1, r4, #12
 8011014:	0092      	lsls	r2, r2, #2
 8011016:	300c      	adds	r0, #12
 8011018:	f7fc fc3a 	bl	800d890 <memcpy>
 801101c:	4621      	mov	r1, r4
 801101e:	ee18 0a10 	vmov	r0, s16
 8011022:	f000 f9cf 	bl	80113c4 <_Bfree>
 8011026:	464c      	mov	r4, r9
 8011028:	6923      	ldr	r3, [r4, #16]
 801102a:	1c5a      	adds	r2, r3, #1
 801102c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8011030:	6122      	str	r2, [r4, #16]
 8011032:	2201      	movs	r2, #1
 8011034:	615a      	str	r2, [r3, #20]
 8011036:	e7bb      	b.n	8010fb0 <__gethex+0x3c8>
 8011038:	6922      	ldr	r2, [r4, #16]
 801103a:	455a      	cmp	r2, fp
 801103c:	dd0b      	ble.n	8011056 <__gethex+0x46e>
 801103e:	2101      	movs	r1, #1
 8011040:	4620      	mov	r0, r4
 8011042:	f7ff fd6a 	bl	8010b1a <rshift>
 8011046:	f8d8 3008 	ldr.w	r3, [r8, #8]
 801104a:	3501      	adds	r5, #1
 801104c:	42ab      	cmp	r3, r5
 801104e:	f6ff aed0 	blt.w	8010df2 <__gethex+0x20a>
 8011052:	2701      	movs	r7, #1
 8011054:	e7c0      	b.n	8010fd8 <__gethex+0x3f0>
 8011056:	f016 061f 	ands.w	r6, r6, #31
 801105a:	d0fa      	beq.n	8011052 <__gethex+0x46a>
 801105c:	4453      	add	r3, sl
 801105e:	f1c6 0620 	rsb	r6, r6, #32
 8011062:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8011066:	f000 fa5f 	bl	8011528 <__hi0bits>
 801106a:	42b0      	cmp	r0, r6
 801106c:	dbe7      	blt.n	801103e <__gethex+0x456>
 801106e:	e7f0      	b.n	8011052 <__gethex+0x46a>
 8011070:	08014b30 	.word	0x08014b30

08011074 <L_shift>:
 8011074:	f1c2 0208 	rsb	r2, r2, #8
 8011078:	0092      	lsls	r2, r2, #2
 801107a:	b570      	push	{r4, r5, r6, lr}
 801107c:	f1c2 0620 	rsb	r6, r2, #32
 8011080:	6843      	ldr	r3, [r0, #4]
 8011082:	6804      	ldr	r4, [r0, #0]
 8011084:	fa03 f506 	lsl.w	r5, r3, r6
 8011088:	432c      	orrs	r4, r5
 801108a:	40d3      	lsrs	r3, r2
 801108c:	6004      	str	r4, [r0, #0]
 801108e:	f840 3f04 	str.w	r3, [r0, #4]!
 8011092:	4288      	cmp	r0, r1
 8011094:	d3f4      	bcc.n	8011080 <L_shift+0xc>
 8011096:	bd70      	pop	{r4, r5, r6, pc}

08011098 <__match>:
 8011098:	b530      	push	{r4, r5, lr}
 801109a:	6803      	ldr	r3, [r0, #0]
 801109c:	3301      	adds	r3, #1
 801109e:	f811 4b01 	ldrb.w	r4, [r1], #1
 80110a2:	b914      	cbnz	r4, 80110aa <__match+0x12>
 80110a4:	6003      	str	r3, [r0, #0]
 80110a6:	2001      	movs	r0, #1
 80110a8:	bd30      	pop	{r4, r5, pc}
 80110aa:	f813 2b01 	ldrb.w	r2, [r3], #1
 80110ae:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 80110b2:	2d19      	cmp	r5, #25
 80110b4:	bf98      	it	ls
 80110b6:	3220      	addls	r2, #32
 80110b8:	42a2      	cmp	r2, r4
 80110ba:	d0f0      	beq.n	801109e <__match+0x6>
 80110bc:	2000      	movs	r0, #0
 80110be:	e7f3      	b.n	80110a8 <__match+0x10>

080110c0 <__hexnan>:
 80110c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80110c4:	680b      	ldr	r3, [r1, #0]
 80110c6:	115e      	asrs	r6, r3, #5
 80110c8:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 80110cc:	f013 031f 	ands.w	r3, r3, #31
 80110d0:	b087      	sub	sp, #28
 80110d2:	bf18      	it	ne
 80110d4:	3604      	addne	r6, #4
 80110d6:	2500      	movs	r5, #0
 80110d8:	1f37      	subs	r7, r6, #4
 80110da:	4690      	mov	r8, r2
 80110dc:	6802      	ldr	r2, [r0, #0]
 80110de:	9301      	str	r3, [sp, #4]
 80110e0:	4682      	mov	sl, r0
 80110e2:	f846 5c04 	str.w	r5, [r6, #-4]
 80110e6:	46b9      	mov	r9, r7
 80110e8:	463c      	mov	r4, r7
 80110ea:	9502      	str	r5, [sp, #8]
 80110ec:	46ab      	mov	fp, r5
 80110ee:	7851      	ldrb	r1, [r2, #1]
 80110f0:	1c53      	adds	r3, r2, #1
 80110f2:	9303      	str	r3, [sp, #12]
 80110f4:	b341      	cbz	r1, 8011148 <__hexnan+0x88>
 80110f6:	4608      	mov	r0, r1
 80110f8:	9205      	str	r2, [sp, #20]
 80110fa:	9104      	str	r1, [sp, #16]
 80110fc:	f7ff fd5f 	bl	8010bbe <__hexdig_fun>
 8011100:	2800      	cmp	r0, #0
 8011102:	d14f      	bne.n	80111a4 <__hexnan+0xe4>
 8011104:	9904      	ldr	r1, [sp, #16]
 8011106:	9a05      	ldr	r2, [sp, #20]
 8011108:	2920      	cmp	r1, #32
 801110a:	d818      	bhi.n	801113e <__hexnan+0x7e>
 801110c:	9b02      	ldr	r3, [sp, #8]
 801110e:	459b      	cmp	fp, r3
 8011110:	dd13      	ble.n	801113a <__hexnan+0x7a>
 8011112:	454c      	cmp	r4, r9
 8011114:	d206      	bcs.n	8011124 <__hexnan+0x64>
 8011116:	2d07      	cmp	r5, #7
 8011118:	dc04      	bgt.n	8011124 <__hexnan+0x64>
 801111a:	462a      	mov	r2, r5
 801111c:	4649      	mov	r1, r9
 801111e:	4620      	mov	r0, r4
 8011120:	f7ff ffa8 	bl	8011074 <L_shift>
 8011124:	4544      	cmp	r4, r8
 8011126:	d950      	bls.n	80111ca <__hexnan+0x10a>
 8011128:	2300      	movs	r3, #0
 801112a:	f1a4 0904 	sub.w	r9, r4, #4
 801112e:	f844 3c04 	str.w	r3, [r4, #-4]
 8011132:	f8cd b008 	str.w	fp, [sp, #8]
 8011136:	464c      	mov	r4, r9
 8011138:	461d      	mov	r5, r3
 801113a:	9a03      	ldr	r2, [sp, #12]
 801113c:	e7d7      	b.n	80110ee <__hexnan+0x2e>
 801113e:	2929      	cmp	r1, #41	; 0x29
 8011140:	d156      	bne.n	80111f0 <__hexnan+0x130>
 8011142:	3202      	adds	r2, #2
 8011144:	f8ca 2000 	str.w	r2, [sl]
 8011148:	f1bb 0f00 	cmp.w	fp, #0
 801114c:	d050      	beq.n	80111f0 <__hexnan+0x130>
 801114e:	454c      	cmp	r4, r9
 8011150:	d206      	bcs.n	8011160 <__hexnan+0xa0>
 8011152:	2d07      	cmp	r5, #7
 8011154:	dc04      	bgt.n	8011160 <__hexnan+0xa0>
 8011156:	462a      	mov	r2, r5
 8011158:	4649      	mov	r1, r9
 801115a:	4620      	mov	r0, r4
 801115c:	f7ff ff8a 	bl	8011074 <L_shift>
 8011160:	4544      	cmp	r4, r8
 8011162:	d934      	bls.n	80111ce <__hexnan+0x10e>
 8011164:	f1a8 0204 	sub.w	r2, r8, #4
 8011168:	4623      	mov	r3, r4
 801116a:	f853 1b04 	ldr.w	r1, [r3], #4
 801116e:	f842 1f04 	str.w	r1, [r2, #4]!
 8011172:	429f      	cmp	r7, r3
 8011174:	d2f9      	bcs.n	801116a <__hexnan+0xaa>
 8011176:	1b3b      	subs	r3, r7, r4
 8011178:	f023 0303 	bic.w	r3, r3, #3
 801117c:	3304      	adds	r3, #4
 801117e:	3401      	adds	r4, #1
 8011180:	3e03      	subs	r6, #3
 8011182:	42b4      	cmp	r4, r6
 8011184:	bf88      	it	hi
 8011186:	2304      	movhi	r3, #4
 8011188:	4443      	add	r3, r8
 801118a:	2200      	movs	r2, #0
 801118c:	f843 2b04 	str.w	r2, [r3], #4
 8011190:	429f      	cmp	r7, r3
 8011192:	d2fb      	bcs.n	801118c <__hexnan+0xcc>
 8011194:	683b      	ldr	r3, [r7, #0]
 8011196:	b91b      	cbnz	r3, 80111a0 <__hexnan+0xe0>
 8011198:	4547      	cmp	r7, r8
 801119a:	d127      	bne.n	80111ec <__hexnan+0x12c>
 801119c:	2301      	movs	r3, #1
 801119e:	603b      	str	r3, [r7, #0]
 80111a0:	2005      	movs	r0, #5
 80111a2:	e026      	b.n	80111f2 <__hexnan+0x132>
 80111a4:	3501      	adds	r5, #1
 80111a6:	2d08      	cmp	r5, #8
 80111a8:	f10b 0b01 	add.w	fp, fp, #1
 80111ac:	dd06      	ble.n	80111bc <__hexnan+0xfc>
 80111ae:	4544      	cmp	r4, r8
 80111b0:	d9c3      	bls.n	801113a <__hexnan+0x7a>
 80111b2:	2300      	movs	r3, #0
 80111b4:	f844 3c04 	str.w	r3, [r4, #-4]
 80111b8:	2501      	movs	r5, #1
 80111ba:	3c04      	subs	r4, #4
 80111bc:	6822      	ldr	r2, [r4, #0]
 80111be:	f000 000f 	and.w	r0, r0, #15
 80111c2:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 80111c6:	6022      	str	r2, [r4, #0]
 80111c8:	e7b7      	b.n	801113a <__hexnan+0x7a>
 80111ca:	2508      	movs	r5, #8
 80111cc:	e7b5      	b.n	801113a <__hexnan+0x7a>
 80111ce:	9b01      	ldr	r3, [sp, #4]
 80111d0:	2b00      	cmp	r3, #0
 80111d2:	d0df      	beq.n	8011194 <__hexnan+0xd4>
 80111d4:	f04f 32ff 	mov.w	r2, #4294967295
 80111d8:	f1c3 0320 	rsb	r3, r3, #32
 80111dc:	fa22 f303 	lsr.w	r3, r2, r3
 80111e0:	f856 2c04 	ldr.w	r2, [r6, #-4]
 80111e4:	401a      	ands	r2, r3
 80111e6:	f846 2c04 	str.w	r2, [r6, #-4]
 80111ea:	e7d3      	b.n	8011194 <__hexnan+0xd4>
 80111ec:	3f04      	subs	r7, #4
 80111ee:	e7d1      	b.n	8011194 <__hexnan+0xd4>
 80111f0:	2004      	movs	r0, #4
 80111f2:	b007      	add	sp, #28
 80111f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080111f8 <_localeconv_r>:
 80111f8:	4800      	ldr	r0, [pc, #0]	; (80111fc <_localeconv_r+0x4>)
 80111fa:	4770      	bx	lr
 80111fc:	20000264 	.word	0x20000264

08011200 <__retarget_lock_init_recursive>:
 8011200:	4770      	bx	lr

08011202 <__retarget_lock_acquire_recursive>:
 8011202:	4770      	bx	lr

08011204 <__retarget_lock_release>:
 8011204:	4770      	bx	lr

08011206 <__retarget_lock_release_recursive>:
 8011206:	4770      	bx	lr

08011208 <__swhatbuf_r>:
 8011208:	b570      	push	{r4, r5, r6, lr}
 801120a:	460e      	mov	r6, r1
 801120c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8011210:	2900      	cmp	r1, #0
 8011212:	b096      	sub	sp, #88	; 0x58
 8011214:	4614      	mov	r4, r2
 8011216:	461d      	mov	r5, r3
 8011218:	da08      	bge.n	801122c <__swhatbuf_r+0x24>
 801121a:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 801121e:	2200      	movs	r2, #0
 8011220:	602a      	str	r2, [r5, #0]
 8011222:	061a      	lsls	r2, r3, #24
 8011224:	d410      	bmi.n	8011248 <__swhatbuf_r+0x40>
 8011226:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801122a:	e00e      	b.n	801124a <__swhatbuf_r+0x42>
 801122c:	466a      	mov	r2, sp
 801122e:	f000 ff71 	bl	8012114 <_fstat_r>
 8011232:	2800      	cmp	r0, #0
 8011234:	dbf1      	blt.n	801121a <__swhatbuf_r+0x12>
 8011236:	9a01      	ldr	r2, [sp, #4]
 8011238:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801123c:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8011240:	425a      	negs	r2, r3
 8011242:	415a      	adcs	r2, r3
 8011244:	602a      	str	r2, [r5, #0]
 8011246:	e7ee      	b.n	8011226 <__swhatbuf_r+0x1e>
 8011248:	2340      	movs	r3, #64	; 0x40
 801124a:	2000      	movs	r0, #0
 801124c:	6023      	str	r3, [r4, #0]
 801124e:	b016      	add	sp, #88	; 0x58
 8011250:	bd70      	pop	{r4, r5, r6, pc}
	...

08011254 <__smakebuf_r>:
 8011254:	898b      	ldrh	r3, [r1, #12]
 8011256:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011258:	079d      	lsls	r5, r3, #30
 801125a:	4606      	mov	r6, r0
 801125c:	460c      	mov	r4, r1
 801125e:	d507      	bpl.n	8011270 <__smakebuf_r+0x1c>
 8011260:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8011264:	6023      	str	r3, [r4, #0]
 8011266:	6123      	str	r3, [r4, #16]
 8011268:	2301      	movs	r3, #1
 801126a:	6163      	str	r3, [r4, #20]
 801126c:	b002      	add	sp, #8
 801126e:	bd70      	pop	{r4, r5, r6, pc}
 8011270:	ab01      	add	r3, sp, #4
 8011272:	466a      	mov	r2, sp
 8011274:	f7ff ffc8 	bl	8011208 <__swhatbuf_r>
 8011278:	9900      	ldr	r1, [sp, #0]
 801127a:	4605      	mov	r5, r0
 801127c:	4630      	mov	r0, r6
 801127e:	f7fc fb89 	bl	800d994 <_malloc_r>
 8011282:	b948      	cbnz	r0, 8011298 <__smakebuf_r+0x44>
 8011284:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8011288:	059a      	lsls	r2, r3, #22
 801128a:	d4ef      	bmi.n	801126c <__smakebuf_r+0x18>
 801128c:	f023 0303 	bic.w	r3, r3, #3
 8011290:	f043 0302 	orr.w	r3, r3, #2
 8011294:	81a3      	strh	r3, [r4, #12]
 8011296:	e7e3      	b.n	8011260 <__smakebuf_r+0xc>
 8011298:	4b0d      	ldr	r3, [pc, #52]	; (80112d0 <__smakebuf_r+0x7c>)
 801129a:	62b3      	str	r3, [r6, #40]	; 0x28
 801129c:	89a3      	ldrh	r3, [r4, #12]
 801129e:	6020      	str	r0, [r4, #0]
 80112a0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80112a4:	81a3      	strh	r3, [r4, #12]
 80112a6:	9b00      	ldr	r3, [sp, #0]
 80112a8:	6163      	str	r3, [r4, #20]
 80112aa:	9b01      	ldr	r3, [sp, #4]
 80112ac:	6120      	str	r0, [r4, #16]
 80112ae:	b15b      	cbz	r3, 80112c8 <__smakebuf_r+0x74>
 80112b0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80112b4:	4630      	mov	r0, r6
 80112b6:	f000 ff3f 	bl	8012138 <_isatty_r>
 80112ba:	b128      	cbz	r0, 80112c8 <__smakebuf_r+0x74>
 80112bc:	89a3      	ldrh	r3, [r4, #12]
 80112be:	f023 0303 	bic.w	r3, r3, #3
 80112c2:	f043 0301 	orr.w	r3, r3, #1
 80112c6:	81a3      	strh	r3, [r4, #12]
 80112c8:	89a0      	ldrh	r0, [r4, #12]
 80112ca:	4305      	orrs	r5, r0
 80112cc:	81a5      	strh	r5, [r4, #12]
 80112ce:	e7cd      	b.n	801126c <__smakebuf_r+0x18>
 80112d0:	08010979 	.word	0x08010979

080112d4 <__ascii_mbtowc>:
 80112d4:	b082      	sub	sp, #8
 80112d6:	b901      	cbnz	r1, 80112da <__ascii_mbtowc+0x6>
 80112d8:	a901      	add	r1, sp, #4
 80112da:	b142      	cbz	r2, 80112ee <__ascii_mbtowc+0x1a>
 80112dc:	b14b      	cbz	r3, 80112f2 <__ascii_mbtowc+0x1e>
 80112de:	7813      	ldrb	r3, [r2, #0]
 80112e0:	600b      	str	r3, [r1, #0]
 80112e2:	7812      	ldrb	r2, [r2, #0]
 80112e4:	1e10      	subs	r0, r2, #0
 80112e6:	bf18      	it	ne
 80112e8:	2001      	movne	r0, #1
 80112ea:	b002      	add	sp, #8
 80112ec:	4770      	bx	lr
 80112ee:	4610      	mov	r0, r2
 80112f0:	e7fb      	b.n	80112ea <__ascii_mbtowc+0x16>
 80112f2:	f06f 0001 	mvn.w	r0, #1
 80112f6:	e7f8      	b.n	80112ea <__ascii_mbtowc+0x16>

080112f8 <memmove>:
 80112f8:	4288      	cmp	r0, r1
 80112fa:	b510      	push	{r4, lr}
 80112fc:	eb01 0402 	add.w	r4, r1, r2
 8011300:	d902      	bls.n	8011308 <memmove+0x10>
 8011302:	4284      	cmp	r4, r0
 8011304:	4623      	mov	r3, r4
 8011306:	d807      	bhi.n	8011318 <memmove+0x20>
 8011308:	1e43      	subs	r3, r0, #1
 801130a:	42a1      	cmp	r1, r4
 801130c:	d008      	beq.n	8011320 <memmove+0x28>
 801130e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8011312:	f803 2f01 	strb.w	r2, [r3, #1]!
 8011316:	e7f8      	b.n	801130a <memmove+0x12>
 8011318:	4402      	add	r2, r0
 801131a:	4601      	mov	r1, r0
 801131c:	428a      	cmp	r2, r1
 801131e:	d100      	bne.n	8011322 <memmove+0x2a>
 8011320:	bd10      	pop	{r4, pc}
 8011322:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8011326:	f802 4d01 	strb.w	r4, [r2, #-1]!
 801132a:	e7f7      	b.n	801131c <memmove+0x24>

0801132c <__malloc_lock>:
 801132c:	4801      	ldr	r0, [pc, #4]	; (8011334 <__malloc_lock+0x8>)
 801132e:	f7ff bf68 	b.w	8011202 <__retarget_lock_acquire_recursive>
 8011332:	bf00      	nop
 8011334:	200023fd 	.word	0x200023fd

08011338 <__malloc_unlock>:
 8011338:	4801      	ldr	r0, [pc, #4]	; (8011340 <__malloc_unlock+0x8>)
 801133a:	f7ff bf64 	b.w	8011206 <__retarget_lock_release_recursive>
 801133e:	bf00      	nop
 8011340:	200023fd 	.word	0x200023fd

08011344 <_Balloc>:
 8011344:	b570      	push	{r4, r5, r6, lr}
 8011346:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8011348:	4604      	mov	r4, r0
 801134a:	460d      	mov	r5, r1
 801134c:	b976      	cbnz	r6, 801136c <_Balloc+0x28>
 801134e:	2010      	movs	r0, #16
 8011350:	f7fc fa8e 	bl	800d870 <malloc>
 8011354:	4602      	mov	r2, r0
 8011356:	6260      	str	r0, [r4, #36]	; 0x24
 8011358:	b920      	cbnz	r0, 8011364 <_Balloc+0x20>
 801135a:	4b18      	ldr	r3, [pc, #96]	; (80113bc <_Balloc+0x78>)
 801135c:	4818      	ldr	r0, [pc, #96]	; (80113c0 <_Balloc+0x7c>)
 801135e:	2166      	movs	r1, #102	; 0x66
 8011360:	f7fc fa26 	bl	800d7b0 <__assert_func>
 8011364:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8011368:	6006      	str	r6, [r0, #0]
 801136a:	60c6      	str	r6, [r0, #12]
 801136c:	6a66      	ldr	r6, [r4, #36]	; 0x24
 801136e:	68f3      	ldr	r3, [r6, #12]
 8011370:	b183      	cbz	r3, 8011394 <_Balloc+0x50>
 8011372:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8011374:	68db      	ldr	r3, [r3, #12]
 8011376:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 801137a:	b9b8      	cbnz	r0, 80113ac <_Balloc+0x68>
 801137c:	2101      	movs	r1, #1
 801137e:	fa01 f605 	lsl.w	r6, r1, r5
 8011382:	1d72      	adds	r2, r6, #5
 8011384:	0092      	lsls	r2, r2, #2
 8011386:	4620      	mov	r0, r4
 8011388:	f000 fc9d 	bl	8011cc6 <_calloc_r>
 801138c:	b160      	cbz	r0, 80113a8 <_Balloc+0x64>
 801138e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8011392:	e00e      	b.n	80113b2 <_Balloc+0x6e>
 8011394:	2221      	movs	r2, #33	; 0x21
 8011396:	2104      	movs	r1, #4
 8011398:	4620      	mov	r0, r4
 801139a:	f000 fc94 	bl	8011cc6 <_calloc_r>
 801139e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80113a0:	60f0      	str	r0, [r6, #12]
 80113a2:	68db      	ldr	r3, [r3, #12]
 80113a4:	2b00      	cmp	r3, #0
 80113a6:	d1e4      	bne.n	8011372 <_Balloc+0x2e>
 80113a8:	2000      	movs	r0, #0
 80113aa:	bd70      	pop	{r4, r5, r6, pc}
 80113ac:	6802      	ldr	r2, [r0, #0]
 80113ae:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80113b2:	2300      	movs	r3, #0
 80113b4:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80113b8:	e7f7      	b.n	80113aa <_Balloc+0x66>
 80113ba:	bf00      	nop
 80113bc:	08014abe 	.word	0x08014abe
 80113c0:	08014c20 	.word	0x08014c20

080113c4 <_Bfree>:
 80113c4:	b570      	push	{r4, r5, r6, lr}
 80113c6:	6a46      	ldr	r6, [r0, #36]	; 0x24
 80113c8:	4605      	mov	r5, r0
 80113ca:	460c      	mov	r4, r1
 80113cc:	b976      	cbnz	r6, 80113ec <_Bfree+0x28>
 80113ce:	2010      	movs	r0, #16
 80113d0:	f7fc fa4e 	bl	800d870 <malloc>
 80113d4:	4602      	mov	r2, r0
 80113d6:	6268      	str	r0, [r5, #36]	; 0x24
 80113d8:	b920      	cbnz	r0, 80113e4 <_Bfree+0x20>
 80113da:	4b09      	ldr	r3, [pc, #36]	; (8011400 <_Bfree+0x3c>)
 80113dc:	4809      	ldr	r0, [pc, #36]	; (8011404 <_Bfree+0x40>)
 80113de:	218a      	movs	r1, #138	; 0x8a
 80113e0:	f7fc f9e6 	bl	800d7b0 <__assert_func>
 80113e4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80113e8:	6006      	str	r6, [r0, #0]
 80113ea:	60c6      	str	r6, [r0, #12]
 80113ec:	b13c      	cbz	r4, 80113fe <_Bfree+0x3a>
 80113ee:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80113f0:	6862      	ldr	r2, [r4, #4]
 80113f2:	68db      	ldr	r3, [r3, #12]
 80113f4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80113f8:	6021      	str	r1, [r4, #0]
 80113fa:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80113fe:	bd70      	pop	{r4, r5, r6, pc}
 8011400:	08014abe 	.word	0x08014abe
 8011404:	08014c20 	.word	0x08014c20

08011408 <__multadd>:
 8011408:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801140c:	690d      	ldr	r5, [r1, #16]
 801140e:	4607      	mov	r7, r0
 8011410:	460c      	mov	r4, r1
 8011412:	461e      	mov	r6, r3
 8011414:	f101 0c14 	add.w	ip, r1, #20
 8011418:	2000      	movs	r0, #0
 801141a:	f8dc 3000 	ldr.w	r3, [ip]
 801141e:	b299      	uxth	r1, r3
 8011420:	fb02 6101 	mla	r1, r2, r1, r6
 8011424:	0c1e      	lsrs	r6, r3, #16
 8011426:	0c0b      	lsrs	r3, r1, #16
 8011428:	fb02 3306 	mla	r3, r2, r6, r3
 801142c:	b289      	uxth	r1, r1
 801142e:	3001      	adds	r0, #1
 8011430:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8011434:	4285      	cmp	r5, r0
 8011436:	f84c 1b04 	str.w	r1, [ip], #4
 801143a:	ea4f 4613 	mov.w	r6, r3, lsr #16
 801143e:	dcec      	bgt.n	801141a <__multadd+0x12>
 8011440:	b30e      	cbz	r6, 8011486 <__multadd+0x7e>
 8011442:	68a3      	ldr	r3, [r4, #8]
 8011444:	42ab      	cmp	r3, r5
 8011446:	dc19      	bgt.n	801147c <__multadd+0x74>
 8011448:	6861      	ldr	r1, [r4, #4]
 801144a:	4638      	mov	r0, r7
 801144c:	3101      	adds	r1, #1
 801144e:	f7ff ff79 	bl	8011344 <_Balloc>
 8011452:	4680      	mov	r8, r0
 8011454:	b928      	cbnz	r0, 8011462 <__multadd+0x5a>
 8011456:	4602      	mov	r2, r0
 8011458:	4b0c      	ldr	r3, [pc, #48]	; (801148c <__multadd+0x84>)
 801145a:	480d      	ldr	r0, [pc, #52]	; (8011490 <__multadd+0x88>)
 801145c:	21b5      	movs	r1, #181	; 0xb5
 801145e:	f7fc f9a7 	bl	800d7b0 <__assert_func>
 8011462:	6922      	ldr	r2, [r4, #16]
 8011464:	3202      	adds	r2, #2
 8011466:	f104 010c 	add.w	r1, r4, #12
 801146a:	0092      	lsls	r2, r2, #2
 801146c:	300c      	adds	r0, #12
 801146e:	f7fc fa0f 	bl	800d890 <memcpy>
 8011472:	4621      	mov	r1, r4
 8011474:	4638      	mov	r0, r7
 8011476:	f7ff ffa5 	bl	80113c4 <_Bfree>
 801147a:	4644      	mov	r4, r8
 801147c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8011480:	3501      	adds	r5, #1
 8011482:	615e      	str	r6, [r3, #20]
 8011484:	6125      	str	r5, [r4, #16]
 8011486:	4620      	mov	r0, r4
 8011488:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801148c:	08014b30 	.word	0x08014b30
 8011490:	08014c20 	.word	0x08014c20

08011494 <__s2b>:
 8011494:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011498:	460c      	mov	r4, r1
 801149a:	4615      	mov	r5, r2
 801149c:	461f      	mov	r7, r3
 801149e:	2209      	movs	r2, #9
 80114a0:	3308      	adds	r3, #8
 80114a2:	4606      	mov	r6, r0
 80114a4:	fb93 f3f2 	sdiv	r3, r3, r2
 80114a8:	2100      	movs	r1, #0
 80114aa:	2201      	movs	r2, #1
 80114ac:	429a      	cmp	r2, r3
 80114ae:	db09      	blt.n	80114c4 <__s2b+0x30>
 80114b0:	4630      	mov	r0, r6
 80114b2:	f7ff ff47 	bl	8011344 <_Balloc>
 80114b6:	b940      	cbnz	r0, 80114ca <__s2b+0x36>
 80114b8:	4602      	mov	r2, r0
 80114ba:	4b19      	ldr	r3, [pc, #100]	; (8011520 <__s2b+0x8c>)
 80114bc:	4819      	ldr	r0, [pc, #100]	; (8011524 <__s2b+0x90>)
 80114be:	21ce      	movs	r1, #206	; 0xce
 80114c0:	f7fc f976 	bl	800d7b0 <__assert_func>
 80114c4:	0052      	lsls	r2, r2, #1
 80114c6:	3101      	adds	r1, #1
 80114c8:	e7f0      	b.n	80114ac <__s2b+0x18>
 80114ca:	9b08      	ldr	r3, [sp, #32]
 80114cc:	6143      	str	r3, [r0, #20]
 80114ce:	2d09      	cmp	r5, #9
 80114d0:	f04f 0301 	mov.w	r3, #1
 80114d4:	6103      	str	r3, [r0, #16]
 80114d6:	dd16      	ble.n	8011506 <__s2b+0x72>
 80114d8:	f104 0909 	add.w	r9, r4, #9
 80114dc:	46c8      	mov	r8, r9
 80114de:	442c      	add	r4, r5
 80114e0:	f818 3b01 	ldrb.w	r3, [r8], #1
 80114e4:	4601      	mov	r1, r0
 80114e6:	3b30      	subs	r3, #48	; 0x30
 80114e8:	220a      	movs	r2, #10
 80114ea:	4630      	mov	r0, r6
 80114ec:	f7ff ff8c 	bl	8011408 <__multadd>
 80114f0:	45a0      	cmp	r8, r4
 80114f2:	d1f5      	bne.n	80114e0 <__s2b+0x4c>
 80114f4:	f1a5 0408 	sub.w	r4, r5, #8
 80114f8:	444c      	add	r4, r9
 80114fa:	1b2d      	subs	r5, r5, r4
 80114fc:	1963      	adds	r3, r4, r5
 80114fe:	42bb      	cmp	r3, r7
 8011500:	db04      	blt.n	801150c <__s2b+0x78>
 8011502:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011506:	340a      	adds	r4, #10
 8011508:	2509      	movs	r5, #9
 801150a:	e7f6      	b.n	80114fa <__s2b+0x66>
 801150c:	f814 3b01 	ldrb.w	r3, [r4], #1
 8011510:	4601      	mov	r1, r0
 8011512:	3b30      	subs	r3, #48	; 0x30
 8011514:	220a      	movs	r2, #10
 8011516:	4630      	mov	r0, r6
 8011518:	f7ff ff76 	bl	8011408 <__multadd>
 801151c:	e7ee      	b.n	80114fc <__s2b+0x68>
 801151e:	bf00      	nop
 8011520:	08014b30 	.word	0x08014b30
 8011524:	08014c20 	.word	0x08014c20

08011528 <__hi0bits>:
 8011528:	0c03      	lsrs	r3, r0, #16
 801152a:	041b      	lsls	r3, r3, #16
 801152c:	b9d3      	cbnz	r3, 8011564 <__hi0bits+0x3c>
 801152e:	0400      	lsls	r0, r0, #16
 8011530:	2310      	movs	r3, #16
 8011532:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8011536:	bf04      	itt	eq
 8011538:	0200      	lsleq	r0, r0, #8
 801153a:	3308      	addeq	r3, #8
 801153c:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8011540:	bf04      	itt	eq
 8011542:	0100      	lsleq	r0, r0, #4
 8011544:	3304      	addeq	r3, #4
 8011546:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 801154a:	bf04      	itt	eq
 801154c:	0080      	lsleq	r0, r0, #2
 801154e:	3302      	addeq	r3, #2
 8011550:	2800      	cmp	r0, #0
 8011552:	db05      	blt.n	8011560 <__hi0bits+0x38>
 8011554:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8011558:	f103 0301 	add.w	r3, r3, #1
 801155c:	bf08      	it	eq
 801155e:	2320      	moveq	r3, #32
 8011560:	4618      	mov	r0, r3
 8011562:	4770      	bx	lr
 8011564:	2300      	movs	r3, #0
 8011566:	e7e4      	b.n	8011532 <__hi0bits+0xa>

08011568 <__lo0bits>:
 8011568:	6803      	ldr	r3, [r0, #0]
 801156a:	f013 0207 	ands.w	r2, r3, #7
 801156e:	4601      	mov	r1, r0
 8011570:	d00b      	beq.n	801158a <__lo0bits+0x22>
 8011572:	07da      	lsls	r2, r3, #31
 8011574:	d423      	bmi.n	80115be <__lo0bits+0x56>
 8011576:	0798      	lsls	r0, r3, #30
 8011578:	bf49      	itett	mi
 801157a:	085b      	lsrmi	r3, r3, #1
 801157c:	089b      	lsrpl	r3, r3, #2
 801157e:	2001      	movmi	r0, #1
 8011580:	600b      	strmi	r3, [r1, #0]
 8011582:	bf5c      	itt	pl
 8011584:	600b      	strpl	r3, [r1, #0]
 8011586:	2002      	movpl	r0, #2
 8011588:	4770      	bx	lr
 801158a:	b298      	uxth	r0, r3
 801158c:	b9a8      	cbnz	r0, 80115ba <__lo0bits+0x52>
 801158e:	0c1b      	lsrs	r3, r3, #16
 8011590:	2010      	movs	r0, #16
 8011592:	b2da      	uxtb	r2, r3
 8011594:	b90a      	cbnz	r2, 801159a <__lo0bits+0x32>
 8011596:	3008      	adds	r0, #8
 8011598:	0a1b      	lsrs	r3, r3, #8
 801159a:	071a      	lsls	r2, r3, #28
 801159c:	bf04      	itt	eq
 801159e:	091b      	lsreq	r3, r3, #4
 80115a0:	3004      	addeq	r0, #4
 80115a2:	079a      	lsls	r2, r3, #30
 80115a4:	bf04      	itt	eq
 80115a6:	089b      	lsreq	r3, r3, #2
 80115a8:	3002      	addeq	r0, #2
 80115aa:	07da      	lsls	r2, r3, #31
 80115ac:	d403      	bmi.n	80115b6 <__lo0bits+0x4e>
 80115ae:	085b      	lsrs	r3, r3, #1
 80115b0:	f100 0001 	add.w	r0, r0, #1
 80115b4:	d005      	beq.n	80115c2 <__lo0bits+0x5a>
 80115b6:	600b      	str	r3, [r1, #0]
 80115b8:	4770      	bx	lr
 80115ba:	4610      	mov	r0, r2
 80115bc:	e7e9      	b.n	8011592 <__lo0bits+0x2a>
 80115be:	2000      	movs	r0, #0
 80115c0:	4770      	bx	lr
 80115c2:	2020      	movs	r0, #32
 80115c4:	4770      	bx	lr
	...

080115c8 <__i2b>:
 80115c8:	b510      	push	{r4, lr}
 80115ca:	460c      	mov	r4, r1
 80115cc:	2101      	movs	r1, #1
 80115ce:	f7ff feb9 	bl	8011344 <_Balloc>
 80115d2:	4602      	mov	r2, r0
 80115d4:	b928      	cbnz	r0, 80115e2 <__i2b+0x1a>
 80115d6:	4b05      	ldr	r3, [pc, #20]	; (80115ec <__i2b+0x24>)
 80115d8:	4805      	ldr	r0, [pc, #20]	; (80115f0 <__i2b+0x28>)
 80115da:	f44f 71a0 	mov.w	r1, #320	; 0x140
 80115de:	f7fc f8e7 	bl	800d7b0 <__assert_func>
 80115e2:	2301      	movs	r3, #1
 80115e4:	6144      	str	r4, [r0, #20]
 80115e6:	6103      	str	r3, [r0, #16]
 80115e8:	bd10      	pop	{r4, pc}
 80115ea:	bf00      	nop
 80115ec:	08014b30 	.word	0x08014b30
 80115f0:	08014c20 	.word	0x08014c20

080115f4 <__multiply>:
 80115f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80115f8:	4691      	mov	r9, r2
 80115fa:	690a      	ldr	r2, [r1, #16]
 80115fc:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8011600:	429a      	cmp	r2, r3
 8011602:	bfb8      	it	lt
 8011604:	460b      	movlt	r3, r1
 8011606:	460c      	mov	r4, r1
 8011608:	bfbc      	itt	lt
 801160a:	464c      	movlt	r4, r9
 801160c:	4699      	movlt	r9, r3
 801160e:	6927      	ldr	r7, [r4, #16]
 8011610:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8011614:	68a3      	ldr	r3, [r4, #8]
 8011616:	6861      	ldr	r1, [r4, #4]
 8011618:	eb07 060a 	add.w	r6, r7, sl
 801161c:	42b3      	cmp	r3, r6
 801161e:	b085      	sub	sp, #20
 8011620:	bfb8      	it	lt
 8011622:	3101      	addlt	r1, #1
 8011624:	f7ff fe8e 	bl	8011344 <_Balloc>
 8011628:	b930      	cbnz	r0, 8011638 <__multiply+0x44>
 801162a:	4602      	mov	r2, r0
 801162c:	4b44      	ldr	r3, [pc, #272]	; (8011740 <__multiply+0x14c>)
 801162e:	4845      	ldr	r0, [pc, #276]	; (8011744 <__multiply+0x150>)
 8011630:	f240 115d 	movw	r1, #349	; 0x15d
 8011634:	f7fc f8bc 	bl	800d7b0 <__assert_func>
 8011638:	f100 0514 	add.w	r5, r0, #20
 801163c:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8011640:	462b      	mov	r3, r5
 8011642:	2200      	movs	r2, #0
 8011644:	4543      	cmp	r3, r8
 8011646:	d321      	bcc.n	801168c <__multiply+0x98>
 8011648:	f104 0314 	add.w	r3, r4, #20
 801164c:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8011650:	f109 0314 	add.w	r3, r9, #20
 8011654:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8011658:	9202      	str	r2, [sp, #8]
 801165a:	1b3a      	subs	r2, r7, r4
 801165c:	3a15      	subs	r2, #21
 801165e:	f022 0203 	bic.w	r2, r2, #3
 8011662:	3204      	adds	r2, #4
 8011664:	f104 0115 	add.w	r1, r4, #21
 8011668:	428f      	cmp	r7, r1
 801166a:	bf38      	it	cc
 801166c:	2204      	movcc	r2, #4
 801166e:	9201      	str	r2, [sp, #4]
 8011670:	9a02      	ldr	r2, [sp, #8]
 8011672:	9303      	str	r3, [sp, #12]
 8011674:	429a      	cmp	r2, r3
 8011676:	d80c      	bhi.n	8011692 <__multiply+0x9e>
 8011678:	2e00      	cmp	r6, #0
 801167a:	dd03      	ble.n	8011684 <__multiply+0x90>
 801167c:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8011680:	2b00      	cmp	r3, #0
 8011682:	d05a      	beq.n	801173a <__multiply+0x146>
 8011684:	6106      	str	r6, [r0, #16]
 8011686:	b005      	add	sp, #20
 8011688:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801168c:	f843 2b04 	str.w	r2, [r3], #4
 8011690:	e7d8      	b.n	8011644 <__multiply+0x50>
 8011692:	f8b3 a000 	ldrh.w	sl, [r3]
 8011696:	f1ba 0f00 	cmp.w	sl, #0
 801169a:	d024      	beq.n	80116e6 <__multiply+0xf2>
 801169c:	f104 0e14 	add.w	lr, r4, #20
 80116a0:	46a9      	mov	r9, r5
 80116a2:	f04f 0c00 	mov.w	ip, #0
 80116a6:	f85e 2b04 	ldr.w	r2, [lr], #4
 80116aa:	f8d9 1000 	ldr.w	r1, [r9]
 80116ae:	fa1f fb82 	uxth.w	fp, r2
 80116b2:	b289      	uxth	r1, r1
 80116b4:	fb0a 110b 	mla	r1, sl, fp, r1
 80116b8:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 80116bc:	f8d9 2000 	ldr.w	r2, [r9]
 80116c0:	4461      	add	r1, ip
 80116c2:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 80116c6:	fb0a c20b 	mla	r2, sl, fp, ip
 80116ca:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 80116ce:	b289      	uxth	r1, r1
 80116d0:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80116d4:	4577      	cmp	r7, lr
 80116d6:	f849 1b04 	str.w	r1, [r9], #4
 80116da:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 80116de:	d8e2      	bhi.n	80116a6 <__multiply+0xb2>
 80116e0:	9a01      	ldr	r2, [sp, #4]
 80116e2:	f845 c002 	str.w	ip, [r5, r2]
 80116e6:	9a03      	ldr	r2, [sp, #12]
 80116e8:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 80116ec:	3304      	adds	r3, #4
 80116ee:	f1b9 0f00 	cmp.w	r9, #0
 80116f2:	d020      	beq.n	8011736 <__multiply+0x142>
 80116f4:	6829      	ldr	r1, [r5, #0]
 80116f6:	f104 0c14 	add.w	ip, r4, #20
 80116fa:	46ae      	mov	lr, r5
 80116fc:	f04f 0a00 	mov.w	sl, #0
 8011700:	f8bc b000 	ldrh.w	fp, [ip]
 8011704:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8011708:	fb09 220b 	mla	r2, r9, fp, r2
 801170c:	4492      	add	sl, r2
 801170e:	b289      	uxth	r1, r1
 8011710:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 8011714:	f84e 1b04 	str.w	r1, [lr], #4
 8011718:	f85c 2b04 	ldr.w	r2, [ip], #4
 801171c:	f8be 1000 	ldrh.w	r1, [lr]
 8011720:	0c12      	lsrs	r2, r2, #16
 8011722:	fb09 1102 	mla	r1, r9, r2, r1
 8011726:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 801172a:	4567      	cmp	r7, ip
 801172c:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8011730:	d8e6      	bhi.n	8011700 <__multiply+0x10c>
 8011732:	9a01      	ldr	r2, [sp, #4]
 8011734:	50a9      	str	r1, [r5, r2]
 8011736:	3504      	adds	r5, #4
 8011738:	e79a      	b.n	8011670 <__multiply+0x7c>
 801173a:	3e01      	subs	r6, #1
 801173c:	e79c      	b.n	8011678 <__multiply+0x84>
 801173e:	bf00      	nop
 8011740:	08014b30 	.word	0x08014b30
 8011744:	08014c20 	.word	0x08014c20

08011748 <__pow5mult>:
 8011748:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801174c:	4615      	mov	r5, r2
 801174e:	f012 0203 	ands.w	r2, r2, #3
 8011752:	4606      	mov	r6, r0
 8011754:	460f      	mov	r7, r1
 8011756:	d007      	beq.n	8011768 <__pow5mult+0x20>
 8011758:	4c25      	ldr	r4, [pc, #148]	; (80117f0 <__pow5mult+0xa8>)
 801175a:	3a01      	subs	r2, #1
 801175c:	2300      	movs	r3, #0
 801175e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8011762:	f7ff fe51 	bl	8011408 <__multadd>
 8011766:	4607      	mov	r7, r0
 8011768:	10ad      	asrs	r5, r5, #2
 801176a:	d03d      	beq.n	80117e8 <__pow5mult+0xa0>
 801176c:	6a74      	ldr	r4, [r6, #36]	; 0x24
 801176e:	b97c      	cbnz	r4, 8011790 <__pow5mult+0x48>
 8011770:	2010      	movs	r0, #16
 8011772:	f7fc f87d 	bl	800d870 <malloc>
 8011776:	4602      	mov	r2, r0
 8011778:	6270      	str	r0, [r6, #36]	; 0x24
 801177a:	b928      	cbnz	r0, 8011788 <__pow5mult+0x40>
 801177c:	4b1d      	ldr	r3, [pc, #116]	; (80117f4 <__pow5mult+0xac>)
 801177e:	481e      	ldr	r0, [pc, #120]	; (80117f8 <__pow5mult+0xb0>)
 8011780:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 8011784:	f7fc f814 	bl	800d7b0 <__assert_func>
 8011788:	e9c0 4401 	strd	r4, r4, [r0, #4]
 801178c:	6004      	str	r4, [r0, #0]
 801178e:	60c4      	str	r4, [r0, #12]
 8011790:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8011794:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8011798:	b94c      	cbnz	r4, 80117ae <__pow5mult+0x66>
 801179a:	f240 2171 	movw	r1, #625	; 0x271
 801179e:	4630      	mov	r0, r6
 80117a0:	f7ff ff12 	bl	80115c8 <__i2b>
 80117a4:	2300      	movs	r3, #0
 80117a6:	f8c8 0008 	str.w	r0, [r8, #8]
 80117aa:	4604      	mov	r4, r0
 80117ac:	6003      	str	r3, [r0, #0]
 80117ae:	f04f 0900 	mov.w	r9, #0
 80117b2:	07eb      	lsls	r3, r5, #31
 80117b4:	d50a      	bpl.n	80117cc <__pow5mult+0x84>
 80117b6:	4639      	mov	r1, r7
 80117b8:	4622      	mov	r2, r4
 80117ba:	4630      	mov	r0, r6
 80117bc:	f7ff ff1a 	bl	80115f4 <__multiply>
 80117c0:	4639      	mov	r1, r7
 80117c2:	4680      	mov	r8, r0
 80117c4:	4630      	mov	r0, r6
 80117c6:	f7ff fdfd 	bl	80113c4 <_Bfree>
 80117ca:	4647      	mov	r7, r8
 80117cc:	106d      	asrs	r5, r5, #1
 80117ce:	d00b      	beq.n	80117e8 <__pow5mult+0xa0>
 80117d0:	6820      	ldr	r0, [r4, #0]
 80117d2:	b938      	cbnz	r0, 80117e4 <__pow5mult+0x9c>
 80117d4:	4622      	mov	r2, r4
 80117d6:	4621      	mov	r1, r4
 80117d8:	4630      	mov	r0, r6
 80117da:	f7ff ff0b 	bl	80115f4 <__multiply>
 80117de:	6020      	str	r0, [r4, #0]
 80117e0:	f8c0 9000 	str.w	r9, [r0]
 80117e4:	4604      	mov	r4, r0
 80117e6:	e7e4      	b.n	80117b2 <__pow5mult+0x6a>
 80117e8:	4638      	mov	r0, r7
 80117ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80117ee:	bf00      	nop
 80117f0:	08014d70 	.word	0x08014d70
 80117f4:	08014abe 	.word	0x08014abe
 80117f8:	08014c20 	.word	0x08014c20

080117fc <__lshift>:
 80117fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011800:	460c      	mov	r4, r1
 8011802:	6849      	ldr	r1, [r1, #4]
 8011804:	6923      	ldr	r3, [r4, #16]
 8011806:	eb03 1862 	add.w	r8, r3, r2, asr #5
 801180a:	68a3      	ldr	r3, [r4, #8]
 801180c:	4607      	mov	r7, r0
 801180e:	4691      	mov	r9, r2
 8011810:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8011814:	f108 0601 	add.w	r6, r8, #1
 8011818:	42b3      	cmp	r3, r6
 801181a:	db0b      	blt.n	8011834 <__lshift+0x38>
 801181c:	4638      	mov	r0, r7
 801181e:	f7ff fd91 	bl	8011344 <_Balloc>
 8011822:	4605      	mov	r5, r0
 8011824:	b948      	cbnz	r0, 801183a <__lshift+0x3e>
 8011826:	4602      	mov	r2, r0
 8011828:	4b2a      	ldr	r3, [pc, #168]	; (80118d4 <__lshift+0xd8>)
 801182a:	482b      	ldr	r0, [pc, #172]	; (80118d8 <__lshift+0xdc>)
 801182c:	f240 11d9 	movw	r1, #473	; 0x1d9
 8011830:	f7fb ffbe 	bl	800d7b0 <__assert_func>
 8011834:	3101      	adds	r1, #1
 8011836:	005b      	lsls	r3, r3, #1
 8011838:	e7ee      	b.n	8011818 <__lshift+0x1c>
 801183a:	2300      	movs	r3, #0
 801183c:	f100 0114 	add.w	r1, r0, #20
 8011840:	f100 0210 	add.w	r2, r0, #16
 8011844:	4618      	mov	r0, r3
 8011846:	4553      	cmp	r3, sl
 8011848:	db37      	blt.n	80118ba <__lshift+0xbe>
 801184a:	6920      	ldr	r0, [r4, #16]
 801184c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8011850:	f104 0314 	add.w	r3, r4, #20
 8011854:	f019 091f 	ands.w	r9, r9, #31
 8011858:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 801185c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8011860:	d02f      	beq.n	80118c2 <__lshift+0xc6>
 8011862:	f1c9 0e20 	rsb	lr, r9, #32
 8011866:	468a      	mov	sl, r1
 8011868:	f04f 0c00 	mov.w	ip, #0
 801186c:	681a      	ldr	r2, [r3, #0]
 801186e:	fa02 f209 	lsl.w	r2, r2, r9
 8011872:	ea42 020c 	orr.w	r2, r2, ip
 8011876:	f84a 2b04 	str.w	r2, [sl], #4
 801187a:	f853 2b04 	ldr.w	r2, [r3], #4
 801187e:	4298      	cmp	r0, r3
 8011880:	fa22 fc0e 	lsr.w	ip, r2, lr
 8011884:	d8f2      	bhi.n	801186c <__lshift+0x70>
 8011886:	1b03      	subs	r3, r0, r4
 8011888:	3b15      	subs	r3, #21
 801188a:	f023 0303 	bic.w	r3, r3, #3
 801188e:	3304      	adds	r3, #4
 8011890:	f104 0215 	add.w	r2, r4, #21
 8011894:	4290      	cmp	r0, r2
 8011896:	bf38      	it	cc
 8011898:	2304      	movcc	r3, #4
 801189a:	f841 c003 	str.w	ip, [r1, r3]
 801189e:	f1bc 0f00 	cmp.w	ip, #0
 80118a2:	d001      	beq.n	80118a8 <__lshift+0xac>
 80118a4:	f108 0602 	add.w	r6, r8, #2
 80118a8:	3e01      	subs	r6, #1
 80118aa:	4638      	mov	r0, r7
 80118ac:	612e      	str	r6, [r5, #16]
 80118ae:	4621      	mov	r1, r4
 80118b0:	f7ff fd88 	bl	80113c4 <_Bfree>
 80118b4:	4628      	mov	r0, r5
 80118b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80118ba:	f842 0f04 	str.w	r0, [r2, #4]!
 80118be:	3301      	adds	r3, #1
 80118c0:	e7c1      	b.n	8011846 <__lshift+0x4a>
 80118c2:	3904      	subs	r1, #4
 80118c4:	f853 2b04 	ldr.w	r2, [r3], #4
 80118c8:	f841 2f04 	str.w	r2, [r1, #4]!
 80118cc:	4298      	cmp	r0, r3
 80118ce:	d8f9      	bhi.n	80118c4 <__lshift+0xc8>
 80118d0:	e7ea      	b.n	80118a8 <__lshift+0xac>
 80118d2:	bf00      	nop
 80118d4:	08014b30 	.word	0x08014b30
 80118d8:	08014c20 	.word	0x08014c20

080118dc <__mcmp>:
 80118dc:	b530      	push	{r4, r5, lr}
 80118de:	6902      	ldr	r2, [r0, #16]
 80118e0:	690c      	ldr	r4, [r1, #16]
 80118e2:	1b12      	subs	r2, r2, r4
 80118e4:	d10e      	bne.n	8011904 <__mcmp+0x28>
 80118e6:	f100 0314 	add.w	r3, r0, #20
 80118ea:	3114      	adds	r1, #20
 80118ec:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 80118f0:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 80118f4:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 80118f8:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 80118fc:	42a5      	cmp	r5, r4
 80118fe:	d003      	beq.n	8011908 <__mcmp+0x2c>
 8011900:	d305      	bcc.n	801190e <__mcmp+0x32>
 8011902:	2201      	movs	r2, #1
 8011904:	4610      	mov	r0, r2
 8011906:	bd30      	pop	{r4, r5, pc}
 8011908:	4283      	cmp	r3, r0
 801190a:	d3f3      	bcc.n	80118f4 <__mcmp+0x18>
 801190c:	e7fa      	b.n	8011904 <__mcmp+0x28>
 801190e:	f04f 32ff 	mov.w	r2, #4294967295
 8011912:	e7f7      	b.n	8011904 <__mcmp+0x28>

08011914 <__mdiff>:
 8011914:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011918:	460c      	mov	r4, r1
 801191a:	4606      	mov	r6, r0
 801191c:	4611      	mov	r1, r2
 801191e:	4620      	mov	r0, r4
 8011920:	4690      	mov	r8, r2
 8011922:	f7ff ffdb 	bl	80118dc <__mcmp>
 8011926:	1e05      	subs	r5, r0, #0
 8011928:	d110      	bne.n	801194c <__mdiff+0x38>
 801192a:	4629      	mov	r1, r5
 801192c:	4630      	mov	r0, r6
 801192e:	f7ff fd09 	bl	8011344 <_Balloc>
 8011932:	b930      	cbnz	r0, 8011942 <__mdiff+0x2e>
 8011934:	4b3a      	ldr	r3, [pc, #232]	; (8011a20 <__mdiff+0x10c>)
 8011936:	4602      	mov	r2, r0
 8011938:	f240 2132 	movw	r1, #562	; 0x232
 801193c:	4839      	ldr	r0, [pc, #228]	; (8011a24 <__mdiff+0x110>)
 801193e:	f7fb ff37 	bl	800d7b0 <__assert_func>
 8011942:	2301      	movs	r3, #1
 8011944:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8011948:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801194c:	bfa4      	itt	ge
 801194e:	4643      	movge	r3, r8
 8011950:	46a0      	movge	r8, r4
 8011952:	4630      	mov	r0, r6
 8011954:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8011958:	bfa6      	itte	ge
 801195a:	461c      	movge	r4, r3
 801195c:	2500      	movge	r5, #0
 801195e:	2501      	movlt	r5, #1
 8011960:	f7ff fcf0 	bl	8011344 <_Balloc>
 8011964:	b920      	cbnz	r0, 8011970 <__mdiff+0x5c>
 8011966:	4b2e      	ldr	r3, [pc, #184]	; (8011a20 <__mdiff+0x10c>)
 8011968:	4602      	mov	r2, r0
 801196a:	f44f 7110 	mov.w	r1, #576	; 0x240
 801196e:	e7e5      	b.n	801193c <__mdiff+0x28>
 8011970:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8011974:	6926      	ldr	r6, [r4, #16]
 8011976:	60c5      	str	r5, [r0, #12]
 8011978:	f104 0914 	add.w	r9, r4, #20
 801197c:	f108 0514 	add.w	r5, r8, #20
 8011980:	f100 0e14 	add.w	lr, r0, #20
 8011984:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 8011988:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 801198c:	f108 0210 	add.w	r2, r8, #16
 8011990:	46f2      	mov	sl, lr
 8011992:	2100      	movs	r1, #0
 8011994:	f859 3b04 	ldr.w	r3, [r9], #4
 8011998:	f852 bf04 	ldr.w	fp, [r2, #4]!
 801199c:	fa1f f883 	uxth.w	r8, r3
 80119a0:	fa11 f18b 	uxtah	r1, r1, fp
 80119a4:	0c1b      	lsrs	r3, r3, #16
 80119a6:	eba1 0808 	sub.w	r8, r1, r8
 80119aa:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 80119ae:	eb03 4328 	add.w	r3, r3, r8, asr #16
 80119b2:	fa1f f888 	uxth.w	r8, r8
 80119b6:	1419      	asrs	r1, r3, #16
 80119b8:	454e      	cmp	r6, r9
 80119ba:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 80119be:	f84a 3b04 	str.w	r3, [sl], #4
 80119c2:	d8e7      	bhi.n	8011994 <__mdiff+0x80>
 80119c4:	1b33      	subs	r3, r6, r4
 80119c6:	3b15      	subs	r3, #21
 80119c8:	f023 0303 	bic.w	r3, r3, #3
 80119cc:	3304      	adds	r3, #4
 80119ce:	3415      	adds	r4, #21
 80119d0:	42a6      	cmp	r6, r4
 80119d2:	bf38      	it	cc
 80119d4:	2304      	movcc	r3, #4
 80119d6:	441d      	add	r5, r3
 80119d8:	4473      	add	r3, lr
 80119da:	469e      	mov	lr, r3
 80119dc:	462e      	mov	r6, r5
 80119de:	4566      	cmp	r6, ip
 80119e0:	d30e      	bcc.n	8011a00 <__mdiff+0xec>
 80119e2:	f10c 0203 	add.w	r2, ip, #3
 80119e6:	1b52      	subs	r2, r2, r5
 80119e8:	f022 0203 	bic.w	r2, r2, #3
 80119ec:	3d03      	subs	r5, #3
 80119ee:	45ac      	cmp	ip, r5
 80119f0:	bf38      	it	cc
 80119f2:	2200      	movcc	r2, #0
 80119f4:	441a      	add	r2, r3
 80119f6:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 80119fa:	b17b      	cbz	r3, 8011a1c <__mdiff+0x108>
 80119fc:	6107      	str	r7, [r0, #16]
 80119fe:	e7a3      	b.n	8011948 <__mdiff+0x34>
 8011a00:	f856 8b04 	ldr.w	r8, [r6], #4
 8011a04:	fa11 f288 	uxtah	r2, r1, r8
 8011a08:	1414      	asrs	r4, r2, #16
 8011a0a:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8011a0e:	b292      	uxth	r2, r2
 8011a10:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8011a14:	f84e 2b04 	str.w	r2, [lr], #4
 8011a18:	1421      	asrs	r1, r4, #16
 8011a1a:	e7e0      	b.n	80119de <__mdiff+0xca>
 8011a1c:	3f01      	subs	r7, #1
 8011a1e:	e7ea      	b.n	80119f6 <__mdiff+0xe2>
 8011a20:	08014b30 	.word	0x08014b30
 8011a24:	08014c20 	.word	0x08014c20

08011a28 <__ulp>:
 8011a28:	b082      	sub	sp, #8
 8011a2a:	ed8d 0b00 	vstr	d0, [sp]
 8011a2e:	9b01      	ldr	r3, [sp, #4]
 8011a30:	4912      	ldr	r1, [pc, #72]	; (8011a7c <__ulp+0x54>)
 8011a32:	4019      	ands	r1, r3
 8011a34:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 8011a38:	2900      	cmp	r1, #0
 8011a3a:	dd05      	ble.n	8011a48 <__ulp+0x20>
 8011a3c:	2200      	movs	r2, #0
 8011a3e:	460b      	mov	r3, r1
 8011a40:	ec43 2b10 	vmov	d0, r2, r3
 8011a44:	b002      	add	sp, #8
 8011a46:	4770      	bx	lr
 8011a48:	4249      	negs	r1, r1
 8011a4a:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 8011a4e:	ea4f 5021 	mov.w	r0, r1, asr #20
 8011a52:	f04f 0200 	mov.w	r2, #0
 8011a56:	f04f 0300 	mov.w	r3, #0
 8011a5a:	da04      	bge.n	8011a66 <__ulp+0x3e>
 8011a5c:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 8011a60:	fa41 f300 	asr.w	r3, r1, r0
 8011a64:	e7ec      	b.n	8011a40 <__ulp+0x18>
 8011a66:	f1a0 0114 	sub.w	r1, r0, #20
 8011a6a:	291e      	cmp	r1, #30
 8011a6c:	bfda      	itte	le
 8011a6e:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 8011a72:	fa20 f101 	lsrle.w	r1, r0, r1
 8011a76:	2101      	movgt	r1, #1
 8011a78:	460a      	mov	r2, r1
 8011a7a:	e7e1      	b.n	8011a40 <__ulp+0x18>
 8011a7c:	7ff00000 	.word	0x7ff00000

08011a80 <__b2d>:
 8011a80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011a82:	6905      	ldr	r5, [r0, #16]
 8011a84:	f100 0714 	add.w	r7, r0, #20
 8011a88:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 8011a8c:	1f2e      	subs	r6, r5, #4
 8011a8e:	f855 4c04 	ldr.w	r4, [r5, #-4]
 8011a92:	4620      	mov	r0, r4
 8011a94:	f7ff fd48 	bl	8011528 <__hi0bits>
 8011a98:	f1c0 0320 	rsb	r3, r0, #32
 8011a9c:	280a      	cmp	r0, #10
 8011a9e:	f8df c07c 	ldr.w	ip, [pc, #124]	; 8011b1c <__b2d+0x9c>
 8011aa2:	600b      	str	r3, [r1, #0]
 8011aa4:	dc14      	bgt.n	8011ad0 <__b2d+0x50>
 8011aa6:	f1c0 0e0b 	rsb	lr, r0, #11
 8011aaa:	fa24 f10e 	lsr.w	r1, r4, lr
 8011aae:	42b7      	cmp	r7, r6
 8011ab0:	ea41 030c 	orr.w	r3, r1, ip
 8011ab4:	bf34      	ite	cc
 8011ab6:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8011aba:	2100      	movcs	r1, #0
 8011abc:	3015      	adds	r0, #21
 8011abe:	fa04 f000 	lsl.w	r0, r4, r0
 8011ac2:	fa21 f10e 	lsr.w	r1, r1, lr
 8011ac6:	ea40 0201 	orr.w	r2, r0, r1
 8011aca:	ec43 2b10 	vmov	d0, r2, r3
 8011ace:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011ad0:	42b7      	cmp	r7, r6
 8011ad2:	bf3a      	itte	cc
 8011ad4:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8011ad8:	f1a5 0608 	subcc.w	r6, r5, #8
 8011adc:	2100      	movcs	r1, #0
 8011ade:	380b      	subs	r0, #11
 8011ae0:	d017      	beq.n	8011b12 <__b2d+0x92>
 8011ae2:	f1c0 0c20 	rsb	ip, r0, #32
 8011ae6:	fa04 f500 	lsl.w	r5, r4, r0
 8011aea:	42be      	cmp	r6, r7
 8011aec:	fa21 f40c 	lsr.w	r4, r1, ip
 8011af0:	ea45 0504 	orr.w	r5, r5, r4
 8011af4:	bf8c      	ite	hi
 8011af6:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 8011afa:	2400      	movls	r4, #0
 8011afc:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 8011b00:	fa01 f000 	lsl.w	r0, r1, r0
 8011b04:	fa24 f40c 	lsr.w	r4, r4, ip
 8011b08:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8011b0c:	ea40 0204 	orr.w	r2, r0, r4
 8011b10:	e7db      	b.n	8011aca <__b2d+0x4a>
 8011b12:	ea44 030c 	orr.w	r3, r4, ip
 8011b16:	460a      	mov	r2, r1
 8011b18:	e7d7      	b.n	8011aca <__b2d+0x4a>
 8011b1a:	bf00      	nop
 8011b1c:	3ff00000 	.word	0x3ff00000

08011b20 <__d2b>:
 8011b20:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011b24:	4689      	mov	r9, r1
 8011b26:	2101      	movs	r1, #1
 8011b28:	ec57 6b10 	vmov	r6, r7, d0
 8011b2c:	4690      	mov	r8, r2
 8011b2e:	f7ff fc09 	bl	8011344 <_Balloc>
 8011b32:	4604      	mov	r4, r0
 8011b34:	b930      	cbnz	r0, 8011b44 <__d2b+0x24>
 8011b36:	4602      	mov	r2, r0
 8011b38:	4b25      	ldr	r3, [pc, #148]	; (8011bd0 <__d2b+0xb0>)
 8011b3a:	4826      	ldr	r0, [pc, #152]	; (8011bd4 <__d2b+0xb4>)
 8011b3c:	f240 310a 	movw	r1, #778	; 0x30a
 8011b40:	f7fb fe36 	bl	800d7b0 <__assert_func>
 8011b44:	f3c7 550a 	ubfx	r5, r7, #20, #11
 8011b48:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8011b4c:	bb35      	cbnz	r5, 8011b9c <__d2b+0x7c>
 8011b4e:	2e00      	cmp	r6, #0
 8011b50:	9301      	str	r3, [sp, #4]
 8011b52:	d028      	beq.n	8011ba6 <__d2b+0x86>
 8011b54:	4668      	mov	r0, sp
 8011b56:	9600      	str	r6, [sp, #0]
 8011b58:	f7ff fd06 	bl	8011568 <__lo0bits>
 8011b5c:	9900      	ldr	r1, [sp, #0]
 8011b5e:	b300      	cbz	r0, 8011ba2 <__d2b+0x82>
 8011b60:	9a01      	ldr	r2, [sp, #4]
 8011b62:	f1c0 0320 	rsb	r3, r0, #32
 8011b66:	fa02 f303 	lsl.w	r3, r2, r3
 8011b6a:	430b      	orrs	r3, r1
 8011b6c:	40c2      	lsrs	r2, r0
 8011b6e:	6163      	str	r3, [r4, #20]
 8011b70:	9201      	str	r2, [sp, #4]
 8011b72:	9b01      	ldr	r3, [sp, #4]
 8011b74:	61a3      	str	r3, [r4, #24]
 8011b76:	2b00      	cmp	r3, #0
 8011b78:	bf14      	ite	ne
 8011b7a:	2202      	movne	r2, #2
 8011b7c:	2201      	moveq	r2, #1
 8011b7e:	6122      	str	r2, [r4, #16]
 8011b80:	b1d5      	cbz	r5, 8011bb8 <__d2b+0x98>
 8011b82:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8011b86:	4405      	add	r5, r0
 8011b88:	f8c9 5000 	str.w	r5, [r9]
 8011b8c:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8011b90:	f8c8 0000 	str.w	r0, [r8]
 8011b94:	4620      	mov	r0, r4
 8011b96:	b003      	add	sp, #12
 8011b98:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011b9c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8011ba0:	e7d5      	b.n	8011b4e <__d2b+0x2e>
 8011ba2:	6161      	str	r1, [r4, #20]
 8011ba4:	e7e5      	b.n	8011b72 <__d2b+0x52>
 8011ba6:	a801      	add	r0, sp, #4
 8011ba8:	f7ff fcde 	bl	8011568 <__lo0bits>
 8011bac:	9b01      	ldr	r3, [sp, #4]
 8011bae:	6163      	str	r3, [r4, #20]
 8011bb0:	2201      	movs	r2, #1
 8011bb2:	6122      	str	r2, [r4, #16]
 8011bb4:	3020      	adds	r0, #32
 8011bb6:	e7e3      	b.n	8011b80 <__d2b+0x60>
 8011bb8:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8011bbc:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8011bc0:	f8c9 0000 	str.w	r0, [r9]
 8011bc4:	6918      	ldr	r0, [r3, #16]
 8011bc6:	f7ff fcaf 	bl	8011528 <__hi0bits>
 8011bca:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8011bce:	e7df      	b.n	8011b90 <__d2b+0x70>
 8011bd0:	08014b30 	.word	0x08014b30
 8011bd4:	08014c20 	.word	0x08014c20

08011bd8 <__ratio>:
 8011bd8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011bdc:	4688      	mov	r8, r1
 8011bde:	4669      	mov	r1, sp
 8011be0:	4681      	mov	r9, r0
 8011be2:	f7ff ff4d 	bl	8011a80 <__b2d>
 8011be6:	a901      	add	r1, sp, #4
 8011be8:	4640      	mov	r0, r8
 8011bea:	ec55 4b10 	vmov	r4, r5, d0
 8011bee:	f7ff ff47 	bl	8011a80 <__b2d>
 8011bf2:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8011bf6:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8011bfa:	eba3 0c02 	sub.w	ip, r3, r2
 8011bfe:	e9dd 3200 	ldrd	r3, r2, [sp]
 8011c02:	1a9b      	subs	r3, r3, r2
 8011c04:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 8011c08:	ec51 0b10 	vmov	r0, r1, d0
 8011c0c:	2b00      	cmp	r3, #0
 8011c0e:	bfd6      	itet	le
 8011c10:	460a      	movle	r2, r1
 8011c12:	462a      	movgt	r2, r5
 8011c14:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8011c18:	468b      	mov	fp, r1
 8011c1a:	462f      	mov	r7, r5
 8011c1c:	bfd4      	ite	le
 8011c1e:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 8011c22:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 8011c26:	4620      	mov	r0, r4
 8011c28:	ee10 2a10 	vmov	r2, s0
 8011c2c:	465b      	mov	r3, fp
 8011c2e:	4639      	mov	r1, r7
 8011c30:	f7ee fe14 	bl	800085c <__aeabi_ddiv>
 8011c34:	ec41 0b10 	vmov	d0, r0, r1
 8011c38:	b003      	add	sp, #12
 8011c3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011c3e <__copybits>:
 8011c3e:	3901      	subs	r1, #1
 8011c40:	b570      	push	{r4, r5, r6, lr}
 8011c42:	1149      	asrs	r1, r1, #5
 8011c44:	6914      	ldr	r4, [r2, #16]
 8011c46:	3101      	adds	r1, #1
 8011c48:	f102 0314 	add.w	r3, r2, #20
 8011c4c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8011c50:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8011c54:	1f05      	subs	r5, r0, #4
 8011c56:	42a3      	cmp	r3, r4
 8011c58:	d30c      	bcc.n	8011c74 <__copybits+0x36>
 8011c5a:	1aa3      	subs	r3, r4, r2
 8011c5c:	3b11      	subs	r3, #17
 8011c5e:	f023 0303 	bic.w	r3, r3, #3
 8011c62:	3211      	adds	r2, #17
 8011c64:	42a2      	cmp	r2, r4
 8011c66:	bf88      	it	hi
 8011c68:	2300      	movhi	r3, #0
 8011c6a:	4418      	add	r0, r3
 8011c6c:	2300      	movs	r3, #0
 8011c6e:	4288      	cmp	r0, r1
 8011c70:	d305      	bcc.n	8011c7e <__copybits+0x40>
 8011c72:	bd70      	pop	{r4, r5, r6, pc}
 8011c74:	f853 6b04 	ldr.w	r6, [r3], #4
 8011c78:	f845 6f04 	str.w	r6, [r5, #4]!
 8011c7c:	e7eb      	b.n	8011c56 <__copybits+0x18>
 8011c7e:	f840 3b04 	str.w	r3, [r0], #4
 8011c82:	e7f4      	b.n	8011c6e <__copybits+0x30>

08011c84 <__any_on>:
 8011c84:	f100 0214 	add.w	r2, r0, #20
 8011c88:	6900      	ldr	r0, [r0, #16]
 8011c8a:	114b      	asrs	r3, r1, #5
 8011c8c:	4298      	cmp	r0, r3
 8011c8e:	b510      	push	{r4, lr}
 8011c90:	db11      	blt.n	8011cb6 <__any_on+0x32>
 8011c92:	dd0a      	ble.n	8011caa <__any_on+0x26>
 8011c94:	f011 011f 	ands.w	r1, r1, #31
 8011c98:	d007      	beq.n	8011caa <__any_on+0x26>
 8011c9a:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8011c9e:	fa24 f001 	lsr.w	r0, r4, r1
 8011ca2:	fa00 f101 	lsl.w	r1, r0, r1
 8011ca6:	428c      	cmp	r4, r1
 8011ca8:	d10b      	bne.n	8011cc2 <__any_on+0x3e>
 8011caa:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8011cae:	4293      	cmp	r3, r2
 8011cb0:	d803      	bhi.n	8011cba <__any_on+0x36>
 8011cb2:	2000      	movs	r0, #0
 8011cb4:	bd10      	pop	{r4, pc}
 8011cb6:	4603      	mov	r3, r0
 8011cb8:	e7f7      	b.n	8011caa <__any_on+0x26>
 8011cba:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8011cbe:	2900      	cmp	r1, #0
 8011cc0:	d0f5      	beq.n	8011cae <__any_on+0x2a>
 8011cc2:	2001      	movs	r0, #1
 8011cc4:	e7f6      	b.n	8011cb4 <__any_on+0x30>

08011cc6 <_calloc_r>:
 8011cc6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011cc8:	fba1 2402 	umull	r2, r4, r1, r2
 8011ccc:	b94c      	cbnz	r4, 8011ce2 <_calloc_r+0x1c>
 8011cce:	4611      	mov	r1, r2
 8011cd0:	9201      	str	r2, [sp, #4]
 8011cd2:	f7fb fe5f 	bl	800d994 <_malloc_r>
 8011cd6:	9a01      	ldr	r2, [sp, #4]
 8011cd8:	4605      	mov	r5, r0
 8011cda:	b930      	cbnz	r0, 8011cea <_calloc_r+0x24>
 8011cdc:	4628      	mov	r0, r5
 8011cde:	b003      	add	sp, #12
 8011ce0:	bd30      	pop	{r4, r5, pc}
 8011ce2:	220c      	movs	r2, #12
 8011ce4:	6002      	str	r2, [r0, #0]
 8011ce6:	2500      	movs	r5, #0
 8011ce8:	e7f8      	b.n	8011cdc <_calloc_r+0x16>
 8011cea:	4621      	mov	r1, r4
 8011cec:	f7fb fdde 	bl	800d8ac <memset>
 8011cf0:	e7f4      	b.n	8011cdc <_calloc_r+0x16>

08011cf2 <_realloc_r>:
 8011cf2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011cf6:	4680      	mov	r8, r0
 8011cf8:	4614      	mov	r4, r2
 8011cfa:	460e      	mov	r6, r1
 8011cfc:	b921      	cbnz	r1, 8011d08 <_realloc_r+0x16>
 8011cfe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011d02:	4611      	mov	r1, r2
 8011d04:	f7fb be46 	b.w	800d994 <_malloc_r>
 8011d08:	b92a      	cbnz	r2, 8011d16 <_realloc_r+0x24>
 8011d0a:	f7fb fdd7 	bl	800d8bc <_free_r>
 8011d0e:	4625      	mov	r5, r4
 8011d10:	4628      	mov	r0, r5
 8011d12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011d16:	f000 fa31 	bl	801217c <_malloc_usable_size_r>
 8011d1a:	4284      	cmp	r4, r0
 8011d1c:	4607      	mov	r7, r0
 8011d1e:	d802      	bhi.n	8011d26 <_realloc_r+0x34>
 8011d20:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8011d24:	d812      	bhi.n	8011d4c <_realloc_r+0x5a>
 8011d26:	4621      	mov	r1, r4
 8011d28:	4640      	mov	r0, r8
 8011d2a:	f7fb fe33 	bl	800d994 <_malloc_r>
 8011d2e:	4605      	mov	r5, r0
 8011d30:	2800      	cmp	r0, #0
 8011d32:	d0ed      	beq.n	8011d10 <_realloc_r+0x1e>
 8011d34:	42bc      	cmp	r4, r7
 8011d36:	4622      	mov	r2, r4
 8011d38:	4631      	mov	r1, r6
 8011d3a:	bf28      	it	cs
 8011d3c:	463a      	movcs	r2, r7
 8011d3e:	f7fb fda7 	bl	800d890 <memcpy>
 8011d42:	4631      	mov	r1, r6
 8011d44:	4640      	mov	r0, r8
 8011d46:	f7fb fdb9 	bl	800d8bc <_free_r>
 8011d4a:	e7e1      	b.n	8011d10 <_realloc_r+0x1e>
 8011d4c:	4635      	mov	r5, r6
 8011d4e:	e7df      	b.n	8011d10 <_realloc_r+0x1e>

08011d50 <__ssputs_r>:
 8011d50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011d54:	688e      	ldr	r6, [r1, #8]
 8011d56:	429e      	cmp	r6, r3
 8011d58:	4682      	mov	sl, r0
 8011d5a:	460c      	mov	r4, r1
 8011d5c:	4690      	mov	r8, r2
 8011d5e:	461f      	mov	r7, r3
 8011d60:	d838      	bhi.n	8011dd4 <__ssputs_r+0x84>
 8011d62:	898a      	ldrh	r2, [r1, #12]
 8011d64:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8011d68:	d032      	beq.n	8011dd0 <__ssputs_r+0x80>
 8011d6a:	6825      	ldr	r5, [r4, #0]
 8011d6c:	6909      	ldr	r1, [r1, #16]
 8011d6e:	eba5 0901 	sub.w	r9, r5, r1
 8011d72:	6965      	ldr	r5, [r4, #20]
 8011d74:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8011d78:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8011d7c:	3301      	adds	r3, #1
 8011d7e:	444b      	add	r3, r9
 8011d80:	106d      	asrs	r5, r5, #1
 8011d82:	429d      	cmp	r5, r3
 8011d84:	bf38      	it	cc
 8011d86:	461d      	movcc	r5, r3
 8011d88:	0553      	lsls	r3, r2, #21
 8011d8a:	d531      	bpl.n	8011df0 <__ssputs_r+0xa0>
 8011d8c:	4629      	mov	r1, r5
 8011d8e:	f7fb fe01 	bl	800d994 <_malloc_r>
 8011d92:	4606      	mov	r6, r0
 8011d94:	b950      	cbnz	r0, 8011dac <__ssputs_r+0x5c>
 8011d96:	230c      	movs	r3, #12
 8011d98:	f8ca 3000 	str.w	r3, [sl]
 8011d9c:	89a3      	ldrh	r3, [r4, #12]
 8011d9e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8011da2:	81a3      	strh	r3, [r4, #12]
 8011da4:	f04f 30ff 	mov.w	r0, #4294967295
 8011da8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011dac:	6921      	ldr	r1, [r4, #16]
 8011dae:	464a      	mov	r2, r9
 8011db0:	f7fb fd6e 	bl	800d890 <memcpy>
 8011db4:	89a3      	ldrh	r3, [r4, #12]
 8011db6:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8011dba:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8011dbe:	81a3      	strh	r3, [r4, #12]
 8011dc0:	6126      	str	r6, [r4, #16]
 8011dc2:	6165      	str	r5, [r4, #20]
 8011dc4:	444e      	add	r6, r9
 8011dc6:	eba5 0509 	sub.w	r5, r5, r9
 8011dca:	6026      	str	r6, [r4, #0]
 8011dcc:	60a5      	str	r5, [r4, #8]
 8011dce:	463e      	mov	r6, r7
 8011dd0:	42be      	cmp	r6, r7
 8011dd2:	d900      	bls.n	8011dd6 <__ssputs_r+0x86>
 8011dd4:	463e      	mov	r6, r7
 8011dd6:	6820      	ldr	r0, [r4, #0]
 8011dd8:	4632      	mov	r2, r6
 8011dda:	4641      	mov	r1, r8
 8011ddc:	f7ff fa8c 	bl	80112f8 <memmove>
 8011de0:	68a3      	ldr	r3, [r4, #8]
 8011de2:	1b9b      	subs	r3, r3, r6
 8011de4:	60a3      	str	r3, [r4, #8]
 8011de6:	6823      	ldr	r3, [r4, #0]
 8011de8:	4433      	add	r3, r6
 8011dea:	6023      	str	r3, [r4, #0]
 8011dec:	2000      	movs	r0, #0
 8011dee:	e7db      	b.n	8011da8 <__ssputs_r+0x58>
 8011df0:	462a      	mov	r2, r5
 8011df2:	f7ff ff7e 	bl	8011cf2 <_realloc_r>
 8011df6:	4606      	mov	r6, r0
 8011df8:	2800      	cmp	r0, #0
 8011dfa:	d1e1      	bne.n	8011dc0 <__ssputs_r+0x70>
 8011dfc:	6921      	ldr	r1, [r4, #16]
 8011dfe:	4650      	mov	r0, sl
 8011e00:	f7fb fd5c 	bl	800d8bc <_free_r>
 8011e04:	e7c7      	b.n	8011d96 <__ssputs_r+0x46>
	...

08011e08 <_svfiprintf_r>:
 8011e08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e0c:	4698      	mov	r8, r3
 8011e0e:	898b      	ldrh	r3, [r1, #12]
 8011e10:	061b      	lsls	r3, r3, #24
 8011e12:	b09d      	sub	sp, #116	; 0x74
 8011e14:	4607      	mov	r7, r0
 8011e16:	460d      	mov	r5, r1
 8011e18:	4614      	mov	r4, r2
 8011e1a:	d50e      	bpl.n	8011e3a <_svfiprintf_r+0x32>
 8011e1c:	690b      	ldr	r3, [r1, #16]
 8011e1e:	b963      	cbnz	r3, 8011e3a <_svfiprintf_r+0x32>
 8011e20:	2140      	movs	r1, #64	; 0x40
 8011e22:	f7fb fdb7 	bl	800d994 <_malloc_r>
 8011e26:	6028      	str	r0, [r5, #0]
 8011e28:	6128      	str	r0, [r5, #16]
 8011e2a:	b920      	cbnz	r0, 8011e36 <_svfiprintf_r+0x2e>
 8011e2c:	230c      	movs	r3, #12
 8011e2e:	603b      	str	r3, [r7, #0]
 8011e30:	f04f 30ff 	mov.w	r0, #4294967295
 8011e34:	e0d1      	b.n	8011fda <_svfiprintf_r+0x1d2>
 8011e36:	2340      	movs	r3, #64	; 0x40
 8011e38:	616b      	str	r3, [r5, #20]
 8011e3a:	2300      	movs	r3, #0
 8011e3c:	9309      	str	r3, [sp, #36]	; 0x24
 8011e3e:	2320      	movs	r3, #32
 8011e40:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8011e44:	f8cd 800c 	str.w	r8, [sp, #12]
 8011e48:	2330      	movs	r3, #48	; 0x30
 8011e4a:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 8011ff4 <_svfiprintf_r+0x1ec>
 8011e4e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8011e52:	f04f 0901 	mov.w	r9, #1
 8011e56:	4623      	mov	r3, r4
 8011e58:	469a      	mov	sl, r3
 8011e5a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8011e5e:	b10a      	cbz	r2, 8011e64 <_svfiprintf_r+0x5c>
 8011e60:	2a25      	cmp	r2, #37	; 0x25
 8011e62:	d1f9      	bne.n	8011e58 <_svfiprintf_r+0x50>
 8011e64:	ebba 0b04 	subs.w	fp, sl, r4
 8011e68:	d00b      	beq.n	8011e82 <_svfiprintf_r+0x7a>
 8011e6a:	465b      	mov	r3, fp
 8011e6c:	4622      	mov	r2, r4
 8011e6e:	4629      	mov	r1, r5
 8011e70:	4638      	mov	r0, r7
 8011e72:	f7ff ff6d 	bl	8011d50 <__ssputs_r>
 8011e76:	3001      	adds	r0, #1
 8011e78:	f000 80aa 	beq.w	8011fd0 <_svfiprintf_r+0x1c8>
 8011e7c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8011e7e:	445a      	add	r2, fp
 8011e80:	9209      	str	r2, [sp, #36]	; 0x24
 8011e82:	f89a 3000 	ldrb.w	r3, [sl]
 8011e86:	2b00      	cmp	r3, #0
 8011e88:	f000 80a2 	beq.w	8011fd0 <_svfiprintf_r+0x1c8>
 8011e8c:	2300      	movs	r3, #0
 8011e8e:	f04f 32ff 	mov.w	r2, #4294967295
 8011e92:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8011e96:	f10a 0a01 	add.w	sl, sl, #1
 8011e9a:	9304      	str	r3, [sp, #16]
 8011e9c:	9307      	str	r3, [sp, #28]
 8011e9e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8011ea2:	931a      	str	r3, [sp, #104]	; 0x68
 8011ea4:	4654      	mov	r4, sl
 8011ea6:	2205      	movs	r2, #5
 8011ea8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8011eac:	4851      	ldr	r0, [pc, #324]	; (8011ff4 <_svfiprintf_r+0x1ec>)
 8011eae:	f7ee f99f 	bl	80001f0 <memchr>
 8011eb2:	9a04      	ldr	r2, [sp, #16]
 8011eb4:	b9d8      	cbnz	r0, 8011eee <_svfiprintf_r+0xe6>
 8011eb6:	06d0      	lsls	r0, r2, #27
 8011eb8:	bf44      	itt	mi
 8011eba:	2320      	movmi	r3, #32
 8011ebc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8011ec0:	0711      	lsls	r1, r2, #28
 8011ec2:	bf44      	itt	mi
 8011ec4:	232b      	movmi	r3, #43	; 0x2b
 8011ec6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8011eca:	f89a 3000 	ldrb.w	r3, [sl]
 8011ece:	2b2a      	cmp	r3, #42	; 0x2a
 8011ed0:	d015      	beq.n	8011efe <_svfiprintf_r+0xf6>
 8011ed2:	9a07      	ldr	r2, [sp, #28]
 8011ed4:	4654      	mov	r4, sl
 8011ed6:	2000      	movs	r0, #0
 8011ed8:	f04f 0c0a 	mov.w	ip, #10
 8011edc:	4621      	mov	r1, r4
 8011ede:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011ee2:	3b30      	subs	r3, #48	; 0x30
 8011ee4:	2b09      	cmp	r3, #9
 8011ee6:	d94e      	bls.n	8011f86 <_svfiprintf_r+0x17e>
 8011ee8:	b1b0      	cbz	r0, 8011f18 <_svfiprintf_r+0x110>
 8011eea:	9207      	str	r2, [sp, #28]
 8011eec:	e014      	b.n	8011f18 <_svfiprintf_r+0x110>
 8011eee:	eba0 0308 	sub.w	r3, r0, r8
 8011ef2:	fa09 f303 	lsl.w	r3, r9, r3
 8011ef6:	4313      	orrs	r3, r2
 8011ef8:	9304      	str	r3, [sp, #16]
 8011efa:	46a2      	mov	sl, r4
 8011efc:	e7d2      	b.n	8011ea4 <_svfiprintf_r+0x9c>
 8011efe:	9b03      	ldr	r3, [sp, #12]
 8011f00:	1d19      	adds	r1, r3, #4
 8011f02:	681b      	ldr	r3, [r3, #0]
 8011f04:	9103      	str	r1, [sp, #12]
 8011f06:	2b00      	cmp	r3, #0
 8011f08:	bfbb      	ittet	lt
 8011f0a:	425b      	neglt	r3, r3
 8011f0c:	f042 0202 	orrlt.w	r2, r2, #2
 8011f10:	9307      	strge	r3, [sp, #28]
 8011f12:	9307      	strlt	r3, [sp, #28]
 8011f14:	bfb8      	it	lt
 8011f16:	9204      	strlt	r2, [sp, #16]
 8011f18:	7823      	ldrb	r3, [r4, #0]
 8011f1a:	2b2e      	cmp	r3, #46	; 0x2e
 8011f1c:	d10c      	bne.n	8011f38 <_svfiprintf_r+0x130>
 8011f1e:	7863      	ldrb	r3, [r4, #1]
 8011f20:	2b2a      	cmp	r3, #42	; 0x2a
 8011f22:	d135      	bne.n	8011f90 <_svfiprintf_r+0x188>
 8011f24:	9b03      	ldr	r3, [sp, #12]
 8011f26:	1d1a      	adds	r2, r3, #4
 8011f28:	681b      	ldr	r3, [r3, #0]
 8011f2a:	9203      	str	r2, [sp, #12]
 8011f2c:	2b00      	cmp	r3, #0
 8011f2e:	bfb8      	it	lt
 8011f30:	f04f 33ff 	movlt.w	r3, #4294967295
 8011f34:	3402      	adds	r4, #2
 8011f36:	9305      	str	r3, [sp, #20]
 8011f38:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8012004 <_svfiprintf_r+0x1fc>
 8011f3c:	7821      	ldrb	r1, [r4, #0]
 8011f3e:	2203      	movs	r2, #3
 8011f40:	4650      	mov	r0, sl
 8011f42:	f7ee f955 	bl	80001f0 <memchr>
 8011f46:	b140      	cbz	r0, 8011f5a <_svfiprintf_r+0x152>
 8011f48:	2340      	movs	r3, #64	; 0x40
 8011f4a:	eba0 000a 	sub.w	r0, r0, sl
 8011f4e:	fa03 f000 	lsl.w	r0, r3, r0
 8011f52:	9b04      	ldr	r3, [sp, #16]
 8011f54:	4303      	orrs	r3, r0
 8011f56:	3401      	adds	r4, #1
 8011f58:	9304      	str	r3, [sp, #16]
 8011f5a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8011f5e:	4826      	ldr	r0, [pc, #152]	; (8011ff8 <_svfiprintf_r+0x1f0>)
 8011f60:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8011f64:	2206      	movs	r2, #6
 8011f66:	f7ee f943 	bl	80001f0 <memchr>
 8011f6a:	2800      	cmp	r0, #0
 8011f6c:	d038      	beq.n	8011fe0 <_svfiprintf_r+0x1d8>
 8011f6e:	4b23      	ldr	r3, [pc, #140]	; (8011ffc <_svfiprintf_r+0x1f4>)
 8011f70:	bb1b      	cbnz	r3, 8011fba <_svfiprintf_r+0x1b2>
 8011f72:	9b03      	ldr	r3, [sp, #12]
 8011f74:	3307      	adds	r3, #7
 8011f76:	f023 0307 	bic.w	r3, r3, #7
 8011f7a:	3308      	adds	r3, #8
 8011f7c:	9303      	str	r3, [sp, #12]
 8011f7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011f80:	4433      	add	r3, r6
 8011f82:	9309      	str	r3, [sp, #36]	; 0x24
 8011f84:	e767      	b.n	8011e56 <_svfiprintf_r+0x4e>
 8011f86:	fb0c 3202 	mla	r2, ip, r2, r3
 8011f8a:	460c      	mov	r4, r1
 8011f8c:	2001      	movs	r0, #1
 8011f8e:	e7a5      	b.n	8011edc <_svfiprintf_r+0xd4>
 8011f90:	2300      	movs	r3, #0
 8011f92:	3401      	adds	r4, #1
 8011f94:	9305      	str	r3, [sp, #20]
 8011f96:	4619      	mov	r1, r3
 8011f98:	f04f 0c0a 	mov.w	ip, #10
 8011f9c:	4620      	mov	r0, r4
 8011f9e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8011fa2:	3a30      	subs	r2, #48	; 0x30
 8011fa4:	2a09      	cmp	r2, #9
 8011fa6:	d903      	bls.n	8011fb0 <_svfiprintf_r+0x1a8>
 8011fa8:	2b00      	cmp	r3, #0
 8011faa:	d0c5      	beq.n	8011f38 <_svfiprintf_r+0x130>
 8011fac:	9105      	str	r1, [sp, #20]
 8011fae:	e7c3      	b.n	8011f38 <_svfiprintf_r+0x130>
 8011fb0:	fb0c 2101 	mla	r1, ip, r1, r2
 8011fb4:	4604      	mov	r4, r0
 8011fb6:	2301      	movs	r3, #1
 8011fb8:	e7f0      	b.n	8011f9c <_svfiprintf_r+0x194>
 8011fba:	ab03      	add	r3, sp, #12
 8011fbc:	9300      	str	r3, [sp, #0]
 8011fbe:	462a      	mov	r2, r5
 8011fc0:	4b0f      	ldr	r3, [pc, #60]	; (8012000 <_svfiprintf_r+0x1f8>)
 8011fc2:	a904      	add	r1, sp, #16
 8011fc4:	4638      	mov	r0, r7
 8011fc6:	f7fb ff53 	bl	800de70 <_printf_float>
 8011fca:	1c42      	adds	r2, r0, #1
 8011fcc:	4606      	mov	r6, r0
 8011fce:	d1d6      	bne.n	8011f7e <_svfiprintf_r+0x176>
 8011fd0:	89ab      	ldrh	r3, [r5, #12]
 8011fd2:	065b      	lsls	r3, r3, #25
 8011fd4:	f53f af2c 	bmi.w	8011e30 <_svfiprintf_r+0x28>
 8011fd8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011fda:	b01d      	add	sp, #116	; 0x74
 8011fdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011fe0:	ab03      	add	r3, sp, #12
 8011fe2:	9300      	str	r3, [sp, #0]
 8011fe4:	462a      	mov	r2, r5
 8011fe6:	4b06      	ldr	r3, [pc, #24]	; (8012000 <_svfiprintf_r+0x1f8>)
 8011fe8:	a904      	add	r1, sp, #16
 8011fea:	4638      	mov	r0, r7
 8011fec:	f7fc f9e4 	bl	800e3b8 <_printf_i>
 8011ff0:	e7eb      	b.n	8011fca <_svfiprintf_r+0x1c2>
 8011ff2:	bf00      	nop
 8011ff4:	0801490c 	.word	0x0801490c
 8011ff8:	08014916 	.word	0x08014916
 8011ffc:	0800de71 	.word	0x0800de71
 8012000:	08011d51 	.word	0x08011d51
 8012004:	08014912 	.word	0x08014912

08012008 <__sread>:
 8012008:	b510      	push	{r4, lr}
 801200a:	460c      	mov	r4, r1
 801200c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8012010:	f000 f8bc 	bl	801218c <_read_r>
 8012014:	2800      	cmp	r0, #0
 8012016:	bfab      	itete	ge
 8012018:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801201a:	89a3      	ldrhlt	r3, [r4, #12]
 801201c:	181b      	addge	r3, r3, r0
 801201e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8012022:	bfac      	ite	ge
 8012024:	6563      	strge	r3, [r4, #84]	; 0x54
 8012026:	81a3      	strhlt	r3, [r4, #12]
 8012028:	bd10      	pop	{r4, pc}

0801202a <__swrite>:
 801202a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801202e:	461f      	mov	r7, r3
 8012030:	898b      	ldrh	r3, [r1, #12]
 8012032:	05db      	lsls	r3, r3, #23
 8012034:	4605      	mov	r5, r0
 8012036:	460c      	mov	r4, r1
 8012038:	4616      	mov	r6, r2
 801203a:	d505      	bpl.n	8012048 <__swrite+0x1e>
 801203c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8012040:	2302      	movs	r3, #2
 8012042:	2200      	movs	r2, #0
 8012044:	f000 f888 	bl	8012158 <_lseek_r>
 8012048:	89a3      	ldrh	r3, [r4, #12]
 801204a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801204e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8012052:	81a3      	strh	r3, [r4, #12]
 8012054:	4632      	mov	r2, r6
 8012056:	463b      	mov	r3, r7
 8012058:	4628      	mov	r0, r5
 801205a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801205e:	f000 b837 	b.w	80120d0 <_write_r>

08012062 <__sseek>:
 8012062:	b510      	push	{r4, lr}
 8012064:	460c      	mov	r4, r1
 8012066:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801206a:	f000 f875 	bl	8012158 <_lseek_r>
 801206e:	1c43      	adds	r3, r0, #1
 8012070:	89a3      	ldrh	r3, [r4, #12]
 8012072:	bf15      	itete	ne
 8012074:	6560      	strne	r0, [r4, #84]	; 0x54
 8012076:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801207a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801207e:	81a3      	strheq	r3, [r4, #12]
 8012080:	bf18      	it	ne
 8012082:	81a3      	strhne	r3, [r4, #12]
 8012084:	bd10      	pop	{r4, pc}

08012086 <__sclose>:
 8012086:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801208a:	f000 b833 	b.w	80120f4 <_close_r>

0801208e <strncmp>:
 801208e:	b510      	push	{r4, lr}
 8012090:	b17a      	cbz	r2, 80120b2 <strncmp+0x24>
 8012092:	4603      	mov	r3, r0
 8012094:	3901      	subs	r1, #1
 8012096:	1884      	adds	r4, r0, r2
 8012098:	f813 0b01 	ldrb.w	r0, [r3], #1
 801209c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80120a0:	4290      	cmp	r0, r2
 80120a2:	d101      	bne.n	80120a8 <strncmp+0x1a>
 80120a4:	42a3      	cmp	r3, r4
 80120a6:	d101      	bne.n	80120ac <strncmp+0x1e>
 80120a8:	1a80      	subs	r0, r0, r2
 80120aa:	bd10      	pop	{r4, pc}
 80120ac:	2800      	cmp	r0, #0
 80120ae:	d1f3      	bne.n	8012098 <strncmp+0xa>
 80120b0:	e7fa      	b.n	80120a8 <strncmp+0x1a>
 80120b2:	4610      	mov	r0, r2
 80120b4:	e7f9      	b.n	80120aa <strncmp+0x1c>

080120b6 <__ascii_wctomb>:
 80120b6:	b149      	cbz	r1, 80120cc <__ascii_wctomb+0x16>
 80120b8:	2aff      	cmp	r2, #255	; 0xff
 80120ba:	bf85      	ittet	hi
 80120bc:	238a      	movhi	r3, #138	; 0x8a
 80120be:	6003      	strhi	r3, [r0, #0]
 80120c0:	700a      	strbls	r2, [r1, #0]
 80120c2:	f04f 30ff 	movhi.w	r0, #4294967295
 80120c6:	bf98      	it	ls
 80120c8:	2001      	movls	r0, #1
 80120ca:	4770      	bx	lr
 80120cc:	4608      	mov	r0, r1
 80120ce:	4770      	bx	lr

080120d0 <_write_r>:
 80120d0:	b538      	push	{r3, r4, r5, lr}
 80120d2:	4d07      	ldr	r5, [pc, #28]	; (80120f0 <_write_r+0x20>)
 80120d4:	4604      	mov	r4, r0
 80120d6:	4608      	mov	r0, r1
 80120d8:	4611      	mov	r1, r2
 80120da:	2200      	movs	r2, #0
 80120dc:	602a      	str	r2, [r5, #0]
 80120de:	461a      	mov	r2, r3
 80120e0:	f000 f89e 	bl	8012220 <_write>
 80120e4:	1c43      	adds	r3, r0, #1
 80120e6:	d102      	bne.n	80120ee <_write_r+0x1e>
 80120e8:	682b      	ldr	r3, [r5, #0]
 80120ea:	b103      	cbz	r3, 80120ee <_write_r+0x1e>
 80120ec:	6023      	str	r3, [r4, #0]
 80120ee:	bd38      	pop	{r3, r4, r5, pc}
 80120f0:	20002400 	.word	0x20002400

080120f4 <_close_r>:
 80120f4:	b538      	push	{r3, r4, r5, lr}
 80120f6:	4d06      	ldr	r5, [pc, #24]	; (8012110 <_close_r+0x1c>)
 80120f8:	2300      	movs	r3, #0
 80120fa:	4604      	mov	r4, r0
 80120fc:	4608      	mov	r0, r1
 80120fe:	602b      	str	r3, [r5, #0]
 8012100:	f000 f856 	bl	80121b0 <_close>
 8012104:	1c43      	adds	r3, r0, #1
 8012106:	d102      	bne.n	801210e <_close_r+0x1a>
 8012108:	682b      	ldr	r3, [r5, #0]
 801210a:	b103      	cbz	r3, 801210e <_close_r+0x1a>
 801210c:	6023      	str	r3, [r4, #0]
 801210e:	bd38      	pop	{r3, r4, r5, pc}
 8012110:	20002400 	.word	0x20002400

08012114 <_fstat_r>:
 8012114:	b538      	push	{r3, r4, r5, lr}
 8012116:	4d07      	ldr	r5, [pc, #28]	; (8012134 <_fstat_r+0x20>)
 8012118:	2300      	movs	r3, #0
 801211a:	4604      	mov	r4, r0
 801211c:	4608      	mov	r0, r1
 801211e:	4611      	mov	r1, r2
 8012120:	602b      	str	r3, [r5, #0]
 8012122:	f000 f84d 	bl	80121c0 <_fstat>
 8012126:	1c43      	adds	r3, r0, #1
 8012128:	d102      	bne.n	8012130 <_fstat_r+0x1c>
 801212a:	682b      	ldr	r3, [r5, #0]
 801212c:	b103      	cbz	r3, 8012130 <_fstat_r+0x1c>
 801212e:	6023      	str	r3, [r4, #0]
 8012130:	bd38      	pop	{r3, r4, r5, pc}
 8012132:	bf00      	nop
 8012134:	20002400 	.word	0x20002400

08012138 <_isatty_r>:
 8012138:	b538      	push	{r3, r4, r5, lr}
 801213a:	4d06      	ldr	r5, [pc, #24]	; (8012154 <_isatty_r+0x1c>)
 801213c:	2300      	movs	r3, #0
 801213e:	4604      	mov	r4, r0
 8012140:	4608      	mov	r0, r1
 8012142:	602b      	str	r3, [r5, #0]
 8012144:	f000 f84c 	bl	80121e0 <_isatty>
 8012148:	1c43      	adds	r3, r0, #1
 801214a:	d102      	bne.n	8012152 <_isatty_r+0x1a>
 801214c:	682b      	ldr	r3, [r5, #0]
 801214e:	b103      	cbz	r3, 8012152 <_isatty_r+0x1a>
 8012150:	6023      	str	r3, [r4, #0]
 8012152:	bd38      	pop	{r3, r4, r5, pc}
 8012154:	20002400 	.word	0x20002400

08012158 <_lseek_r>:
 8012158:	b538      	push	{r3, r4, r5, lr}
 801215a:	4d07      	ldr	r5, [pc, #28]	; (8012178 <_lseek_r+0x20>)
 801215c:	4604      	mov	r4, r0
 801215e:	4608      	mov	r0, r1
 8012160:	4611      	mov	r1, r2
 8012162:	2200      	movs	r2, #0
 8012164:	602a      	str	r2, [r5, #0]
 8012166:	461a      	mov	r2, r3
 8012168:	f000 f84a 	bl	8012200 <_lseek>
 801216c:	1c43      	adds	r3, r0, #1
 801216e:	d102      	bne.n	8012176 <_lseek_r+0x1e>
 8012170:	682b      	ldr	r3, [r5, #0]
 8012172:	b103      	cbz	r3, 8012176 <_lseek_r+0x1e>
 8012174:	6023      	str	r3, [r4, #0]
 8012176:	bd38      	pop	{r3, r4, r5, pc}
 8012178:	20002400 	.word	0x20002400

0801217c <_malloc_usable_size_r>:
 801217c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8012180:	1f18      	subs	r0, r3, #4
 8012182:	2b00      	cmp	r3, #0
 8012184:	bfbc      	itt	lt
 8012186:	580b      	ldrlt	r3, [r1, r0]
 8012188:	18c0      	addlt	r0, r0, r3
 801218a:	4770      	bx	lr

0801218c <_read_r>:
 801218c:	b538      	push	{r3, r4, r5, lr}
 801218e:	4d07      	ldr	r5, [pc, #28]	; (80121ac <_read_r+0x20>)
 8012190:	4604      	mov	r4, r0
 8012192:	4608      	mov	r0, r1
 8012194:	4611      	mov	r1, r2
 8012196:	2200      	movs	r2, #0
 8012198:	602a      	str	r2, [r5, #0]
 801219a:	461a      	mov	r2, r3
 801219c:	f000 f838 	bl	8012210 <_read>
 80121a0:	1c43      	adds	r3, r0, #1
 80121a2:	d102      	bne.n	80121aa <_read_r+0x1e>
 80121a4:	682b      	ldr	r3, [r5, #0]
 80121a6:	b103      	cbz	r3, 80121aa <_read_r+0x1e>
 80121a8:	6023      	str	r3, [r4, #0]
 80121aa:	bd38      	pop	{r3, r4, r5, pc}
 80121ac:	20002400 	.word	0x20002400

080121b0 <_close>:
 80121b0:	4b02      	ldr	r3, [pc, #8]	; (80121bc <_close+0xc>)
 80121b2:	2258      	movs	r2, #88	; 0x58
 80121b4:	601a      	str	r2, [r3, #0]
 80121b6:	f04f 30ff 	mov.w	r0, #4294967295
 80121ba:	4770      	bx	lr
 80121bc:	20002400 	.word	0x20002400

080121c0 <_fstat>:
 80121c0:	4b02      	ldr	r3, [pc, #8]	; (80121cc <_fstat+0xc>)
 80121c2:	2258      	movs	r2, #88	; 0x58
 80121c4:	601a      	str	r2, [r3, #0]
 80121c6:	f04f 30ff 	mov.w	r0, #4294967295
 80121ca:	4770      	bx	lr
 80121cc:	20002400 	.word	0x20002400

080121d0 <_getpid>:
 80121d0:	4b02      	ldr	r3, [pc, #8]	; (80121dc <_getpid+0xc>)
 80121d2:	2258      	movs	r2, #88	; 0x58
 80121d4:	601a      	str	r2, [r3, #0]
 80121d6:	f04f 30ff 	mov.w	r0, #4294967295
 80121da:	4770      	bx	lr
 80121dc:	20002400 	.word	0x20002400

080121e0 <_isatty>:
 80121e0:	4b02      	ldr	r3, [pc, #8]	; (80121ec <_isatty+0xc>)
 80121e2:	2258      	movs	r2, #88	; 0x58
 80121e4:	601a      	str	r2, [r3, #0]
 80121e6:	2000      	movs	r0, #0
 80121e8:	4770      	bx	lr
 80121ea:	bf00      	nop
 80121ec:	20002400 	.word	0x20002400

080121f0 <_kill>:
 80121f0:	4b02      	ldr	r3, [pc, #8]	; (80121fc <_kill+0xc>)
 80121f2:	2258      	movs	r2, #88	; 0x58
 80121f4:	601a      	str	r2, [r3, #0]
 80121f6:	f04f 30ff 	mov.w	r0, #4294967295
 80121fa:	4770      	bx	lr
 80121fc:	20002400 	.word	0x20002400

08012200 <_lseek>:
 8012200:	4b02      	ldr	r3, [pc, #8]	; (801220c <_lseek+0xc>)
 8012202:	2258      	movs	r2, #88	; 0x58
 8012204:	601a      	str	r2, [r3, #0]
 8012206:	f04f 30ff 	mov.w	r0, #4294967295
 801220a:	4770      	bx	lr
 801220c:	20002400 	.word	0x20002400

08012210 <_read>:
 8012210:	4b02      	ldr	r3, [pc, #8]	; (801221c <_read+0xc>)
 8012212:	2258      	movs	r2, #88	; 0x58
 8012214:	601a      	str	r2, [r3, #0]
 8012216:	f04f 30ff 	mov.w	r0, #4294967295
 801221a:	4770      	bx	lr
 801221c:	20002400 	.word	0x20002400

08012220 <_write>:
 8012220:	4b02      	ldr	r3, [pc, #8]	; (801222c <_write+0xc>)
 8012222:	2258      	movs	r2, #88	; 0x58
 8012224:	601a      	str	r2, [r3, #0]
 8012226:	f04f 30ff 	mov.w	r0, #4294967295
 801222a:	4770      	bx	lr
 801222c:	20002400 	.word	0x20002400

08012230 <_exit>:
 8012230:	e7fe      	b.n	8012230 <_exit>
	...

08012234 <_init>:
 8012234:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012236:	bf00      	nop
 8012238:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801223a:	bc08      	pop	{r3}
 801223c:	469e      	mov	lr, r3
 801223e:	4770      	bx	lr

08012240 <_fini>:
 8012240:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012242:	bf00      	nop
 8012244:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8012246:	bc08      	pop	{r3}
 8012248:	469e      	mov	lr, r3
 801224a:	4770      	bx	lr
